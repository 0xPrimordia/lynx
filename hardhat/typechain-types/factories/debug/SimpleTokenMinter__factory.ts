/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleTokenMinter,
  SimpleTokenMinterInterface,
} from "../../debug/SimpleTokenMinter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "responseCode",
        type: "int256",
      },
    ],
    name: "MintSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "TokenSet",
    type: "event",
  },
  {
    inputs: [],
    name: "getTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916610167179055610586806100346000396000f3fe6080604052600436106100435760003560e01c806326a4e8d21461004f57806382b2e257146100715780639d76ea5814610099578063b62bca7a146100d157600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a366004610408565b6100f1565b005b34801561007d57600080fd5b50610086610152565b6040519081526020015b60405180910390f35b3480156100a557600080fd5b506001546100b9906001600160a01b031681565b6040516001600160a01b039091168152602001610090565b3480156100dd57600080fd5b5061006f6100ec36600461044a565b610225565b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f0dd664a155dd89526bb019e22b00291bb7ca9d07ba3ec4a1a76b410da9797ceb910160405180910390a15050565b6001546000906001600160a01b03166101aa5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881859191c995cdcc81b9bdd081cd95d605a1b60448201526064015b60405180910390fd5b600054600154604051633de222bb60e21b81526001600160a01b03918216600482015230602482015291169063f7888aec90604401602060405180830381865afa1580156101fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102209190610467565b905090565b6001546001600160a01b03166102755760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881859191c995cdcc81b9bdd081cd95d605a1b60448201526064016101a1565b60008160070b136102c85760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101a1565b6000805460015460408051848152602081019091526001600160a01b039283169263ec12dc0292169085908561030e565b60608152602001906001900390816102f95790505b506040518463ffffffff1660e01b815260040161032d93929190610480565b6020604051808303816000875af115801561034c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103709190610533565b600154604080516001600160a01b039092168252600785810b60208401529290920b9181018290529091507ffc9c5e2ed9c7911538c33c84a00eb47cdf7337b12069bc933a544a440b196b619060600160405180910390a180156104045760405162461bcd60e51b815260206004820152600b60248201526a135a5b9d0819985a5b195960aa1b60448201526064016101a1565b5050565b60006020828403121561041a57600080fd5b81356001600160a01b038116811461043157600080fd5b9392505050565b8060070b811461044757600080fd5b50565b60006020828403121561045c57600080fd5b813561043181610438565b60006020828403121561047957600080fd5b5051919050565b60006060820160018060a01b0386168352602067ffffffffffffffff8616818501526060604085015281855180845260808601915060808160051b87010193508287016000805b8381101561052357888703607f1901855282518051808952835b818110156104fc578281018901518a82018a015288016104e1565b508881018801849052601f01601f19169097018601965093850193918501916001016104c7565b50949a9950505050505050505050565b60006020828403121561054557600080fd5b81516104318161043856fea2646970667358221220fd835a403bf7920cf0ac11347ca6d9698eeaaaedd0be8e1c0ed45328abbd710264736f6c63430008130033";

type SimpleTokenMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleTokenMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleTokenMinter__factory extends ContractFactory {
  constructor(...args: SimpleTokenMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleTokenMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleTokenMinter__factory {
    return super.connect(runner) as SimpleTokenMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleTokenMinterInterface {
    return new Interface(_abi) as SimpleTokenMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleTokenMinter {
    return new Contract(address, _abi, runner) as unknown as SimpleTokenMinter;
  }
}
