{"id":"fb2bcb0c38ad924f0a05fd717961f4be","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"app/contracts/DepositMinter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./HederaTokenService.sol\";\nimport \"./HederaResponseCodes.sol\";\n\n/**\n * @title DepositMinter\n * @dev Enhanced token minter that accepts SAUCE/CLXY deposits and mints proportional LYNX tokens\n * Using official Hedera inheritance pattern - inherits from HederaTokenService\n */\ncontract DepositMinter is HederaTokenService {\n    \n    // Token addresses\n    address public lynxToken;     // LYNX token to mint\n    address public sauceToken;    // SAUCE token for deposits\n    address public clxyToken;     // CLXY token for deposits\n    \n    // Admin controls\n    address public admin;\n    \n    // Minting ratios (tokens required per 1 LYNX)\n    uint256 public constant SAUCE_RATIO = 5;  // 5 SAUCE per 1 LYNX\n    uint256 public constant CLXY_RATIO = 2;   // 2 CLXY per 1 LYNX\n    uint256 public constant HBAR_RATIO = 10;  // 10 HBAR per 1 LYNX (in tiny HBAR)\n    \n    // Token decimals\n    uint8 public constant SAUCE_DECIMALS = 6;  // SAUCE has 6 decimals\n    uint8 public constant CLXY_DECIMALS = 6;   // CLXY has 6 decimals\n    uint8 public constant LYNX_DECIMALS = 8;   // LYNX has 8 decimals\n    \n    // Events\n    event TokensDeposited(address indexed user, uint256 sauceAmount, uint256 clxyAmount, uint256 hbarAmount);\n    event LynxMinted(address indexed user, uint256 lynxAmount);\n    event TokenAddressSet(string tokenType, address previousToken, address newToken);\n    event AdminTransferred(address previousAdmin, address newAdmin);\n    \n    // Debug Events\n    event HTSOperationResult(string operation, address token, address account, int responseCode, string message);\n    event ValidationStep(string step, bool passed, string details);\n    event AssociationResult(address token, int responseCode);\n    event AllowanceCheck(address token, address owner, address spender, uint256 allowance);\n    event BalanceCheck(address token, address account, uint256 balance);\n    \n    // Errors\n    error OnlyAdmin();\n    error InvalidAmount();\n    error TokenNotSet(string tokenType);\n    error InsufficientDeposit(string tokenType, uint256 required, uint256 provided);\n    error InsufficientAllowance(string tokenType, uint256 required, uint256 current);\n    error TransferFailed(string tokenType);\n    error MintFailed(int responseCode);\n    error TokenNotAssociated(address token, address account);\n    \n    modifier onlyAdmin() {\n        if (msg.sender != admin) revert OnlyAdmin();\n        _;\n    }\n    \n    constructor() {\n        admin = msg.sender;\n    }\n    \n    /**\n     * @dev Test if HTS precompile is properly initialized\n     */\n    function testHTSPrecompile() external view returns (bool initialized, address precompileAddress) {\n        initialized = true; // If we inherit from HederaTokenService, it's initialized\n        precompileAddress = address(0x167);\n    }\n    \n    /**\n     * @dev Test HTS operations directly using inheritance pattern\n     */\n    function testHTSOperations(address token, address account) external returns (\n        bool isAssociated,\n        uint256 balance,\n        uint256 allowance,\n        bool isValidToken\n    ) {\n        // Using inherited HTS functions directly (no interface calls)\n        (int tokenResponse, bool tokenExists) = isToken(token);\n        isValidToken = (tokenResponse == HederaResponseCodes.SUCCESS && tokenExists);\n        \n        if (isValidToken) {\n            // For association, we assume it's working if token is valid and we can call functions\n            isAssociated = true;\n            \n            // For balance and allowance, return 0 for now - these require different approaches in HTS\n            balance = 0;\n            allowance = 0;\n        }\n    }\n    \n    // Allow contract to receive HBAR\n    receive() external payable {}\n    \n    /**\n     * @dev Set token addresses (admin only) - automatically associates with contract\n     */\n    function setLynxToken(address _lynxToken) external onlyAdmin {\n        address previousToken = lynxToken;\n        lynxToken = _lynxToken;\n        \n        // Automatically associate contract with token using inherited function\n        if (_lynxToken != address(0)) {\n            int response = associateToken(address(this), _lynxToken);\n            emit AssociationResult(_lynxToken, response);\n            require(response == HederaResponseCodes.SUCCESS, string(abi.encodePacked(\"LYNX token association failed: \", _int64ToString(response))));\n        }\n        \n        emit TokenAddressSet(\"LYNX\", previousToken, _lynxToken);\n    }\n    \n    function setSauceToken(address _sauceToken) external onlyAdmin {\n        address previousToken = sauceToken;\n        sauceToken = _sauceToken;\n        \n        // Automatically associate contract with token using inherited function\n        if (_sauceToken != address(0)) {\n            int response = associateToken(address(this), _sauceToken);\n            emit AssociationResult(_sauceToken, response);\n            require(response == HederaResponseCodes.SUCCESS, string(abi.encodePacked(\"SAUCE token association failed: \", _int64ToString(response))));\n        }\n        \n        emit TokenAddressSet(\"SAUCE\", previousToken, _sauceToken);\n    }\n    \n    function setClxyToken(address _clxyToken) external onlyAdmin {\n        address previousToken = clxyToken;\n        clxyToken = _clxyToken;\n        \n        // Automatically associate contract with token using inherited function\n        if (_clxyToken != address(0)) {\n            int response = associateToken(address(this), _clxyToken);\n            emit AssociationResult(_clxyToken, response);\n            require(response == HederaResponseCodes.SUCCESS, string(abi.encodePacked(\"CLXY token association failed: \", _int64ToString(response))));\n        }\n        \n        emit TokenAddressSet(\"CLXY\", previousToken, _clxyToken);\n    }\n    \n    /**\n     * @dev Transfer admin rights\n     */\n    function transferAdmin(address newAdmin) external onlyAdmin {\n        require(newAdmin != address(0), \"Cannot transfer to zero address\");\n        address previousAdmin = admin;\n        admin = newAdmin;\n        emit AdminTransferred(previousAdmin, newAdmin);\n    }\n\n    /**\n     * @dev Associate contract with multiple tokens using inherited HTS functions\n     */\n    function associateTokens(address[] calldata tokenAddresses) external onlyAdmin {\n        for (uint256 i = 0; i < tokenAddresses.length; i++) {\n            int response = associateToken(address(this), tokenAddresses[i]);\n            emit AssociationResult(tokenAddresses[i], response);\n            require(response == HederaResponseCodes.SUCCESS, string(abi.encodePacked(\"Token association failed: \", _int64ToString(response))));\n        }\n    }\n\n    /**\n     * @dev Check all associations using inherited HTS functions\n     */\n    function checkAllAssociations() external returns (\n        bool contractSauceAssociated,\n        bool contractClxyAssociated,\n        bool contractLynxAssociated\n    ) {\n        contractSauceAssociated = _checkTokenAssociation(sauceToken);\n        contractClxyAssociated = _checkTokenAssociation(clxyToken);\n        contractLynxAssociated = _checkTokenAssociation(lynxToken);\n    }\n    \n    /**\n     * @dev Internal function to check if token is associated using inherited functions\n     */\n    function _checkTokenAssociation(address token) internal returns (bool) {\n        if (token == address(0)) return false;\n        \n        // Check if token is valid - if so, assume associated (we set them during deployment)\n        (int response, bool tokenExists) = isToken(token);\n        return response == HederaResponseCodes.SUCCESS && tokenExists;\n    }\n    \n    /**\n     * @dev Calculate required deposits for a given LYNX amount (accounting for decimals)\n     */\n    function calculateRequiredDeposits(uint256 lynxAmount) \n        external \n        pure \n        returns (uint256 sauceRequired, uint256 clxyRequired, uint256 hbarRequired) \n    {\n        // Convert LYNX amount to base units and calculate requirements\n        // LYNX has 8 decimals, SAUCE and CLXY have 6 decimals\n        sauceRequired = (lynxAmount * SAUCE_RATIO * 10**SAUCE_DECIMALS) / 10**LYNX_DECIMALS;\n        clxyRequired = (lynxAmount * CLXY_RATIO * 10**CLXY_DECIMALS) / 10**LYNX_DECIMALS;\n        hbarRequired = lynxAmount * HBAR_RATIO; // HBAR is already in tiny units\n    }\n    \n    /**\n     * @dev Mint LYNX tokens by depositing SAUCE, CLXY, and HBAR\n     */\n    function mintWithDeposits(\n        uint256 lynxAmount,\n        uint256 sauceAmount,\n        uint256 clxyAmount\n    ) external payable {\n        _validateMintInputs(lynxAmount, sauceAmount, clxyAmount);\n        _processDeposits(sauceAmount, clxyAmount);\n        _mintAndTransfer(lynxAmount);\n    }\n    \n    /**\n     * @dev Internal function to validate mint inputs\n     */\n    function _validateMintInputs(\n        uint256 lynxAmount,\n        uint256 sauceAmount,\n        uint256 clxyAmount\n    ) internal view {\n        if (lynxAmount == 0) revert InvalidAmount();\n        if (lynxToken == address(0)) revert TokenNotSet(\"LYNX\");\n        if (sauceToken == address(0)) revert TokenNotSet(\"SAUCE\");\n        if (clxyToken == address(0)) revert TokenNotSet(\"CLXY\");\n        \n        // Calculate required amounts\n        (uint256 sauceRequired, uint256 clxyRequired, uint256 hbarRequired) = this.calculateRequiredDeposits(lynxAmount);\n        \n        // Validate deposits\n        if (sauceAmount < sauceRequired) {\n            revert InsufficientDeposit(\"SAUCE\", sauceRequired, sauceAmount);\n        }\n        if (clxyAmount < clxyRequired) {\n            revert InsufficientDeposit(\"CLXY\", clxyRequired, clxyAmount);\n        }\n        if (msg.value < hbarRequired) {\n            revert InsufficientDeposit(\"HBAR\", hbarRequired, msg.value);\n        }\n    }\n    \n    /**\n     * @dev Internal function to process token deposits using inherited HTS functions\n     */\n    function _processDeposits(uint256 sauceAmount, uint256 clxyAmount) internal {\n        // Transfer SAUCE tokens from user to contract using inherited transferToken\n        int sauceTransferResult = transferToken(sauceToken, msg.sender, address(this), int64(uint64(sauceAmount)));\n        emit HTSOperationResult(\"transferToken\", sauceToken, msg.sender, sauceTransferResult, _getHTSErrorMessage(sauceTransferResult));\n        if (sauceTransferResult != HederaResponseCodes.SUCCESS) {\n            revert TransferFailed(\"SAUCE\");\n        }\n        \n        // Transfer CLXY tokens from user to contract using inherited transferToken\n        int clxyTransferResult = transferToken(clxyToken, msg.sender, address(this), int64(uint64(clxyAmount)));\n        emit HTSOperationResult(\"transferToken\", clxyToken, msg.sender, clxyTransferResult, _getHTSErrorMessage(clxyTransferResult));\n        if (clxyTransferResult != HederaResponseCodes.SUCCESS) {\n            revert TransferFailed(\"CLXY\");\n        }\n        \n        emit TokensDeposited(msg.sender, sauceAmount, clxyAmount, msg.value);\n    }\n    \n    /**\n     * @dev Internal function to mint and transfer LYNX tokens using inherited functions\n     */\n    function _mintAndTransfer(uint256 lynxAmount) internal {\n        // Mint LYNX tokens to the contract first\n        bytes[] memory metadata = new bytes[](0);\n        (int mintResult, , ) = mintToken(lynxToken, int64(uint64(lynxAmount)), metadata);\n        emit HTSOperationResult(\"mintToken\", lynxToken, address(this), mintResult, _getHTSErrorMessage(mintResult));\n        if (mintResult != HederaResponseCodes.SUCCESS) {\n            revert MintFailed(mintResult);\n        }\n        \n        // Transfer newly minted tokens to user using transferToken\n        int transferResult = transferToken(lynxToken, address(this), msg.sender, int64(uint64(lynxAmount)));\n        emit HTSOperationResult(\"transferToken\", lynxToken, msg.sender, transferResult, _getHTSErrorMessage(transferResult));\n        if (transferResult != HederaResponseCodes.SUCCESS) {\n            revert TransferFailed(\"LYNX\");\n        }\n        \n        emit LynxMinted(msg.sender, lynxAmount);\n    }\n    \n    /**\n     * @dev Get contract's HBAR balance\n     */\n    function getHbarBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n    \n    /**\n     * @dev Emergency withdrawal (admin only)\n     */\n    function emergencyWithdrawHbar(uint256 amount) external onlyAdmin {\n        require(amount <= address(this).balance, \"Insufficient HBAR balance\");\n        payable(admin).transfer(amount);\n    }\n\n    /**\n     * @dev Helper function to get HTS error message\n     */\n    function _getHTSErrorMessage(int responseCode) internal pure returns (string memory) {\n        if (responseCode == HederaResponseCodes.SUCCESS) return \"SUCCESS\";\n        if (responseCode == HederaResponseCodes.INVALID_TRANSACTION) return \"INVALID_TRANSACTION\";\n        if (responseCode == HederaResponseCodes.PAYER_ACCOUNT_NOT_FOUND) return \"PAYER_ACCOUNT_NOT_FOUND\";\n        if (responseCode == HederaResponseCodes.INVALID_NODE_ACCOUNT) return \"INVALID_NODE_ACCOUNT\";\n        if (responseCode == HederaResponseCodes.TRANSACTION_EXPIRED) return \"TRANSACTION_EXPIRED\";\n        if (responseCode == HederaResponseCodes.INVALID_TRANSACTION_START) return \"INVALID_TRANSACTION_START\";\n        if (responseCode == HederaResponseCodes.INVALID_TRANSACTION_DURATION) return \"INVALID_TRANSACTION_DURATION\";\n        if (responseCode == HederaResponseCodes.INVALID_SIGNATURE) return \"INVALID_SIGNATURE\";\n        if (responseCode == HederaResponseCodes.MEMO_TOO_LONG) return \"MEMO_TOO_LONG\";\n        if (responseCode == HederaResponseCodes.INSUFFICIENT_TX_FEE) return \"INSUFFICIENT_TX_FEE\";\n        if (responseCode == HederaResponseCodes.INSUFFICIENT_PAYER_BALANCE) return \"INSUFFICIENT_PAYER_BALANCE\";\n        if (responseCode == HederaResponseCodes.DUPLICATE_TRANSACTION) return \"DUPLICATE_TRANSACTION\";\n        if (responseCode == HederaResponseCodes.BUSY) return \"BUSY\";\n        if (responseCode == HederaResponseCodes.NOT_SUPPORTED) return \"NOT_SUPPORTED\";\n        if (responseCode == HederaResponseCodes.INVALID_FILE_ID) return \"INVALID_FILE_ID\";\n        if (responseCode == HederaResponseCodes.INVALID_ACCOUNT_ID) return \"INVALID_ACCOUNT_ID\";\n        if (responseCode == HederaResponseCodes.INVALID_CONTRACT_ID) return \"INVALID_CONTRACT_ID\";\n        if (responseCode == HederaResponseCodes.INVALID_TRANSACTION_ID) return \"INVALID_TRANSACTION_ID\";\n        if (responseCode == HederaResponseCodes.RECEIPT_NOT_FOUND) return \"RECEIPT_NOT_FOUND\";\n        if (responseCode == HederaResponseCodes.RECORD_NOT_FOUND) return \"RECORD_NOT_FOUND\";\n        if (responseCode == HederaResponseCodes.INVALID_SOLIDITY_ID) return \"INVALID_SOLIDITY_ID\";\n        return string(abi.encodePacked(\"UNKNOWN_ERROR_\", _int64ToString(responseCode)));\n    }\n\n    /**\n     * @dev Helper function to convert int to string for error messages\n     */\n    function _int64ToString(int value) internal pure returns (string memory) {\n        if (value == 0) return \"0\";\n        \n        bool negative = value < 0;\n        uint absValue = negative ? uint(-value) : uint(value);\n        \n        bytes memory buffer = new bytes(32);\n        uint256 index = 31;\n        \n        while (absValue != 0) {\n            buffer[index--] = bytes1(uint8(48 + absValue % 10));\n            absValue /= 10;\n        }\n        \n        if (negative) {\n            buffer[index--] = \"-\";\n        }\n        \n        bytes memory result = new bytes(31 - index);\n        for (uint256 i = 0; i < result.length; i++) {\n            result[i] = buffer[index + 1 + i];\n        }\n        \n        return string(result);\n    }\n} "},"app/contracts/HederaResponseCodes.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.9 <0.9.0;\n\n// this contract is auto-generated by a manual triggered script in utils/hedera-response-codes-protobuf-parser.js\n// the generated contract is using hedera response codes from services version 0.59.0-SNAPSHOT\n// https://github.com/hashgraph/hedera-services/blob/main/hapi/hedera-protobufs/services/response_code.proto\n\nlibrary HederaResponseCodes {\n    /// The transaction passed the precheck validations.\n    int32 internal constant OK = 0;\n\n    /// For any error not handled by specific error codes listed below.\n    int32 internal constant INVALID_TRANSACTION = 1;\n\n    /// Payer account does not exist.\n    int32 internal constant PAYER_ACCOUNT_NOT_FOUND = 2;\n\n    /// Node Account provided does not match the node account of the node the transaction was submitted to.\n    int32 internal constant INVALID_NODE_ACCOUNT = 3;\n\n    /// Pre-Check error when TransactionValidStart + transactionValidDuration is less than current consensus time.\n    int32 internal constant TRANSACTION_EXPIRED = 4;\n\n    /// Transaction start time is greater than current consensus time\n    int32 internal constant INVALID_TRANSACTION_START = 5;\n\n    /// The given transactionValidDuration was either non-positive, or greater than the maximum valid duration of 180 secs.\n    int32 internal constant INVALID_TRANSACTION_DURATION = 6;\n\n    /// The transaction signature is not valid\n    int32 internal constant INVALID_SIGNATURE = 7;\n\n    /// Transaction memo size exceeded 100 bytes\n    int32 internal constant MEMO_TOO_LONG = 8;\n\n    /// The fee provided in the transaction is insufficient for this type of transaction\n    int32 internal constant INSUFFICIENT_TX_FEE = 9;\n\n    /// The payer account has insufficient cryptocurrency to pay the transaction fee\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE = 10;\n\n    /// This transaction ID is a duplicate of one that was submitted to this node or reached consensus in the last 180 seconds (receipt period)\n    int32 internal constant DUPLICATE_TRANSACTION = 11;\n\n    /// If API is throttled out\n    int32 internal constant BUSY = 12;\n\n    /// The API is not currently supported\n    int32 internal constant NOT_SUPPORTED = 13;\n\n    /// The file id is invalid or does not exist\n    int32 internal constant INVALID_FILE_ID = 14;\n\n    /// The account id is invalid or does not exist\n    int32 internal constant INVALID_ACCOUNT_ID = 15;\n\n    /// The contract id is invalid or does not exist\n    int32 internal constant INVALID_CONTRACT_ID = 16;\n\n    /// Transaction id is not valid\n    int32 internal constant INVALID_TRANSACTION_ID = 17;\n\n    /// Receipt for given transaction id does not exist\n    int32 internal constant RECEIPT_NOT_FOUND = 18;\n\n    /// Record for given transaction id does not exist\n    int32 internal constant RECORD_NOT_FOUND = 19;\n\n    /// The solidity id is invalid or entity with this solidity id does not exist\n    int32 internal constant INVALID_SOLIDITY_ID = 20;\n\n    /// The responding node has submitted the transaction to the network. Its final status is still unknown.\n    int32 internal constant UNKNOWN = 21;\n\n    /// The transaction succeeded\n    int32 internal constant SUCCESS = 22;\n\n    /// There was a system error and the transaction failed because of invalid request parameters.\n    int32 internal constant FAIL_INVALID = 23;\n\n    /// There was a system error while performing fee calculation, reserved for future.\n    int32 internal constant FAIL_FEE = 24;\n\n    /// There was a system error while performing balance checks, reserved for future.\n    int32 internal constant FAIL_BALANCE = 25;\n\n    /// Key not provided in the transaction body\n    int32 internal constant KEY_REQUIRED = 26;\n\n    /// Unsupported algorithm/encoding used for keys in the transaction\n    int32 internal constant BAD_ENCODING = 27;\n\n    /// When the account balance is not sufficient for the transfer\n    int32 internal constant INSUFFICIENT_ACCOUNT_BALANCE = 28;\n\n    /// During an update transaction when the system is not able to find the Users Solidity address\n    int32 internal constant INVALID_SOLIDITY_ADDRESS = 29;\n\n    /// Not enough gas was supplied to execute transaction\n    int32 internal constant INSUFFICIENT_GAS = 30;\n\n    /// contract byte code size is over the limit\n    int32 internal constant CONTRACT_SIZE_LIMIT_EXCEEDED = 31;\n\n    /// local execution (query) is requested for a function which changes state\n    int32 internal constant LOCAL_CALL_MODIFICATION_EXCEPTION = 32;\n\n    /// Contract REVERT OPCODE executed\n    int32 internal constant CONTRACT_REVERT_EXECUTED = 33;\n\n    /// For any contract execution related error not handled by specific error codes listed above.\n    int32 internal constant CONTRACT_EXECUTION_EXCEPTION = 34;\n\n    /// In Query validation, account with +ve(amount) value should be Receiving node account, the receiver account should be only one account in the list\n    int32 internal constant INVALID_RECEIVING_NODE_ACCOUNT = 35;\n\n    /// Header is missing in Query request\n    int32 internal constant MISSING_QUERY_HEADER = 36;\n\n    /// The update of the account failed\n    int32 internal constant ACCOUNT_UPDATE_FAILED = 37;\n\n    /// Provided key encoding was not supported by the system\n    int32 internal constant INVALID_KEY_ENCODING = 38;\n\n    /// null solidity address\n    int32 internal constant NULL_SOLIDITY_ADDRESS = 39;\n\n    /// update of the contract failed\n    int32 internal constant CONTRACT_UPDATE_FAILED = 40;\n\n    /// the query header is invalid\n    int32 internal constant INVALID_QUERY_HEADER = 41;\n\n    /// Invalid fee submitted\n    int32 internal constant INVALID_FEE_SUBMITTED = 42;\n\n    /// Payer signature is invalid\n    int32 internal constant INVALID_PAYER_SIGNATURE = 43;\n\n    /// The keys were not provided in the request.\n    int32 internal constant KEY_NOT_PROVIDED = 44;\n\n    /// Expiration time provided in the transaction was invalid.\n    int32 internal constant INVALID_EXPIRATION_TIME = 45;\n\n    /// WriteAccess Control Keys are not provided for the file\n    int32 internal constant NO_WACL_KEY = 46;\n\n    /// The contents of file are provided as empty.\n    int32 internal constant FILE_CONTENT_EMPTY = 47;\n\n    /// The crypto transfer credit and debit do not sum equal to 0\n    int32 internal constant INVALID_ACCOUNT_AMOUNTS = 48;\n\n    /// Transaction body provided is empty\n    int32 internal constant EMPTY_TRANSACTION_BODY = 49;\n\n    /// Invalid transaction body provided\n    int32 internal constant INVALID_TRANSACTION_BODY = 50;\n\n    /// the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)\n    int32 internal constant INVALID_SIGNATURE_TYPE_MISMATCHING_KEY = 51;\n\n    /// the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList, or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding signatureList should also have 3 base signatures.\n    int32 internal constant INVALID_SIGNATURE_COUNT_MISMATCHING_KEY = 52;\n\n    /// the livehash body is empty\n    int32 internal constant EMPTY_LIVE_HASH_BODY = 53;\n\n    /// the livehash data is missing\n    int32 internal constant EMPTY_LIVE_HASH = 54;\n\n    /// the keys for a livehash are missing\n    int32 internal constant EMPTY_LIVE_HASH_KEYS = 55;\n\n    /// the livehash data is not the output of a SHA-384 digest\n    int32 internal constant INVALID_LIVE_HASH_SIZE = 56;\n\n    /// the query body is empty\n    int32 internal constant EMPTY_QUERY_BODY = 57;\n\n    /// the crypto livehash query is empty\n    int32 internal constant EMPTY_LIVE_HASH_QUERY = 58;\n\n    /// the livehash is not present\n    int32 internal constant LIVE_HASH_NOT_FOUND = 59;\n\n    /// the account id passed has not yet been created.\n    int32 internal constant ACCOUNT_ID_DOES_NOT_EXIST = 60;\n\n    /// the livehash already exists for a given account\n    int32 internal constant LIVE_HASH_ALREADY_EXISTS = 61;\n\n    /// File WACL keys are invalid\n    int32 internal constant INVALID_FILE_WACL = 62;\n\n    /// Serialization failure\n    int32 internal constant SERIALIZATION_FAILED = 63;\n\n    /// The size of the Transaction is greater than transactionMaxBytes\n    int32 internal constant TRANSACTION_OVERSIZE = 64;\n\n    /// The Transaction has more than 50 levels\n    int32 internal constant TRANSACTION_TOO_MANY_LAYERS = 65;\n\n    /// Contract is marked as deleted\n    int32 internal constant CONTRACT_DELETED = 66;\n\n    /// the platform node is either disconnected or lagging behind.\n    int32 internal constant PLATFORM_NOT_ACTIVE = 67;\n\n    /// one public key matches more than one prefixes on the signature map\n    int32 internal constant KEY_PREFIX_MISMATCH = 68;\n\n    /// transaction not created by platform due to large backlog\n    int32 internal constant PLATFORM_TRANSACTION_NOT_CREATED = 69;\n\n    /// auto renewal period is not a positive number of seconds\n    int32 internal constant INVALID_RENEWAL_PERIOD = 70;\n\n    /// the response code when a smart contract id is passed for a crypto API request\n    int32 internal constant INVALID_PAYER_ACCOUNT_ID = 71;\n\n    /// the account has been marked as deleted\n    int32 internal constant ACCOUNT_DELETED = 72;\n\n    /// the file has been marked as deleted\n    int32 internal constant FILE_DELETED = 73;\n\n    /// same accounts repeated in the transfer account list\n    int32 internal constant ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS = 74;\n\n    /// attempting to set negative balance value for crypto account\n    int32 internal constant SETTING_NEGATIVE_ACCOUNT_BALANCE = 75;\n\n    /// when deleting smart contract that has crypto balance either transfer account or transfer smart contract is required\n    int32 internal constant OBTAINER_REQUIRED = 76;\n\n    /// when deleting smart contract that has crypto balance you can not use the same contract id as transferContractId as the one being deleted\n    int32 internal constant OBTAINER_SAME_CONTRACT_ID = 77;\n\n    /// transferAccountId or transferContractId specified for contract delete does not exist\n    int32 internal constant OBTAINER_DOES_NOT_EXIST = 78;\n\n    /// attempting to modify (update or delete a immutable smart contract, i.e. one created without a admin key)\n    int32 internal constant MODIFYING_IMMUTABLE_CONTRACT = 79;\n\n    /// Unexpected exception thrown by file system functions\n    int32 internal constant FILE_SYSTEM_EXCEPTION = 80;\n\n    /// the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]\n    int32 internal constant AUTORENEW_DURATION_NOT_IN_RANGE = 81;\n\n    /// Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex string.\n    int32 internal constant ERROR_DECODING_BYTESTRING = 82;\n\n    /// File to create a smart contract was of length zero\n    int32 internal constant CONTRACT_FILE_EMPTY = 83;\n\n    /// Bytecode for smart contract is of length zero\n    int32 internal constant CONTRACT_BYTECODE_EMPTY = 84;\n\n    /// Attempt to set negative initial balance\n    int32 internal constant INVALID_INITIAL_BALANCE = 85;\n\n    /// Attempt to set negative receive record threshold\n    int32 internal constant INVALID_RECEIVE_RECORD_THRESHOLD = 86;\n\n    /// Attempt to set negative send record threshold\n    int32 internal constant INVALID_SEND_RECORD_THRESHOLD = 87;\n\n    /// Special Account Operations should be performed by only Genesis account, return this code if it is not Genesis Account\n    int32 internal constant ACCOUNT_IS_NOT_GENESIS_ACCOUNT = 88;\n\n    /// The fee payer account doesn't have permission to submit such Transaction\n    int32 internal constant PAYER_ACCOUNT_UNAUTHORIZED = 89;\n\n    /// FreezeTransactionBody is invalid\n    int32 internal constant INVALID_FREEZE_TRANSACTION_BODY = 90;\n\n    /// FreezeTransactionBody does not exist\n    int32 internal constant FREEZE_TRANSACTION_BODY_NOT_FOUND = 91;\n\n    /// Exceeded the number of accounts (both from and to) allowed for crypto transfer list\n    int32 internal constant TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 92;\n\n    /// Smart contract result size greater than specified maxResultSize\n    int32 internal constant RESULT_SIZE_LIMIT_EXCEEDED = 93;\n\n    /// The payer account is not a special account(account 0.0.55)\n    int32 internal constant NOT_SPECIAL_ACCOUNT = 94;\n\n    /// Negative gas was offered in smart contract call\n    int32 internal constant CONTRACT_NEGATIVE_GAS = 95;\n\n    /// Negative value / initial balance was specified in a smart contract call / create\n    int32 internal constant CONTRACT_NEGATIVE_VALUE = 96;\n\n    /// Failed to update fee file\n    int32 internal constant INVALID_FEE_FILE = 97;\n\n    /// Failed to update exchange rate file\n    int32 internal constant INVALID_EXCHANGE_RATE_FILE = 98;\n\n    /// Payment tendered for contract local call cannot cover both the fee and the gas\n    int32 internal constant INSUFFICIENT_LOCAL_CALL_GAS = 99;\n\n    /// Entities with Entity ID below 1000 are not allowed to be deleted\n    int32 internal constant ENTITY_NOT_ALLOWED_TO_DELETE = 100;\n\n    /// Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2) account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102), ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate (0.0.112).\n    int32 internal constant AUTHORIZATION_FAILED = 101;\n\n    /// Fee Schedule Proto uploaded but not valid (append or update is required)\n    int32 internal constant FILE_UPLOADED_PROTO_INVALID = 102;\n\n    /// Fee Schedule Proto uploaded but not valid (append or update is required)\n    int32 internal constant FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK = 103;\n\n    /// Fee Schedule Proto File Part uploaded\n    int32 internal constant FEE_SCHEDULE_FILE_PART_UPLOADED = 104;\n\n    /// The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage\n    int32 internal constant EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED = 105;\n\n    /// Contract permanent storage exceeded the currently allowable limit\n    int32 internal constant MAX_CONTRACT_STORAGE_EXCEEDED = 106;\n\n    /// Transfer Account should not be same as Account to be deleted\n    int32 internal constant TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT = 107;\n\n    int32 internal constant TOTAL_LEDGER_BALANCE_INVALID = 108;\n\n    /// The expiration date/time on a smart contract may not be reduced\n    int32 internal constant EXPIRATION_REDUCTION_NOT_ALLOWED = 110;\n\n    /// Gas exceeded currently allowable gas limit per transaction\n    int32 internal constant MAX_GAS_LIMIT_EXCEEDED = 111;\n\n    /// File size exceeded the currently allowable limit\n    int32 internal constant MAX_FILE_SIZE_EXCEEDED = 112;\n\n    /// When a valid signature is not provided for operations on account with receiverSigRequired=true\n    int32 internal constant RECEIVER_SIG_REQUIRED = 113;\n\n    /// The Topic ID specified is not in the system.\n    int32 internal constant INVALID_TOPIC_ID = 150;\n\n    /// A provided admin key was invalid. Verify the bytes for an Ed25519 public key are exactly 32 bytes; and the bytes for a compressed ECDSA(secp256k1) key are exactly 33 bytes, with the first byte either 0x02 or 0x03..\n    int32 internal constant INVALID_ADMIN_KEY = 155;\n\n    /// A provided submit key was invalid.\n    int32 internal constant INVALID_SUBMIT_KEY = 156;\n\n    /// An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey).\n    int32 internal constant UNAUTHORIZED = 157;\n\n    /// A ConsensusService message is empty.\n    int32 internal constant INVALID_TOPIC_MESSAGE = 158;\n\n    /// The autoRenewAccount specified is not a valid, active account.\n    int32 internal constant INVALID_AUTORENEW_ACCOUNT = 159;\n\n    /// An adminKey was not specified on the topic, so there must not be an autoRenewAccount.\n    int32 internal constant AUTORENEW_ACCOUNT_NOT_ALLOWED = 160;\n\n    /// The topic has expired, was not automatically renewed, and is in a 7 day grace period before the topic will be deleted unrecoverably. This error response code will not be returned until autoRenew functionality is supported by HAPI.\n    int32 internal constant TOPIC_EXPIRED = 162;\n\n    /// chunk number must be from 1 to total (chunks) inclusive.\n    int32 internal constant INVALID_CHUNK_NUMBER = 163;\n\n    /// For every chunk, the payer account that is part of initialTransactionID must match the Payer Account of this transaction. The entire initialTransactionID should match the transactionID of the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1.\n    int32 internal constant INVALID_CHUNK_TRANSACTION_ID = 164;\n\n    /// Account is frozen and cannot transact with the token\n    int32 internal constant ACCOUNT_FROZEN_FOR_TOKEN = 165;\n\n    /// An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with non-deleted tokens.\n    int32 internal constant TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED = 166;\n\n    /// The token is invalid or does not exist\n    int32 internal constant INVALID_TOKEN_ID = 167;\n\n    /// Invalid token decimals\n    int32 internal constant INVALID_TOKEN_DECIMALS = 168;\n\n    /// Invalid token initial supply\n    int32 internal constant INVALID_TOKEN_INITIAL_SUPPLY = 169;\n\n    /// Treasury Account does not exist or is deleted\n    int32 internal constant INVALID_TREASURY_ACCOUNT_FOR_TOKEN = 170;\n\n    /// Token Symbol is not UTF-8 capitalized alphabetical string\n    int32 internal constant INVALID_TOKEN_SYMBOL = 171;\n\n    /// Freeze key is not set on token\n    int32 internal constant TOKEN_HAS_NO_FREEZE_KEY = 172;\n\n    /// Amounts in transfer list are not net zero\n    int32 internal constant TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN = 173;\n\n    /// A token symbol was not provided\n    int32 internal constant MISSING_TOKEN_SYMBOL = 174;\n\n    /// The provided token symbol was too long\n    int32 internal constant TOKEN_SYMBOL_TOO_LONG = 175;\n\n    /// KYC must be granted and account does not have KYC granted\n    int32 internal constant ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN = 176;\n\n    /// KYC key is not set on token\n    int32 internal constant TOKEN_HAS_NO_KYC_KEY = 177;\n\n    /// Token balance is not sufficient for the transaction\n    int32 internal constant INSUFFICIENT_TOKEN_BALANCE = 178;\n\n    /// Token transactions cannot be executed on deleted token\n    int32 internal constant TOKEN_WAS_DELETED = 179;\n\n    /// Supply key is not set on token\n    int32 internal constant TOKEN_HAS_NO_SUPPLY_KEY = 180;\n\n    /// Wipe key is not set on token\n    int32 internal constant TOKEN_HAS_NO_WIPE_KEY = 181;\n\n    /// The requested token mint amount would cause an invalid total supply\n    int32 internal constant INVALID_TOKEN_MINT_AMOUNT = 182;\n\n    /// The requested token burn amount would cause an invalid total supply\n    int32 internal constant INVALID_TOKEN_BURN_AMOUNT = 183;\n\n    /// A required token-account relationship is missing\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_ACCOUNT = 184;\n\n    /// The target of a wipe operation was the token treasury account\n    int32 internal constant CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT = 185;\n\n    /// The provided KYC key was invalid.\n    int32 internal constant INVALID_KYC_KEY = 186;\n\n    /// The provided wipe key was invalid.\n    int32 internal constant INVALID_WIPE_KEY = 187;\n\n    /// The provided freeze key was invalid.\n    int32 internal constant INVALID_FREEZE_KEY = 188;\n\n    /// The provided supply key was invalid.\n    int32 internal constant INVALID_SUPPLY_KEY = 189;\n\n    /// Token Name is not provided\n    int32 internal constant MISSING_TOKEN_NAME = 190;\n\n    /// Token Name is too long\n    int32 internal constant TOKEN_NAME_TOO_LONG = 191;\n\n    /// The provided wipe amount must not be negative, zero or bigger than the token holder balance\n    int32 internal constant INVALID_WIPING_AMOUNT = 192;\n\n    /// Token does not have Admin key set, thus update/delete transactions cannot be performed\n    int32 internal constant TOKEN_IS_IMMUTABLE = 193;\n\n    /// An <tt>associateToken</tt> operation specified a token already associated to the account\n    int32 internal constant TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT = 194;\n\n    /// An attempted operation is invalid until all token balances for the target account are zero\n    int32 internal constant TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES = 195;\n\n    /// An attempted operation is invalid because the account is a treasury\n    int32 internal constant ACCOUNT_IS_TREASURY = 196;\n\n    /// Same TokenIDs present in the token list\n    int32 internal constant TOKEN_ID_REPEATED_IN_TOKEN_LIST = 197;\n\n    /// Exceeded the number of token transfers (both from and to) allowed for token transfer list\n    int32 internal constant TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 198;\n\n    /// TokenTransfersTransactionBody has no TokenTransferList\n    int32 internal constant EMPTY_TOKEN_TRANSFER_BODY = 199;\n\n    /// TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts\n    int32 internal constant EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS = 200;\n\n    /// The Scheduled entity does not exist; or has now expired, been deleted, or been executed\n    int32 internal constant INVALID_SCHEDULE_ID = 201;\n\n    /// The Scheduled entity cannot be modified. Admin key not set\n    int32 internal constant SCHEDULE_IS_IMMUTABLE = 202;\n\n    /// The provided Scheduled Payer does not exist\n    int32 internal constant INVALID_SCHEDULE_PAYER_ID = 203;\n\n    /// The Schedule Create Transaction TransactionID account does not exist\n    int32 internal constant INVALID_SCHEDULE_ACCOUNT_ID = 204;\n\n    /// The provided sig map did not contain any new valid signatures from required signers of the scheduled transaction\n    int32 internal constant NO_NEW_VALID_SIGNATURES = 205;\n\n    /// The required signers for a scheduled transaction cannot be resolved, for example because they do not exist or have been deleted\n    int32 internal constant UNRESOLVABLE_REQUIRED_SIGNERS = 206;\n\n    /// Only whitelisted transaction types may be scheduled\n    int32 internal constant SCHEDULED_TRANSACTION_NOT_IN_WHITELIST = 207;\n\n    /// At least one of the signatures in the provided sig map did not represent a valid signature for any required signer\n    int32 internal constant SOME_SIGNATURES_WERE_INVALID = 208;\n\n    /// The scheduled field in the TransactionID may not be set to true\n    int32 internal constant TRANSACTION_ID_FIELD_NOT_ALLOWED = 209;\n\n    /// A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that is, all fields other than scheduledPayerAccountID)\n    int32 internal constant IDENTICAL_SCHEDULE_ALREADY_CREATED = 210;\n\n    /// A string field in the transaction has a UTF-8 encoding with the prohibited zero byte\n    int32 internal constant INVALID_ZERO_BYTE_IN_STRING = 211;\n\n    /// A schedule being signed or deleted has already been deleted\n    int32 internal constant SCHEDULE_ALREADY_DELETED = 212;\n\n    /// A schedule being signed or deleted has already been executed\n    int32 internal constant SCHEDULE_ALREADY_EXECUTED = 213;\n\n    /// ConsensusSubmitMessage request's message size is larger than allowed.\n    int32 internal constant MESSAGE_SIZE_TOO_LARGE = 214;\n\n    /// An operation was assigned to more than one throttle group in a given bucket\n    int32 internal constant OPERATION_REPEATED_IN_BUCKET_GROUPS = 215;\n\n    /// The capacity needed to satisfy all opsPerSec groups in a bucket overflowed a signed 8-byte integral type\n    int32 internal constant BUCKET_CAPACITY_OVERFLOW = 216;\n\n    /// Given the network size in the address book, the node-level capacity for an operation would never be enough to accept a single request; usually means a bucket burstPeriod should be increased\n    int32 internal constant NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION = 217;\n\n    /// A bucket was defined without any throttle groups\n    int32 internal constant BUCKET_HAS_NO_THROTTLE_GROUPS = 218;\n\n    /// A throttle group was granted zero opsPerSec\n    int32 internal constant THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC = 219;\n\n    /// The throttle definitions file was updated, but some supported operations were not assigned a bucket\n    int32 internal constant SUCCESS_BUT_MISSING_EXPECTED_OPERATION = 220;\n\n    /// The new contents for the throttle definitions system file were not valid protobuf\n    int32 internal constant UNPARSEABLE_THROTTLE_DEFINITIONS = 221;\n\n    /// The new throttle definitions system file were invalid, and no more specific error could be divined\n    int32 internal constant INVALID_THROTTLE_DEFINITIONS = 222;\n\n    /// The transaction references an account which has passed its expiration without renewal funds available, and currently remains in the ledger only because of the grace period given to expired entities\n    int32 internal constant ACCOUNT_EXPIRED_AND_PENDING_REMOVAL = 223;\n\n    /// Invalid token max supply\n    int32 internal constant INVALID_TOKEN_MAX_SUPPLY = 224;\n\n    /// Invalid token nft serial number\n    int32 internal constant INVALID_TOKEN_NFT_SERIAL_NUMBER = 225;\n\n    /// Invalid nft id\n    int32 internal constant INVALID_NFT_ID = 226;\n\n    /// Nft metadata is too long\n    int32 internal constant METADATA_TOO_LONG = 227;\n\n    /// Repeated operations count exceeds the limit\n    int32 internal constant BATCH_SIZE_LIMIT_EXCEEDED = 228;\n\n    /// The range of data to be gathered is out of the set boundaries\n    int32 internal constant INVALID_QUERY_RANGE = 229;\n\n    /// A custom fractional fee set a denominator of zero\n    int32 internal constant FRACTION_DIVIDES_BY_ZERO = 230;\n\n    /// The transaction payer could not afford a custom fee\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE = 231;\n\n    /// More than 10 custom fees were specified\n    int32 internal constant CUSTOM_FEES_LIST_TOO_LONG = 232;\n\n    /// Any of the feeCollector accounts for customFees is invalid\n    int32 internal constant INVALID_CUSTOM_FEE_COLLECTOR = 233;\n\n    /// Any of the token Ids in customFees is invalid\n    int32 internal constant INVALID_TOKEN_ID_IN_CUSTOM_FEES = 234;\n\n    /// Any of the token Ids in customFees are not associated to feeCollector\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR = 235;\n\n    /// A token cannot have more units minted due to its configured supply ceiling\n    int32 internal constant TOKEN_MAX_SUPPLY_REACHED = 236;\n\n    /// The transaction attempted to move an NFT serial number from an account other than its owner\n    int32 internal constant SENDER_DOES_NOT_OWN_NFT_SERIAL_NO = 237;\n\n    /// A custom fee schedule entry did not specify either a fixed or fractional fee\n    int32 internal constant CUSTOM_FEE_NOT_FULLY_SPECIFIED = 238;\n\n    /// Only positive fees may be assessed at this time\n    int32 internal constant CUSTOM_FEE_MUST_BE_POSITIVE = 239;\n\n    /// Fee schedule key is not set on token\n    int32 internal constant TOKEN_HAS_NO_FEE_SCHEDULE_KEY = 240;\n\n    /// A fractional custom fee exceeded the range of a 64-bit signed integer\n    int32 internal constant CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE = 241;\n\n    /// A royalty cannot exceed the total fungible value exchanged for an NFT\n    int32 internal constant ROYALTY_FRACTION_CANNOT_EXCEED_ONE = 242;\n\n    /// Each fractional custom fee must have its maximum_amount, if specified, at least its minimum_amount\n    int32 internal constant FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT = 243;\n\n    /// A fee schedule update tried to clear the custom fees from a token whose fee schedule was already empty\n    int32 internal constant CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES = 244;\n\n    /// Only tokens of type FUNGIBLE_COMMON can be used to as fee schedule denominations\n    int32 internal constant CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON = 245;\n\n    /// Only tokens of type FUNGIBLE_COMMON can have fractional fees\n    int32 internal constant CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON = 246;\n\n    /// The provided custom fee schedule key was invalid\n    int32 internal constant INVALID_CUSTOM_FEE_SCHEDULE_KEY = 247;\n\n    /// The requested token mint metadata was invalid\n    int32 internal constant INVALID_TOKEN_MINT_METADATA = 248;\n\n    /// The requested token burn metadata was invalid\n    int32 internal constant INVALID_TOKEN_BURN_METADATA = 249;\n\n    /// The treasury for a unique token cannot be changed until it owns no NFTs\n    int32 internal constant CURRENT_TREASURY_STILL_OWNS_NFTS = 250;\n\n    /// An account cannot be dissociated from a unique token if it owns NFTs for the token\n    int32 internal constant ACCOUNT_STILL_OWNS_NFTS = 251;\n\n    /// A NFT can only be burned when owned by the unique token's treasury\n    int32 internal constant TREASURY_MUST_OWN_BURNED_NFT = 252;\n\n    /// An account did not own the NFT to be wiped\n    int32 internal constant ACCOUNT_DOES_NOT_OWN_WIPED_NFT = 253;\n\n    /// An AccountAmount token transfers list referenced a token type other than FUNGIBLE_COMMON\n    int32 internal constant ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON = 254;\n\n    /// All the NFTs allowed in the current price regime have already been minted\n    int32 internal constant MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED = 255;\n\n    /// The payer account has been marked as deleted\n    int32 internal constant PAYER_ACCOUNT_DELETED = 256;\n\n    /// The reference chain of custom fees for a transferred token exceeded the maximum length of 2\n    int32 internal constant CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH = 257;\n\n    /// More than 20 balance adjustments were to satisfy a CryptoTransfer and its implied custom fee payments\n    int32 internal constant CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS = 258;\n\n    /// The sender account in the token transfer transaction could not afford a custom fee\n    int32 internal constant INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE = 259;\n\n    /// Currently no more than 4,294,967,295 NFTs may be minted for a given unique token type\n    int32 internal constant SERIAL_NUMBER_LIMIT_REACHED = 260;\n\n    /// Only tokens of type NON_FUNGIBLE_UNIQUE can have royalty fees\n    int32 internal constant CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE = 261;\n\n    /// The account has reached the limit on the automatic associations count.\n    int32 internal constant NO_REMAINING_AUTOMATIC_ASSOCIATIONS = 262;\n\n    /// Already existing automatic associations are more than the new maximum automatic associations.\n    int32 internal constant EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT = 263;\n\n    /// Cannot set the number of automatic associations for an account more than the maximum allowed token associations <tt>tokens.maxPerAccount</tt>.\n    int32 internal constant REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT = 264;\n\n    /// Token is paused. This Token cannot be a part of any kind of Transaction until unpaused.\n    int32 internal constant TOKEN_IS_PAUSED = 265;\n\n    /// Pause key is not set on token\n    int32 internal constant TOKEN_HAS_NO_PAUSE_KEY = 266;\n\n    /// The provided pause key was invalid\n    int32 internal constant INVALID_PAUSE_KEY = 267;\n\n    /// The update file in a freeze transaction body must exist.\n    int32 internal constant FREEZE_UPDATE_FILE_DOES_NOT_EXIST = 268;\n\n    /// The hash of the update file in a freeze transaction body must match the in-memory hash.\n    int32 internal constant FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH = 269;\n\n    /// A FREEZE_UPGRADE transaction was handled with no previous update prepared.\n    int32 internal constant NO_UPGRADE_HAS_BEEN_PREPARED = 270;\n\n    /// A FREEZE_ABORT transaction was handled with no scheduled freeze.\n    int32 internal constant NO_FREEZE_IS_SCHEDULED = 271;\n\n    /// The update file hash when handling a FREEZE_UPGRADE transaction differs from the file hash at the time of handling the PREPARE_UPGRADE transaction.\n    int32 internal constant UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE = 272;\n\n    /// The given freeze start time was in the (consensus) past.\n    int32 internal constant FREEZE_START_TIME_MUST_BE_FUTURE = 273;\n\n    /// The prepared update file cannot be updated or appended until either the upgrade has been completed, or a FREEZE_ABORT has been handled.\n    int32 internal constant PREPARED_UPDATE_FILE_IS_IMMUTABLE = 274;\n\n    /// Once a freeze is scheduled, it must be aborted before any other type of freeze can can be performed.\n    int32 internal constant FREEZE_ALREADY_SCHEDULED = 275;\n\n    /// If an NMT upgrade has been prepared, the following operation must be a FREEZE_UPGRADE. (To issue a FREEZE_ONLY, submit a FREEZE_ABORT first.)\n    int32 internal constant FREEZE_UPGRADE_IN_PROGRESS = 276;\n\n    /// If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the id of the file to be used in the upgrade.\n    int32 internal constant UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED = 277;\n\n    /// If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the hash of the file to be used in the upgrade.\n    int32 internal constant UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED = 278;\n\n    /// Consensus throttle did not allow execution of this transaction. System is throttled at consensus level.\n    int32 internal constant CONSENSUS_GAS_EXHAUSTED = 279;\n\n    /// A precompiled contract succeeded, but was later reverted.\n    int32 internal constant REVERTED_SUCCESS = 280;\n\n    /// All contract storage allocated to the current price regime has been consumed.\n    int32 internal constant MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED = 281;\n\n    /// An alias used in a CryptoTransfer transaction is not the serialization of a primitive Key message--that is, a Key with a single Ed25519 or ECDSA(secp256k1) public key and no unknown protobuf fields.\n    int32 internal constant INVALID_ALIAS_KEY = 282;\n\n    /// A fungible token transfer expected a different number of decimals than the involved type actually has.\n    int32 internal constant UNEXPECTED_TOKEN_DECIMALS = 283;\n\n    /// The proxy account id is invalid or does not exist.\n    int32 internal constant INVALID_PROXY_ACCOUNT_ID = 284;\n\n    /// The transfer account id in CryptoDelete transaction is invalid or does not exist.\n    int32 internal constant INVALID_TRANSFER_ACCOUNT_ID = 285;\n\n    /// The fee collector account id in TokenFeeScheduleUpdate is invalid or does not exist.\n    int32 internal constant INVALID_FEE_COLLECTOR_ACCOUNT_ID = 286;\n\n    /// The alias already set on an account cannot be updated using CryptoUpdate transaction.\n    int32 internal constant ALIAS_IS_IMMUTABLE = 287;\n\n    /// An approved allowance specifies a spender account that is the same as the hbar/token owner account.\n    int32 internal constant SPENDER_ACCOUNT_SAME_AS_OWNER = 288;\n\n    /// The establishment or adjustment of an approved allowance cause the token allowance to exceed the token maximum supply.\n    int32 internal constant AMOUNT_EXCEEDS_TOKEN_MAX_SUPPLY = 289;\n\n    /// The specified amount for an approved allowance cannot be negative.\n    int32 internal constant NEGATIVE_ALLOWANCE_AMOUNT = 290;\n\n    /// The approveForAll flag cannot be set for a fungible token.\n    int32 internal constant CANNOT_APPROVE_FOR_ALL_FUNGIBLE_COMMON = 291;\n\n    /// The spender does not have an existing approved allowance with the hbar/token owner.\n    int32 internal constant SPENDER_DOES_NOT_HAVE_ALLOWANCE = 292;\n\n    /// The transfer amount exceeds the current approved allowance for the spender account.\n    int32 internal constant AMOUNT_EXCEEDS_ALLOWANCE = 293;\n\n    /// The payer account of an approveAllowances or adjustAllowance transaction is attempting to go beyond the maximum allowed number of allowances.\n    int32 internal constant MAX_ALLOWANCES_EXCEEDED = 294;\n\n    /// No allowances have been specified in the approval transaction.\n    int32 internal constant EMPTY_ALLOWANCES = 295;\n\n    /// Spender is repeated more than once in Crypto or Token or NFT allowance lists in a single CryptoApproveAllowance transaction.\n    int32 internal constant SPENDER_ACCOUNT_REPEATED_IN_ALLOWANCES = 296;\n\n    /// Serial numbers are repeated in nft allowance for a single spender account\n    int32 internal constant REPEATED_SERIAL_NUMS_IN_NFT_ALLOWANCES = 297;\n\n    /// Fungible common token used in NFT allowances\n    int32 internal constant FUNGIBLE_TOKEN_IN_NFT_ALLOWANCES = 298;\n\n    /// Non fungible token used in fungible token allowances\n    int32 internal constant NFT_IN_FUNGIBLE_TOKEN_ALLOWANCES = 299;\n\n    /// The account id specified as the owner is invalid or does not exist.\n    int32 internal constant INVALID_ALLOWANCE_OWNER_ID = 300;\n\n    /// The account id specified as the spender is invalid or does not exist.\n    int32 internal constant INVALID_ALLOWANCE_SPENDER_ID = 301;\n\n    /// [Deprecated] If the CryptoDeleteAllowance transaction has repeated crypto or token or Nft allowances to delete.\n    int32 internal constant REPEATED_ALLOWANCES_TO_DELETE = 302;\n\n    /// If the account Id specified as the delegating spender is invalid or does not exist.\n    int32 internal constant INVALID_DELEGATING_SPENDER = 303;\n\n    /// The delegating Spender cannot grant approveForAll allowance on a NFT token type for another spender.\n    int32 internal constant DELEGATING_SPENDER_CANNOT_GRANT_APPROVE_FOR_ALL = 304;\n\n    /// The delegating Spender cannot grant allowance on a NFT serial for another spender as it doesnt not have approveForAll granted on token-owner.\n    int32 internal constant DELEGATING_SPENDER_DOES_NOT_HAVE_APPROVE_FOR_ALL = 305;\n\n    /// The scheduled transaction could not be created because it's expiration_time was too far in the future.\n    int32 internal constant SCHEDULE_EXPIRATION_TIME_TOO_FAR_IN_FUTURE = 306;\n\n    /// The scheduled transaction could not be created because it's expiration_time was less than or equal to the consensus time.\n    int32 internal constant SCHEDULE_EXPIRATION_TIME_MUST_BE_HIGHER_THAN_CONSENSUS_TIME = 307;\n\n    /// The scheduled transaction could not be created because it would cause throttles to be violated on the specified expiration_time.\n    int32 internal constant SCHEDULE_FUTURE_THROTTLE_EXCEEDED = 308;\n\n    /// The scheduled transaction could not be created because it would cause the gas limit to be violated on the specified expiration_time.\n    int32 internal constant SCHEDULE_FUTURE_GAS_LIMIT_EXCEEDED = 309;\n\n    /// The ethereum transaction either failed parsing or failed signature validation, or some other EthereumTransaction error not covered by another response code.\n    int32 internal constant INVALID_ETHEREUM_TRANSACTION = 310;\n\n    /// EthereumTransaction was signed against a chainId that this network does not support.\n    int32 internal constant WRONG_CHAIN_ID = 311;\n\n    /// This transaction specified an ethereumNonce that is not the current ethereumNonce of the account.\n    int32 internal constant WRONG_NONCE = 312;\n\n    /// The ethereum transaction specified an access list, which the network does not support.\n    int32 internal constant ACCESS_LIST_UNSUPPORTED = 313;\n\n    /// A schedule being signed or deleted has passed it's expiration date and is pending execution if needed and then expiration.\n    int32 internal constant SCHEDULE_PENDING_EXPIRATION = 314;\n\n    /// A selfdestruct or ContractDelete targeted a contract that is a token treasury.\n    int32 internal constant CONTRACT_IS_TOKEN_TREASURY = 315;\n\n    /// A selfdestruct or ContractDelete targeted a contract with non-zero token balances.\n    int32 internal constant CONTRACT_HAS_NON_ZERO_TOKEN_BALANCES = 316;\n\n    /// A contract referenced by a transaction is \"detached\"; that is, expired and lacking any hbar funds for auto-renewal payment---but still within its post-expiry grace period.\n    int32 internal constant CONTRACT_EXPIRED_AND_PENDING_REMOVAL = 317;\n\n    /// A ContractUpdate requested removal of a contract's auto-renew account, but that contract has no auto-renew account.\n    int32 internal constant CONTRACT_HAS_NO_AUTO_RENEW_ACCOUNT = 318;\n\n    /// A delete transaction submitted via HAPI set permanent_removal=true\n    int32 internal constant PERMANENT_REMOVAL_REQUIRES_SYSTEM_INITIATION = 319;\n\n    /// A CryptoCreate or ContractCreate used the deprecated proxyAccountID field.\n    int32 internal constant PROXY_ACCOUNT_ID_FIELD_IS_DEPRECATED = 320;\n\n    /// An account set the staked_account_id to itself in CryptoUpdate or ContractUpdate transactions.\n    int32 internal constant SELF_STAKING_IS_NOT_ALLOWED = 321;\n\n    /// The staking account id or staking node id given is invalid or does not exist.\n    int32 internal constant INVALID_STAKING_ID = 322;\n\n    /// Native staking, while implemented, has not yet enabled by the council.\n    int32 internal constant STAKING_NOT_ENABLED = 323;\n\n    /// The range provided in UtilPrng transaction is negative.\n    int32 internal constant INVALID_PRNG_RANGE = 324;\n\n    /// The maximum number of entities allowed in the current price regime have been created.\n    int32 internal constant MAX_ENTITIES_IN_PRICE_REGIME_HAVE_BEEN_CREATED = 325;\n\n    /// The full prefix signature for precompile is not valid\n    int32 internal constant INVALID_FULL_PREFIX_SIGNATURE_FOR_PRECOMPILE = 326;\n\n    /// The combined balances of a contract and its auto-renew account (if any) did not cover the rent charged for net new storage used in a transaction.\n    int32 internal constant INSUFFICIENT_BALANCES_FOR_STORAGE_RENT = 327;\n\n    /// A contract transaction tried to use more than the allowed number of child records, via either system contract records or internal contract creations.\n    int32 internal constant MAX_CHILD_RECORDS_EXCEEDED = 328;\n\n    /// The combined balances of a contract and its auto-renew account (if any) or balance of an account did not cover the auto-renewal fees in a transaction.\n    int32 internal constant INSUFFICIENT_BALANCES_FOR_RENEWAL_FEES = 329;\n\n    /// A transaction's protobuf message includes unknown fields; could mean that a client expects not-yet-released functionality to be available.\n    int32 internal constant TRANSACTION_HAS_UNKNOWN_FIELDS = 330;\n\n    /// The account cannot be modified. Account's key is not set\n    int32 internal constant ACCOUNT_IS_IMMUTABLE = 331;\n\n    /// An alias that is assigned to an account or contract cannot be assigned to another account or contract.\n    int32 internal constant ALIAS_ALREADY_ASSIGNED = 332;\n\n    /// A provided metadata key was invalid. Verification includes, for example, checking the size of Ed25519 and ECDSA(secp256k1) public keys.\n    int32 internal constant INVALID_METADATA_KEY = 333;\n\n    /// Metadata key is not set on token\n    int32 internal constant TOKEN_HAS_NO_METADATA_KEY = 334;\n\n    /// Token Metadata is not provided\n    int32 internal constant MISSING_TOKEN_METADATA = 335;\n\n    /// NFT serial numbers are missing in the TokenUpdateNftsTransactionBody\n    int32 internal constant MISSING_SERIAL_NUMBERS = 336;\n\n    /// Admin key is not set on token\n    int32 internal constant TOKEN_HAS_NO_ADMIN_KEY = 337;\n\n    /// A transaction failed because the consensus node identified is deleted from the address book.\n    int32 internal constant NODE_DELETED = 338;\n\n    /// A transaction failed because the consensus node identified is not valid or does not exist in state.\n    int32 internal constant INVALID_NODE_ID = 339;\n\n    /// A transaction failed because one or more entries in the list of service endpoints for the `gossip_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port.\n    int32 internal constant INVALID_GOSSIP_ENDPOINT = 340;\n\n    /// A transaction failed because the node account identifier provided does not exist or is not valid.<br/> One common source of this error is providing a node account identifier using the \"alias\" form rather than \"numeric\" form.\n    int32 internal constant INVALID_NODE_ACCOUNT_ID = 341;\n\n    /// A transaction failed because the description field cannot be encoded as UTF-8 or is more than 100 bytes when encoded.\n    int32 internal constant INVALID_NODE_DESCRIPTION = 342;\n\n    /// A transaction failed because one or more entries in the list of service endpoints for the `service_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port.\n    int32 internal constant INVALID_SERVICE_ENDPOINT = 343;\n\n    /// A transaction failed because the TLS certificate provided for the node is missing or invalid. <p> #### Probable Causes The certificate MUST be a TLS certificate of a type permitted for gossip signatures.<br/> The value presented MUST be a UTF-8 NFKD encoding of the TLS certificate.<br/> The certificate encoded MUST be in PEM format.<br/> The `gossip_ca_certificate` field is REQUIRED and MUST NOT be empty.\n    int32 internal constant INVALID_GOSSIP_CA_CERTIFICATE = 344;\n\n    /// A transaction failed because the hash provided for the gRPC certificate is present but invalid. <p> #### Probable Causes The `grpc_certificate_hash` MUST be a SHA-384 hash.<br/> The input hashed MUST be a UTF-8 NFKD encoding of the actual TLS certificate.<br/> The certificate to be encoded MUST be in PEM format.\n    int32 internal constant INVALID_GRPC_CERTIFICATE = 345;\n\n    /// The maximum automatic associations value is not valid.<br/> The most common cause for this error is a value less than `-1`.\n    int32 internal constant INVALID_MAX_AUTO_ASSOCIATIONS = 346;\n\n    /// The maximum number of nodes allowed in the address book have been created.\n    int32 internal constant MAX_NODES_CREATED = 347;\n\n    /// In ServiceEndpoint, domain_name and ipAddressV4 are mutually exclusive\n    int32 internal constant IP_FQDN_CANNOT_BE_SET_FOR_SAME_ENDPOINT = 348;\n\n    /// Fully qualified domain name is not allowed in gossip_endpoint\n    int32 internal constant GOSSIP_ENDPOINT_CANNOT_HAVE_FQDN = 349;\n\n    /// In ServiceEndpoint, domain_name size too large\n    int32 internal constant FQDN_SIZE_TOO_LARGE = 350;\n\n    /// ServiceEndpoint is invalid\n    int32 internal constant INVALID_ENDPOINT = 351;\n\n    /// The number of gossip endpoints exceeds the limit\n    int32 internal constant GOSSIP_ENDPOINTS_EXCEEDED_LIMIT = 352;\n\n    /// The transaction attempted to use duplicate `TokenReference`.<br/> This affects `TokenReject` attempting to reject same token reference more than once.\n    int32 internal constant TOKEN_REFERENCE_REPEATED = 353;\n\n    /// The account id specified as the owner in `TokenReject` is invalid or does not exist.\n    int32 internal constant INVALID_OWNER_ID = 354;\n\n    /// The transaction attempted to use more than the allowed number of `TokenReference`.\n    int32 internal constant TOKEN_REFERENCE_LIST_SIZE_LIMIT_EXCEEDED = 355;\n\n    /// The number of service endpoints exceeds the limit\n    int32 internal constant SERVICE_ENDPOINTS_EXCEEDED_LIMIT = 356;\n\n    /// The IPv4 address is invalid\n    int32 internal constant INVALID_IPV4_ADDRESS = 357;\n\n    /// The transaction attempted to use empty `TokenReference` list.\n    int32 internal constant EMPTY_TOKEN_REFERENCE_LIST = 358;\n\n    /// The node account is not allowed to be updated\n    int32 internal constant UPDATE_NODE_ACCOUNT_NOT_ALLOWED = 359;\n\n    /// The token has no metadata or supply key\n    int32 internal constant TOKEN_HAS_NO_METADATA_OR_SUPPLY_KEY = 360;\n\n    /// The list of `PendingAirdropId`s is empty and MUST NOT be empty.\n    int32 internal constant EMPTY_PENDING_AIRDROP_ID_LIST = 361;\n\n    /// A `PendingAirdropId` is repeated in a `claim` or `cancel` transaction.\n    int32 internal constant PENDING_AIRDROP_ID_REPEATED = 362;\n\n    /// The number of `PendingAirdropId` values in the list exceeds the maximum allowable number.\n    int32 internal constant PENDING_AIRDROP_ID_LIST_TOO_LONG = 363;\n\n    /// A pending airdrop already exists for the specified NFT.\n    int32 internal constant PENDING_NFT_AIRDROP_ALREADY_EXISTS = 364;\n\n    /// The identified account is sender for one or more pending airdrop(s) and cannot be deleted. <p> The requester SHOULD cancel all pending airdrops before resending this transaction.\n    int32 internal constant ACCOUNT_HAS_PENDING_AIRDROPS = 365;\n\n    /// Consensus throttle did not allow execution of this transaction.<br/> The transaction should be retried after a modest delay.\n    int32 internal constant THROTTLED_AT_CONSENSUS = 366;\n\n    /// The provided pending airdrop id is invalid.<br/> This pending airdrop MAY already be claimed or cancelled. <p> The client SHOULD query a mirror node to determine the current status of the pending airdrop.\n    int32 internal constant INVALID_PENDING_AIRDROP_ID = 367;\n\n    /// The token to be airdropped has a fallback royalty fee and cannot be sent or claimed via an airdrop transaction.\n    int32 internal constant TOKEN_AIRDROP_WITH_FALLBACK_ROYALTY = 368;\n\n    /// This airdrop claim is for a pending airdrop with an invalid token.<br/> The token might be deleted, or the sender may not have enough tokens to fulfill the offer. <p> The client SHOULD query mirror node to determine the status of the pending airdrop and whether the sender can fulfill the offer.\n    int32 internal constant INVALID_TOKEN_IN_PENDING_AIRDROP = 369;\n\n    /// A scheduled transaction configured to wait for expiry to execute was given an expiry time at which there is already too many transactions scheduled to expire; its creation must be retried with a different expiry.\n    int32 internal constant SCHEDULE_EXPIRY_IS_BUSY = 370;\n\n    /// The provided gRPC certificate hash is invalid.\n    int32 internal constant INVALID_GRPC_CERTIFICATE_HASH = 371;\n\n    /// A scheduled transaction configured to wait for expiry to execute was not given an explicit expiration time.\n    int32 internal constant MISSING_EXPIRY_TIME = 372;\n\n    /// A contract operation attempted to schedule another transaction after it had already scheduled a recursive contract call.\n    int32 internal constant NO_SCHEDULING_ALLOWED_AFTER_SCHEDULED_RECURSION = 373;\n\n    /// A contract can schedule recursive calls a finite number of times (this is approximately four million times with typical network configuration.)\n    int32 internal constant RECURSIVE_SCHEDULING_LIMIT_REACHED = 374;\n\n    /// The target network is waiting for the ledger ID to be set, which is a side effect of finishing the network's TSS construction.\n    int32 internal constant WAITING_FOR_LEDGER_ID = 375;\n\n    /// The provided fee exempt key list size exceeded the limit.\n    int32 internal constant MAX_ENTRIES_FOR_FEE_EXEMPT_KEY_LIST_EXCEEDED = 376;\n\n    /// The provided fee exempt key list contains duplicated keys.\n    int32 internal constant FEE_EXEMPT_KEY_LIST_CONTAINS_DUPLICATED_KEYS = 377;\n\n    /// The provided fee exempt key list contains an invalid key.\n    int32 internal constant INVALID_KEY_IN_FEE_EXEMPT_KEY_LIST = 378;\n\n    /// The provided fee schedule key contains an invalid key.\n    int32 internal constant INVALID_FEE_SCHEDULE_KEY = 379;\n\n    /// If a fee schedule key is not set when we create a topic we cannot add it on update.\n    int32 internal constant FEE_SCHEDULE_KEY_CANNOT_BE_UPDATED = 380;\n\n    /// If the topic's custom fees are updated the topic SHOULD have a fee schedule key\n    int32 internal constant FEE_SCHEDULE_KEY_NOT_SET = 381;\n\n    /// The fee amount is exceeding the amount that the payer is willing to pay.\n    int32 internal constant MAX_CUSTOM_FEE_LIMIT_EXCEEDED = 382;\n\n    /// There are no corresponding custom fees.\n    int32 internal constant NO_VALID_MAX_CUSTOM_FEE = 383;\n\n    /// The provided list contains invalid max custom fee.\n    int32 internal constant INVALID_MAX_CUSTOM_FEES = 384;\n\n    /// The provided max custom fee list contains fees with duplicate denominations.\n    int32 internal constant DUPLICATE_DENOMINATION_IN_MAX_CUSTOM_FEE_LIST = 385;\n\n    /// The provided max custom fee list contains fees with duplicate account id.\n    int32 internal constant DUPLICATE_ACCOUNT_ID_IN_MAX_CUSTOM_FEE_LIST = 386;\n\n    /// Max custom fees list is not supported for this operation.\n    int32 internal constant MAX_CUSTOM_FEES_IS_NOT_SUPPORTED = 387;\n\n}"},"app/contracts/HederaTokenService.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.5.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"./HederaResponseCodes.sol\";\nimport \"./IHederaTokenService.sol\";\n\nabstract contract HederaTokenService {\n    address constant precompileAddress = address(0x167);\n    // 90 days in seconds\n    int32 constant defaultAutoRenewPeriod = 7776000;\n\n    modifier nonEmptyExpiry(IHederaTokenService.HederaToken memory token)\n    {\n        if (token.expiry.second == 0 && token.expiry.autoRenewPeriod == 0) {\n            token.expiry.autoRenewPeriod = defaultAutoRenewPeriod;\n        }\n        _;\n    }\n\n    /// Generic event\n    event CallResponseEvent(bool, bytes);\n\n    /// Performs transfers among combinations of tokens and hbars\n    /// @param transferList the list of hbar transfers to do\n    /// @param tokenTransfers the list of transfers to do\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\n    function cryptoTransfer(IHederaTokenService.TransferList memory transferList, IHederaTokenService.TokenTransferList[] memory tokenTransfers) internal\n    returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.cryptoTransfer.selector, transferList, tokenTransfers));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Mints an amount of the token to the defined treasury account\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\n    ///               token. The new supply must be lower than 2^63.\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n    ///                 Maximum allowed size of each metadata is 100 bytes\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, otherwise empty.\n    function mintToken(address token, int64 amount, bytes[] memory metadata) internal\n    returns (int responseCode, int64 newTotalSupply, int64[] memory serialNumbers)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.mintToken.selector,\n            token, amount, metadata));\n        (responseCode, newTotalSupply, serialNumbers) =\n        success\n        ? abi.decode(result, (int32, int64, int64[]))\n        : (HederaResponseCodes.UNKNOWN, int64(0), new int64[](0));\n    }\n\n    /// Burns an amount of the token from the defined treasury account\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n    ///                account (0; balance], represented in the lowest denomination.\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    function burnToken(address token, int64 amount, int64[] memory serialNumbers) internal\n    returns (int responseCode, int64 newTotalSupply)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.burnToken.selector,\n            token, amount, serialNumbers));\n        (responseCode, newTotalSupply) =\n        success\n        ? abi.decode(result, (int32, int64))\n        : (HederaResponseCodes.UNKNOWN, int64(0));\n    }\n\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\n    ///  Account's key or called from the accounts contract key\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    ///  If an association between the provided account and any of the tokens already exists, the\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n    ///  On success, associations between the provided account and tokens are made and the account is\n    ///    ready to interact with the tokens.\n    /// @param account The account to be associated with the provided tokens\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n    ///               token type\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function associateTokens(address account, address[] memory tokens) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.associateTokens.selector,\n            account, tokens));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    function associateToken(address account, address token) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.associateToken.selector,\n            account, token));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\n    /// Account's key.\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    /// If an association between the provided account and any of the tokens does not exist, the\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n    /// not zero.\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n    /// On success, associations between the provided account and tokens are removed.\n    /// @param account The account to be dissociated from the provided tokens\n    /// @param tokens The tokens to be dissociated from the provided account.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function dissociateTokens(address account, address[] memory tokens) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.dissociateTokens.selector,\n            account, tokens));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    function dissociateToken(address account, address token) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.dissociateToken.selector,\n            account, token));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleToken(\n        IHederaTokenService.HederaToken memory token,\n        int64 initialTotalSupply,\n        int32 decimals) nonEmptyExpiry(token)\n    internal returns (int responseCode, address tokenAddress) {\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\n            abi.encodeWithSelector(IHederaTokenService.createFungibleToken.selector,\n            token, initialTotalSupply, decimals));\n\n\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param fractionalFees list of fractional fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleTokenWithCustomFees(\n        IHederaTokenService.HederaToken memory token,\n        int64 initialTotalSupply,\n        int32 decimals,\n        IHederaTokenService.FixedFee[] memory fixedFees,\n        IHederaTokenService.FractionalFee[] memory fractionalFees) nonEmptyExpiry(token)\n    internal returns (int responseCode, address tokenAddress) {\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\n            abi.encodeWithSelector(IHederaTokenService.createFungibleTokenWithCustomFees.selector,\n            token, initialTotalSupply, decimals, fixedFees, fractionalFees));\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleToken(IHederaTokenService.HederaToken memory token) nonEmptyExpiry(token)\n    internal returns (int responseCode, address tokenAddress) {\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\n            abi.encodeWithSelector(IHederaTokenService.createNonFungibleToken.selector, token));\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param royaltyFees list of royalty fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleTokenWithCustomFees(\n        IHederaTokenService.HederaToken memory token,\n        IHederaTokenService.FixedFee[] memory fixedFees,\n        IHederaTokenService.RoyaltyFee[] memory royaltyFees) nonEmptyExpiry(token)\n    internal returns (int responseCode, address tokenAddress) {\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\n            abi.encodeWithSelector(IHederaTokenService.createNonFungibleTokenWithCustomFees.selector,\n            token, fixedFees, royaltyFees));\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Retrieves fungible specific token info for a fungible token\n    /// @param token The ID of the token as a solidity address\n    /// @dev This function reverts if the call is not successful\n    function getFungibleTokenInfo(address token) internal returns (int responseCode, IHederaTokenService.FungibleTokenInfo memory tokenInfo) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getFungibleTokenInfo.selector, token));\n        IHederaTokenService.FungibleTokenInfo memory defaultTokenInfo;\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.FungibleTokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\n    }\n\n    /// Retrieves general token info for a given token\n    /// @param token The ID of the token as a solidity address\n    /// @dev This function reverts if the call is not successful\n    function getTokenInfo(address token) internal returns (int responseCode, IHederaTokenService.TokenInfo memory tokenInfo) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getTokenInfo.selector, token));\n        IHederaTokenService.TokenInfo memory defaultTokenInfo;\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.TokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\n    }\n\n    /// Retrieves non-fungible specific token info for a given NFT\n    /// @param token The ID of the token as a solidity address\n    /// @dev This function reverts if the call is not successful\n    function getNonFungibleTokenInfo(address token, int64 serialNumber) internal returns (int responseCode, IHederaTokenService.NonFungibleTokenInfo memory tokenInfo) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getNonFungibleTokenInfo.selector, token, serialNumber));\n        IHederaTokenService.NonFungibleTokenInfo memory defaultTokenInfo;\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.NonFungibleTokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\n    }\n\n    /// Query token custom fees\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return fixedFees Set of fixed fees for `token`\n    /// @return fractionalFees Set of fractional fees for `token`\n    /// @return royaltyFees Set of royalty fees for `token`\n    /// @dev This function reverts if the call is not successful\n    function getTokenCustomFees(address token) internal returns (int64 responseCode,\n        IHederaTokenService.FixedFee[] memory fixedFees,\n        IHederaTokenService.FractionalFee[] memory fractionalFees,\n        IHederaTokenService.RoyaltyFee[] memory royaltyFees) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getTokenCustomFees.selector, token));\n        IHederaTokenService.FixedFee[] memory defaultFixedFees;\n        IHederaTokenService.FractionalFee[] memory defaultFractionalFees;\n        IHederaTokenService.RoyaltyFee[] memory defaultRoyaltyFees;\n        (responseCode, fixedFees, fractionalFees, royaltyFees) =\n        success ? abi.decode\n        (result, (int32, IHederaTokenService.FixedFee[], IHederaTokenService.FractionalFee[], IHederaTokenService.RoyaltyFee[]))\n        : (HederaResponseCodes.UNKNOWN, defaultFixedFees, defaultFractionalFees, defaultRoyaltyFees);\n    }\n\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n    /// again it overwrites the current allowance with value.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The hedera token address to approve\n    /// @param spender the account authorized to spend\n    /// @param amount the amount of tokens authorized to spend.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approve(address token, address spender, uint256 amount) internal returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.approve.selector,\n            token, spender, amount));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Transfers `amount` tokens from `from` to `to` using the\n    //  allowance mechanism. `amount` is then deducted from the caller's allowance.\n    /// Only applicable to fungible tokens\n    /// @param token The address of the fungible Hedera token to transfer\n    /// @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\n    /// @param to The account address of the receiver of the `amount` tokens\n    /// @param amount The amount of tokens to transfer from `from` to `to`\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function transferFrom(address token, address from, address to, uint256 amount) external returns (int64 responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.transferFrom.selector,\n            token, from, to, amount));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\n    /// Only applicable to NFT tokens\n    /// @param token The address of the non-fungible Hedera token to transfer\n    /// @param from The account address of the owner of `serialNumber` of `token`\n    /// @param to The account address of the receiver of `serialNumber`\n    /// @param serialNumber The NFT serial number to transfer\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function transferFromNFT(address token, address from, address to, uint256 serialNumber) external returns (int64 responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.transferFromNFT.selector,\n            token, from, to, serialNumber));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Returns the amount which spender is still allowed to withdraw from owner.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The Hedera token address to check the allowance of\n    /// @param owner the owner of the tokens to be spent\n    /// @param spender the spender of the tokens\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function allowance(address token, address owner, address spender) internal returns (int responseCode, uint256 amount)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.allowance.selector,\n            token, owner, spender));\n        (responseCode, amount) = success ? abi.decode(result, (int32, uint256)) : (HederaResponseCodes.UNKNOWN, 0);\n    }\n\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n    /// @param serialNumber The NFT serial number  to approve\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approveNFT(address token, address approved, uint256 serialNumber) internal returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.approveNFT.selector,\n            token, approved, serialNumber));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Get the approved address for a single NFT\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to check approval\n    /// @param serialNumber The NFT to find the approved address for\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved The approved address for this NFT, or the zero address if there is none\n    function getApproved(address token, uint256 serialNumber) internal returns (int responseCode, address approved)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getApproved.selector,\n            token, serialNumber));\n        (responseCode, approved) =\n        success\n        ? abi.decode(result, (int32, address))\n        : (HederaResponseCodes.UNKNOWN, address(0));\n    }\n\n    /// Query if token account is frozen\n    /// @param token The token address to check\n    /// @param account The account address associated with the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return frozen True if `account` is frozen for `token`\n    /// @dev This function reverts if the call is not successful\n    function isFrozen(address token, address account) internal returns (int64 responseCode, bool frozen){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.isFrozen.selector, token, account));\n        (responseCode, frozen) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\n    }\n\n    /// Query if token account has kyc granted\n    /// @param token The token address to check\n    /// @param account The account address associated with the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return kycGranted True if `account` has kyc granted for `token`\n    /// @dev This function reverts if the call is not successful\n    function isKyc(address token, address account) internal returns (int64 responseCode, bool kycGranted){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.isKyc.selector, token, account));\n        (responseCode, kycGranted) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\n    }\n\n    /// Operation to freeze token account\n    /// @param token The token address\n    /// @param account The account address to be frozen\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function freezeToken(address token, address account) internal returns (int64 responseCode){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.freezeToken.selector, token, account));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to unfreeze token account\n    /// @param token The token address\n    /// @param account The account address to be unfrozen\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function unfreezeToken(address token, address account) internal returns (int64 responseCode){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.unfreezeToken.selector, token, account));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to grant kyc to token account\n    /// @param token The token address\n    /// @param account The account address to grant kyc\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function grantTokenKyc(address token, address account) internal returns (int64 responseCode){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.grantTokenKyc.selector, token, account));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to revoke kyc to token account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function revokeTokenKyc(address token, address account) internal returns (int64 responseCode){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.revokeTokenKyc.selector, token, account));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Enable or disable approval for a third party (\"operator\") to manage\n    ///  all of `msg.sender`'s assets\n    /// @param token The Hedera NFT token address to approve\n    /// @param operator Address to add to the set of authorized operators\n    /// @param approved True if the operator is approved, false to revoke approval\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function setApprovalForAll(address token, address operator, bool approved) internal returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.setApprovalForAll.selector,\n            token, operator, approved));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Query if an address is an authorized operator for another address\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param owner The address that owns the NFTs\n    /// @param operator The address that acts on behalf of the owner\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\n    function isApprovedForAll(address token, address owner, address operator) internal returns (int responseCode, bool approved)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.isApprovedForAll.selector,\n            token, owner, operator));\n        (responseCode, approved) =\n        success\n        ? abi.decode(result, (int32, bool))\n        : (HederaResponseCodes.UNKNOWN, false);\n    }\n\n    /// Query token default freeze status\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\n    /// @dev This function reverts if the call is not successful\n    function getTokenDefaultFreezeStatus(address token) internal returns (int responseCode, bool defaultFreezeStatus) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getTokenDefaultFreezeStatus.selector, token));\n        (responseCode, defaultFreezeStatus) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\n    }\n\n    /// Query token default kyc status\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\n    /// @dev This function reverts if the call is not successful\n    function getTokenDefaultKycStatus(address token) internal returns (int responseCode, bool defaultKycStatus) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getTokenDefaultKycStatus.selector, token));\n        (responseCode, defaultKycStatus) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\n    }\n\n    /**********************\n     * ABI v1 calls       *\n     **********************/\n\n    /// Initiates a Fungible Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param accountIds account to do a transfer to/from\n    /// @param amounts The amount from the accountId at the same index\n    function transferTokens(address token, address[] memory accountIds, int64[] memory amounts) internal\n    returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.transferTokens.selector,\n            token, accountIds, amounts));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Initiates a Non-Fungable Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param sender the sender of an nft\n    /// @param receiver the receiver of the nft sent by the same index at sender\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\n    function transferNFTs(address token, address[] memory sender, address[] memory receiver, int64[] memory serialNumber)\n    internal returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.transferNFTs.selector,\n            token, sender, receiver, serialNumber));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param receiver The receiver of the transaction\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\n    function transferToken(address token, address sender, address receiver, int64 amount) internal\n    returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.transferToken.selector,\n            token, sender, receiver, amount));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param receiver The receiver of the transaction\n    /// @param serialNumber The serial number of the NFT to transfer.\n    function transferNFT(address token, address sender, address receiver, int64 serialNumber) internal\n    returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.transferNFT.selector,\n            token, sender, receiver, serialNumber));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to pause token\n    /// @param token The token address to be paused\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function pauseToken(address token) internal returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.pauseToken.selector, token));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to unpause token\n    /// @param token The token address to be unpaused\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function unpauseToken(address token) internal returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.unpauseToken.selector, token));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to wipe fungible tokens from account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @param amount The number of tokens to wipe\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function wipeTokenAccount(address token, address account, int64 amount) internal returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.wipeTokenAccount.selector, token, account, amount));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to wipe non fungible tokens from account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @param  serialNumbers The serial numbers of token to wipe\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function wipeTokenAccountNFT(address token, address account, int64[] memory serialNumbers) internal\n    returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.wipeTokenAccountNFT.selector, token, account, serialNumbers));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to delete token\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function deleteToken(address token) internal returns (int responseCode)\n    {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.deleteToken.selector, token));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to update token keys\n    /// @param token The token address\n    /// @param keys The token keys\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenKeys(address token, IHederaTokenService.TokenKey[] memory keys)\n    internal returns (int64 responseCode){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.updateTokenKeys.selector, token, keys));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Query token KeyValue\n    /// @param token The token address to check\n    /// @param keyType The keyType of the desired KeyValue\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return key KeyValue info for key of type `keyType`\n    /// @dev This function reverts if the call is not successful\n    function getTokenKey(address token, uint keyType)\n    internal returns (int64 responseCode, IHederaTokenService.KeyValue memory key){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getTokenKey.selector, token, keyType));\n        IHederaTokenService.KeyValue memory defaultKeyValueInfo;\n        (responseCode, key) = success ? abi.decode(result, (int32,IHederaTokenService.KeyValue) ) : (HederaResponseCodes.UNKNOWN, defaultKeyValueInfo);\n    }\n\n\n    /// Query if valid token found for the given address\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return isTokenFlag True if valid token found for the given address\n    /// @dev This function reverts if the call is not successful\n    function isToken(address token) internal returns (int64 responseCode, bool isTokenFlag) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.isToken.selector, token));\n        (responseCode, isTokenFlag) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\n    }\n\n    /// Query to return the token type for a given address\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\n    /// @dev This function reverts if the call is not successful\n    function getTokenType(address token) internal returns (int64 responseCode, int32 tokenType) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getTokenType.selector, token));\n        (responseCode, tokenType) = success ? abi.decode(result, (int32, int32)) : (HederaResponseCodes.UNKNOWN, - 1);\n    }\n\n    /// Operation to get token expiry info\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return expiryInfo The expiry info of the token\n    /// @dev This function reverts if the call is not successful\n    function getTokenExpiryInfo(address token) internal returns (int responseCode, IHederaTokenService.Expiry memory expiryInfo){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.getTokenExpiryInfo.selector, token));\n        IHederaTokenService.Expiry memory defaultExpiryInfo;\n        (responseCode, expiryInfo) = success ? abi.decode(result, (int32, IHederaTokenService.Expiry)) : (HederaResponseCodes.UNKNOWN, defaultExpiryInfo);\n    }\n\n    /// Operation to update token expiry info\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenExpiryInfo(address token, IHederaTokenService.Expiry memory expiryInfo) internal returns (int responseCode){\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.updateTokenExpiryInfo.selector, token, expiryInfo));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Operation to update token info\n    /// @param token The token address\n    /// @param tokenInfo The hedera token info to update token with\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenInfo(address token, IHederaTokenService.HederaToken memory tokenInfo) internal returns (int responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.updateTokenInfo.selector, token, tokenInfo));\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Redirect for token\n    /// @param token The token address\n    /// @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return response The result of the call that had been encoded and sent for execution.\n    function redirectForToken(address token, bytes memory encodedFunctionSelector) external returns (int responseCode, bytes memory response) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.redirectForToken.selector, token, encodedFunctionSelector)\n        );\n\n        emit CallResponseEvent(success, result);\n        (responseCode, response) = success ? (HederaResponseCodes.SUCCESS, result) : (HederaResponseCodes.UNKNOWN, bytes(\"\"));\n    }\n\n    /// Update the custom fees for a fungible token\n    /// @param token The token address\n    /// @param fixedFees Set of fixed fees for `token`\n    /// @param fractionalFees Set of fractional fees for `token`\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateFungibleTokenCustomFees(address token,  IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.FractionalFee[] memory fractionalFees) internal returns (int64 responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.updateFungibleTokenCustomFees.selector, token, fixedFees, fractionalFees));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// Update the custom fees for a non-fungible token\n    /// @param token The token address\n    /// @param fixedFees Set of fixed fees for `token`\n    /// @param royaltyFees Set of royalty fees for `token`\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateNonFungibleTokenCustomFees(address token, IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.RoyaltyFee[] memory royaltyFees) internal returns (int64 responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.updateNonFungibleTokenCustomFees.selector, token, fixedFees, royaltyFees));\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// @notice Airdrop one or more tokens to one or more accounts\n    /// @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function airdropTokens(IHederaTokenService.TokenTransferList[] memory tokenTransfers) internal returns (int64 responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.airdropTokens.selector, tokenTransfers));\n\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// @notice Cancels pending airdrops that have not yet been claimed\n    /// @param pendingAirdrops Array of pending airdrops to cancel\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function cancelAirdrops(IHederaTokenService.PendingAirdrop[] memory pendingAirdrops) internal returns (int64 responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.cancelAirdrops.selector, pendingAirdrops)\n        );\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// @notice Claims pending airdrops that were sent to the calling account\n    /// @param pendingAirdrops Array of pending airdrops to claim\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function claimAirdrops(IHederaTokenService.PendingAirdrop[] memory pendingAirdrops) internal returns (int64 responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.claimAirdrops.selector, pendingAirdrops)\n        );\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n\n    /// @notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\n    /// @param rejectingAddress The address rejecting the tokens\n    /// @param ftAddresses Array of fungible token addresses to reject\n    /// @param nftIds Array of NFT IDs to reject\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function rejectTokens(address rejectingAddress, address[] memory ftAddresses, IHederaTokenService.NftID[] memory nftIds) internal returns (int64 responseCode) {\n        (bool success, bytes memory result) = precompileAddress.call(\n            abi.encodeWithSelector(IHederaTokenService.rejectTokens.selector, rejectingAddress, ftAddresses, nftIds)\n        );\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\n    }\n}"},"app/contracts/IHederaTokenService.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.9 <0.9.0;\npragma experimental ABIEncoderV2;\n\ninterface IHederaTokenService {\n    /// Transfers cryptocurrency among two or more accounts by making the desired adjustments to their\n    /// balances. Each transfer list can specify up to 10 adjustments. Each negative amount is withdrawn\n    /// from the corresponding account (a sender), and each positive one is added to the corresponding\n    /// account (a receiver). The amounts list must sum to zero. Each amount is a number of tinybars\n    /// (there are 100,000,000 tinybars in one hbar).  If any sender account fails to have sufficient\n    /// hbars, then the entire transaction fails, and none of those transfers occur, though the\n    /// transaction fee is still charged. This transaction must be signed by the keys for all the sending\n    /// accounts, and for any receiving accounts that have receiverSigRequired == true. The signatures\n    /// are in the same order as the accounts, skipping those accounts that don't need a signature.\n    /// @custom:version 0.3.0 previous version did not include isApproval\n    struct AccountAmount {\n        // The Account ID, as a solidity address, that sends/receives cryptocurrency or tokens\n        address accountID;\n\n        // The amount of  the lowest denomination of the given token that\n        // the account sends(negative) or receives(positive)\n        int64 amount;\n\n        // If true then the transfer is expected to be an approved allowance and the\n        // accountID is expected to be the owner. The default is false (omitted).\n        bool isApproval;\n    }\n\n    /// A sender account, a receiver account, and the serial number of an NFT of a Token with\n    /// NON_FUNGIBLE_UNIQUE type. When minting NFTs the sender will be the default AccountID instance\n    /// (0.0.0 aka 0x0) and when burning NFTs, the receiver will be the default AccountID instance.\n    /// @custom:version 0.3.0 previous version did not include isApproval\n    struct NftTransfer {\n        // The solidity address of the sender\n        address senderAccountID;\n\n        // The solidity address of the receiver\n        address receiverAccountID;\n\n        // The serial number of the NFT\n        int64 serialNumber;\n\n        // If true then the transfer is expected to be an approved allowance and the\n        // accountID is expected to be the owner. The default is false (omitted).\n        bool isApproval;\n    }\n\n    struct TokenTransferList {\n        // The ID of the token as a solidity address\n        address token;\n\n        // Applicable to tokens of type FUNGIBLE_COMMON. Multiple list of AccountAmounts, each of which\n        // has an account and amount.\n        AccountAmount[] transfers;\n\n        // Applicable to tokens of type NON_FUNGIBLE_UNIQUE. Multiple list of NftTransfers, each of\n        // which has a sender and receiver account, including the serial number of the NFT\n        NftTransfer[] nftTransfers;\n    }\n\n    struct TransferList {\n        // Multiple list of AccountAmounts, each of which has an account and amount.\n        // Used to transfer hbars between the accounts in the list.\n        AccountAmount[] transfers;\n    }\n\n    /// Expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\n    struct Expiry {\n        // The epoch second at which the token should expire; if an auto-renew account and period are\n        // specified, this is coerced to the current epoch second plus the autoRenewPeriod\n        int64 second;\n\n        // ID of an account which will be automatically charged to renew the token's expiration, at\n        // autoRenewPeriod interval, expressed as a solidity address\n        address autoRenewAccount;\n\n        // The interval at which the auto-renew account will be charged to extend the token's expiry\n        int64 autoRenewPeriod;\n    }\n\n    /// A Key can be a public key from either the Ed25519 or ECDSA(secp256k1) signature schemes, where\n    /// in the ECDSA(secp256k1) case we require the 33-byte compressed form of the public key. We call\n    /// these public keys <b>primitive keys</b>.\n    /// A Key can also be the ID of a smart contract instance, which is then authorized to perform any\n    /// precompiled contract action that requires this key to sign.\n    /// Note that when a Key is a smart contract ID, it <i>doesn't</i> mean the contract with that ID\n    /// will actually create a cryptographic signature. It only means that when the contract calls a\n    /// precompiled contract, the resulting \"child transaction\" will be authorized to perform any action\n    /// controlled by the Key.\n    /// Exactly one of the possible values should be populated in order for the Key to be valid.\n    struct KeyValue {\n\n        // if set to true, the key of the calling Hedera account will be inherited as the token key\n        bool inheritAccountKey;\n\n        // smart contract instance that is authorized as if it had signed with a key\n        address contractId;\n\n        // Ed25519 public key bytes\n        bytes ed25519;\n\n        // Compressed ECDSA(secp256k1) public key bytes\n        bytes ECDSA_secp256k1;\n\n        // A smart contract that, if the recipient of the active message frame, should be treated\n        // as having signed. (Note this does not mean the <i>code being executed in the frame</i>\n        // will belong to the given contract, since it could be running another contract's code via\n        // <tt>delegatecall</tt>. So setting this key is a more permissive version of setting the\n        // contractID key, which also requires the code in the active message frame belong to the\n        // the contract with the given id.)\n        address delegatableContractId;\n    }\n\n    /// A list of token key types the key should be applied to and the value of the key\n    struct TokenKey {\n\n        // bit field representing the key type. Keys of all types that have corresponding bits set to 1\n        // will be created for the token.\n        // 0th bit: adminKey\n        // 1st bit: kycKey\n        // 2nd bit: freezeKey\n        // 3rd bit: wipeKey\n        // 4th bit: supplyKey\n        // 5th bit: feeScheduleKey\n        // 6th bit: pauseKey\n        // 7th bit: ignored\n        uint keyType;\n\n        // the value that will be set to the key type\n        KeyValue key;\n    }\n\n    /// Basic properties of a Hedera Token - name, symbol, memo, tokenSupplyType, maxSupply,\n    /// treasury, freezeDefault. These properties are related both to Fungible and NFT token types.\n    struct HederaToken {\n        // The publicly visible name of the token. The token name is specified as a Unicode string.\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\n        string name;\n\n        // The publicly visible token symbol. The token symbol is specified as a Unicode string.\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\n        string symbol;\n\n        // The ID of the account which will act as a treasury for the token as a solidity address.\n        // This account will receive the specified initial supply or the newly minted NFTs in\n        // the case for NON_FUNGIBLE_UNIQUE Type\n        address treasury;\n\n        // The memo associated with the token (UTF-8 encoding max 100 bytes)\n        string memo;\n\n        // IWA compatibility. Specified the token supply type. Defaults to INFINITE\n        bool tokenSupplyType;\n\n        // IWA Compatibility. Depends on TokenSupplyType. For tokens of type FUNGIBLE_COMMON - the\n        // maximum number of tokens that can be in circulation. For tokens of type NON_FUNGIBLE_UNIQUE -\n        // the maximum number of NFTs (serial numbers) that can be minted. This field can never be changed!\n        int64 maxSupply;\n\n        // The default Freeze status (frozen or unfrozen) of Hedera accounts relative to this token. If\n        // true, an account must be unfrozen before it can receive the token\n        bool freezeDefault;\n\n        // list of keys to set to the token - removed due to Solidity compiler limitation\n        // TokenKey[] tokenKeys;\n\n        // expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\n        Expiry expiry;\n    }\n\n    /// Additional post creation fungible and non fungible properties of a Hedera Token.\n    struct TokenInfo {\n        /// Basic properties of a Hedera Token\n        HederaToken token;\n\n        /// The number of tokens (fungible) or serials (non-fungible) of the token\n        int64 totalSupply;\n\n        /// Specifies whether the token is deleted or not\n        bool deleted;\n\n        /// Specifies whether the token kyc was defaulted with KycNotApplicable (true) or Revoked (false)\n        bool defaultKycStatus;\n\n        /// Specifies whether the token is currently paused or not\n        bool pauseStatus;\n\n        /// The fixed fees collected when transferring the token\n        FixedFee[] fixedFees;\n\n        /// The fractional fees collected when transferring the token\n        FractionalFee[] fractionalFees;\n\n        /// The royalty fees collected when transferring the token\n        RoyaltyFee[] royaltyFees;\n\n        /// The ID of the network ledger\n        string ledgerId;\n    }\n\n    /// Additional fungible properties of a Hedera Token.\n    struct FungibleTokenInfo {\n        /// The shared hedera token info\n        TokenInfo tokenInfo;\n\n        /// The number of decimal places a token is divisible by\n        int32 decimals;\n    }\n\n    /// Additional non fungible properties of a Hedera Token.\n    struct NonFungibleTokenInfo {\n        /// The shared hedera token info\n        TokenInfo tokenInfo;\n\n        /// The serial number of the nft\n        int64 serialNumber;\n\n        /// The account id specifying the owner of the non fungible token\n        address ownerId;\n\n        /// The epoch second at which the token was created.\n        int64 creationTime;\n\n        /// The unique metadata of the NFT\n        bytes metadata;\n\n        /// The account id specifying an account that has been granted spending permissions on this nft\n        address spenderId;\n    }\n\n    /// A fixed number of units (hbar or token) to assess as a fee during a transfer of\n    /// units of the token to which this fixed fee is attached. The denomination of\n    /// the fee depends on the values of tokenId, useHbarsForPayment and\n    /// useCurrentTokenForPayment. Exactly one of the values should be set.\n    struct FixedFee {\n\n        int64 amount;\n\n        // Specifies ID of token that should be used for fixed fee denomination\n        address tokenId;\n\n        // Specifies this fixed fee should be denominated in Hbar\n        bool useHbarsForPayment;\n\n        // Specifies this fixed fee should be denominated in the Token currently being created\n        bool useCurrentTokenForPayment;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /// A fraction of the transferred units of a token to assess as a fee. The amount assessed will never\n    /// be less than the given minimumAmount, and never greater than the given maximumAmount.  The\n    /// denomination is always units of the token to which this fractional fee is attached.\n    struct FractionalFee {\n        // A rational number's numerator, used to set the amount of a value transfer to collect as a custom fee\n        int64 numerator;\n\n        // A rational number's denominator, used to set the amount of a value transfer to collect as a custom fee\n        int64 denominator;\n\n        // The minimum amount to assess\n        int64 minimumAmount;\n\n        // The maximum amount to assess (zero implies no maximum)\n        int64 maximumAmount;\n        bool netOfTransfers;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /// A fee to assess during a transfer that changes ownership of an NFT. Defines the fraction of\n    /// the fungible value exchanged for an NFT that the ledger should collect as a royalty. (\"Fungible\n    /// value\" includes both ℏ and units of fungible HTS tokens.) When the NFT sender does not receive\n    /// any fungible value, the ledger will assess the fallback fee, if present, to the new NFT owner.\n    /// Royalty fees can only be added to tokens of type type NON_FUNGIBLE_UNIQUE.\n    struct RoyaltyFee {\n        // A fraction's numerator of fungible value exchanged for an NFT to collect as royalty\n        int64 numerator;\n\n        // A fraction's denominator of fungible value exchanged for an NFT to collect as royalty\n        int64 denominator;\n\n        // If present, the fee to assess to the NFT receiver when no fungible value\n        // is exchanged with the sender. Consists of:\n        // amount: the amount to charge for the fee\n        // tokenId: Specifies ID of token that should be used for fixed fee denomination\n        // useHbarsForPayment: Specifies this fee should be denominated in Hbar\n        int64 amount;\n        address tokenId;\n        bool useHbarsForPayment;\n\n        // The ID of the account to receive the custom fee, expressed as a solidity address\n        address feeCollector;\n    }\n\n    /// Represents a pending airdrop of a token or NFT to a receiver\n    /// @param sender The address of the account sending the airdrop\n    /// @param receiver The address of the account receiving the airdrop\n    /// @param token The address of the token being airdropped\n    /// @param serial For NFT airdrops, the serial number of the NFT. For fungible tokens, this should be 0\n    struct PendingAirdrop {\n        address sender;\n        address receiver;\n        address token;\n        int64 serial;\n    }\n\n    /// Represents a unique NFT by its token address and serial number\n    /// @param nft The address of the NFT token\n    /// @param serial The serial number that uniquely identifies this NFT within its token type\n    struct NftID {\n        address nft;\n        int64 serial;\n    }\n\n    /**********************\n     * Direct HTS Calls   *\n     **********************/\n\n    /// Performs transfers among combinations of tokens and hbars\n    /// @param transferList the list of hbar transfers to do\n    /// @param tokenTransfers the list of token transfers to do\n    /// @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\n    function cryptoTransfer(TransferList memory transferList, TokenTransferList[] memory tokenTransfers)\n        external\n        returns (int64 responseCode);\n\n    /// Mints an amount of the token to the defined treasury account\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\n    ///               token. The new supply must be lower than 2^63.\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n    ///                 Maximum allowed size of each metadata is 100 bytes\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty.\n    function mintToken(\n        address token,\n        int64 amount,\n        bytes[] memory metadata\n    )\n        external\n        returns (\n            int64 responseCode,\n            int64 newTotalSupply,\n            int64[] memory serialNumbers\n        );\n\n    /// Burns an amount of the token from the defined treasury account\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\n    ///              INVALID_TOKEN_ID\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n    ///                account (0; balance], represented in the lowest denomination.\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n    function burnToken(\n        address token,\n        int64 amount,\n        int64[] memory serialNumbers\n    ) external returns (int64 responseCode, int64 newTotalSupply);\n\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\n    ///  Account's key or called from the accounts contract key\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    ///  If an association between the provided account and any of the tokens already exists, the\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n    ///  On success, associations between the provided account and tokens are made and the account is\n    ///    ready to interact with the tokens.\n    /// @param account The account to be associated with the provided tokens\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n    ///               token type\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function associateTokens(address account, address[] memory tokens)\n        external\n        returns (int64 responseCode);\n\n    /// Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\n    /// @param account The account to be associated with the provided token\n    /// @param token The token to be associated with the provided account\n    function associateToken(address account, address token)\n        external\n        returns (int64 responseCode);\n\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\n    /// Account's key.\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n    /// If an association between the provided account and any of the tokens does not exist, the\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n    /// not zero.\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n    /// On success, associations between the provided account and tokens are removed.\n    /// @param account The account to be dissociated from the provided tokens\n    /// @param tokens The tokens to be dissociated from the provided account.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function dissociateTokens(address account, address[] memory tokens)\n        external\n        returns (int64 responseCode);\n\n    /// Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\n    /// @param account The account to be associated with the provided token\n    /// @param token The token to be associated with the provided account\n    function dissociateToken(address account, address token)\n        external\n        returns (int64 responseCode);\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleToken(\n        HederaToken memory token,\n        int64 initialTotalSupply,\n        int32 decimals\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /// Creates a Fungible Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n    /// @param decimals the number of decimal places a token is divisible by.\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param fractionalFees list of fractional fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createFungibleTokenWithCustomFees(\n        HederaToken memory token,\n        int64 initialTotalSupply,\n        int32 decimals,\n        FixedFee[] memory fixedFees,\n        FractionalFee[] memory fractionalFees\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleToken(HederaToken memory token)\n        external\n        payable\n        returns (int64 responseCode, address tokenAddress);\n\n    /// Creates an Non Fungible Unique Token with the specified properties\n    /// @param token the basic properties of the token being created\n    /// @param fixedFees list of fixed fees to apply to the token\n    /// @param royaltyFees list of royalty fees to apply to the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenAddress the created token's address\n    function createNonFungibleTokenWithCustomFees(\n        HederaToken memory token,\n        FixedFee[] memory fixedFees,\n        RoyaltyFee[] memory royaltyFees\n    ) external payable returns (int64 responseCode, address tokenAddress);\n\n    /**********************\n     * ABIV1 calls        *\n     **********************/\n\n    /// Initiates a Fungible Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param accountId account to do a transfer to/from\n    /// @param amount The amount from the accountId at the same index\n    function transferTokens(\n        address token,\n        address[] memory accountId,\n        int64[] memory amount\n    ) external returns (int64 responseCode);\n\n    /// Initiates a Non-Fungable Token Transfer\n    /// @param token The ID of the token as a solidity address\n    /// @param sender the sender of an nft\n    /// @param receiver the receiver of the nft sent by the same index at sender\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\n    function transferNFTs(\n        address token,\n        address[] memory sender,\n        address[] memory receiver,\n        int64[] memory serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param recipient The receiver of the transaction\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\n    function transferToken(\n        address token,\n        address sender,\n        address recipient,\n        int64 amount\n    ) external returns (int64 responseCode);\n\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n    /// (positive amount) or receiving (negative amount)\n    /// @param token The token to transfer to/from\n    /// @param sender The sender for the transaction\n    /// @param recipient The receiver of the transaction\n    /// @param serialNumber The serial number of the NFT to transfer.\n    function transferNFT(\n        address token,\n        address sender,\n        address recipient,\n        int64 serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n    /// again it overwrites the current allowance with value.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The hedera token address to approve\n    /// @param spender the account address authorized to spend\n    /// @param amount the amount of tokens authorized to spend.\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approve(\n        address token,\n        address spender,\n        uint256 amount\n    ) external returns (int64 responseCode);\n\n    /// Transfers `amount` tokens from `from` to `to` using the\n    //  allowance mechanism. `amount` is then deducted from the caller's allowance.\n    /// Only applicable to fungible tokens\n    /// @param token The address of the fungible Hedera token to transfer\n    /// @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\n    /// @param to The account address of the receiver of the `amount` tokens\n    /// @param amount The amount of tokens to transfer from `from` to `to`\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function transferFrom(address token, address from, address to, uint256 amount) external returns (int64 responseCode);\n\n    /// Returns the amount which spender is still allowed to withdraw from owner.\n    /// Only Applicable to Fungible Tokens\n    /// @param token The Hedera token address to check the allowance of\n    /// @param owner the owner of the tokens to be spent\n    /// @param spender the spender of the tokens\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return allowance The amount which spender is still allowed to withdraw from owner.\n    function allowance(\n        address token,\n        address owner,\n        address spender\n    ) external returns (int64 responseCode, uint256 allowance);\n\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n    /// @param serialNumber The NFT serial number  to approve\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function approveNFT(\n        address token,\n        address approved,\n        uint256 serialNumber\n    ) external returns (int64 responseCode);\n\n    /// Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\n    /// Only applicable to NFT tokens\n    /// @param token The address of the non-fungible Hedera token to transfer\n    /// @param from The account address of the owner of `serialNumber` of `token`\n    /// @param to The account address of the receiver of `serialNumber`\n    /// @param serialNumber The NFT serial number to transfer\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function transferFromNFT(address token, address from, address to, uint256 serialNumber) external returns (int64 responseCode);\n\n    /// Get the approved address for a single NFT\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to check approval\n    /// @param serialNumber The NFT to find the approved address for\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved The approved address for this NFT, or the zero address if there is none\n    function getApproved(address token, uint256 serialNumber)\n        external\n        returns (int64 responseCode, address approved);\n\n    /// Enable or disable approval for a third party (\"operator\") to manage\n    ///  all of `msg.sender`'s assets\n    /// @param token The Hedera NFT token address to approve\n    /// @param operator Address to add to the set of authorized operators\n    /// @param approved True if the operator is approved, false to revoke approval\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function setApprovalForAll(\n        address token,\n        address operator,\n        bool approved\n    ) external returns (int64 responseCode);\n\n    /// Query if an address is an authorized operator for another address\n    /// Only Applicable to NFT Tokens\n    /// @param token The Hedera NFT token address to approve\n    /// @param owner The address that owns the NFTs\n    /// @param operator The address that acts on behalf of the owner\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\n    function isApprovedForAll(\n        address token,\n        address owner,\n        address operator\n    ) external returns (int64 responseCode, bool approved);\n\n    /// Query if token account is frozen\n    /// @param token The token address to check\n    /// @param account The account address associated with the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return frozen True if `account` is frozen for `token`\n    function isFrozen(address token, address account)\n        external\n        returns (int64 responseCode, bool frozen);\n\n    /// Query if token account has kyc granted\n    /// @param token The token address to check\n    /// @param account The account address associated with the token\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return kycGranted True if `account` has kyc granted for `token`\n    function isKyc(address token, address account)\n        external\n        returns (int64 responseCode, bool kycGranted);\n\n    /// Operation to delete token\n    /// @param token The token address to be deleted\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function deleteToken(address token) external returns (int64 responseCode);\n\n    /// Query token custom fees\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return fixedFees Set of fixed fees for `token`\n    /// @return fractionalFees Set of fractional fees for `token`\n    /// @return royaltyFees Set of royalty fees for `token`\n    function getTokenCustomFees(address token)\n        external\n        returns (int64 responseCode, FixedFee[] memory fixedFees, FractionalFee[] memory fractionalFees, RoyaltyFee[] memory royaltyFees);\n\n    /// Query token default freeze status\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\n    function getTokenDefaultFreezeStatus(address token)\n        external\n        returns (int64 responseCode, bool defaultFreezeStatus);\n\n    /// Query token default kyc status\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\n    function getTokenDefaultKycStatus(address token)\n        external\n        returns (int64 responseCode, bool defaultKycStatus);\n\n    /// Query token expiry info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return expiry Expiry info for `token`\n    function getTokenExpiryInfo(address token)\n        external\n        returns (int64 responseCode, Expiry memory expiry);\n\n    /// Query fungible token info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return fungibleTokenInfo FungibleTokenInfo info for `token`\n    function getFungibleTokenInfo(address token)\n        external\n        returns (int64 responseCode, FungibleTokenInfo memory fungibleTokenInfo);\n\n    /// Query token info\n    /// @param token The token address to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenInfo TokenInfo info for `token`\n    function getTokenInfo(address token)\n        external\n        returns (int64 responseCode, TokenInfo memory tokenInfo);\n\n    /// Query token KeyValue\n    /// @param token The token address to check\n    /// @param keyType The keyType of the desired KeyValue\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return key KeyValue info for key of type `keyType`\n    function getTokenKey(address token, uint keyType)\n        external\n        returns (int64 responseCode, KeyValue memory key);\n\n    /// Query non fungible token info\n    /// @param token The token address to check\n    /// @param serialNumber The NFT serialNumber to check\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`\n    function getNonFungibleTokenInfo(address token, int64 serialNumber)\n        external\n        returns (int64 responseCode, NonFungibleTokenInfo memory nonFungibleTokenInfo);\n\n    /// Operation to freeze token account\n    /// @param token The token address\n    /// @param account The account address to be frozen\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function freezeToken(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to unfreeze token account\n    /// @param token The token address\n    /// @param account The account address to be unfrozen\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function unfreezeToken(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to grant kyc to token account\n    /// @param token The token address\n    /// @param account The account address to grant kyc\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function grantTokenKyc(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to revoke kyc to token account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function revokeTokenKyc(address token, address account)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to pause token\n    /// @param token The token address to be paused\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function pauseToken(address token) external returns (int64 responseCode);\n\n    /// Operation to unpause token\n    /// @param token The token address to be unpaused\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function unpauseToken(address token) external returns (int64 responseCode);\n\n    /// Operation to wipe fungible tokens from account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @param amount The number of tokens to wipe\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function wipeTokenAccount(\n        address token,\n        address account,\n        int64 amount\n    ) external returns (int64 responseCode);\n\n    /// Operation to wipe non fungible tokens from account\n    /// @param token The token address\n    /// @param account The account address to revoke kyc\n    /// @param  serialNumbers The serial numbers of token to wipe\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function wipeTokenAccountNFT(\n        address token,\n        address account,\n        int64[] memory serialNumbers\n    ) external returns (int64 responseCode);\n\n    /// Operation to update token info\n    /// @param token The token address\n    /// @param tokenInfo The hedera token info to update token with\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenInfo(address token, HederaToken memory tokenInfo)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to update token expiry info\n    /// @param token The token address\n    /// @param expiryInfo The hedera token expiry info\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenExpiryInfo(address token, Expiry memory expiryInfo)\n        external\n        returns (int64 responseCode);\n\n    /// Operation to update token expiry info\n    /// @param token The token address\n    /// @param keys The token keys\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateTokenKeys(address token, TokenKey[] memory keys)\n        external\n        returns (int64 responseCode);\n\n    /// Query if valid token found for the given address\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return isToken True if valid token found for the given address\n    function isToken(address token)\n        external returns\n        (int64 responseCode, bool isToken);\n\n    /// Query to return the token type for a given address\n    /// @param token The token address\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\n    function getTokenType(address token)\n        external returns\n        (int64 responseCode, int32 tokenType);\n\n    /// Initiates a Redirect For Token\n    /// @param token The token address\n    /// @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    /// @return response The result of the call that had been encoded and sent for execution.\n    function redirectForToken(address token, bytes memory encodedFunctionSelector) external returns (int64 responseCode, bytes memory response);\n\n    /// Update the custom fees for a fungible token\n    /// @param token The token address\n    /// @param fixedFees Set of fixed fees for `token`\n    /// @param fractionalFees Set of fractional fees for `token`\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateFungibleTokenCustomFees(address token,  IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.FractionalFee[] memory fractionalFees) external returns (int64 responseCode);\n\n    /// Update the custom fees for a non-fungible token\n    /// @param token The token address\n    /// @param fixedFees Set of fixed fees for `token`\n    /// @param royaltyFees Set of royalty fees for `token`\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function updateNonFungibleTokenCustomFees(address token, IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.RoyaltyFee[] memory royaltyFees) external returns (int64 responseCode);\n\n    /// @notice Airdrop one or more tokens to one or more accounts\n    /// @notice Recipients will receive tokens in one of these ways:\n    /// @notice     - Immediately if already associated with the token\n    /// @notice     - Immediately with auto-association if they have available slots\n    /// @notice     - As a pending airdrop requiring claim if they have \"receiver signature required\" \n    /// @notice     - As a pending airdrop requiring claim if they have no available auto-association slots\n    /// @notice Immediate airdrops are irreversible, pending airdrops can be canceled\n    /// @notice All transfer fees and auto-renewal rent costs are charged to the transaction submitter\n    /// @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function airdropTokens(TokenTransferList[] memory tokenTransfers) external returns (int64 responseCode);\n\n    /// @notice Cancels pending airdrops that have not yet been claimed\n    /// @param pendingAirdrops Array of pending airdrops to cancel\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function cancelAirdrops(PendingAirdrop[] memory pendingAirdrops) external returns (int64 responseCode);\n\n    /// @notice Claims pending airdrops that were sent to the calling account\n    /// @param pendingAirdrops Array of pending airdrops to claim\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function claimAirdrops(PendingAirdrop[] memory pendingAirdrops) external returns (int64 responseCode);\n\n    /// @notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\n    /// @notice This transfer does not charge any custom fees or royalties defined for the tokens\n    /// @notice For fungible tokens, the requesting account's balance will become 0 and the treasury balance will increase by that amount\n    /// @notice For non-fungible tokens, the requesting account will no longer hold the rejected serial numbers and they will be transferred to the treasury\n    /// @param rejectingAddress The address rejecting the tokens\n    /// @param ftAddresses Array of fungible token addresses to reject\n    /// @param nftIDs Array of NFT IDs to reject\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\n    function rejectTokens(address rejectingAddress, address[] memory ftAddresses, NftID[] memory nftIDs) external returns (int64 responseCode);\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> app/contracts/DepositMinter.sol:75:47:\n   |\n75 |     function testHTSOperations(address token, address account) external returns (\n   |                                               ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2997,"file":"app/contracts/DepositMinter.sol","start":2982},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> app/contracts/DepositMinter.sol:67:5:\n   |\n67 |     function testHTSPrecompile() external view returns (bool initialized, address precompileAddress) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":2847,"file":"app/contracts/DepositMinter.sol","start":2612},"type":"Warning"}],"sources":{"app/contracts/DepositMinter.sol":{"ast":{"absolutePath":"app/contracts/DepositMinter.sol","exportedSymbols":{"DepositMinter":[1280],"HederaResponseCodes":[2666],"HederaTokenService":[5343],"IHederaTokenService":[6223]},"id":1281,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"app/contracts/HederaTokenService.sol","file":"./HederaTokenService.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1281,"sourceUnit":5344,"src":"57:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"app/contracts/HederaResponseCodes.sol","file":"./HederaResponseCodes.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1281,"sourceUnit":2667,"src":"92:35:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5,"name":"HederaTokenService","nameLocations":["365:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":5343,"src":"365:18:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"365:18:0"}],"canonicalName":"DepositMinter","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"129:209:0","text":" @title DepositMinter\n @dev Enhanced token minter that accepts SAUCE/CLXY deposits and mints proportional LYNX tokens\n Using official Hedera inheritance pattern - inherits from HederaTokenService"},"fullyImplemented":true,"id":1280,"linearizedBaseContracts":[1280,5343],"name":"DepositMinter","nameLocation":"348:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"ef1643e4","id":8,"mutability":"mutable","name":"lynxToken","nameLocation":"433:9:0","nodeType":"VariableDeclaration","scope":1280,"src":"418:24:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e860ff74","id":10,"mutability":"mutable","name":"sauceToken","nameLocation":"489:10:0","nodeType":"VariableDeclaration","scope":1280,"src":"474:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"474:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2ac2555f","id":12,"mutability":"mutable","name":"clxyToken","nameLocation":"551:9:0","nodeType":"VariableDeclaration","scope":1280,"src":"536:24:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":14,"mutability":"mutable","name":"admin","nameLocation":"639:5:0","nodeType":"VariableDeclaration","scope":1280,"src":"624:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"ef037593","id":17,"mutability":"constant","name":"SAUCE_RATIO","nameLocation":"730:11:0","nodeType":"VariableDeclaration","scope":1280,"src":"706:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"706:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"744:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"8d6be540","id":20,"mutability":"constant","name":"CLXY_RATIO","nameLocation":"798:10:0","nodeType":"VariableDeclaration","scope":1280,"src":"774:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"4924190c","id":23,"mutability":"constant","name":"HBAR_RATIO","nameLocation":"865:10:0","nodeType":"VariableDeclaration","scope":1280,"src":"841:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"841:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":22,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"878:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":true,"functionSelector":"de97b29f","id":26,"mutability":"constant","name":"SAUCE_DECIMALS","nameLocation":"973:14:0","nodeType":"VariableDeclaration","scope":1280,"src":"951:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":24,"name":"uint8","nodeType":"ElementaryTypeName","src":"951:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"990:1:0","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"public"},{"constant":true,"functionSelector":"96cd51d7","id":29,"mutability":"constant","name":"CLXY_DECIMALS","nameLocation":"1044:13:0","nodeType":"VariableDeclaration","scope":1280,"src":"1022:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":27,"name":"uint8","nodeType":"ElementaryTypeName","src":"1022:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1060:1:0","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"public"},{"constant":true,"functionSelector":"5ea4a9fd","id":32,"mutability":"constant","name":"LYNX_DECIMALS","nameLocation":"1114:13:0","nodeType":"VariableDeclaration","scope":1280,"src":"1092:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":30,"name":"uint8","nodeType":"ElementaryTypeName","src":"1092:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"38","id":31,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"public"},{"anonymous":false,"eventSelector":"651b66d4c82e3fedc9c57c6ff8a4cf8c81b8d1cd432d7297773c6edbf6cfb36a","id":42,"name":"TokensDeposited","nameLocation":"1187:15:0","nodeType":"EventDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1219:4:0","nodeType":"VariableDeclaration","scope":42,"src":"1203:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36,"indexed":false,"mutability":"mutable","name":"sauceAmount","nameLocation":"1233:11:0","nodeType":"VariableDeclaration","scope":42,"src":"1225:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"1225:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38,"indexed":false,"mutability":"mutable","name":"clxyAmount","nameLocation":"1254:10:0","nodeType":"VariableDeclaration","scope":42,"src":"1246:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"indexed":false,"mutability":"mutable","name":"hbarAmount","nameLocation":"1274:10:0","nodeType":"VariableDeclaration","scope":42,"src":"1266:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:83:0"},"src":"1181:105:0"},{"anonymous":false,"eventSelector":"465927a4840d7c7d6aa087bb368fe25bed2f96a7de450603903e0331dec0dbb5","id":48,"name":"LynxMinted","nameLocation":"1297:10:0","nodeType":"EventDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1324:4:0","nodeType":"VariableDeclaration","scope":48,"src":"1308:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1308:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":46,"indexed":false,"mutability":"mutable","name":"lynxAmount","nameLocation":"1338:10:0","nodeType":"VariableDeclaration","scope":48,"src":"1330:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"1330:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1307:42:0"},"src":"1291:59:0"},{"anonymous":false,"eventSelector":"267ecc93910a877e2ca3059a02e04c683dc5687c1c8426fa61d6054e39ee022e","id":56,"name":"TokenAddressSet","nameLocation":"1361:15:0","nodeType":"EventDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"indexed":false,"mutability":"mutable","name":"tokenType","nameLocation":"1384:9:0","nodeType":"VariableDeclaration","scope":56,"src":"1377:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":49,"name":"string","nodeType":"ElementaryTypeName","src":"1377:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":52,"indexed":false,"mutability":"mutable","name":"previousToken","nameLocation":"1403:13:0","nodeType":"VariableDeclaration","scope":56,"src":"1395:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":54,"indexed":false,"mutability":"mutable","name":"newToken","nameLocation":"1426:8:0","nodeType":"VariableDeclaration","scope":56,"src":"1418:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1418:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1376:59:0"},"src":"1355:81:0"},{"anonymous":false,"eventSelector":"f8ccb027dfcd135e000e9d45e6cc2d662578a8825d4c45b5e32e0adf67e79ec6","id":62,"name":"AdminTransferred","nameLocation":"1447:16:0","nodeType":"EventDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"1472:13:0","nodeType":"VariableDeclaration","scope":62,"src":"1464:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"1464:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"1495:8:0","nodeType":"VariableDeclaration","scope":62,"src":"1487:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1463:41:0"},"src":"1441:64:0"},{"anonymous":false,"eventSelector":"e8e92ea3580b0ca922d0ba2eab56806a32481c0b7fb44ce303c6e8eed6ada356","id":74,"name":"HTSOperationResult","nameLocation":"1541:18:0","nodeType":"EventDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"indexed":false,"mutability":"mutable","name":"operation","nameLocation":"1567:9:0","nodeType":"VariableDeclaration","scope":74,"src":"1560:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":63,"name":"string","nodeType":"ElementaryTypeName","src":"1560:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":66,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1586:5:0","nodeType":"VariableDeclaration","scope":74,"src":"1578:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"1578:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":68,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1601:7:0","nodeType":"VariableDeclaration","scope":74,"src":"1593:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"1593:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":false,"mutability":"mutable","name":"responseCode","nameLocation":"1614:12:0","nodeType":"VariableDeclaration","scope":74,"src":"1610:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":69,"name":"int","nodeType":"ElementaryTypeName","src":"1610:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1635:7:0","nodeType":"VariableDeclaration","scope":74,"src":"1628:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":71,"name":"string","nodeType":"ElementaryTypeName","src":"1628:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1559:84:0"},"src":"1535:109:0"},{"anonymous":false,"eventSelector":"67a486682ae6e12b846b357ede448f95bae3b291b9b1e52d6f693918663cfcb7","id":82,"name":"ValidationStep","nameLocation":"1655:14:0","nodeType":"EventDefinition","parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"indexed":false,"mutability":"mutable","name":"step","nameLocation":"1677:4:0","nodeType":"VariableDeclaration","scope":82,"src":"1670:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":75,"name":"string","nodeType":"ElementaryTypeName","src":"1670:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":78,"indexed":false,"mutability":"mutable","name":"passed","nameLocation":"1688:6:0","nodeType":"VariableDeclaration","scope":82,"src":"1683:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":77,"name":"bool","nodeType":"ElementaryTypeName","src":"1683:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":80,"indexed":false,"mutability":"mutable","name":"details","nameLocation":"1703:7:0","nodeType":"VariableDeclaration","scope":82,"src":"1696:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":79,"name":"string","nodeType":"ElementaryTypeName","src":"1696:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1669:42:0"},"src":"1649:63:0"},{"anonymous":false,"eventSelector":"ca04269aafa6b89ced6631d9643f3d61366dd8e5abf65031bae59d640e2ab64f","id":88,"name":"AssociationResult","nameLocation":"1723:17:0","nodeType":"EventDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1749:5:0","nodeType":"VariableDeclaration","scope":88,"src":"1741:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"1741:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":86,"indexed":false,"mutability":"mutable","name":"responseCode","nameLocation":"1760:12:0","nodeType":"VariableDeclaration","scope":88,"src":"1756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":85,"name":"int","nodeType":"ElementaryTypeName","src":"1756:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1740:33:0"},"src":"1717:57:0"},{"anonymous":false,"eventSelector":"e5c720ab039114b1e9bdff4fc0f58f2a4a77fd30c47f801735e4f39f271d8e1e","id":98,"name":"AllowanceCheck","nameLocation":"1785:14:0","nodeType":"EventDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1808:5:0","nodeType":"VariableDeclaration","scope":98,"src":"1800:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"1800:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"1823:5:0","nodeType":"VariableDeclaration","scope":98,"src":"1815:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1815:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"indexed":false,"mutability":"mutable","name":"spender","nameLocation":"1838:7:0","nodeType":"VariableDeclaration","scope":98,"src":"1830:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":96,"indexed":false,"mutability":"mutable","name":"allowance","nameLocation":"1855:9:0","nodeType":"VariableDeclaration","scope":98,"src":"1847:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"1847:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1799:66:0"},"src":"1779:87:0"},{"anonymous":false,"eventSelector":"b6f97ec566981c844b6dc30b7ba6286eedfe7bdf1091567f0a16126a43db2509","id":106,"name":"BalanceCheck","nameLocation":"1877:12:0","nodeType":"EventDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1898:5:0","nodeType":"VariableDeclaration","scope":106,"src":"1890:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1890:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1913:7:0","nodeType":"VariableDeclaration","scope":106,"src":"1905:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"1905:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":106,"src":"1922:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1889:49:0"},"src":"1871:68:0"},{"errorSelector":"47556579","id":108,"name":"OnlyAdmin","nameLocation":"1969:9:0","nodeType":"ErrorDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"1978:2:0"},"src":"1963:18:0"},{"errorSelector":"2c5211c6","id":110,"name":"InvalidAmount","nameLocation":"1992:13:0","nodeType":"ErrorDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[],"src":"2005:2:0"},"src":"1986:22:0"},{"errorSelector":"64d2ac41","id":114,"name":"TokenNotSet","nameLocation":"2019:11:0","nodeType":"ErrorDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"tokenType","nameLocation":"2038:9:0","nodeType":"VariableDeclaration","scope":114,"src":"2031:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":111,"name":"string","nodeType":"ElementaryTypeName","src":"2031:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2030:18:0"},"src":"2013:36:0"},{"errorSelector":"d5871b23","id":122,"name":"InsufficientDeposit","nameLocation":"2060:19:0","nodeType":"ErrorDefinition","parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"tokenType","nameLocation":"2087:9:0","nodeType":"VariableDeclaration","scope":122,"src":"2080:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":115,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"required","nameLocation":"2106:8:0","nodeType":"VariableDeclaration","scope":122,"src":"2098:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"provided","nameLocation":"2124:8:0","nodeType":"VariableDeclaration","scope":122,"src":"2116:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2116:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2079:54:0"},"src":"2054:80:0"},{"errorSelector":"39d20840","id":130,"name":"InsufficientAllowance","nameLocation":"2145:21:0","nodeType":"ErrorDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"tokenType","nameLocation":"2174:9:0","nodeType":"VariableDeclaration","scope":130,"src":"2167:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":123,"name":"string","nodeType":"ElementaryTypeName","src":"2167:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"required","nameLocation":"2193:8:0","nodeType":"VariableDeclaration","scope":130,"src":"2185:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"current","nameLocation":"2211:7:0","nodeType":"VariableDeclaration","scope":130,"src":"2203:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2203:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2166:53:0"},"src":"2139:81:0"},{"errorSelector":"12dfddb3","id":134,"name":"TransferFailed","nameLocation":"2231:14:0","nodeType":"ErrorDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"tokenType","nameLocation":"2253:9:0","nodeType":"VariableDeclaration","scope":134,"src":"2246:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":131,"name":"string","nodeType":"ElementaryTypeName","src":"2246:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2245:18:0"},"src":"2225:39:0"},{"errorSelector":"f0a02f02","id":138,"name":"MintFailed","nameLocation":"2275:10:0","nodeType":"ErrorDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"responseCode","nameLocation":"2290:12:0","nodeType":"VariableDeclaration","scope":138,"src":"2286:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":135,"name":"int","nodeType":"ElementaryTypeName","src":"2286:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2285:18:0"},"src":"2269:35:0"},{"errorSelector":"9182f2ec","id":144,"name":"TokenNotAssociated","nameLocation":"2315:18:0","nodeType":"ErrorDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"token","nameLocation":"2342:5:0","nodeType":"VariableDeclaration","scope":144,"src":"2334:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2334:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"account","nameLocation":"2357:7:0","nodeType":"VariableDeclaration","scope":144,"src":"2349:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2333:32:0"},"src":"2309:57:0"},{"body":{"id":155,"nodeType":"Block","src":"2397:71:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":146,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2411:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2415:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2411:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":148,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"2425:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2411:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":153,"nodeType":"IfStatement","src":"2407:43:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":150,"name":"OnlyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2439:9:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"RevertStatement","src":"2432:18:0"}},{"id":154,"nodeType":"PlaceholderStatement","src":"2460:1:0"}]},"id":156,"name":"onlyAdmin","nameLocation":"2385:9:0","nodeType":"ModifierDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[],"src":"2394:2:0"},"src":"2376:92:0","virtual":false,"visibility":"internal"},{"body":{"id":164,"nodeType":"Block","src":"2492:35:0","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":159,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"2502:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":160,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2510:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2514:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2510:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2502:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":163,"nodeType":"ExpressionStatement","src":"2502:18:0"}]},"id":165,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"2489:2:0"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2492:0:0"},"scope":1280,"src":"2478:49:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":184,"nodeType":"Block","src":"2709:138:0","statements":[{"expression":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":173,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2719:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2733:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2719:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":176,"nodeType":"ExpressionStatement","src":"2719:18:0"},{"expression":{"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":177,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2806:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"3078313637","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2834:5:0","typeDescriptions":{"typeIdentifier":"t_rational_359_by_1","typeString":"int_const 359"},"value":"0x167"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_359_by_1","typeString":"int_const 359"}],"id":179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2826:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"2826:7:0","typeDescriptions":{}}},"id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2806:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":183,"nodeType":"ExpressionStatement","src":"2806:34:0"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2537:70:0","text":" @dev Test if HTS precompile is properly initialized"},"functionSelector":"169b78a2","id":185,"implemented":true,"kind":"function","modifiers":[],"name":"testHTSPrecompile","nameLocation":"2621:17:0","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"2638:2:0"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"initialized","nameLocation":"2669:11:0","nodeType":"VariableDeclaration","scope":185,"src":"2664:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"precompileAddress","nameLocation":"2690:17:0","nodeType":"VariableDeclaration","scope":185,"src":"2682:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2663:45:0"},"scope":1280,"src":"2612:235:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":234,"nodeType":"Block","src":"3129:575:0","statements":[{"assignments":[202,204],"declarations":[{"constant":false,"id":202,"mutability":"mutable","name":"tokenResponse","nameLocation":"3215:13:0","nodeType":"VariableDeclaration","scope":234,"src":"3211:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":201,"name":"int","nodeType":"ElementaryTypeName","src":"3211:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"tokenExists","nameLocation":"3235:11:0","nodeType":"VariableDeclaration","scope":234,"src":"3230:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3230:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":208,"initialValue":{"arguments":[{"id":206,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3258:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":205,"name":"isToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"3250:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_int64_$_t_bool_$","typeString":"function (address) returns (int64,bool)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3250:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_bool_$","typeString":"tuple(int64,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3210:54:0"},{"expression":{"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":209,"name":"isValidToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3274:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"tokenResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"3290:13:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":211,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3307:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3327:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"3307:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"3290:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":214,"name":"tokenExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3338:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3290:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3289:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3274:76:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":218,"nodeType":"ExpressionStatement","src":"3274:76:0"},{"condition":{"id":219,"name":"isValidToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3373:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":233,"nodeType":"IfStatement","src":"3369:329:0","trueBody":{"id":232,"nodeType":"Block","src":"3387:311:0","statements":[{"expression":{"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":220,"name":"isAssociated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3500:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3515:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3500:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":223,"nodeType":"ExpressionStatement","src":"3500:19:0"},{"expression":{"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":224,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3659:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3649:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":227,"nodeType":"ExpressionStatement","src":"3649:11:0"},{"expression":{"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":228,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3674:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3686:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3674:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":231,"nodeType":"ExpressionStatement","src":"3674:13:0"}]}}]},"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"2857:78:0","text":" @dev Test HTS operations directly using inheritance pattern"},"functionSelector":"87bff26b","id":235,"implemented":true,"kind":"function","modifiers":[],"name":"testHTSOperations","nameLocation":"2949:17:0","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"token","nameLocation":"2975:5:0","nodeType":"VariableDeclaration","scope":235,"src":"2967:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"2967:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"account","nameLocation":"2990:7:0","nodeType":"VariableDeclaration","scope":235,"src":"2982:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"2982:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2966:32:0"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"isAssociated","nameLocation":"3031:12:0","nodeType":"VariableDeclaration","scope":235,"src":"3026:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":192,"name":"bool","nodeType":"ElementaryTypeName","src":"3026:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"balance","nameLocation":"3061:7:0","nodeType":"VariableDeclaration","scope":235,"src":"3053:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"allowance","nameLocation":"3086:9:0","nodeType":"VariableDeclaration","scope":235,"src":"3078:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"isValidToken","nameLocation":"3110:12:0","nodeType":"VariableDeclaration","scope":235,"src":"3105:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":198,"name":"bool","nodeType":"ElementaryTypeName","src":"3105:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3016:112:0"},"scope":1280,"src":"2940:764:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":238,"nodeType":"Block","src":"3779:2:0","statements":[]},"id":239,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"3759:2:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"3779:0:0"},"scope":1280,"src":"3752:29:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":301,"nodeType":"Block","src":"3954:572:0","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"previousToken","nameLocation":"3972:13:0","nodeType":"VariableDeclaration","scope":301,"src":"3964:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3964:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":250,"initialValue":{"id":249,"name":"lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3988:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3964:33:0"},{"expression":{"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":251,"name":"lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"4007:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":252,"name":"_lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4019:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4007:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":254,"nodeType":"ExpressionStatement","src":"4007:22:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"_lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4132:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4154:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4146:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4146:7:0","typeDescriptions":{}}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4132:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"IfStatement","src":"4128:318:0","trueBody":{"id":293,"nodeType":"Block","src":"4158:288:0","statements":[{"assignments":[262],"declarations":[{"constant":false,"id":262,"mutability":"mutable","name":"response","nameLocation":"4176:8:0","nodeType":"VariableDeclaration","scope":293,"src":"4172:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":261,"name":"int","nodeType":"ElementaryTypeName","src":"4172:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":270,"initialValue":{"arguments":[{"arguments":[{"id":266,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4210:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4202:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"4202:7:0","typeDescriptions":{}}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":268,"name":"_lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4217:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":263,"name":"associateToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"4187:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_int256_$","typeString":"function (address,address) returns (int256)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4187:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4172:56:0"},{"eventCall":{"arguments":[{"id":272,"name":"_lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4265:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"4277:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":271,"name":"AssociationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"4247:17:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$","typeString":"function (address,int256)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":275,"nodeType":"EmitStatement","src":"4242:44:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"4308:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":278,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4320:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4340:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"4320:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"4308:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"hexValue":"4c594e5820746f6b656e206173736f63696174696f6e206661696c65643a20","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4373:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_05b8c81e4d50af98fb5fa519b925050c6ae01b6abdbde399cd313d795f1a13f1","typeString":"literal_string \"LYNX token association failed: \""},"value":"LYNX token association failed: "},{"arguments":[{"id":287,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"4423:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":286,"name":"_int64ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"4408:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4408:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_05b8c81e4d50af98fb5fa519b925050c6ae01b6abdbde399cd313d795f1a13f1","typeString":"literal_string \"LYNX token association failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":283,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4356:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4360:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4356:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4356:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4349:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":281,"name":"string","nodeType":"ElementaryTypeName","src":"4349:6:0","typeDescriptions":{}}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4349:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4300:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:135:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":292,"nodeType":"ExpressionStatement","src":"4300:135:0"}]}},{"eventCall":{"arguments":[{"hexValue":"4c594e58","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4485:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6","typeString":"literal_string \"LYNX\""},"value":"LYNX"},{"id":297,"name":"previousToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4493:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":298,"name":"_lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4508:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6","typeString":"literal_string \"LYNX\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":295,"name":"TokenAddressSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"4469:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"EmitStatement","src":"4464:55:0"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3791:97:0","text":" @dev Set token addresses (admin only) - automatically associates with contract"},"functionSelector":"52eb2a44","id":302,"implemented":true,"kind":"function","modifiers":[{"id":245,"kind":"modifierInvocation","modifierName":{"id":244,"name":"onlyAdmin","nameLocations":["3944:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"3944:9:0"},"nodeType":"ModifierInvocation","src":"3944:9:0"}],"name":"setLynxToken","nameLocation":"3902:12:0","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"_lynxToken","nameLocation":"3923:10:0","nodeType":"VariableDeclaration","scope":302,"src":"3915:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3914:20:0"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[],"src":"3954:0:0"},"scope":1280,"src":"3893:633:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":363,"nodeType":"Block","src":"4599:581:0","statements":[{"assignments":[310],"declarations":[{"constant":false,"id":310,"mutability":"mutable","name":"previousToken","nameLocation":"4617:13:0","nodeType":"VariableDeclaration","scope":363,"src":"4609:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"4609:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":312,"initialValue":{"id":311,"name":"sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"4633:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4609:34:0"},{"expression":{"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":313,"name":"sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"4653:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":314,"name":"_sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4666:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4653:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":316,"nodeType":"ExpressionStatement","src":"4653:24:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":317,"name":"_sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4780:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4795:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"4795:7:0","typeDescriptions":{}}},"id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4795:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4780:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":356,"nodeType":"IfStatement","src":"4776:322:0","trueBody":{"id":355,"nodeType":"Block","src":"4807:291:0","statements":[{"assignments":[324],"declarations":[{"constant":false,"id":324,"mutability":"mutable","name":"response","nameLocation":"4825:8:0","nodeType":"VariableDeclaration","scope":355,"src":"4821:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":323,"name":"int","nodeType":"ElementaryTypeName","src":"4821:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":332,"initialValue":{"arguments":[{"arguments":[{"id":328,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4859:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4851:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:0","typeDescriptions":{}}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":330,"name":"_sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4866:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":325,"name":"associateToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"4836:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_int256_$","typeString":"function (address,address) returns (int256)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4836:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4821:57:0"},{"eventCall":{"arguments":[{"id":334,"name":"_sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4915:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4928:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":333,"name":"AssociationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"4897:17:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$","typeString":"function (address,int256)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"EmitStatement","src":"4892:45:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":339,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4959:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":340,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4971:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4991:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"4971:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"4959:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"hexValue":"534155434520746f6b656e206173736f63696174696f6e206661696c65643a20","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5024:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_68495250fdc0ee8e53fcde04a36e34fbf1ec8715429481eca8f59ec65fc8e2c4","typeString":"literal_string \"SAUCE token association failed: \""},"value":"SAUCE token association failed: "},{"arguments":[{"id":349,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"5075:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":348,"name":"_int64ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"5060:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5060:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_68495250fdc0ee8e53fcde04a36e34fbf1ec8715429481eca8f59ec65fc8e2c4","typeString":"literal_string \"SAUCE token association failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":345,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5007:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5011:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"5007:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5007:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5000:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"5000:6:0","typeDescriptions":{}}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4951:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4951:136:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"4951:136:0"}]}},{"eventCall":{"arguments":[{"hexValue":"5341554345","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5137:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8","typeString":"literal_string \"SAUCE\""},"value":"SAUCE"},{"id":359,"name":"previousToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"5146:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"_sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"5161:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8","typeString":"literal_string \"SAUCE\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":357,"name":"TokenAddressSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"5121:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"EmitStatement","src":"5116:57:0"}]},"functionSelector":"97236479","id":364,"implemented":true,"kind":"function","modifiers":[{"id":307,"kind":"modifierInvocation","modifierName":{"id":306,"name":"onlyAdmin","nameLocations":["4589:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"4589:9:0"},"nodeType":"ModifierInvocation","src":"4589:9:0"}],"name":"setSauceToken","nameLocation":"4545:13:0","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"_sauceToken","nameLocation":"4567:11:0","nodeType":"VariableDeclaration","scope":364,"src":"4559:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"4559:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4558:21:0"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"4599:0:0"},"scope":1280,"src":"4536:644:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":425,"nodeType":"Block","src":"5251:572:0","statements":[{"assignments":[372],"declarations":[{"constant":false,"id":372,"mutability":"mutable","name":"previousToken","nameLocation":"5269:13:0","nodeType":"VariableDeclaration","scope":425,"src":"5261:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"5261:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":374,"initialValue":{"id":373,"name":"clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"5285:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5261:33:0"},{"expression":{"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":375,"name":"clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"5304:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":376,"name":"_clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5316:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5304:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":378,"nodeType":"ExpressionStatement","src":"5304:22:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":379,"name":"_clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5429:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5451:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5443:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"5443:7:0","typeDescriptions":{}}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5429:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"5425:318:0","trueBody":{"id":417,"nodeType":"Block","src":"5455:288:0","statements":[{"assignments":[386],"declarations":[{"constant":false,"id":386,"mutability":"mutable","name":"response","nameLocation":"5473:8:0","nodeType":"VariableDeclaration","scope":417,"src":"5469:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":385,"name":"int","nodeType":"ElementaryTypeName","src":"5469:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":394,"initialValue":{"arguments":[{"arguments":[{"id":390,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5507:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5499:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"5499:7:0","typeDescriptions":{}}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5499:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":392,"name":"_clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5514:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":387,"name":"associateToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"5484:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_int256_$","typeString":"function (address,address) returns (int256)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5469:56:0"},{"eventCall":{"arguments":[{"id":396,"name":"_clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5562:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5574:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":395,"name":"AssociationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"5544:17:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$","typeString":"function (address,int256)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5544:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"EmitStatement","src":"5539:44:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":401,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5605:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":402,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5617:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5637:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"5617:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"5605:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"hexValue":"434c585920746f6b656e206173736f63696174696f6e206661696c65643a20","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5670:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a71107265ed46d55753f901c0ef2ce1bd8a60e72b08794a34eebec38ec384993","typeString":"literal_string \"CLXY token association failed: \""},"value":"CLXY token association failed: "},{"arguments":[{"id":411,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5720:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":410,"name":"_int64ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"5705:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5705:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a71107265ed46d55753f901c0ef2ce1bd8a60e72b08794a34eebec38ec384993","typeString":"literal_string \"CLXY token association failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":407,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5653:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5657:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"5653:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5653:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5646:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":405,"name":"string","nodeType":"ElementaryTypeName","src":"5646:6:0","typeDescriptions":{}}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5597:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:135:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"5597:135:0"}]}},{"eventCall":{"arguments":[{"hexValue":"434c5859","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5782:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00","typeString":"literal_string \"CLXY\""},"value":"CLXY"},{"id":421,"name":"previousToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"5790:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":422,"name":"_clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5805:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00","typeString":"literal_string \"CLXY\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":419,"name":"TokenAddressSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"5766:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5766:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":424,"nodeType":"EmitStatement","src":"5761:55:0"}]},"functionSelector":"b94fab4e","id":426,"implemented":true,"kind":"function","modifiers":[{"id":369,"kind":"modifierInvocation","modifierName":{"id":368,"name":"onlyAdmin","nameLocations":["5241:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"5241:9:0"},"nodeType":"ModifierInvocation","src":"5241:9:0"}],"name":"setClxyToken","nameLocation":"5199:12:0","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"_clxyToken","nameLocation":"5220:10:0","nodeType":"VariableDeclaration","scope":426,"src":"5212:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"5212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5211:20:0"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"5251:0:0"},"scope":1280,"src":"5190:633:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":457,"nodeType":"Block","src":"5943:204:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":435,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5961:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5981:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5973:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"5973:7:0","typeDescriptions":{}}},"id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5973:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5961:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5985:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""},"value":"Cannot transfer to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""}],"id":434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5953:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5953:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"ExpressionStatement","src":"5953:66:0"},{"assignments":[445],"declarations":[{"constant":false,"id":445,"mutability":"mutable","name":"previousAdmin","nameLocation":"6037:13:0","nodeType":"VariableDeclaration","scope":457,"src":"6029:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"6029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":447,"initialValue":{"id":446,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6053:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6029:29:0"},{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":448,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6068:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":449,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6076:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6068:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":451,"nodeType":"ExpressionStatement","src":"6068:16:0"},{"eventCall":{"arguments":[{"id":453,"name":"previousAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6116:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6131:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":452,"name":"AdminTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"6099:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"6094:46:0"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"5833:45:0","text":" @dev Transfer admin rights"},"functionSelector":"75829def","id":458,"implemented":true,"kind":"function","modifiers":[{"id":432,"kind":"modifierInvocation","modifierName":{"id":431,"name":"onlyAdmin","nameLocations":["5933:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"5933:9:0"},"nodeType":"ModifierInvocation","src":"5933:9:0"}],"name":"transferAdmin","nameLocation":"5892:13:0","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"newAdmin","nameLocation":"5914:8:0","nodeType":"VariableDeclaration","scope":458,"src":"5906:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"5906:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5905:18:0"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"5943:0:0"},"scope":1280,"src":"5883:264:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":516,"nodeType":"Block","src":"6330:365:0","statements":[{"body":{"id":514,"nodeType":"Block","src":"6392:297:0","statements":[{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"response","nameLocation":"6410:8:0","nodeType":"VariableDeclaration","scope":514,"src":"6406:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":478,"name":"int","nodeType":"ElementaryTypeName","src":"6406:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[{"arguments":[{"id":483,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6444:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6436:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"6436:7:0","typeDescriptions":{}}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":485,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6451:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":487,"indexExpression":{"id":486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"6466:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6451:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":480,"name":"associateToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"6421:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_int256_$","typeString":"function (address,address) returns (int256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6421:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6406:63:0"},{"eventCall":{"arguments":[{"baseExpression":{"id":491,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6506:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":493,"indexExpression":{"id":492,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"6521:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6506:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6525:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":490,"name":"AssociationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"6488:17:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$","typeString":"function (address,int256)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6488:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"EmitStatement","src":"6483:51:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":498,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6556:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":499,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"6568:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6588:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"6568:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"6556:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"hexValue":"546f6b656e206173736f63696174696f6e206661696c65643a20","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6621:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7eb3639e548d99e2b5f171e605acad2de5f51ddc896d16b083d0dc5d115a0fe2","typeString":"literal_string \"Token association failed: \""},"value":"Token association failed: "},{"arguments":[{"id":508,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6666:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":507,"name":"_int64ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"6651:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6651:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7eb3639e548d99e2b5f171e605acad2de5f51ddc896d16b083d0dc5d115a0fe2","typeString":"literal_string \"Token association failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":504,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6604:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6608:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"6604:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6604:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6597:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":502,"name":"string","nodeType":"ElementaryTypeName","src":"6597:6:0","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6548:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6548:130:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"6548:130:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"6360:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":472,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6364:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6379:6:0","memberName":"length","nodeType":"MemberAccess","src":"6364:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6360:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":515,"initializationExpression":{"assignments":[468],"declarations":[{"constant":false,"id":468,"mutability":"mutable","name":"i","nameLocation":"6353:1:0","nodeType":"VariableDeclaration","scope":515,"src":"6345:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"6345:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":470,"initialValue":{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6357:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6345:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6387:3:0","subExpression":{"id":475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"6387:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":477,"nodeType":"ExpressionStatement","src":"6387:3:0"},"nodeType":"ForStatement","src":"6340:349:0"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"6153:93:0","text":" @dev Associate contract with multiple tokens using inherited HTS functions"},"functionSelector":"a1d4da15","id":517,"implemented":true,"kind":"function","modifiers":[{"id":465,"kind":"modifierInvocation","modifierName":{"id":464,"name":"onlyAdmin","nameLocations":["6320:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"6320:9:0"},"nodeType":"ModifierInvocation","src":"6320:9:0"}],"name":"associateTokens","nameLocation":"6260:15:0","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"tokenAddresses","nameLocation":"6295:14:0","nodeType":"VariableDeclaration","scope":517,"src":"6276:33:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"6276:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":461,"nodeType":"ArrayTypeName","src":"6276:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6275:35:0"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"6330:0:0"},"scope":1280,"src":"6251:444:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":545,"nodeType":"Block","src":"6950:213:0","statements":[{"expression":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":527,"name":"contractSauceAssociated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"6960:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":529,"name":"sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"7009:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":528,"name":"_checkTokenAssociation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"6986:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6986:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6960:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":532,"nodeType":"ExpressionStatement","src":"6960:60:0"},{"expression":{"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":533,"name":"contractClxyAssociated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"7030:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":535,"name":"clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"7078:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":534,"name":"_checkTokenAssociation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"7055:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7055:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7030:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"ExpressionStatement","src":"7030:58:0"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":539,"name":"contractLynxAssociated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7098:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":541,"name":"lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"7146:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":540,"name":"_checkTokenAssociation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"7123:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7123:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7098:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":544,"nodeType":"ExpressionStatement","src":"7098:58:0"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6701:76:0","text":" @dev Check all associations using inherited HTS functions"},"functionSelector":"724302a7","id":546,"implemented":true,"kind":"function","modifiers":[],"name":"checkAllAssociations","nameLocation":"6791:20:0","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6811:2:0"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"contractSauceAssociated","nameLocation":"6846:23:0","nodeType":"VariableDeclaration","scope":546,"src":"6841:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":520,"name":"bool","nodeType":"ElementaryTypeName","src":"6841:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"contractClxyAssociated","nameLocation":"6884:22:0","nodeType":"VariableDeclaration","scope":546,"src":"6879:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":522,"name":"bool","nodeType":"ElementaryTypeName","src":"6879:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"contractLynxAssociated","nameLocation":"6921:22:0","nodeType":"VariableDeclaration","scope":546,"src":"6916:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":524,"name":"bool","nodeType":"ElementaryTypeName","src":"6916:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6831:118:0"},"scope":1280,"src":"6782:381:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":578,"nodeType":"Block","src":"7348:287:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"7362:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7379:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7371:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"7371:7:0","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7371:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7362:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":562,"nodeType":"IfStatement","src":"7358:37:0","trueBody":{"expression":{"hexValue":"66616c7365","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7390:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":553,"id":561,"nodeType":"Return","src":"7383:12:0"}},{"assignments":[564,566],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"response","nameLocation":"7513:8:0","nodeType":"VariableDeclaration","scope":578,"src":"7509:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":563,"name":"int","nodeType":"ElementaryTypeName","src":"7509:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"tokenExists","nameLocation":"7528:11:0","nodeType":"VariableDeclaration","scope":578,"src":"7523:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"7523:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":570,"initialValue":{"arguments":[{"id":568,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"7551:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":567,"name":"isToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"7543:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_int64_$_t_bool_$","typeString":"function (address) returns (int64,bool)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7543:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_bool_$","typeString":"tuple(int64,bool)"}},"nodeType":"VariableDeclarationStatement","src":"7508:49:0"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":571,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"7574:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":572,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"7586:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7606:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"7586:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"7574:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":575,"name":"tokenExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"7617:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7574:54:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":553,"id":577,"nodeType":"Return","src":"7567:61:0"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"7173:99:0","text":" @dev Internal function to check if token is associated using inherited functions"},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"_checkTokenAssociation","nameLocation":"7286:22:0","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"token","nameLocation":"7317:5:0","nodeType":"VariableDeclaration","scope":579,"src":"7309:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"7309:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7308:15:0"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"7342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":551,"name":"bool","nodeType":"ElementaryTypeName","src":"7342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7341:6:0"},"scope":1280,"src":"7277:358:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":627,"nodeType":"Block","src":"7928:406:0","statements":[{"expression":{"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":591,"name":"sauceRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8073:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":592,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8090:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":593,"name":"SAUCE_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"8103:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8090:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8117:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":596,"name":"SAUCE_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"8121:14:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8117:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8090:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8089:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8139:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":601,"name":"LYNX_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"8143:13:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8139:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8089:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8073:83:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":605,"nodeType":"ExpressionStatement","src":"8073:83:0"},{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":606,"name":"clxyRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"8166:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8182:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":608,"name":"CLXY_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8182:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8208:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":611,"name":"CLXY_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"8212:13:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8208:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8182:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8181:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8229:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":616,"name":"LYNX_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"8233:13:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8229:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8181:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8166:80:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"8166:80:0"},{"expression":{"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":621,"name":"hbarRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8256:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8271:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":623,"name":"HBAR_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8284:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8271:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8256:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":626,"nodeType":"ExpressionStatement","src":"8256:38:0"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"7645:101:0","text":" @dev Calculate required deposits for a given LYNX amount (accounting for decimals)"},"functionSelector":"8f9f8b01","id":628,"implemented":true,"kind":"function","modifiers":[],"name":"calculateRequiredDeposits","nameLocation":"7760:25:0","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"lynxAmount","nameLocation":"7794:10:0","nodeType":"VariableDeclaration","scope":628,"src":"7786:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"7786:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7785:20:0"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"sauceRequired","nameLocation":"7864:13:0","nodeType":"VariableDeclaration","scope":628,"src":"7856:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"7856:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"clxyRequired","nameLocation":"7887:12:0","nodeType":"VariableDeclaration","scope":628,"src":"7879:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"7879:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"hbarRequired","nameLocation":"7909:12:0","nodeType":"VariableDeclaration","scope":628,"src":"7901:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"7901:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7855:67:0"},"scope":1280,"src":"7751:583:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":653,"nodeType":"Block","src":"8559:162:0","statements":[{"expression":{"arguments":[{"id":639,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8589:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":640,"name":"sauceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"8601:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":641,"name":"clxyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"8614:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":638,"name":"_validateMintInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"8569:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) view"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8569:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"8569:56:0"},{"expression":{"arguments":[{"id":645,"name":"sauceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"8652:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":646,"name":"clxyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"8665:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":644,"name":"_processDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8635:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8635:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"8635:41:0"},{"expression":{"arguments":[{"id":650,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8703:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"_mintAndTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"8686:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8686:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"8686:28:0"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"8344:76:0","text":" @dev Mint LYNX tokens by depositing SAUCE, CLXY, and HBAR"},"functionSelector":"3ed4d3bc","id":654,"implemented":true,"kind":"function","modifiers":[],"name":"mintWithDeposits","nameLocation":"8434:16:0","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"lynxAmount","nameLocation":"8468:10:0","nodeType":"VariableDeclaration","scope":654,"src":"8460:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"8460:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"sauceAmount","nameLocation":"8496:11:0","nodeType":"VariableDeclaration","scope":654,"src":"8488:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"8488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"clxyAmount","nameLocation":"8525:10:0","nodeType":"VariableDeclaration","scope":654,"src":"8517:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"8517:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8450:91:0"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"8559:0:0"},"scope":1280,"src":"8425:296:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":750,"nodeType":"Block","src":"8935:842:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":664,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"8949:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":670,"nodeType":"IfStatement","src":"8945:43:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":667,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"8973:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8973:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"RevertStatement","src":"8966:22:0"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"9002:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9023:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9015:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"9015:7:0","typeDescriptions":{}}},"id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9015:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9002:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":681,"nodeType":"IfStatement","src":"8998:55:0","trueBody":{"errorCall":{"arguments":[{"hexValue":"4c594e58","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9046:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6","typeString":"literal_string \"LYNX\""},"value":"LYNX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6","typeString":"literal_string \"LYNX\""}],"id":677,"name":"TokenNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"9034:11:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9034:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"RevertStatement","src":"9027:26:0"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":682,"name":"sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"9067:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9089:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9081:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"9081:7:0","typeDescriptions":{}}},"id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9081:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9067:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":692,"nodeType":"IfStatement","src":"9063:57:0","trueBody":{"errorCall":{"arguments":[{"hexValue":"5341554345","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9112:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8","typeString":"literal_string \"SAUCE\""},"value":"SAUCE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8","typeString":"literal_string \"SAUCE\""}],"id":688,"name":"TokenNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"9100:11:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9100:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"RevertStatement","src":"9093:27:0"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"9134:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9155:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9147:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9147:7:0","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9147:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9134:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":703,"nodeType":"IfStatement","src":"9130:55:0","trueBody":{"errorCall":{"arguments":[{"hexValue":"434c5859","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9178:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00","typeString":"literal_string \"CLXY\""},"value":"CLXY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00","typeString":"literal_string \"CLXY\""}],"id":699,"name":"TokenNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"9166:11:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9166:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"RevertStatement","src":"9159:26:0"}},{"assignments":[705,707,709],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"sauceRequired","nameLocation":"9251:13:0","nodeType":"VariableDeclaration","scope":750,"src":"9243:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"9243:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"clxyRequired","nameLocation":"9274:12:0","nodeType":"VariableDeclaration","scope":750,"src":"9266:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"9266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"hbarRequired","nameLocation":"9296:12:0","nodeType":"VariableDeclaration","scope":750,"src":"9288:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"9288:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":714,"initialValue":{"arguments":[{"id":712,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"9343:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":710,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9312:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9317:25:0","memberName":"calculateRequiredDeposits","nodeType":"MemberAccess","referencedDeclaration":628,"src":"9312:30:0","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure external returns (uint256,uint256,uint256)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9312:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9242:112:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"sauceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"9406:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":716,"name":"sauceRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"9420:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9406:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":725,"nodeType":"IfStatement","src":"9402:121:0","trueBody":{"id":724,"nodeType":"Block","src":"9435:88:0","statements":[{"errorCall":{"arguments":[{"hexValue":"5341554345","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9476:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8","typeString":"literal_string \"SAUCE\""},"value":"SAUCE"},{"id":720,"name":"sauceRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"9485:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":721,"name":"sauceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"9500:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8","typeString":"literal_string \"SAUCE\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":718,"name":"InsufficientDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"9456:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256,uint256) pure"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"RevertStatement","src":"9449:63:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"clxyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9536:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":727,"name":"clxyRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"9549:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9536:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":736,"nodeType":"IfStatement","src":"9532:116:0","trueBody":{"id":735,"nodeType":"Block","src":"9563:85:0","statements":[{"errorCall":{"arguments":[{"hexValue":"434c5859","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9604:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00","typeString":"literal_string \"CLXY\""},"value":"CLXY"},{"id":731,"name":"clxyRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"9612:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":732,"name":"clxyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9626:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00","typeString":"literal_string \"CLXY\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"InsufficientDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"9584:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256,uint256) pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9584:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"RevertStatement","src":"9577:60:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":737,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9661:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9665:5:0","memberName":"value","nodeType":"MemberAccess","src":"9661:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":739,"name":"hbarRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"9673:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9661:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":749,"nodeType":"IfStatement","src":"9657:114:0","trueBody":{"id":748,"nodeType":"Block","src":"9687:84:0","statements":[{"errorCall":{"arguments":[{"hexValue":"48424152","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9728:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_061735ab87dcc0fdde52a9a6072648c11c6fde3e234a87ae62c265e0bd92bb6e","typeString":"literal_string \"HBAR\""},"value":"HBAR"},{"id":743,"name":"hbarRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"9736:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9750:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9754:5:0","memberName":"value","nodeType":"MemberAccess","src":"9750:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_061735ab87dcc0fdde52a9a6072648c11c6fde3e234a87ae62c265e0bd92bb6e","typeString":"literal_string \"HBAR\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"InsufficientDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"9708:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256,uint256) pure"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9708:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"RevertStatement","src":"9701:59:0"}]}}]},"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"8731:65:0","text":" @dev Internal function to validate mint inputs"},"id":751,"implemented":true,"kind":"function","modifiers":[],"name":"_validateMintInputs","nameLocation":"8810:19:0","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"lynxAmount","nameLocation":"8847:10:0","nodeType":"VariableDeclaration","scope":751,"src":"8839:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"8839:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"sauceAmount","nameLocation":"8875:11:0","nodeType":"VariableDeclaration","scope":751,"src":"8867:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"clxyAmount","nameLocation":"8904:10:0","nodeType":"VariableDeclaration","scope":751,"src":"8896:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"8896:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8829:91:0"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"8935:0:0"},"scope":1280,"src":"8801:976:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"9965:1010:0","statements":[{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"sauceTransferResult","nameLocation":"10064:19:0","nodeType":"VariableDeclaration","scope":848,"src":"10060:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":759,"name":"int","nodeType":"ElementaryTypeName","src":"10060:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":777,"initialValue":{"arguments":[{"id":762,"name":"sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10100:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10112:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10116:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10112:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":767,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10132:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:0","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":773,"name":"sauceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10152:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10145:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":771,"name":"uint64","nodeType":"ElementaryTypeName","src":"10145:6:0","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10145:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10139:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":769,"name":"int64","nodeType":"ElementaryTypeName","src":"10139:5:0","typeDescriptions":{}}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10139:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":761,"name":"transferToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"10086:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int256_$","typeString":"function (address,address,address,int64) returns (int256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10086:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"10060:106:0"},{"eventCall":{"arguments":[{"hexValue":"7472616e73666572546f6b656e","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10200:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b","typeString":"literal_string \"transferToken\""},"value":"transferToken"},{"id":780,"name":"sauceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10217:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10229:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10233:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10229:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"sauceTransferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"10241:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"arguments":[{"id":785,"name":"sauceTransferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"10282:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":784,"name":"_getHTSErrorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10262:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10262:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b","typeString":"literal_string \"transferToken\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":778,"name":"HTSOperationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"10181:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_int256_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,address,address,int256,string memory)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10181:122:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"EmitStatement","src":"10176:127:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":789,"name":"sauceTransferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"10317:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":790,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10340:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10360:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"10340:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"10317:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":798,"nodeType":"IfStatement","src":"10313:111:0","trueBody":{"id":797,"nodeType":"Block","src":"10369:55:0","statements":[{"errorCall":{"arguments":[{"hexValue":"5341554345","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10405:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8","typeString":"literal_string \"SAUCE\""},"value":"SAUCE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8","typeString":"literal_string \"SAUCE\""}],"id":793,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10390:14:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10390:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"RevertStatement","src":"10383:30:0"}]}},{"assignments":[800],"declarations":[{"constant":false,"id":800,"mutability":"mutable","name":"clxyTransferResult","nameLocation":"10530:18:0","nodeType":"VariableDeclaration","scope":848,"src":"10526:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":799,"name":"int","nodeType":"ElementaryTypeName","src":"10526:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":817,"initialValue":{"arguments":[{"id":802,"name":"clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"10565:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":803,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10576:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10580:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10576:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":807,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10596:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10588:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"10588:7:0","typeDescriptions":{}}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10588:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":813,"name":"clxyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10616:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10609:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":811,"name":"uint64","nodeType":"ElementaryTypeName","src":"10609:6:0","typeDescriptions":{}}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10609:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10603:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":809,"name":"int64","nodeType":"ElementaryTypeName","src":"10603:5:0","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10603:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":801,"name":"transferToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"10551:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int256_$","typeString":"function (address,address,address,int64) returns (int256)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10551:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"10526:103:0"},{"eventCall":{"arguments":[{"hexValue":"7472616e73666572546f6b656e","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10663:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b","typeString":"literal_string \"transferToken\""},"value":"transferToken"},{"id":820,"name":"clxyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"10680:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10691:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10695:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10691:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"clxyTransferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"10703:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"arguments":[{"id":825,"name":"clxyTransferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"10743:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":824,"name":"_getHTSErrorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10723:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b","typeString":"literal_string \"transferToken\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":818,"name":"HTSOperationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"10644:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_int256_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,address,address,int256,string memory)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:119:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"EmitStatement","src":"10639:124:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"clxyTransferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"10777:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":830,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10799:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10819:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"10799:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"10777:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"10773:109:0","trueBody":{"id":837,"nodeType":"Block","src":"10828:54:0","statements":[{"errorCall":{"arguments":[{"hexValue":"434c5859","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10864:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00","typeString":"literal_string \"CLXY\""},"value":"CLXY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00","typeString":"literal_string \"CLXY\""}],"id":833,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10849:14:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"RevertStatement","src":"10842:29:0"}]}},{"eventCall":{"arguments":[{"expression":{"id":840,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10921:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10925:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10921:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":842,"name":"sauceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10933:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":843,"name":"clxyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10946:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10958:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10962:5:0","memberName":"value","nodeType":"MemberAccess","src":"10958:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":839,"name":"TokensDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"10905:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10905:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"EmitStatement","src":"10900:68:0"}]},"documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"9787:97:0","text":" @dev Internal function to process token deposits using inherited HTS functions"},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"_processDeposits","nameLocation":"9898:16:0","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"sauceAmount","nameLocation":"9923:11:0","nodeType":"VariableDeclaration","scope":849,"src":"9915:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"9915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"clxyAmount","nameLocation":"9944:10:0","nodeType":"VariableDeclaration","scope":849,"src":"9936:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"9936:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9914:41:0"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"9965:0:0"},"scope":1280,"src":"9889:1086:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":949,"nodeType":"Block","src":"11145:908:0","statements":[{"assignments":[859],"declarations":[{"constant":false,"id":859,"mutability":"mutable","name":"metadata","nameLocation":"11220:8:0","nodeType":"VariableDeclaration","scope":949,"src":"11205:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":857,"name":"bytes","nodeType":"ElementaryTypeName","src":"11205:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":858,"nodeType":"ArrayTypeName","src":"11205:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":865,"initialValue":{"arguments":[{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11243:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11231:11:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":860,"name":"bytes","nodeType":"ElementaryTypeName","src":"11235:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":861,"nodeType":"ArrayTypeName","src":"11235:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11205:40:0"},{"assignments":[867,null,null],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"mintResult","nameLocation":"11260:10:0","nodeType":"VariableDeclaration","scope":949,"src":"11256:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":866,"name":"int","nodeType":"ElementaryTypeName","src":"11256:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null],"id":879,"initialValue":{"arguments":[{"id":869,"name":"lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"11288:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":874,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"11312:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11305:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":872,"name":"uint64","nodeType":"ElementaryTypeName","src":"11305:6:0","typeDescriptions":{}}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11305:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11299:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":870,"name":"int64","nodeType":"ElementaryTypeName","src":"11299:5:0","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11299:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":877,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"11326:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":868,"name":"mintToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"11278:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_int64_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_int256_$_t_int64_$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"function (address,int64,bytes memory[] memory) returns (int256,int64,int64[] memory)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11278:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int64_$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"tuple(int256,int64,int64[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"11255:80:0"},{"eventCall":{"arguments":[{"hexValue":"6d696e74546f6b656e","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11369:11:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec78d9c22c08bb9f0ecd5d95571ae83e3f22219c5a9278c3270691d50abfd91b","typeString":"literal_string \"mintToken\""},"value":"mintToken"},{"id":882,"name":"lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"11382:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":885,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11401:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11393:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"11393:7:0","typeDescriptions":{}}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11393:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":887,"name":"mintResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11408:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"arguments":[{"id":889,"name":"mintResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11440:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":888,"name":"_getHTSErrorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"11420:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11420:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ec78d9c22c08bb9f0ecd5d95571ae83e3f22219c5a9278c3270691d50abfd91b","typeString":"literal_string \"mintToken\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":880,"name":"HTSOperationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"11350:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_int256_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,address,address,int256,string memory)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11350:102:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"EmitStatement","src":"11345:107:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":893,"name":"mintResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11466:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":894,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"11480:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11500:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"11480:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"11466:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"nodeType":"IfStatement","src":"11462:101:0","trueBody":{"id":901,"nodeType":"Block","src":"11509:54:0","statements":[{"errorCall":{"arguments":[{"id":898,"name":"mintResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11541:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":897,"name":"MintFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"11530:10:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11530:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"RevertStatement","src":"11523:29:0"}]}},{"assignments":[904],"declarations":[{"constant":false,"id":904,"mutability":"mutable","name":"transferResult","nameLocation":"11653:14:0","nodeType":"VariableDeclaration","scope":949,"src":"11649:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":903,"name":"int","nodeType":"ElementaryTypeName","src":"11649:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":921,"initialValue":{"arguments":[{"id":906,"name":"lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"11684:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":909,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11703:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11695:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"11695:7:0","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11695:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11710:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11714:6:0","memberName":"sender","nodeType":"MemberAccess","src":"11710:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":917,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"11735:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11728:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":915,"name":"uint64","nodeType":"ElementaryTypeName","src":"11728:6:0","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11728:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11722:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":913,"name":"int64","nodeType":"ElementaryTypeName","src":"11722:5:0","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11722:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":905,"name":"transferToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"11670:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int256_$","typeString":"function (address,address,address,int64) returns (int256)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11670:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"11649:99:0"},{"eventCall":{"arguments":[{"hexValue":"7472616e73666572546f6b656e","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11782:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b","typeString":"literal_string \"transferToken\""},"value":"transferToken"},{"id":924,"name":"lynxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"11799:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11810:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11814:6:0","memberName":"sender","nodeType":"MemberAccess","src":"11810:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":927,"name":"transferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"11822:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"arguments":[{"id":929,"name":"transferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"11858:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":928,"name":"_getHTSErrorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"11838:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11838:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b","typeString":"literal_string \"transferToken\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":922,"name":"HTSOperationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"11763:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_int256_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,address,address,int256,string memory)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11763:111:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":932,"nodeType":"EmitStatement","src":"11758:116:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":933,"name":"transferResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"11888:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":934,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"11906:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11926:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"11906:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"11888:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":942,"nodeType":"IfStatement","src":"11884:105:0","trueBody":{"id":941,"nodeType":"Block","src":"11935:54:0","statements":[{"errorCall":{"arguments":[{"hexValue":"4c594e58","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11971:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6","typeString":"literal_string \"LYNX\""},"value":"LYNX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6","typeString":"literal_string \"LYNX\""}],"id":937,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"11956:14:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11956:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"RevertStatement","src":"11949:29:0"}]}},{"eventCall":{"arguments":[{"expression":{"id":944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12023:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12027:6:0","memberName":"sender","nodeType":"MemberAccess","src":"12023:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"lynxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"12035:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":943,"name":"LynxMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"12012:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12012:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"EmitStatement","src":"12007:39:0"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"10985:100:0","text":" @dev Internal function to mint and transfer LYNX tokens using inherited functions"},"id":950,"implemented":true,"kind":"function","modifiers":[],"name":"_mintAndTransfer","nameLocation":"11099:16:0","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"lynxAmount","nameLocation":"11124:10:0","nodeType":"VariableDeclaration","scope":950,"src":"11116:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"11116:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11115:20:0"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"11145:0:0"},"scope":1280,"src":"11090:963:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":962,"nodeType":"Block","src":"12177:45:0","statements":[{"expression":{"expression":{"arguments":[{"id":958,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12202:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:0","typeDescriptions":{}}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12208:7:0","memberName":"balance","nodeType":"MemberAccess","src":"12194:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":955,"id":961,"nodeType":"Return","src":"12187:28:0"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"12063:51:0","text":" @dev Get contract's HBAR balance"},"functionSelector":"7bd82c69","id":963,"implemented":true,"kind":"function","modifiers":[],"name":"getHbarBalance","nameLocation":"12128:14:0","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"12142:2:0"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":963,"src":"12168:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"12168:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12167:9:0"},"scope":1280,"src":"12119:103:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":990,"nodeType":"Block","src":"12360:127:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":972,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"12378:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12396:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DepositMinter_$1280","typeString":"contract DepositMinter"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12388:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"12388:7:0","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12388:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12402:7:0","memberName":"balance","nodeType":"MemberAccess","src":"12388:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12378:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420484241522062616c616e6365","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12411:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e4591e7aa5942b9a7e03764658fae7c504c791f64b8470252259d3c5547c83a","typeString":"literal_string \"Insufficient HBAR balance\""},"value":"Insufficient HBAR balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e4591e7aa5942b9a7e03764658fae7c504c791f64b8470252259d3c5547c83a","typeString":"literal_string \"Insufficient HBAR balance\""}],"id":971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12370:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12370:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"ExpressionStatement","src":"12370:69:0"},{"expression":{"arguments":[{"id":987,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"12473:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":984,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"12457:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12449:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"12449:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12449:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12464:8:0","memberName":"transfer","nodeType":"MemberAccess","src":"12449:23:0","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12449:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"ExpressionStatement","src":"12449:31:0"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"12232:57:0","text":" @dev Emergency withdrawal (admin only)"},"functionSelector":"d65db297","id":991,"implemented":true,"kind":"function","modifiers":[{"id":969,"kind":"modifierInvocation","modifierName":{"id":968,"name":"onlyAdmin","nameLocations":["12350:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"12350:9:0"},"nodeType":"ModifierInvocation","src":"12350:9:0"}],"name":"emergencyWithdrawHbar","nameLocation":"12303:21:0","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"amount","nameLocation":"12333:6:0","nodeType":"VariableDeclaration","scope":991,"src":"12325:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"12325:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12324:16:0"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"12360:0:0"},"scope":1280,"src":"12294:193:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1157,"nodeType":"Block","src":"12647:2137:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12661:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1000,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"12677:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12697:7:0","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"12677:27:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"12661:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"IfStatement","src":"12657:65:0","trueBody":{"expression":{"hexValue":"53554343455353","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12713:9:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8","typeString":"literal_string \"SUCCESS\""},"value":"SUCCESS"},"functionReturnParameters":998,"id":1004,"nodeType":"Return","src":"12706:16:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12736:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1007,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"12752:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12772:19:0","memberName":"INVALID_TRANSACTION","nodeType":"MemberAccess","referencedDeclaration":1290,"src":"12752:39:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"12736:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"IfStatement","src":"12732:89:0","trueBody":{"expression":{"hexValue":"494e56414c49445f5452414e53414354494f4e","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12800:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1959616e9694c25f125a3a33a027ee951a9a5f88d93f9db7af8a8de7ea512380","typeString":"literal_string \"INVALID_TRANSACTION\""},"value":"INVALID_TRANSACTION"},"functionReturnParameters":998,"id":1011,"nodeType":"Return","src":"12793:28:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12835:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1014,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"12851:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12871:23:0","memberName":"PAYER_ACCOUNT_NOT_FOUND","nodeType":"MemberAccess","referencedDeclaration":1294,"src":"12851:43:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"12835:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1019,"nodeType":"IfStatement","src":"12831:97:0","trueBody":{"expression":{"hexValue":"50415945525f4143434f554e545f4e4f545f464f554e44","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12903:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b42163419a74cdcd71cff41e9870291b75bc9c824fdd88f1c8a47b7db624e1a3","typeString":"literal_string \"PAYER_ACCOUNT_NOT_FOUND\""},"value":"PAYER_ACCOUNT_NOT_FOUND"},"functionReturnParameters":998,"id":1018,"nodeType":"Return","src":"12896:32:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1020,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12942:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1021,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"12958:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12978:20:0","memberName":"INVALID_NODE_ACCOUNT","nodeType":"MemberAccess","referencedDeclaration":1298,"src":"12958:40:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"12942:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1026,"nodeType":"IfStatement","src":"12938:91:0","trueBody":{"expression":{"hexValue":"494e56414c49445f4e4f44455f4143434f554e54","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13007:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_135ee03153e70044a536d8c7593cc65d703f0e942d8325d5d3ab0dc42b002a94","typeString":"literal_string \"INVALID_NODE_ACCOUNT\""},"value":"INVALID_NODE_ACCOUNT"},"functionReturnParameters":998,"id":1025,"nodeType":"Return","src":"13000:29:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1027,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13043:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1028,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13059:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13079:19:0","memberName":"TRANSACTION_EXPIRED","nodeType":"MemberAccess","referencedDeclaration":1302,"src":"13059:39:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13043:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1033,"nodeType":"IfStatement","src":"13039:89:0","trueBody":{"expression":{"hexValue":"5452414e53414354494f4e5f45585049524544","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13107:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff3154e3f5005abd30252b55e88eb415459dbd60809dc02162ba69a327568aa","typeString":"literal_string \"TRANSACTION_EXPIRED\""},"value":"TRANSACTION_EXPIRED"},"functionReturnParameters":998,"id":1032,"nodeType":"Return","src":"13100:28:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1034,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13142:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1035,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13158:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13178:25:0","memberName":"INVALID_TRANSACTION_START","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"13158:45:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13142:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1040,"nodeType":"IfStatement","src":"13138:101:0","trueBody":{"expression":{"hexValue":"494e56414c49445f5452414e53414354494f4e5f5354415254","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13212:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c571138d6c1b5bee694af774ff034d9daec1ad2e9ba2b0ffeeb3bf3491b2ea9","typeString":"literal_string \"INVALID_TRANSACTION_START\""},"value":"INVALID_TRANSACTION_START"},"functionReturnParameters":998,"id":1039,"nodeType":"Return","src":"13205:34:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1041,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13253:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1042,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13269:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13289:28:0","memberName":"INVALID_TRANSACTION_DURATION","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"13269:48:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13253:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1047,"nodeType":"IfStatement","src":"13249:107:0","trueBody":{"expression":{"hexValue":"494e56414c49445f5452414e53414354494f4e5f4455524154494f4e","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13326:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3442d0183d6eeddba5b878f540f4bd3f66064daca2f644672fb5d3725c7c467b","typeString":"literal_string \"INVALID_TRANSACTION_DURATION\""},"value":"INVALID_TRANSACTION_DURATION"},"functionReturnParameters":998,"id":1046,"nodeType":"Return","src":"13319:37:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13370:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1049,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13386:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13406:17:0","memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"13386:37:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13370:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1054,"nodeType":"IfStatement","src":"13366:85:0","trueBody":{"expression":{"hexValue":"494e56414c49445f5349474e4154555245","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13432:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""},"value":"INVALID_SIGNATURE"},"functionReturnParameters":998,"id":1053,"nodeType":"Return","src":"13425:26:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1055,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13465:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1056,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13481:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13501:13:0","memberName":"MEMO_TOO_LONG","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"13481:33:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13465:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1061,"nodeType":"IfStatement","src":"13461:77:0","trueBody":{"expression":{"hexValue":"4d454d4f5f544f4f5f4c4f4e47","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13523:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b34e2bd3976f6e837390b17ed17bfd787c51adfeedde65f8cd60ca6c8c477021","typeString":"literal_string \"MEMO_TOO_LONG\""},"value":"MEMO_TOO_LONG"},"functionReturnParameters":998,"id":1060,"nodeType":"Return","src":"13516:22:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1062,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13552:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1063,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13568:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13588:19:0","memberName":"INSUFFICIENT_TX_FEE","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"13568:39:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13552:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"13548:89:0","trueBody":{"expression":{"hexValue":"494e53554646494349454e545f54585f464545","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13616:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8551843b9bac1a381c7bae1489961a5b0a16d1e8d22f0db7cf3b6b8bf17dd7d","typeString":"literal_string \"INSUFFICIENT_TX_FEE\""},"value":"INSUFFICIENT_TX_FEE"},"functionReturnParameters":998,"id":1067,"nodeType":"Return","src":"13609:28:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13651:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1070,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13667:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13687:26:0","memberName":"INSUFFICIENT_PAYER_BALANCE","nodeType":"MemberAccess","referencedDeclaration":1326,"src":"13667:46:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13651:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1075,"nodeType":"IfStatement","src":"13647:103:0","trueBody":{"expression":{"hexValue":"494e53554646494349454e545f50415945525f42414c414e4345","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13722:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f8be4a16b5a838b1a12d5d7d184aeda3070375c474b1360ab0d50fc80277690","typeString":"literal_string \"INSUFFICIENT_PAYER_BALANCE\""},"value":"INSUFFICIENT_PAYER_BALANCE"},"functionReturnParameters":998,"id":1074,"nodeType":"Return","src":"13715:35:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1076,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13764:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1077,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13780:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13800:21:0","memberName":"DUPLICATE_TRANSACTION","nodeType":"MemberAccess","referencedDeclaration":1330,"src":"13780:41:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13764:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1082,"nodeType":"IfStatement","src":"13760:93:0","trueBody":{"expression":{"hexValue":"4455504c49434154455f5452414e53414354494f4e","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13830:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_642c5206276bb05a57ec08fc2021c2b9b5d2ef5b5c9c5bef56953f7e4cb32b85","typeString":"literal_string \"DUPLICATE_TRANSACTION\""},"value":"DUPLICATE_TRANSACTION"},"functionReturnParameters":998,"id":1081,"nodeType":"Return","src":"13823:30:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13867:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1084,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13883:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13903:4:0","memberName":"BUSY","nodeType":"MemberAccess","referencedDeclaration":1334,"src":"13883:24:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13867:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1089,"nodeType":"IfStatement","src":"13863:59:0","trueBody":{"expression":{"hexValue":"42555359","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13916:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbad011041dfdf6a37e63fc4c5ca823bf04a564d7ff6a39d2ccec1751e355930","typeString":"literal_string \"BUSY\""},"value":"BUSY"},"functionReturnParameters":998,"id":1088,"nodeType":"Return","src":"13909:13:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"13936:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1091,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13952:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13972:13:0","memberName":"NOT_SUPPORTED","nodeType":"MemberAccess","referencedDeclaration":1338,"src":"13952:33:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"13936:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1096,"nodeType":"IfStatement","src":"13932:77:0","trueBody":{"expression":{"hexValue":"4e4f545f535550504f52544544","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13994:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2a8e7139f3bc1b76f03a9ab4d7a5e5329d0cc7d7a0c99dcd453eb8f41b24b0b","typeString":"literal_string \"NOT_SUPPORTED\""},"value":"NOT_SUPPORTED"},"functionReturnParameters":998,"id":1095,"nodeType":"Return","src":"13987:22:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14023:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1098,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14039:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14059:15:0","memberName":"INVALID_FILE_ID","nodeType":"MemberAccess","referencedDeclaration":1342,"src":"14039:35:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"14023:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1103,"nodeType":"IfStatement","src":"14019:81:0","trueBody":{"expression":{"hexValue":"494e56414c49445f46494c455f4944","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14083:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac50884b83947960fac0dae3cc02a2083237719f3040021678031d9068db39e","typeString":"literal_string \"INVALID_FILE_ID\""},"value":"INVALID_FILE_ID"},"functionReturnParameters":998,"id":1102,"nodeType":"Return","src":"14076:24:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1104,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14114:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1105,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14130:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14150:18:0","memberName":"INVALID_ACCOUNT_ID","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"14130:38:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"14114:54:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1110,"nodeType":"IfStatement","src":"14110:87:0","trueBody":{"expression":{"hexValue":"494e56414c49445f4143434f554e545f4944","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14177:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f6f017668de0c6c66b5f45efa8fbddd5fc11908116a41471472224c85ca6453","typeString":"literal_string \"INVALID_ACCOUNT_ID\""},"value":"INVALID_ACCOUNT_ID"},"functionReturnParameters":998,"id":1109,"nodeType":"Return","src":"14170:27:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14211:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1112,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14227:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14247:19:0","memberName":"INVALID_CONTRACT_ID","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"14227:39:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"14211:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"nodeType":"IfStatement","src":"14207:89:0","trueBody":{"expression":{"hexValue":"494e56414c49445f434f4e54524143545f4944","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14275:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_47de561eef5f887785040d73e0f837f8cf809b06284d1f32357f2c269189db13","typeString":"literal_string \"INVALID_CONTRACT_ID\""},"value":"INVALID_CONTRACT_ID"},"functionReturnParameters":998,"id":1116,"nodeType":"Return","src":"14268:28:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1118,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14310:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1119,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14326:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14346:22:0","memberName":"INVALID_TRANSACTION_ID","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"14326:42:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"14310:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1124,"nodeType":"IfStatement","src":"14306:95:0","trueBody":{"expression":{"hexValue":"494e56414c49445f5452414e53414354494f4e5f4944","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14377:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc302f9724257ea6c511ddd737649ccade4cea9bef8a789704e1a81c462580f0","typeString":"literal_string \"INVALID_TRANSACTION_ID\""},"value":"INVALID_TRANSACTION_ID"},"functionReturnParameters":998,"id":1123,"nodeType":"Return","src":"14370:31:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14415:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1126,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14431:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14451:17:0","memberName":"RECEIPT_NOT_FOUND","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"14431:37:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"14415:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"14411:85:0","trueBody":{"expression":{"hexValue":"524543454950545f4e4f545f464f554e44","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14477:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_61129ca04d5c9ac0e0364c2f445b35c52da8d83b92ac677e0a134bd3a126c62d","typeString":"literal_string \"RECEIPT_NOT_FOUND\""},"value":"RECEIPT_NOT_FOUND"},"functionReturnParameters":998,"id":1130,"nodeType":"Return","src":"14470:26:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14510:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1133,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14526:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14546:16:0","memberName":"RECORD_NOT_FOUND","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"14526:36:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"14510:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1138,"nodeType":"IfStatement","src":"14506:83:0","trueBody":{"expression":{"hexValue":"5245434f52445f4e4f545f464f554e44","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14571:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d7d83bf3d124a2274f544a5f27b58d0f8bf508269f39494b61a97f4cf5b189","typeString":"literal_string \"RECORD_NOT_FOUND\""},"value":"RECORD_NOT_FOUND"},"functionReturnParameters":998,"id":1137,"nodeType":"Return","src":"14564:25:0"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14603:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1140,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14619:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14639:19:0","memberName":"INVALID_SOLIDITY_ID","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"14619:39:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"14603:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1145,"nodeType":"IfStatement","src":"14599:89:0","trueBody":{"expression":{"hexValue":"494e56414c49445f534f4c49444954595f4944","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14667:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5e08c88f7723f3dd176358c43fb334a5ed91f27a3ae80798c7a636330b5fe4b","typeString":"literal_string \"INVALID_SOLIDITY_ID\""},"value":"INVALID_SOLIDITY_ID"},"functionReturnParameters":998,"id":1144,"nodeType":"Return","src":"14660:28:0"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"554e4b4e4f574e5f4552524f525f","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14729:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f5cad8325c7c3f966939257287b21f13d866689bb45fe6acb014032f9156b49","typeString":"literal_string \"UNKNOWN_ERROR_\""},"value":"UNKNOWN_ERROR_"},{"arguments":[{"id":1152,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14762:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1151,"name":"_int64ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"14747:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_string_memory_ptr_$","typeString":"function (int256) pure returns (string memory)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14747:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6f5cad8325c7c3f966939257287b21f13d866689bb45fe6acb014032f9156b49","typeString":"literal_string \"UNKNOWN_ERROR_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1148,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14712:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14716:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"14712:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14712:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14705:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1146,"name":"string","nodeType":"ElementaryTypeName","src":"14705:6:0","typeDescriptions":{}}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14705:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":998,"id":1156,"nodeType":"Return","src":"14698:79:0"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"12493:64:0","text":" @dev Helper function to get HTS error message"},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"_getHTSErrorMessage","nameLocation":"12571:19:0","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"responseCode","nameLocation":"12595:12:0","nodeType":"VariableDeclaration","scope":1158,"src":"12591:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":993,"name":"int","nodeType":"ElementaryTypeName","src":"12591:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12590:18:0"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"12632:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":996,"name":"string","nodeType":"ElementaryTypeName","src":"12632:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12631:15:0"},"scope":1280,"src":"12562:2222:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1278,"nodeType":"Block","src":"14951:667:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"14965:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14974:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14965:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1171,"nodeType":"IfStatement","src":"14961:26:0","trueBody":{"expression":{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14984:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1165,"id":1170,"nodeType":"Return","src":"14977:10:0"}},{"assignments":[1173],"declarations":[{"constant":false,"id":1173,"mutability":"mutable","name":"negative","nameLocation":"15011:8:0","nodeType":"VariableDeclaration","scope":1278,"src":"15006:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1172,"name":"bool","nodeType":"ElementaryTypeName","src":"15006:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1177,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"15022:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15030:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15022:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15006:25:0"},{"assignments":[1179],"declarations":[{"constant":false,"id":1179,"mutability":"mutable","name":"absValue","nameLocation":"15046:8:0","nodeType":"VariableDeclaration","scope":1278,"src":"15041:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint","nodeType":"ElementaryTypeName","src":"15041:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1191,"initialValue":{"condition":{"id":1180,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"15057:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"15088:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15083:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1186,"name":"uint","nodeType":"ElementaryTypeName","src":"15083:4:0","typeDescriptions":{}}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15083:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15057:37:0","trueExpression":{"arguments":[{"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"15073:6:0","subExpression":{"id":1183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"15074:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15068:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1181,"name":"uint","nodeType":"ElementaryTypeName","src":"15068:4:0","typeDescriptions":{}}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15068:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15041:53:0"},{"assignments":[1193],"declarations":[{"constant":false,"id":1193,"mutability":"mutable","name":"buffer","nameLocation":"15126:6:0","nodeType":"VariableDeclaration","scope":1278,"src":"15113:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"15113:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1198,"initialValue":{"arguments":[{"hexValue":"3332","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15145:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15135:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1194,"name":"bytes","nodeType":"ElementaryTypeName","src":"15139:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15135:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15113:35:0"},{"assignments":[1200],"declarations":[{"constant":false,"id":1200,"mutability":"mutable","name":"index","nameLocation":"15166:5:0","nodeType":"VariableDeclaration","scope":1278,"src":"15158:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"15158:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1202,"initialValue":{"hexValue":"3331","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15174:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"nodeType":"VariableDeclarationStatement","src":"15158:18:0"},{"body":{"id":1227,"nodeType":"Block","src":"15217:104:0","statements":[{"expression":{"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1206,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"15231:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1209,"indexExpression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"15238:7:0","subExpression":{"id":1207,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"15238:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15231:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15262:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15267:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15278:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"15267:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15262:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15256:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1212,"name":"uint8","nodeType":"ElementaryTypeName","src":"15256:5:0","typeDescriptions":{}}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15256:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15249:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1210,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15249:6:0","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15249:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"15231:51:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1222,"nodeType":"ExpressionStatement","src":"15231:51:0"},{"expression":{"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1223,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15296:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15308:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"15296:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1226,"nodeType":"ExpressionStatement","src":"15296:14:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15202:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15214:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15202:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1228,"nodeType":"WhileStatement","src":"15195:126:0"},{"condition":{"id":1229,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"15343:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"nodeType":"IfStatement","src":"15339:60:0","trueBody":{"id":1237,"nodeType":"Block","src":"15353:46:0","statements":[{"expression":{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1230,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"15367:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1233,"indexExpression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"15374:7:0","subExpression":{"id":1231,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"15374:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15367:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"2d","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15385:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"src":"15367:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1236,"nodeType":"ExpressionStatement","src":"15367:21:0"}]}},{"assignments":[1240],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"result","nameLocation":"15430:6:0","nodeType":"VariableDeclaration","scope":1278,"src":"15417:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1239,"name":"bytes","nodeType":"ElementaryTypeName","src":"15417:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1247,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3331","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15449:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1244,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"15454:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15449:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15439:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1241,"name":"bytes","nodeType":"ElementaryTypeName","src":"15443:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15439:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15417:43:0"},{"body":{"id":1271,"nodeType":"Block","src":"15514:58:0","statements":[{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15528:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1261,"indexExpression":{"id":1260,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"15535:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15528:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1262,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"15540:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1268,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"15547:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15555:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15547:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1266,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"15559:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15547:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15540:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"15528:33:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1270,"nodeType":"ExpressionStatement","src":"15528:33:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1252,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"15490:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1253,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15494:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15501:6:0","memberName":"length","nodeType":"MemberAccess","src":"15494:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15490:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"initializationExpression":{"assignments":[1249],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"i","nameLocation":"15483:1:0","nodeType":"VariableDeclaration","scope":1272,"src":"15475:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"15475:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1251,"initialValue":{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15487:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15475:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15509:3:0","subExpression":{"id":1256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"15509:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1258,"nodeType":"ExpressionStatement","src":"15509:3:0"},"nodeType":"ForStatement","src":"15470:102:0"},{"expression":{"arguments":[{"id":1275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15604:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15597:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1273,"name":"string","nodeType":"ElementaryTypeName","src":"15597:6:0","typeDescriptions":{}}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15597:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1165,"id":1277,"nodeType":"Return","src":"15590:21:0"}]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"14790:83:0","text":" @dev Helper function to convert int to string for error messages"},"id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"_int64ToString","nameLocation":"14887:14:0","nodeType":"FunctionDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"value","nameLocation":"14906:5:0","nodeType":"VariableDeclaration","scope":1279,"src":"14902:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1160,"name":"int","nodeType":"ElementaryTypeName","src":"14902:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"14901:11:0"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1279,"src":"14936:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1163,"name":"string","nodeType":"ElementaryTypeName","src":"14936:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14935:15:0"},"scope":1280,"src":"14878:740:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1281,"src":"339:15281:0","usedErrors":[108,110,114,122,130,134,138,144],"usedEvents":[42,48,56,62,74,82,88,98,106,2715]}],"src":"32:15589:0"},"id":0},"app/contracts/HederaResponseCodes.sol":{"ast":{"absolutePath":"app/contracts/HederaResponseCodes.sol","exportedSymbols":{"HederaResponseCodes":[2666]},"id":2667,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1282,"literals":["solidity",">=","0.4",".9","<","0.9",".0"],"nodeType":"PragmaDirective","src":"39:31:1"},{"abstract":false,"baseContracts":[],"canonicalName":"HederaResponseCodes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2666,"linearizedBaseContracts":[2666],"name":"HederaResponseCodes","nameLocation":"399:19:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"425:52:1","text":"The transaction passed the precheck validations."},"id":1286,"mutability":"constant","name":"OK","nameLocation":"506:2:1","nodeType":"VariableDeclaration","scope":2666,"src":"482:30:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1284,"name":"int32","nodeType":"ElementaryTypeName","src":"482:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"511:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"519:67:1","text":"For any error not handled by specific error codes listed below."},"id":1290,"mutability":"constant","name":"INVALID_TRANSACTION","nameLocation":"615:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"591:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1288,"name":"int32","nodeType":"ElementaryTypeName","src":"591:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"31","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"637:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"645:33:1","text":"Payer account does not exist."},"id":1294,"mutability":"constant","name":"PAYER_ACCOUNT_NOT_FOUND","nameLocation":"707:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"683:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1292,"name":"int32","nodeType":"ElementaryTypeName","src":"683:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"32","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"733:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"741:103:1","text":"Node Account provided does not match the node account of the node the transaction was submitted to."},"id":1298,"mutability":"constant","name":"INVALID_NODE_ACCOUNT","nameLocation":"873:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"849:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1296,"name":"int32","nodeType":"ElementaryTypeName","src":"849:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"33","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"896:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"904:110:1","text":"Pre-Check error when TransactionValidStart + transactionValidDuration is less than current consensus time."},"id":1302,"mutability":"constant","name":"TRANSACTION_EXPIRED","nameLocation":"1043:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"1019:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1300,"name":"int32","nodeType":"ElementaryTypeName","src":"1019:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"34","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1065:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"constant":true,"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"1073:65:1","text":"Transaction start time is greater than current consensus time"},"id":1306,"mutability":"constant","name":"INVALID_TRANSACTION_START","nameLocation":"1167:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"1143:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1304,"name":"int32","nodeType":"ElementaryTypeName","src":"1143:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"35","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:1:1","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"internal"},{"constant":true,"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"1203:119:1","text":"The given transactionValidDuration was either non-positive, or greater than the maximum valid duration of 180 secs."},"id":1310,"mutability":"constant","name":"INVALID_TRANSACTION_DURATION","nameLocation":"1351:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"1327:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1308,"name":"int32","nodeType":"ElementaryTypeName","src":"1327:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"36","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1382:1:1","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"internal"},{"constant":true,"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"1390:42:1","text":"The transaction signature is not valid"},"id":1314,"mutability":"constant","name":"INVALID_SIGNATURE","nameLocation":"1461:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"1437:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1312,"name":"int32","nodeType":"ElementaryTypeName","src":"1437:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"37","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1481:1:1","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"internal"},{"constant":true,"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"1489:44:1","text":"Transaction memo size exceeded 100 bytes"},"id":1318,"mutability":"constant","name":"MEMO_TOO_LONG","nameLocation":"1562:13:1","nodeType":"VariableDeclaration","scope":2666,"src":"1538:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1316,"name":"int32","nodeType":"ElementaryTypeName","src":"1538:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"38","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1578:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"internal"},{"constant":true,"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"1586:84:1","text":"The fee provided in the transaction is insufficient for this type of transaction"},"id":1322,"mutability":"constant","name":"INSUFFICIENT_TX_FEE","nameLocation":"1699:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"1675:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1320,"name":"int32","nodeType":"ElementaryTypeName","src":"1675:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"39","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:1:1","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"visibility":"internal"},{"constant":true,"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"1729:80:1","text":"The payer account has insufficient cryptocurrency to pay the transaction fee"},"id":1326,"mutability":"constant","name":"INSUFFICIENT_PAYER_BALANCE","nameLocation":"1838:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"1814:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1324,"name":"int32","nodeType":"ElementaryTypeName","src":"1814:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3130","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1867:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"internal"},{"constant":true,"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"1876:139:1","text":"This transaction ID is a duplicate of one that was submitted to this node or reached consensus in the last 180 seconds (receipt period)"},"id":1330,"mutability":"constant","name":"DUPLICATE_TRANSACTION","nameLocation":"2044:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"2020:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1328,"name":"int32","nodeType":"ElementaryTypeName","src":"2020:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3131","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2068:2:1","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"2077:27:1","text":"If API is throttled out"},"id":1334,"mutability":"constant","name":"BUSY","nameLocation":"2133:4:1","nodeType":"VariableDeclaration","scope":2666,"src":"2109:33:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1332,"name":"int32","nodeType":"ElementaryTypeName","src":"2109:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3132","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2140:2:1","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"2149:38:1","text":"The API is not currently supported"},"id":1338,"mutability":"constant","name":"NOT_SUPPORTED","nameLocation":"2216:13:1","nodeType":"VariableDeclaration","scope":2666,"src":"2192:42:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1336,"name":"int32","nodeType":"ElementaryTypeName","src":"2192:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3133","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:2:1","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"visibility":"internal"},{"constant":true,"documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"2241:44:1","text":"The file id is invalid or does not exist"},"id":1342,"mutability":"constant","name":"INVALID_FILE_ID","nameLocation":"2314:15:1","nodeType":"VariableDeclaration","scope":2666,"src":"2290:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1340,"name":"int32","nodeType":"ElementaryTypeName","src":"2290:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3134","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2332:2:1","typeDescriptions":{"typeIdentifier":"t_rational_14_by_1","typeString":"int_const 14"},"value":"14"},"visibility":"internal"},{"constant":true,"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"2341:47:1","text":"The account id is invalid or does not exist"},"id":1346,"mutability":"constant","name":"INVALID_ACCOUNT_ID","nameLocation":"2417:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"2393:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1344,"name":"int32","nodeType":"ElementaryTypeName","src":"2393:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3135","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2438:2:1","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"visibility":"internal"},{"constant":true,"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"2447:48:1","text":"The contract id is invalid or does not exist"},"id":1350,"mutability":"constant","name":"INVALID_CONTRACT_ID","nameLocation":"2524:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"2500:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1348,"name":"int32","nodeType":"ElementaryTypeName","src":"2500:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3136","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2546:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"internal"},{"constant":true,"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"2555:31:1","text":"Transaction id is not valid"},"id":1354,"mutability":"constant","name":"INVALID_TRANSACTION_ID","nameLocation":"2615:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"2591:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1352,"name":"int32","nodeType":"ElementaryTypeName","src":"2591:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3137","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2640:2:1","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"visibility":"internal"},{"constant":true,"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"2649:51:1","text":"Receipt for given transaction id does not exist"},"id":1358,"mutability":"constant","name":"RECEIPT_NOT_FOUND","nameLocation":"2729:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"2705:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1356,"name":"int32","nodeType":"ElementaryTypeName","src":"2705:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3138","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2749:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"internal"},{"constant":true,"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"2758:50:1","text":"Record for given transaction id does not exist"},"id":1362,"mutability":"constant","name":"RECORD_NOT_FOUND","nameLocation":"2837:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"2813:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1360,"name":"int32","nodeType":"ElementaryTypeName","src":"2813:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3139","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2856:2:1","typeDescriptions":{"typeIdentifier":"t_rational_19_by_1","typeString":"int_const 19"},"value":"19"},"visibility":"internal"},{"constant":true,"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"2865:77:1","text":"The solidity id is invalid or entity with this solidity id does not exist"},"id":1366,"mutability":"constant","name":"INVALID_SOLIDITY_ID","nameLocation":"2971:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"2947:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1364,"name":"int32","nodeType":"ElementaryTypeName","src":"2947:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3230","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2993:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"constant":true,"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"3002:104:1","text":"The responding node has submitted the transaction to the network. Its final status is still unknown."},"id":1370,"mutability":"constant","name":"UNKNOWN","nameLocation":"3135:7:1","nodeType":"VariableDeclaration","scope":2666,"src":"3111:36:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1368,"name":"int32","nodeType":"ElementaryTypeName","src":"3111:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3231","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3145:2:1","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"3154:29:1","text":"The transaction succeeded"},"id":1374,"mutability":"constant","name":"SUCCESS","nameLocation":"3212:7:1","nodeType":"VariableDeclaration","scope":2666,"src":"3188:36:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1372,"name":"int32","nodeType":"ElementaryTypeName","src":"3188:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3232","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3222:2:1","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"3231:94:1","text":"There was a system error and the transaction failed because of invalid request parameters."},"id":1378,"mutability":"constant","name":"FAIL_INVALID","nameLocation":"3354:12:1","nodeType":"VariableDeclaration","scope":2666,"src":"3330:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1376,"name":"int32","nodeType":"ElementaryTypeName","src":"3330:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3233","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:2:1","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"visibility":"internal"},{"constant":true,"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"3378:83:1","text":"There was a system error while performing fee calculation, reserved for future."},"id":1382,"mutability":"constant","name":"FAIL_FEE","nameLocation":"3490:8:1","nodeType":"VariableDeclaration","scope":2666,"src":"3466:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1380,"name":"int32","nodeType":"ElementaryTypeName","src":"3466:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3234","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:2:1","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"visibility":"internal"},{"constant":true,"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"3510:82:1","text":"There was a system error while performing balance checks, reserved for future."},"id":1386,"mutability":"constant","name":"FAIL_BALANCE","nameLocation":"3621:12:1","nodeType":"VariableDeclaration","scope":2666,"src":"3597:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1384,"name":"int32","nodeType":"ElementaryTypeName","src":"3597:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3235","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3636:2:1","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"visibility":"internal"},{"constant":true,"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"3645:44:1","text":"Key not provided in the transaction body"},"id":1390,"mutability":"constant","name":"KEY_REQUIRED","nameLocation":"3718:12:1","nodeType":"VariableDeclaration","scope":2666,"src":"3694:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1388,"name":"int32","nodeType":"ElementaryTypeName","src":"3694:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3236","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:2:1","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"visibility":"internal"},{"constant":true,"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"3742:67:1","text":"Unsupported algorithm/encoding used for keys in the transaction"},"id":1394,"mutability":"constant","name":"BAD_ENCODING","nameLocation":"3838:12:1","nodeType":"VariableDeclaration","scope":2666,"src":"3814:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1392,"name":"int32","nodeType":"ElementaryTypeName","src":"3814:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3237","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3853:2:1","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"visibility":"internal"},{"constant":true,"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"3862:63:1","text":"When the account balance is not sufficient for the transfer"},"id":1398,"mutability":"constant","name":"INSUFFICIENT_ACCOUNT_BALANCE","nameLocation":"3954:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"3930:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1396,"name":"int32","nodeType":"ElementaryTypeName","src":"3930:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3238","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3985:2:1","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"visibility":"internal"},{"constant":true,"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"3994:95:1","text":"During an update transaction when the system is not able to find the Users Solidity address"},"id":1402,"mutability":"constant","name":"INVALID_SOLIDITY_ADDRESS","nameLocation":"4118:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"4094:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1400,"name":"int32","nodeType":"ElementaryTypeName","src":"4094:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3239","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4145:2:1","typeDescriptions":{"typeIdentifier":"t_rational_29_by_1","typeString":"int_const 29"},"value":"29"},"visibility":"internal"},{"constant":true,"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"4154:54:1","text":"Not enough gas was supplied to execute transaction"},"id":1406,"mutability":"constant","name":"INSUFFICIENT_GAS","nameLocation":"4237:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"4213:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1404,"name":"int32","nodeType":"ElementaryTypeName","src":"4213:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3330","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:2:1","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"internal"},{"constant":true,"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"4265:45:1","text":"contract byte code size is over the limit"},"id":1410,"mutability":"constant","name":"CONTRACT_SIZE_LIMIT_EXCEEDED","nameLocation":"4339:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"4315:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1408,"name":"int32","nodeType":"ElementaryTypeName","src":"4315:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3331","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4370:2:1","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"4379:75:1","text":"local execution (query) is requested for a function which changes state"},"id":1414,"mutability":"constant","name":"LOCAL_CALL_MODIFICATION_EXCEPTION","nameLocation":"4483:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"4459:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1412,"name":"int32","nodeType":"ElementaryTypeName","src":"4459:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3332","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4519:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"4528:35:1","text":"Contract REVERT OPCODE executed"},"id":1418,"mutability":"constant","name":"CONTRACT_REVERT_EXECUTED","nameLocation":"4592:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"4568:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1416,"name":"int32","nodeType":"ElementaryTypeName","src":"4568:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3333","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4619:2:1","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"visibility":"internal"},{"constant":true,"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"4628:94:1","text":"For any contract execution related error not handled by specific error codes listed above."},"id":1422,"mutability":"constant","name":"CONTRACT_EXECUTION_EXCEPTION","nameLocation":"4751:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"4727:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1420,"name":"int32","nodeType":"ElementaryTypeName","src":"4727:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3334","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4782:2:1","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"visibility":"internal"},{"constant":true,"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"4791:149:1","text":"In Query validation, account with +ve(amount) value should be Receiving node account, the receiver account should be only one account in the list"},"id":1426,"mutability":"constant","name":"INVALID_RECEIVING_NODE_ACCOUNT","nameLocation":"4969:30:1","nodeType":"VariableDeclaration","scope":2666,"src":"4945:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1424,"name":"int32","nodeType":"ElementaryTypeName","src":"4945:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3335","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5002:2:1","typeDescriptions":{"typeIdentifier":"t_rational_35_by_1","typeString":"int_const 35"},"value":"35"},"visibility":"internal"},{"constant":true,"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"5011:38:1","text":"Header is missing in Query request"},"id":1430,"mutability":"constant","name":"MISSING_QUERY_HEADER","nameLocation":"5078:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"5054:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1428,"name":"int32","nodeType":"ElementaryTypeName","src":"5054:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3336","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5101:2:1","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"internal"},{"constant":true,"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"5110:36:1","text":"The update of the account failed"},"id":1434,"mutability":"constant","name":"ACCOUNT_UPDATE_FAILED","nameLocation":"5175:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"5151:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1432,"name":"int32","nodeType":"ElementaryTypeName","src":"5151:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3337","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5199:2:1","typeDescriptions":{"typeIdentifier":"t_rational_37_by_1","typeString":"int_const 37"},"value":"37"},"visibility":"internal"},{"constant":true,"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"5208:57:1","text":"Provided key encoding was not supported by the system"},"id":1438,"mutability":"constant","name":"INVALID_KEY_ENCODING","nameLocation":"5294:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"5270:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1436,"name":"int32","nodeType":"ElementaryTypeName","src":"5270:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3338","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5317:2:1","typeDescriptions":{"typeIdentifier":"t_rational_38_by_1","typeString":"int_const 38"},"value":"38"},"visibility":"internal"},{"constant":true,"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"5326:25:1","text":"null solidity address"},"id":1442,"mutability":"constant","name":"NULL_SOLIDITY_ADDRESS","nameLocation":"5380:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"5356:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1440,"name":"int32","nodeType":"ElementaryTypeName","src":"5356:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3339","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5404:2:1","typeDescriptions":{"typeIdentifier":"t_rational_39_by_1","typeString":"int_const 39"},"value":"39"},"visibility":"internal"},{"constant":true,"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"5413:33:1","text":"update of the contract failed"},"id":1446,"mutability":"constant","name":"CONTRACT_UPDATE_FAILED","nameLocation":"5475:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"5451:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1444,"name":"int32","nodeType":"ElementaryTypeName","src":"5451:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3430","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5500:2:1","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"visibility":"internal"},{"constant":true,"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"5509:31:1","text":"the query header is invalid"},"id":1450,"mutability":"constant","name":"INVALID_QUERY_HEADER","nameLocation":"5569:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"5545:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1448,"name":"int32","nodeType":"ElementaryTypeName","src":"5545:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3431","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5592:2:1","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1451,"nodeType":"StructuredDocumentation","src":"5601:25:1","text":"Invalid fee submitted"},"id":1454,"mutability":"constant","name":"INVALID_FEE_SUBMITTED","nameLocation":"5655:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"5631:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1452,"name":"int32","nodeType":"ElementaryTypeName","src":"5631:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3432","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5679:2:1","typeDescriptions":{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"},"value":"42"},"visibility":"internal"},{"constant":true,"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"5688:30:1","text":"Payer signature is invalid"},"id":1458,"mutability":"constant","name":"INVALID_PAYER_SIGNATURE","nameLocation":"5747:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"5723:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1456,"name":"int32","nodeType":"ElementaryTypeName","src":"5723:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3433","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5773:2:1","typeDescriptions":{"typeIdentifier":"t_rational_43_by_1","typeString":"int_const 43"},"value":"43"},"visibility":"internal"},{"constant":true,"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"5782:46:1","text":"The keys were not provided in the request."},"id":1462,"mutability":"constant","name":"KEY_NOT_PROVIDED","nameLocation":"5857:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"5833:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1460,"name":"int32","nodeType":"ElementaryTypeName","src":"5833:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3434","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5876:2:1","typeDescriptions":{"typeIdentifier":"t_rational_44_by_1","typeString":"int_const 44"},"value":"44"},"visibility":"internal"},{"constant":true,"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"5885:60:1","text":"Expiration time provided in the transaction was invalid."},"id":1466,"mutability":"constant","name":"INVALID_EXPIRATION_TIME","nameLocation":"5974:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"5950:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1464,"name":"int32","nodeType":"ElementaryTypeName","src":"5950:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3435","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6000:2:1","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"visibility":"internal"},{"constant":true,"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"6009:58:1","text":"WriteAccess Control Keys are not provided for the file"},"id":1470,"mutability":"constant","name":"NO_WACL_KEY","nameLocation":"6096:11:1","nodeType":"VariableDeclaration","scope":2666,"src":"6072:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1468,"name":"int32","nodeType":"ElementaryTypeName","src":"6072:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3436","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6110:2:1","typeDescriptions":{"typeIdentifier":"t_rational_46_by_1","typeString":"int_const 46"},"value":"46"},"visibility":"internal"},{"constant":true,"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"6119:47:1","text":"The contents of file are provided as empty."},"id":1474,"mutability":"constant","name":"FILE_CONTENT_EMPTY","nameLocation":"6195:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"6171:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1472,"name":"int32","nodeType":"ElementaryTypeName","src":"6171:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3437","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6216:2:1","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"visibility":"internal"},{"constant":true,"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"6225:62:1","text":"The crypto transfer credit and debit do not sum equal to 0"},"id":1478,"mutability":"constant","name":"INVALID_ACCOUNT_AMOUNTS","nameLocation":"6316:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"6292:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1476,"name":"int32","nodeType":"ElementaryTypeName","src":"6292:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3438","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6342:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"visibility":"internal"},{"constant":true,"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"6351:38:1","text":"Transaction body provided is empty"},"id":1482,"mutability":"constant","name":"EMPTY_TRANSACTION_BODY","nameLocation":"6418:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"6394:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1480,"name":"int32","nodeType":"ElementaryTypeName","src":"6394:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3439","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6443:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"visibility":"internal"},{"constant":true,"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"6452:37:1","text":"Invalid transaction body provided"},"id":1486,"mutability":"constant","name":"INVALID_TRANSACTION_BODY","nameLocation":"6518:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"6494:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1484,"name":"int32","nodeType":"ElementaryTypeName","src":"6494:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3530","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6545:2:1","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"internal"},{"constant":true,"documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"6554:167:1","text":"the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)"},"id":1490,"mutability":"constant","name":"INVALID_SIGNATURE_TYPE_MISMATCHING_KEY","nameLocation":"6750:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"6726:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1488,"name":"int32","nodeType":"ElementaryTypeName","src":"6726:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3531","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:1","typeDescriptions":{"typeIdentifier":"t_rational_51_by_1","typeString":"int_const 51"},"value":"51"},"visibility":"internal"},{"constant":true,"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"6800:232:1","text":"the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList, or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding signatureList should also have 3 base signatures."},"id":1494,"mutability":"constant","name":"INVALID_SIGNATURE_COUNT_MISMATCHING_KEY","nameLocation":"7061:39:1","nodeType":"VariableDeclaration","scope":2666,"src":"7037:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1492,"name":"int32","nodeType":"ElementaryTypeName","src":"7037:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3532","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7103:2:1","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"internal"},{"constant":true,"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"7112:30:1","text":"the livehash body is empty"},"id":1498,"mutability":"constant","name":"EMPTY_LIVE_HASH_BODY","nameLocation":"7171:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"7147:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1496,"name":"int32","nodeType":"ElementaryTypeName","src":"7147:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3533","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7194:2:1","typeDescriptions":{"typeIdentifier":"t_rational_53_by_1","typeString":"int_const 53"},"value":"53"},"visibility":"internal"},{"constant":true,"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"7203:32:1","text":"the livehash data is missing"},"id":1502,"mutability":"constant","name":"EMPTY_LIVE_HASH","nameLocation":"7264:15:1","nodeType":"VariableDeclaration","scope":2666,"src":"7240:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1500,"name":"int32","nodeType":"ElementaryTypeName","src":"7240:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3534","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7282:2:1","typeDescriptions":{"typeIdentifier":"t_rational_54_by_1","typeString":"int_const 54"},"value":"54"},"visibility":"internal"},{"constant":true,"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"7291:39:1","text":"the keys for a livehash are missing"},"id":1506,"mutability":"constant","name":"EMPTY_LIVE_HASH_KEYS","nameLocation":"7359:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"7335:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1504,"name":"int32","nodeType":"ElementaryTypeName","src":"7335:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3535","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:2:1","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"visibility":"internal"},{"constant":true,"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"7391:59:1","text":"the livehash data is not the output of a SHA-384 digest"},"id":1510,"mutability":"constant","name":"INVALID_LIVE_HASH_SIZE","nameLocation":"7479:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"7455:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1508,"name":"int32","nodeType":"ElementaryTypeName","src":"7455:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3536","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7504:2:1","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},"visibility":"internal"},{"constant":true,"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"7513:27:1","text":"the query body is empty"},"id":1514,"mutability":"constant","name":"EMPTY_QUERY_BODY","nameLocation":"7569:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"7545:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1512,"name":"int32","nodeType":"ElementaryTypeName","src":"7545:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3537","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7588:2:1","typeDescriptions":{"typeIdentifier":"t_rational_57_by_1","typeString":"int_const 57"},"value":"57"},"visibility":"internal"},{"constant":true,"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"7597:38:1","text":"the crypto livehash query is empty"},"id":1518,"mutability":"constant","name":"EMPTY_LIVE_HASH_QUERY","nameLocation":"7664:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"7640:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1516,"name":"int32","nodeType":"ElementaryTypeName","src":"7640:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3538","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7688:2:1","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"visibility":"internal"},{"constant":true,"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"7697:31:1","text":"the livehash is not present"},"id":1522,"mutability":"constant","name":"LIVE_HASH_NOT_FOUND","nameLocation":"7757:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"7733:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1520,"name":"int32","nodeType":"ElementaryTypeName","src":"7733:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3539","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7779:2:1","typeDescriptions":{"typeIdentifier":"t_rational_59_by_1","typeString":"int_const 59"},"value":"59"},"visibility":"internal"},{"constant":true,"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"7788:51:1","text":"the account id passed has not yet been created."},"id":1526,"mutability":"constant","name":"ACCOUNT_ID_DOES_NOT_EXIST","nameLocation":"7868:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"7844:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1524,"name":"int32","nodeType":"ElementaryTypeName","src":"7844:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3630","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:2:1","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"visibility":"internal"},{"constant":true,"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"7905:51:1","text":"the livehash already exists for a given account"},"id":1530,"mutability":"constant","name":"LIVE_HASH_ALREADY_EXISTS","nameLocation":"7985:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"7961:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1528,"name":"int32","nodeType":"ElementaryTypeName","src":"7961:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3631","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:2:1","typeDescriptions":{"typeIdentifier":"t_rational_61_by_1","typeString":"int_const 61"},"value":"61"},"visibility":"internal"},{"constant":true,"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"8021:30:1","text":"File WACL keys are invalid"},"id":1534,"mutability":"constant","name":"INVALID_FILE_WACL","nameLocation":"8080:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"8056:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1532,"name":"int32","nodeType":"ElementaryTypeName","src":"8056:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3632","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8100:2:1","typeDescriptions":{"typeIdentifier":"t_rational_62_by_1","typeString":"int_const 62"},"value":"62"},"visibility":"internal"},{"constant":true,"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"8109:25:1","text":"Serialization failure"},"id":1538,"mutability":"constant","name":"SERIALIZATION_FAILED","nameLocation":"8163:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"8139:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1536,"name":"int32","nodeType":"ElementaryTypeName","src":"8139:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3633","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8186:2:1","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"visibility":"internal"},{"constant":true,"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"8195:67:1","text":"The size of the Transaction is greater than transactionMaxBytes"},"id":1542,"mutability":"constant","name":"TRANSACTION_OVERSIZE","nameLocation":"8291:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"8267:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1540,"name":"int32","nodeType":"ElementaryTypeName","src":"8267:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3634","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8314:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"visibility":"internal"},{"constant":true,"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"8323:43:1","text":"The Transaction has more than 50 levels"},"id":1546,"mutability":"constant","name":"TRANSACTION_TOO_MANY_LAYERS","nameLocation":"8395:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"8371:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1544,"name":"int32","nodeType":"ElementaryTypeName","src":"8371:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3635","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8425:2:1","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"visibility":"internal"},{"constant":true,"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"8434:33:1","text":"Contract is marked as deleted"},"id":1550,"mutability":"constant","name":"CONTRACT_DELETED","nameLocation":"8496:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"8472:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1548,"name":"int32","nodeType":"ElementaryTypeName","src":"8472:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3636","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8515:2:1","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"visibility":"internal"},{"constant":true,"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"8524:63:1","text":"the platform node is either disconnected or lagging behind."},"id":1554,"mutability":"constant","name":"PLATFORM_NOT_ACTIVE","nameLocation":"8616:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"8592:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1552,"name":"int32","nodeType":"ElementaryTypeName","src":"8592:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3637","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8638:2:1","typeDescriptions":{"typeIdentifier":"t_rational_67_by_1","typeString":"int_const 67"},"value":"67"},"visibility":"internal"},{"constant":true,"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"8647:70:1","text":"one public key matches more than one prefixes on the signature map"},"id":1558,"mutability":"constant","name":"KEY_PREFIX_MISMATCH","nameLocation":"8746:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"8722:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1556,"name":"int32","nodeType":"ElementaryTypeName","src":"8722:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3638","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8768:2:1","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"visibility":"internal"},{"constant":true,"documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"8777:60:1","text":"transaction not created by platform due to large backlog"},"id":1562,"mutability":"constant","name":"PLATFORM_TRANSACTION_NOT_CREATED","nameLocation":"8866:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"8842:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1560,"name":"int32","nodeType":"ElementaryTypeName","src":"8842:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3639","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8901:2:1","typeDescriptions":{"typeIdentifier":"t_rational_69_by_1","typeString":"int_const 69"},"value":"69"},"visibility":"internal"},{"constant":true,"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"8910:59:1","text":"auto renewal period is not a positive number of seconds"},"id":1566,"mutability":"constant","name":"INVALID_RENEWAL_PERIOD","nameLocation":"8998:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"8974:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1564,"name":"int32","nodeType":"ElementaryTypeName","src":"8974:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3730","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9023:2:1","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},"visibility":"internal"},{"constant":true,"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"9032:81:1","text":"the response code when a smart contract id is passed for a crypto API request"},"id":1570,"mutability":"constant","name":"INVALID_PAYER_ACCOUNT_ID","nameLocation":"9142:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"9118:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1568,"name":"int32","nodeType":"ElementaryTypeName","src":"9118:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3731","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9169:2:1","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"visibility":"internal"},{"constant":true,"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"9178:42:1","text":"the account has been marked as deleted"},"id":1574,"mutability":"constant","name":"ACCOUNT_DELETED","nameLocation":"9249:15:1","nodeType":"VariableDeclaration","scope":2666,"src":"9225:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1572,"name":"int32","nodeType":"ElementaryTypeName","src":"9225:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3732","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9267:2:1","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},"visibility":"internal"},{"constant":true,"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"9276:39:1","text":"the file has been marked as deleted"},"id":1578,"mutability":"constant","name":"FILE_DELETED","nameLocation":"9344:12:1","nodeType":"VariableDeclaration","scope":2666,"src":"9320:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1576,"name":"int32","nodeType":"ElementaryTypeName","src":"9320:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3733","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9359:2:1","typeDescriptions":{"typeIdentifier":"t_rational_73_by_1","typeString":"int_const 73"},"value":"73"},"visibility":"internal"},{"constant":true,"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"9368:55:1","text":"same accounts repeated in the transfer account list"},"id":1582,"mutability":"constant","name":"ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS","nameLocation":"9452:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"9428:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1580,"name":"int32","nodeType":"ElementaryTypeName","src":"9428:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3734","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:2:1","typeDescriptions":{"typeIdentifier":"t_rational_74_by_1","typeString":"int_const 74"},"value":"74"},"visibility":"internal"},{"constant":true,"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"9499:63:1","text":"attempting to set negative balance value for crypto account"},"id":1586,"mutability":"constant","name":"SETTING_NEGATIVE_ACCOUNT_BALANCE","nameLocation":"9591:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"9567:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1584,"name":"int32","nodeType":"ElementaryTypeName","src":"9567:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3735","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9626:2:1","typeDescriptions":{"typeIdentifier":"t_rational_75_by_1","typeString":"int_const 75"},"value":"75"},"visibility":"internal"},{"constant":true,"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"9635:119:1","text":"when deleting smart contract that has crypto balance either transfer account or transfer smart contract is required"},"id":1590,"mutability":"constant","name":"OBTAINER_REQUIRED","nameLocation":"9783:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"9759:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1588,"name":"int32","nodeType":"ElementaryTypeName","src":"9759:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3736","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9803:2:1","typeDescriptions":{"typeIdentifier":"t_rational_76_by_1","typeString":"int_const 76"},"value":"76"},"visibility":"internal"},{"constant":true,"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"9812:140:1","text":"when deleting smart contract that has crypto balance you can not use the same contract id as transferContractId as the one being deleted"},"id":1594,"mutability":"constant","name":"OBTAINER_SAME_CONTRACT_ID","nameLocation":"9981:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"9957:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1592,"name":"int32","nodeType":"ElementaryTypeName","src":"9957:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3737","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10009:2:1","typeDescriptions":{"typeIdentifier":"t_rational_77_by_1","typeString":"int_const 77"},"value":"77"},"visibility":"internal"},{"constant":true,"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"10018:88:1","text":"transferAccountId or transferContractId specified for contract delete does not exist"},"id":1598,"mutability":"constant","name":"OBTAINER_DOES_NOT_EXIST","nameLocation":"10135:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"10111:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1596,"name":"int32","nodeType":"ElementaryTypeName","src":"10111:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3738","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10161:2:1","typeDescriptions":{"typeIdentifier":"t_rational_78_by_1","typeString":"int_const 78"},"value":"78"},"visibility":"internal"},{"constant":true,"documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"10170:108:1","text":"attempting to modify (update or delete a immutable smart contract, i.e. one created without a admin key)"},"id":1602,"mutability":"constant","name":"MODIFYING_IMMUTABLE_CONTRACT","nameLocation":"10307:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"10283:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1600,"name":"int32","nodeType":"ElementaryTypeName","src":"10283:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3739","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:2:1","typeDescriptions":{"typeIdentifier":"t_rational_79_by_1","typeString":"int_const 79"},"value":"79"},"visibility":"internal"},{"constant":true,"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10347:56:1","text":"Unexpected exception thrown by file system functions"},"id":1606,"mutability":"constant","name":"FILE_SYSTEM_EXCEPTION","nameLocation":"10432:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"10408:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1604,"name":"int32","nodeType":"ElementaryTypeName","src":"10408:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3830","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10456:2:1","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"visibility":"internal"},{"constant":true,"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"10465:91:1","text":"the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]"},"id":1610,"mutability":"constant","name":"AUTORENEW_DURATION_NOT_IN_RANGE","nameLocation":"10585:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"10561:60:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1608,"name":"int32","nodeType":"ElementaryTypeName","src":"10561:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3831","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10619:2:1","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"81"},"visibility":"internal"},{"constant":true,"documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"10628:106:1","text":"Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex string."},"id":1614,"mutability":"constant","name":"ERROR_DECODING_BYTESTRING","nameLocation":"10763:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"10739:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1612,"name":"int32","nodeType":"ElementaryTypeName","src":"10739:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3832","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10791:2:1","typeDescriptions":{"typeIdentifier":"t_rational_82_by_1","typeString":"int_const 82"},"value":"82"},"visibility":"internal"},{"constant":true,"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"10800:54:1","text":"File to create a smart contract was of length zero"},"id":1618,"mutability":"constant","name":"CONTRACT_FILE_EMPTY","nameLocation":"10883:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"10859:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1616,"name":"int32","nodeType":"ElementaryTypeName","src":"10859:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3833","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10905:2:1","typeDescriptions":{"typeIdentifier":"t_rational_83_by_1","typeString":"int_const 83"},"value":"83"},"visibility":"internal"},{"constant":true,"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"10914:49:1","text":"Bytecode for smart contract is of length zero"},"id":1622,"mutability":"constant","name":"CONTRACT_BYTECODE_EMPTY","nameLocation":"10992:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"10968:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1620,"name":"int32","nodeType":"ElementaryTypeName","src":"10968:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3834","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11018:2:1","typeDescriptions":{"typeIdentifier":"t_rational_84_by_1","typeString":"int_const 84"},"value":"84"},"visibility":"internal"},{"constant":true,"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"11027:43:1","text":"Attempt to set negative initial balance"},"id":1626,"mutability":"constant","name":"INVALID_INITIAL_BALANCE","nameLocation":"11099:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"11075:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1624,"name":"int32","nodeType":"ElementaryTypeName","src":"11075:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3835","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11125:2:1","typeDescriptions":{"typeIdentifier":"t_rational_85_by_1","typeString":"int_const 85"},"value":"85"},"visibility":"internal"},{"constant":true,"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"11134:52:1","text":"Attempt to set negative receive record threshold"},"id":1630,"mutability":"constant","name":"INVALID_RECEIVE_RECORD_THRESHOLD","nameLocation":"11215:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"11191:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1628,"name":"int32","nodeType":"ElementaryTypeName","src":"11191:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3836","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11250:2:1","typeDescriptions":{"typeIdentifier":"t_rational_86_by_1","typeString":"int_const 86"},"value":"86"},"visibility":"internal"},{"constant":true,"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"11259:49:1","text":"Attempt to set negative send record threshold"},"id":1634,"mutability":"constant","name":"INVALID_SEND_RECORD_THRESHOLD","nameLocation":"11337:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"11313:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1632,"name":"int32","nodeType":"ElementaryTypeName","src":"11313:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3837","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11369:2:1","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"visibility":"internal"},{"constant":true,"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"11378:121:1","text":"Special Account Operations should be performed by only Genesis account, return this code if it is not Genesis Account"},"id":1638,"mutability":"constant","name":"ACCOUNT_IS_NOT_GENESIS_ACCOUNT","nameLocation":"11528:30:1","nodeType":"VariableDeclaration","scope":2666,"src":"11504:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1636,"name":"int32","nodeType":"ElementaryTypeName","src":"11504:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3838","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11561:2:1","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},"visibility":"internal"},{"constant":true,"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"11570:76:1","text":"The fee payer account doesn't have permission to submit such Transaction"},"id":1642,"mutability":"constant","name":"PAYER_ACCOUNT_UNAUTHORIZED","nameLocation":"11675:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"11651:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1640,"name":"int32","nodeType":"ElementaryTypeName","src":"11651:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3839","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11704:2:1","typeDescriptions":{"typeIdentifier":"t_rational_89_by_1","typeString":"int_const 89"},"value":"89"},"visibility":"internal"},{"constant":true,"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"11713:36:1","text":"FreezeTransactionBody is invalid"},"id":1646,"mutability":"constant","name":"INVALID_FREEZE_TRANSACTION_BODY","nameLocation":"11778:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"11754:60:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1644,"name":"int32","nodeType":"ElementaryTypeName","src":"11754:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3930","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11812:2:1","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"visibility":"internal"},{"constant":true,"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"11821:40:1","text":"FreezeTransactionBody does not exist"},"id":1650,"mutability":"constant","name":"FREEZE_TRANSACTION_BODY_NOT_FOUND","nameLocation":"11890:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"11866:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1648,"name":"int32","nodeType":"ElementaryTypeName","src":"11866:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3931","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11926:2:1","typeDescriptions":{"typeIdentifier":"t_rational_91_by_1","typeString":"int_const 91"},"value":"91"},"visibility":"internal"},{"constant":true,"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"11935:87:1","text":"Exceeded the number of accounts (both from and to) allowed for crypto transfer list"},"id":1654,"mutability":"constant","name":"TRANSFER_LIST_SIZE_LIMIT_EXCEEDED","nameLocation":"12051:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"12027:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1652,"name":"int32","nodeType":"ElementaryTypeName","src":"12027:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3932","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12087:2:1","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"92"},"visibility":"internal"},{"constant":true,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"12096:67:1","text":"Smart contract result size greater than specified maxResultSize"},"id":1658,"mutability":"constant","name":"RESULT_SIZE_LIMIT_EXCEEDED","nameLocation":"12192:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"12168:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1656,"name":"int32","nodeType":"ElementaryTypeName","src":"12168:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3933","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12221:2:1","typeDescriptions":{"typeIdentifier":"t_rational_93_by_1","typeString":"int_const 93"},"value":"93"},"visibility":"internal"},{"constant":true,"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"12230:62:1","text":"The payer account is not a special account(account 0.0.55)"},"id":1662,"mutability":"constant","name":"NOT_SPECIAL_ACCOUNT","nameLocation":"12321:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"12297:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1660,"name":"int32","nodeType":"ElementaryTypeName","src":"12297:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3934","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12343:2:1","typeDescriptions":{"typeIdentifier":"t_rational_94_by_1","typeString":"int_const 94"},"value":"94"},"visibility":"internal"},{"constant":true,"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"12352:51:1","text":"Negative gas was offered in smart contract call"},"id":1666,"mutability":"constant","name":"CONTRACT_NEGATIVE_GAS","nameLocation":"12432:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"12408:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1664,"name":"int32","nodeType":"ElementaryTypeName","src":"12408:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3935","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12456:2:1","typeDescriptions":{"typeIdentifier":"t_rational_95_by_1","typeString":"int_const 95"},"value":"95"},"visibility":"internal"},{"constant":true,"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"12465:84:1","text":"Negative value / initial balance was specified in a smart contract call / create"},"id":1670,"mutability":"constant","name":"CONTRACT_NEGATIVE_VALUE","nameLocation":"12578:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"12554:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1668,"name":"int32","nodeType":"ElementaryTypeName","src":"12554:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3936","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12604:2:1","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"constant":true,"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"12613:29:1","text":"Failed to update fee file"},"id":1674,"mutability":"constant","name":"INVALID_FEE_FILE","nameLocation":"12671:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"12647:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1672,"name":"int32","nodeType":"ElementaryTypeName","src":"12647:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3937","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12690:2:1","typeDescriptions":{"typeIdentifier":"t_rational_97_by_1","typeString":"int_const 97"},"value":"97"},"visibility":"internal"},{"constant":true,"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"12699:39:1","text":"Failed to update exchange rate file"},"id":1678,"mutability":"constant","name":"INVALID_EXCHANGE_RATE_FILE","nameLocation":"12767:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"12743:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1676,"name":"int32","nodeType":"ElementaryTypeName","src":"12743:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3938","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12796:2:1","typeDescriptions":{"typeIdentifier":"t_rational_98_by_1","typeString":"int_const 98"},"value":"98"},"visibility":"internal"},{"constant":true,"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"12805:82:1","text":"Payment tendered for contract local call cannot cover both the fee and the gas"},"id":1682,"mutability":"constant","name":"INSUFFICIENT_LOCAL_CALL_GAS","nameLocation":"12916:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"12892:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1680,"name":"int32","nodeType":"ElementaryTypeName","src":"12892:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"3939","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12946:2:1","typeDescriptions":{"typeIdentifier":"t_rational_99_by_1","typeString":"int_const 99"},"value":"99"},"visibility":"internal"},{"constant":true,"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"12955:68:1","text":"Entities with Entity ID below 1000 are not allowed to be deleted"},"id":1686,"mutability":"constant","name":"ENTITY_NOT_ALLOWED_TO_DELETE","nameLocation":"13052:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"13028:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1684,"name":"int32","nodeType":"ElementaryTypeName","src":"13028:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313030","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13083:3:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":true,"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"13093:477:1","text":"Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2) account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102), ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate (0.0.112)."},"id":1690,"mutability":"constant","name":"AUTHORIZATION_FAILED","nameLocation":"13599:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"13575:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1688,"name":"int32","nodeType":"ElementaryTypeName","src":"13575:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313031","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13622:3:1","typeDescriptions":{"typeIdentifier":"t_rational_101_by_1","typeString":"int_const 101"},"value":"101"},"visibility":"internal"},{"constant":true,"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"13632:76:1","text":"Fee Schedule Proto uploaded but not valid (append or update is required)"},"id":1694,"mutability":"constant","name":"FILE_UPLOADED_PROTO_INVALID","nameLocation":"13737:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"13713:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1692,"name":"int32","nodeType":"ElementaryTypeName","src":"13713:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313032","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13767:3:1","typeDescriptions":{"typeIdentifier":"t_rational_102_by_1","typeString":"int_const 102"},"value":"102"},"visibility":"internal"},{"constant":true,"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"13777:76:1","text":"Fee Schedule Proto uploaded but not valid (append or update is required)"},"id":1698,"mutability":"constant","name":"FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK","nameLocation":"13882:37:1","nodeType":"VariableDeclaration","scope":2666,"src":"13858:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1696,"name":"int32","nodeType":"ElementaryTypeName","src":"13858:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313033","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13922:3:1","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"visibility":"internal"},{"constant":true,"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"13932:41:1","text":"Fee Schedule Proto File Part uploaded"},"id":1702,"mutability":"constant","name":"FEE_SCHEDULE_FILE_PART_UPLOADED","nameLocation":"14002:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"13978:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1700,"name":"int32","nodeType":"ElementaryTypeName","src":"13978:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313034","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14036:3:1","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},"visibility":"internal"},{"constant":true,"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"14046:72:1","text":"The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage"},"id":1706,"mutability":"constant","name":"EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED","nameLocation":"14147:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"14123:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1704,"name":"int32","nodeType":"ElementaryTypeName","src":"14123:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313035","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:3:1","typeDescriptions":{"typeIdentifier":"t_rational_105_by_1","typeString":"int_const 105"},"value":"105"},"visibility":"internal"},{"constant":true,"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"14195:69:1","text":"Contract permanent storage exceeded the currently allowable limit"},"id":1710,"mutability":"constant","name":"MAX_CONTRACT_STORAGE_EXCEEDED","nameLocation":"14293:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"14269:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1708,"name":"int32","nodeType":"ElementaryTypeName","src":"14269:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313036","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14325:3:1","typeDescriptions":{"typeIdentifier":"t_rational_106_by_1","typeString":"int_const 106"},"value":"106"},"visibility":"internal"},{"constant":true,"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"14335:64:1","text":"Transfer Account should not be same as Account to be deleted"},"id":1714,"mutability":"constant","name":"TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT","nameLocation":"14428:39:1","nodeType":"VariableDeclaration","scope":2666,"src":"14404:69:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1712,"name":"int32","nodeType":"ElementaryTypeName","src":"14404:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313037","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14470:3:1","typeDescriptions":{"typeIdentifier":"t_rational_107_by_1","typeString":"int_const 107"},"value":"107"},"visibility":"internal"},{"constant":true,"id":1717,"mutability":"constant","name":"TOTAL_LEDGER_BALANCE_INVALID","nameLocation":"14504:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"14480:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1715,"name":"int32","nodeType":"ElementaryTypeName","src":"14480:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313038","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14535:3:1","typeDescriptions":{"typeIdentifier":"t_rational_108_by_1","typeString":"int_const 108"},"value":"108"},"visibility":"internal"},{"constant":true,"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"14545:67:1","text":"The expiration date/time on a smart contract may not be reduced"},"id":1721,"mutability":"constant","name":"EXPIRATION_REDUCTION_NOT_ALLOWED","nameLocation":"14641:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"14617:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1719,"name":"int32","nodeType":"ElementaryTypeName","src":"14617:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313130","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14676:3:1","typeDescriptions":{"typeIdentifier":"t_rational_110_by_1","typeString":"int_const 110"},"value":"110"},"visibility":"internal"},{"constant":true,"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"14686:62:1","text":"Gas exceeded currently allowable gas limit per transaction"},"id":1725,"mutability":"constant","name":"MAX_GAS_LIMIT_EXCEEDED","nameLocation":"14777:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"14753:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1723,"name":"int32","nodeType":"ElementaryTypeName","src":"14753:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313131","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14802:3:1","typeDescriptions":{"typeIdentifier":"t_rational_111_by_1","typeString":"int_const 111"},"value":"111"},"visibility":"internal"},{"constant":true,"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"14812:52:1","text":"File size exceeded the currently allowable limit"},"id":1729,"mutability":"constant","name":"MAX_FILE_SIZE_EXCEEDED","nameLocation":"14893:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"14869:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1727,"name":"int32","nodeType":"ElementaryTypeName","src":"14869:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313132","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14918:3:1","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},"visibility":"internal"},{"constant":true,"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"14928:98:1","text":"When a valid signature is not provided for operations on account with receiverSigRequired=true"},"id":1733,"mutability":"constant","name":"RECEIVER_SIG_REQUIRED","nameLocation":"15055:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"15031:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1731,"name":"int32","nodeType":"ElementaryTypeName","src":"15031:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313133","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15079:3:1","typeDescriptions":{"typeIdentifier":"t_rational_113_by_1","typeString":"int_const 113"},"value":"113"},"visibility":"internal"},{"constant":true,"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"15089:48:1","text":"The Topic ID specified is not in the system."},"id":1737,"mutability":"constant","name":"INVALID_TOPIC_ID","nameLocation":"15166:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"15142:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1735,"name":"int32","nodeType":"ElementaryTypeName","src":"15142:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313530","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15185:3:1","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},"visibility":"internal"},{"constant":true,"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"15195:218:1","text":"A provided admin key was invalid. Verify the bytes for an Ed25519 public key are exactly 32 bytes; and the bytes for a compressed ECDSA(secp256k1) key are exactly 33 bytes, with the first byte either 0x02 or 0x03.."},"id":1741,"mutability":"constant","name":"INVALID_ADMIN_KEY","nameLocation":"15442:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"15418:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1739,"name":"int32","nodeType":"ElementaryTypeName","src":"15418:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313535","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15462:3:1","typeDescriptions":{"typeIdentifier":"t_rational_155_by_1","typeString":"int_const 155"},"value":"155"},"visibility":"internal"},{"constant":true,"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"15472:38:1","text":"A provided submit key was invalid."},"id":1745,"mutability":"constant","name":"INVALID_SUBMIT_KEY","nameLocation":"15539:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"15515:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1743,"name":"int32","nodeType":"ElementaryTypeName","src":"15515:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313536","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15560:3:1","typeDescriptions":{"typeIdentifier":"t_rational_156_by_1","typeString":"int_const 156"},"value":"156"},"visibility":"internal"},{"constant":true,"documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"15570:96:1","text":"An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey)."},"id":1749,"mutability":"constant","name":"UNAUTHORIZED","nameLocation":"15695:12:1","nodeType":"VariableDeclaration","scope":2666,"src":"15671:42:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1747,"name":"int32","nodeType":"ElementaryTypeName","src":"15671:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313537","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15710:3:1","typeDescriptions":{"typeIdentifier":"t_rational_157_by_1","typeString":"int_const 157"},"value":"157"},"visibility":"internal"},{"constant":true,"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"15720:40:1","text":"A ConsensusService message is empty."},"id":1753,"mutability":"constant","name":"INVALID_TOPIC_MESSAGE","nameLocation":"15789:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"15765:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1751,"name":"int32","nodeType":"ElementaryTypeName","src":"15765:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313538","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15813:3:1","typeDescriptions":{"typeIdentifier":"t_rational_158_by_1","typeString":"int_const 158"},"value":"158"},"visibility":"internal"},{"constant":true,"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"15823:66:1","text":"The autoRenewAccount specified is not a valid, active account."},"id":1757,"mutability":"constant","name":"INVALID_AUTORENEW_ACCOUNT","nameLocation":"15918:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"15894:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1755,"name":"int32","nodeType":"ElementaryTypeName","src":"15894:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313539","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15946:3:1","typeDescriptions":{"typeIdentifier":"t_rational_159_by_1","typeString":"int_const 159"},"value":"159"},"visibility":"internal"},{"constant":true,"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"15956:89:1","text":"An adminKey was not specified on the topic, so there must not be an autoRenewAccount."},"id":1761,"mutability":"constant","name":"AUTORENEW_ACCOUNT_NOT_ALLOWED","nameLocation":"16074:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"16050:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1759,"name":"int32","nodeType":"ElementaryTypeName","src":"16050:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313630","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16106:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"visibility":"internal"},{"constant":true,"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"16116:234:1","text":"The topic has expired, was not automatically renewed, and is in a 7 day grace period before the topic will be deleted unrecoverably. This error response code will not be returned until autoRenew functionality is supported by HAPI."},"id":1765,"mutability":"constant","name":"TOPIC_EXPIRED","nameLocation":"16379:13:1","nodeType":"VariableDeclaration","scope":2666,"src":"16355:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1763,"name":"int32","nodeType":"ElementaryTypeName","src":"16355:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313632","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16395:3:1","typeDescriptions":{"typeIdentifier":"t_rational_162_by_1","typeString":"int_const 162"},"value":"162"},"visibility":"internal"},{"constant":true,"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"16405:60:1","text":"chunk number must be from 1 to total (chunks) inclusive."},"id":1769,"mutability":"constant","name":"INVALID_CHUNK_NUMBER","nameLocation":"16494:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"16470:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1767,"name":"int32","nodeType":"ElementaryTypeName","src":"16470:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313633","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16517:3:1","typeDescriptions":{"typeIdentifier":"t_rational_163_by_1","typeString":"int_const 163"},"value":"163"},"visibility":"internal"},{"constant":true,"documentation":{"id":1770,"nodeType":"StructuredDocumentation","src":"16527:289:1","text":"For every chunk, the payer account that is part of initialTransactionID must match the Payer Account of this transaction. The entire initialTransactionID should match the transactionID of the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1."},"id":1773,"mutability":"constant","name":"INVALID_CHUNK_TRANSACTION_ID","nameLocation":"16845:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"16821:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1771,"name":"int32","nodeType":"ElementaryTypeName","src":"16821:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313634","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16876:3:1","typeDescriptions":{"typeIdentifier":"t_rational_164_by_1","typeString":"int_const 164"},"value":"164"},"visibility":"internal"},{"constant":true,"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"16886:56:1","text":"Account is frozen and cannot transact with the token"},"id":1777,"mutability":"constant","name":"ACCOUNT_FROZEN_FOR_TOKEN","nameLocation":"16971:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"16947:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1775,"name":"int32","nodeType":"ElementaryTypeName","src":"16947:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313635","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16998:3:1","typeDescriptions":{"typeIdentifier":"t_rational_165_by_1","typeString":"int_const 165"},"value":"165"},"visibility":"internal"},{"constant":true,"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"17008:113:1","text":"An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with non-deleted tokens."},"id":1781,"mutability":"constant","name":"TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED","nameLocation":"17150:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"17126:63:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1779,"name":"int32","nodeType":"ElementaryTypeName","src":"17126:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313636","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17186:3:1","typeDescriptions":{"typeIdentifier":"t_rational_166_by_1","typeString":"int_const 166"},"value":"166"},"visibility":"internal"},{"constant":true,"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"17196:42:1","text":"The token is invalid or does not exist"},"id":1785,"mutability":"constant","name":"INVALID_TOKEN_ID","nameLocation":"17267:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"17243:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1783,"name":"int32","nodeType":"ElementaryTypeName","src":"17243:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313637","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17286:3:1","typeDescriptions":{"typeIdentifier":"t_rational_167_by_1","typeString":"int_const 167"},"value":"167"},"visibility":"internal"},{"constant":true,"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"17296:26:1","text":"Invalid token decimals"},"id":1789,"mutability":"constant","name":"INVALID_TOKEN_DECIMALS","nameLocation":"17351:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"17327:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1787,"name":"int32","nodeType":"ElementaryTypeName","src":"17327:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313638","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17376:3:1","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},"visibility":"internal"},{"constant":true,"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"17386:32:1","text":"Invalid token initial supply"},"id":1793,"mutability":"constant","name":"INVALID_TOKEN_INITIAL_SUPPLY","nameLocation":"17447:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"17423:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1791,"name":"int32","nodeType":"ElementaryTypeName","src":"17423:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313639","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17478:3:1","typeDescriptions":{"typeIdentifier":"t_rational_169_by_1","typeString":"int_const 169"},"value":"169"},"visibility":"internal"},{"constant":true,"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"17488:49:1","text":"Treasury Account does not exist or is deleted"},"id":1797,"mutability":"constant","name":"INVALID_TREASURY_ACCOUNT_FOR_TOKEN","nameLocation":"17566:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"17542:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1795,"name":"int32","nodeType":"ElementaryTypeName","src":"17542:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313730","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17603:3:1","typeDescriptions":{"typeIdentifier":"t_rational_170_by_1","typeString":"int_const 170"},"value":"170"},"visibility":"internal"},{"constant":true,"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"17613:61:1","text":"Token Symbol is not UTF-8 capitalized alphabetical string"},"id":1801,"mutability":"constant","name":"INVALID_TOKEN_SYMBOL","nameLocation":"17703:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"17679:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1799,"name":"int32","nodeType":"ElementaryTypeName","src":"17679:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313731","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17726:3:1","typeDescriptions":{"typeIdentifier":"t_rational_171_by_1","typeString":"int_const 171"},"value":"171"},"visibility":"internal"},{"constant":true,"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"17736:34:1","text":"Freeze key is not set on token"},"id":1805,"mutability":"constant","name":"TOKEN_HAS_NO_FREEZE_KEY","nameLocation":"17799:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"17775:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1803,"name":"int32","nodeType":"ElementaryTypeName","src":"17775:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313732","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17825:3:1","typeDescriptions":{"typeIdentifier":"t_rational_172_by_1","typeString":"int_const 172"},"value":"172"},"visibility":"internal"},{"constant":true,"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"17835:45:1","text":"Amounts in transfer list are not net zero"},"id":1809,"mutability":"constant","name":"TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN","nameLocation":"17909:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"17885:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1807,"name":"int32","nodeType":"ElementaryTypeName","src":"17885:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313733","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17944:3:1","typeDescriptions":{"typeIdentifier":"t_rational_173_by_1","typeString":"int_const 173"},"value":"173"},"visibility":"internal"},{"constant":true,"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"17954:35:1","text":"A token symbol was not provided"},"id":1813,"mutability":"constant","name":"MISSING_TOKEN_SYMBOL","nameLocation":"18018:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"17994:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1811,"name":"int32","nodeType":"ElementaryTypeName","src":"17994:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313734","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18041:3:1","typeDescriptions":{"typeIdentifier":"t_rational_174_by_1","typeString":"int_const 174"},"value":"174"},"visibility":"internal"},{"constant":true,"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"18051:42:1","text":"The provided token symbol was too long"},"id":1817,"mutability":"constant","name":"TOKEN_SYMBOL_TOO_LONG","nameLocation":"18122:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"18098:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1815,"name":"int32","nodeType":"ElementaryTypeName","src":"18098:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313735","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18146:3:1","typeDescriptions":{"typeIdentifier":"t_rational_175_by_1","typeString":"int_const 175"},"value":"175"},"visibility":"internal"},{"constant":true,"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"18156:61:1","text":"KYC must be granted and account does not have KYC granted"},"id":1821,"mutability":"constant","name":"ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN","nameLocation":"18246:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"18222:63:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1819,"name":"int32","nodeType":"ElementaryTypeName","src":"18222:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313736","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18282:3:1","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},"visibility":"internal"},{"constant":true,"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"18292:31:1","text":"KYC key is not set on token"},"id":1825,"mutability":"constant","name":"TOKEN_HAS_NO_KYC_KEY","nameLocation":"18352:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"18328:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1823,"name":"int32","nodeType":"ElementaryTypeName","src":"18328:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313737","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18375:3:1","typeDescriptions":{"typeIdentifier":"t_rational_177_by_1","typeString":"int_const 177"},"value":"177"},"visibility":"internal"},{"constant":true,"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"18385:55:1","text":"Token balance is not sufficient for the transaction"},"id":1829,"mutability":"constant","name":"INSUFFICIENT_TOKEN_BALANCE","nameLocation":"18469:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"18445:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1827,"name":"int32","nodeType":"ElementaryTypeName","src":"18445:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313738","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18498:3:1","typeDescriptions":{"typeIdentifier":"t_rational_178_by_1","typeString":"int_const 178"},"value":"178"},"visibility":"internal"},{"constant":true,"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"18508:58:1","text":"Token transactions cannot be executed on deleted token"},"id":1833,"mutability":"constant","name":"TOKEN_WAS_DELETED","nameLocation":"18595:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"18571:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1831,"name":"int32","nodeType":"ElementaryTypeName","src":"18571:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313739","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18615:3:1","typeDescriptions":{"typeIdentifier":"t_rational_179_by_1","typeString":"int_const 179"},"value":"179"},"visibility":"internal"},{"constant":true,"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"18625:34:1","text":"Supply key is not set on token"},"id":1837,"mutability":"constant","name":"TOKEN_HAS_NO_SUPPLY_KEY","nameLocation":"18688:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"18664:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1835,"name":"int32","nodeType":"ElementaryTypeName","src":"18664:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313830","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18714:3:1","typeDescriptions":{"typeIdentifier":"t_rational_180_by_1","typeString":"int_const 180"},"value":"180"},"visibility":"internal"},{"constant":true,"documentation":{"id":1838,"nodeType":"StructuredDocumentation","src":"18724:32:1","text":"Wipe key is not set on token"},"id":1841,"mutability":"constant","name":"TOKEN_HAS_NO_WIPE_KEY","nameLocation":"18785:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"18761:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1839,"name":"int32","nodeType":"ElementaryTypeName","src":"18761:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313831","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18809:3:1","typeDescriptions":{"typeIdentifier":"t_rational_181_by_1","typeString":"int_const 181"},"value":"181"},"visibility":"internal"},{"constant":true,"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"18819:71:1","text":"The requested token mint amount would cause an invalid total supply"},"id":1845,"mutability":"constant","name":"INVALID_TOKEN_MINT_AMOUNT","nameLocation":"18919:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"18895:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1843,"name":"int32","nodeType":"ElementaryTypeName","src":"18895:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313832","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18947:3:1","typeDescriptions":{"typeIdentifier":"t_rational_182_by_1","typeString":"int_const 182"},"value":"182"},"visibility":"internal"},{"constant":true,"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"18957:71:1","text":"The requested token burn amount would cause an invalid total supply"},"id":1849,"mutability":"constant","name":"INVALID_TOKEN_BURN_AMOUNT","nameLocation":"19057:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"19033:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1847,"name":"int32","nodeType":"ElementaryTypeName","src":"19033:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313833","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19085:3:1","typeDescriptions":{"typeIdentifier":"t_rational_183_by_1","typeString":"int_const 183"},"value":"183"},"visibility":"internal"},{"constant":true,"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"19095:52:1","text":"A required token-account relationship is missing"},"id":1853,"mutability":"constant","name":"TOKEN_NOT_ASSOCIATED_TO_ACCOUNT","nameLocation":"19176:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"19152:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1851,"name":"int32","nodeType":"ElementaryTypeName","src":"19152:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313834","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19210:3:1","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},"visibility":"internal"},{"constant":true,"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"19220:65:1","text":"The target of a wipe operation was the token treasury account"},"id":1857,"mutability":"constant","name":"CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT","nameLocation":"19314:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"19290:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1855,"name":"int32","nodeType":"ElementaryTypeName","src":"19290:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313835","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19351:3:1","typeDescriptions":{"typeIdentifier":"t_rational_185_by_1","typeString":"int_const 185"},"value":"185"},"visibility":"internal"},{"constant":true,"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"19361:37:1","text":"The provided KYC key was invalid."},"id":1861,"mutability":"constant","name":"INVALID_KYC_KEY","nameLocation":"19427:15:1","nodeType":"VariableDeclaration","scope":2666,"src":"19403:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1859,"name":"int32","nodeType":"ElementaryTypeName","src":"19403:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313836","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19445:3:1","typeDescriptions":{"typeIdentifier":"t_rational_186_by_1","typeString":"int_const 186"},"value":"186"},"visibility":"internal"},{"constant":true,"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"19455:38:1","text":"The provided wipe key was invalid."},"id":1865,"mutability":"constant","name":"INVALID_WIPE_KEY","nameLocation":"19522:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"19498:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1863,"name":"int32","nodeType":"ElementaryTypeName","src":"19498:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313837","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19541:3:1","typeDescriptions":{"typeIdentifier":"t_rational_187_by_1","typeString":"int_const 187"},"value":"187"},"visibility":"internal"},{"constant":true,"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"19551:40:1","text":"The provided freeze key was invalid."},"id":1869,"mutability":"constant","name":"INVALID_FREEZE_KEY","nameLocation":"19620:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"19596:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1867,"name":"int32","nodeType":"ElementaryTypeName","src":"19596:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313838","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19641:3:1","typeDescriptions":{"typeIdentifier":"t_rational_188_by_1","typeString":"int_const 188"},"value":"188"},"visibility":"internal"},{"constant":true,"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"19651:40:1","text":"The provided supply key was invalid."},"id":1873,"mutability":"constant","name":"INVALID_SUPPLY_KEY","nameLocation":"19720:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"19696:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1871,"name":"int32","nodeType":"ElementaryTypeName","src":"19696:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313839","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19741:3:1","typeDescriptions":{"typeIdentifier":"t_rational_189_by_1","typeString":"int_const 189"},"value":"189"},"visibility":"internal"},{"constant":true,"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"19751:30:1","text":"Token Name is not provided"},"id":1877,"mutability":"constant","name":"MISSING_TOKEN_NAME","nameLocation":"19810:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"19786:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1875,"name":"int32","nodeType":"ElementaryTypeName","src":"19786:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313930","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19831:3:1","typeDescriptions":{"typeIdentifier":"t_rational_190_by_1","typeString":"int_const 190"},"value":"190"},"visibility":"internal"},{"constant":true,"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"19841:26:1","text":"Token Name is too long"},"id":1881,"mutability":"constant","name":"TOKEN_NAME_TOO_LONG","nameLocation":"19896:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"19872:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1879,"name":"int32","nodeType":"ElementaryTypeName","src":"19872:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313931","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19918:3:1","typeDescriptions":{"typeIdentifier":"t_rational_191_by_1","typeString":"int_const 191"},"value":"191"},"visibility":"internal"},{"constant":true,"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"19928:95:1","text":"The provided wipe amount must not be negative, zero or bigger than the token holder balance"},"id":1885,"mutability":"constant","name":"INVALID_WIPING_AMOUNT","nameLocation":"20052:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"20028:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1883,"name":"int32","nodeType":"ElementaryTypeName","src":"20028:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313932","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20076:3:1","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"visibility":"internal"},{"constant":true,"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"20086:90:1","text":"Token does not have Admin key set, thus update/delete transactions cannot be performed"},"id":1889,"mutability":"constant","name":"TOKEN_IS_IMMUTABLE","nameLocation":"20205:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"20181:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1887,"name":"int32","nodeType":"ElementaryTypeName","src":"20181:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313933","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20226:3:1","typeDescriptions":{"typeIdentifier":"t_rational_193_by_1","typeString":"int_const 193"},"value":"193"},"visibility":"internal"},{"constant":true,"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"20236:92:1","text":"An <tt>associateToken</tt> operation specified a token already associated to the account"},"id":1893,"mutability":"constant","name":"TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT","nameLocation":"20357:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"20333:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1891,"name":"int32","nodeType":"ElementaryTypeName","src":"20333:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313934","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20395:3:1","typeDescriptions":{"typeIdentifier":"t_rational_194_by_1","typeString":"int_const 194"},"value":"194"},"visibility":"internal"},{"constant":true,"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"20405:94:1","text":"An attempted operation is invalid until all token balances for the target account are zero"},"id":1897,"mutability":"constant","name":"TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES","nameLocation":"20528:40:1","nodeType":"VariableDeclaration","scope":2666,"src":"20504:70:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1895,"name":"int32","nodeType":"ElementaryTypeName","src":"20504:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313935","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20571:3:1","typeDescriptions":{"typeIdentifier":"t_rational_195_by_1","typeString":"int_const 195"},"value":"195"},"visibility":"internal"},{"constant":true,"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"20581:71:1","text":"An attempted operation is invalid because the account is a treasury"},"id":1901,"mutability":"constant","name":"ACCOUNT_IS_TREASURY","nameLocation":"20681:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"20657:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1899,"name":"int32","nodeType":"ElementaryTypeName","src":"20657:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313936","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20703:3:1","typeDescriptions":{"typeIdentifier":"t_rational_196_by_1","typeString":"int_const 196"},"value":"196"},"visibility":"internal"},{"constant":true,"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"20713:43:1","text":"Same TokenIDs present in the token list"},"id":1905,"mutability":"constant","name":"TOKEN_ID_REPEATED_IN_TOKEN_LIST","nameLocation":"20785:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"20761:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1903,"name":"int32","nodeType":"ElementaryTypeName","src":"20761:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313937","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20819:3:1","typeDescriptions":{"typeIdentifier":"t_rational_197_by_1","typeString":"int_const 197"},"value":"197"},"visibility":"internal"},{"constant":true,"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"20829:93:1","text":"Exceeded the number of token transfers (both from and to) allowed for token transfer list"},"id":1909,"mutability":"constant","name":"TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED","nameLocation":"20951:39:1","nodeType":"VariableDeclaration","scope":2666,"src":"20927:69:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1907,"name":"int32","nodeType":"ElementaryTypeName","src":"20927:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313938","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20993:3:1","typeDescriptions":{"typeIdentifier":"t_rational_198_by_1","typeString":"int_const 198"},"value":"198"},"visibility":"internal"},{"constant":true,"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"21003:58:1","text":"TokenTransfersTransactionBody has no TokenTransferList"},"id":1913,"mutability":"constant","name":"EMPTY_TOKEN_TRANSFER_BODY","nameLocation":"21090:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"21066:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1911,"name":"int32","nodeType":"ElementaryTypeName","src":"21066:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"313939","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21118:3:1","typeDescriptions":{"typeIdentifier":"t_rational_199_by_1","typeString":"int_const 199"},"value":"199"},"visibility":"internal"},{"constant":true,"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"21128:80:1","text":"TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts"},"id":1917,"mutability":"constant","name":"EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS","nameLocation":"21237:36:1","nodeType":"VariableDeclaration","scope":2666,"src":"21213:66:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1915,"name":"int32","nodeType":"ElementaryTypeName","src":"21213:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323030","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21276:3:1","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"internal"},{"constant":true,"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"21286:91:1","text":"The Scheduled entity does not exist; or has now expired, been deleted, or been executed"},"id":1921,"mutability":"constant","name":"INVALID_SCHEDULE_ID","nameLocation":"21406:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"21382:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1919,"name":"int32","nodeType":"ElementaryTypeName","src":"21382:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323031","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21428:3:1","typeDescriptions":{"typeIdentifier":"t_rational_201_by_1","typeString":"int_const 201"},"value":"201"},"visibility":"internal"},{"constant":true,"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"21438:62:1","text":"The Scheduled entity cannot be modified. Admin key not set"},"id":1925,"mutability":"constant","name":"SCHEDULE_IS_IMMUTABLE","nameLocation":"21529:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"21505:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1923,"name":"int32","nodeType":"ElementaryTypeName","src":"21505:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323032","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21553:3:1","typeDescriptions":{"typeIdentifier":"t_rational_202_by_1","typeString":"int_const 202"},"value":"202"},"visibility":"internal"},{"constant":true,"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"21563:47:1","text":"The provided Scheduled Payer does not exist"},"id":1929,"mutability":"constant","name":"INVALID_SCHEDULE_PAYER_ID","nameLocation":"21639:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"21615:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1927,"name":"int32","nodeType":"ElementaryTypeName","src":"21615:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323033","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21667:3:1","typeDescriptions":{"typeIdentifier":"t_rational_203_by_1","typeString":"int_const 203"},"value":"203"},"visibility":"internal"},{"constant":true,"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"21677:72:1","text":"The Schedule Create Transaction TransactionID account does not exist"},"id":1933,"mutability":"constant","name":"INVALID_SCHEDULE_ACCOUNT_ID","nameLocation":"21778:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"21754:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1931,"name":"int32","nodeType":"ElementaryTypeName","src":"21754:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323034","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:1","typeDescriptions":{"typeIdentifier":"t_rational_204_by_1","typeString":"int_const 204"},"value":"204"},"visibility":"internal"},{"constant":true,"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"21818:116:1","text":"The provided sig map did not contain any new valid signatures from required signers of the scheduled transaction"},"id":1937,"mutability":"constant","name":"NO_NEW_VALID_SIGNATURES","nameLocation":"21963:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"21939:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1935,"name":"int32","nodeType":"ElementaryTypeName","src":"21939:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323035","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21989:3:1","typeDescriptions":{"typeIdentifier":"t_rational_205_by_1","typeString":"int_const 205"},"value":"205"},"visibility":"internal"},{"constant":true,"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"21999:131:1","text":"The required signers for a scheduled transaction cannot be resolved, for example because they do not exist or have been deleted"},"id":1941,"mutability":"constant","name":"UNRESOLVABLE_REQUIRED_SIGNERS","nameLocation":"22159:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"22135:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1939,"name":"int32","nodeType":"ElementaryTypeName","src":"22135:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323036","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22191:3:1","typeDescriptions":{"typeIdentifier":"t_rational_206_by_1","typeString":"int_const 206"},"value":"206"},"visibility":"internal"},{"constant":true,"documentation":{"id":1942,"nodeType":"StructuredDocumentation","src":"22201:55:1","text":"Only whitelisted transaction types may be scheduled"},"id":1945,"mutability":"constant","name":"SCHEDULED_TRANSACTION_NOT_IN_WHITELIST","nameLocation":"22285:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"22261:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1943,"name":"int32","nodeType":"ElementaryTypeName","src":"22261:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323037","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22326:3:1","typeDescriptions":{"typeIdentifier":"t_rational_207_by_1","typeString":"int_const 207"},"value":"207"},"visibility":"internal"},{"constant":true,"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"22336:118:1","text":"At least one of the signatures in the provided sig map did not represent a valid signature for any required signer"},"id":1949,"mutability":"constant","name":"SOME_SIGNATURES_WERE_INVALID","nameLocation":"22483:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"22459:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1947,"name":"int32","nodeType":"ElementaryTypeName","src":"22459:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323038","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22514:3:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},"visibility":"internal"},{"constant":true,"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"22524:67:1","text":"The scheduled field in the TransactionID may not be set to true"},"id":1953,"mutability":"constant","name":"TRANSACTION_ID_FIELD_NOT_ALLOWED","nameLocation":"22620:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"22596:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1951,"name":"int32","nodeType":"ElementaryTypeName","src":"22596:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323039","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22655:3:1","typeDescriptions":{"typeIdentifier":"t_rational_209_by_1","typeString":"int_const 209"},"value":"209"},"visibility":"internal"},{"constant":true,"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"22665:150:1","text":"A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that is, all fields other than scheduledPayerAccountID)"},"id":1957,"mutability":"constant","name":"IDENTICAL_SCHEDULE_ALREADY_CREATED","nameLocation":"22844:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"22820:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1955,"name":"int32","nodeType":"ElementaryTypeName","src":"22820:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323130","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22881:3:1","typeDescriptions":{"typeIdentifier":"t_rational_210_by_1","typeString":"int_const 210"},"value":"210"},"visibility":"internal"},{"constant":true,"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"22891:88:1","text":"A string field in the transaction has a UTF-8 encoding with the prohibited zero byte"},"id":1961,"mutability":"constant","name":"INVALID_ZERO_BYTE_IN_STRING","nameLocation":"23008:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"22984:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1959,"name":"int32","nodeType":"ElementaryTypeName","src":"22984:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323131","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23038:3:1","typeDescriptions":{"typeIdentifier":"t_rational_211_by_1","typeString":"int_const 211"},"value":"211"},"visibility":"internal"},{"constant":true,"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"23048:63:1","text":"A schedule being signed or deleted has already been deleted"},"id":1965,"mutability":"constant","name":"SCHEDULE_ALREADY_DELETED","nameLocation":"23140:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"23116:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1963,"name":"int32","nodeType":"ElementaryTypeName","src":"23116:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323132","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23167:3:1","typeDescriptions":{"typeIdentifier":"t_rational_212_by_1","typeString":"int_const 212"},"value":"212"},"visibility":"internal"},{"constant":true,"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"23177:64:1","text":"A schedule being signed or deleted has already been executed"},"id":1969,"mutability":"constant","name":"SCHEDULE_ALREADY_EXECUTED","nameLocation":"23270:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"23246:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1967,"name":"int32","nodeType":"ElementaryTypeName","src":"23246:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323133","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23298:3:1","typeDescriptions":{"typeIdentifier":"t_rational_213_by_1","typeString":"int_const 213"},"value":"213"},"visibility":"internal"},{"constant":true,"documentation":{"id":1970,"nodeType":"StructuredDocumentation","src":"23308:73:1","text":"ConsensusSubmitMessage request's message size is larger than allowed."},"id":1973,"mutability":"constant","name":"MESSAGE_SIZE_TOO_LARGE","nameLocation":"23410:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"23386:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1971,"name":"int32","nodeType":"ElementaryTypeName","src":"23386:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323134","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23435:3:1","typeDescriptions":{"typeIdentifier":"t_rational_214_by_1","typeString":"int_const 214"},"value":"214"},"visibility":"internal"},{"constant":true,"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"23445:79:1","text":"An operation was assigned to more than one throttle group in a given bucket"},"id":1977,"mutability":"constant","name":"OPERATION_REPEATED_IN_BUCKET_GROUPS","nameLocation":"23553:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"23529:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1975,"name":"int32","nodeType":"ElementaryTypeName","src":"23529:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323135","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23591:3:1","typeDescriptions":{"typeIdentifier":"t_rational_215_by_1","typeString":"int_const 215"},"value":"215"},"visibility":"internal"},{"constant":true,"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"23601:108:1","text":"The capacity needed to satisfy all opsPerSec groups in a bucket overflowed a signed 8-byte integral type"},"id":1981,"mutability":"constant","name":"BUCKET_CAPACITY_OVERFLOW","nameLocation":"23738:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"23714:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1979,"name":"int32","nodeType":"ElementaryTypeName","src":"23714:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323136","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23765:3:1","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},"visibility":"internal"},{"constant":true,"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"23775:193:1","text":"Given the network size in the address book, the node-level capacity for an operation would never be enough to accept a single request; usually means a bucket burstPeriod should be increased"},"id":1985,"mutability":"constant","name":"NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION","nameLocation":"23997:42:1","nodeType":"VariableDeclaration","scope":2666,"src":"23973:72:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1983,"name":"int32","nodeType":"ElementaryTypeName","src":"23973:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323137","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24042:3:1","typeDescriptions":{"typeIdentifier":"t_rational_217_by_1","typeString":"int_const 217"},"value":"217"},"visibility":"internal"},{"constant":true,"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"24052:52:1","text":"A bucket was defined without any throttle groups"},"id":1989,"mutability":"constant","name":"BUCKET_HAS_NO_THROTTLE_GROUPS","nameLocation":"24133:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"24109:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1987,"name":"int32","nodeType":"ElementaryTypeName","src":"24109:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323138","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24165:3:1","typeDescriptions":{"typeIdentifier":"t_rational_218_by_1","typeString":"int_const 218"},"value":"218"},"visibility":"internal"},{"constant":true,"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"24175:47:1","text":"A throttle group was granted zero opsPerSec"},"id":1993,"mutability":"constant","name":"THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC","nameLocation":"24251:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"24227:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1991,"name":"int32","nodeType":"ElementaryTypeName","src":"24227:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323139","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24289:3:1","typeDescriptions":{"typeIdentifier":"t_rational_219_by_1","typeString":"int_const 219"},"value":"219"},"visibility":"internal"},{"constant":true,"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"24299:103:1","text":"The throttle definitions file was updated, but some supported operations were not assigned a bucket"},"id":1997,"mutability":"constant","name":"SUCCESS_BUT_MISSING_EXPECTED_OPERATION","nameLocation":"24431:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"24407:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1995,"name":"int32","nodeType":"ElementaryTypeName","src":"24407:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323230","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24472:3:1","typeDescriptions":{"typeIdentifier":"t_rational_220_by_1","typeString":"int_const 220"},"value":"220"},"visibility":"internal"},{"constant":true,"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"24482:85:1","text":"The new contents for the throttle definitions system file were not valid protobuf"},"id":2001,"mutability":"constant","name":"UNPARSEABLE_THROTTLE_DEFINITIONS","nameLocation":"24596:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"24572:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1999,"name":"int32","nodeType":"ElementaryTypeName","src":"24572:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323231","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24631:3:1","typeDescriptions":{"typeIdentifier":"t_rational_221_by_1","typeString":"int_const 221"},"value":"221"},"visibility":"internal"},{"constant":true,"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"24641:102:1","text":"The new throttle definitions system file were invalid, and no more specific error could be divined"},"id":2005,"mutability":"constant","name":"INVALID_THROTTLE_DEFINITIONS","nameLocation":"24772:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"24748:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2003,"name":"int32","nodeType":"ElementaryTypeName","src":"24748:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323232","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24803:3:1","typeDescriptions":{"typeIdentifier":"t_rational_222_by_1","typeString":"int_const 222"},"value":"222"},"visibility":"internal"},{"constant":true,"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"24813:201:1","text":"The transaction references an account which has passed its expiration without renewal funds available, and currently remains in the ledger only because of the grace period given to expired entities"},"id":2009,"mutability":"constant","name":"ACCOUNT_EXPIRED_AND_PENDING_REMOVAL","nameLocation":"25043:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"25019:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2007,"name":"int32","nodeType":"ElementaryTypeName","src":"25019:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323233","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25081:3:1","typeDescriptions":{"typeIdentifier":"t_rational_223_by_1","typeString":"int_const 223"},"value":"223"},"visibility":"internal"},{"constant":true,"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"25091:28:1","text":"Invalid token max supply"},"id":2013,"mutability":"constant","name":"INVALID_TOKEN_MAX_SUPPLY","nameLocation":"25148:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"25124:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2011,"name":"int32","nodeType":"ElementaryTypeName","src":"25124:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323234","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25175:3:1","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"visibility":"internal"},{"constant":true,"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"25185:35:1","text":"Invalid token nft serial number"},"id":2017,"mutability":"constant","name":"INVALID_TOKEN_NFT_SERIAL_NUMBER","nameLocation":"25249:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"25225:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2015,"name":"int32","nodeType":"ElementaryTypeName","src":"25225:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323235","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25283:3:1","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"visibility":"internal"},{"constant":true,"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"25293:18:1","text":"Invalid nft id"},"id":2021,"mutability":"constant","name":"INVALID_NFT_ID","nameLocation":"25340:14:1","nodeType":"VariableDeclaration","scope":2666,"src":"25316:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2019,"name":"int32","nodeType":"ElementaryTypeName","src":"25316:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323236","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25357:3:1","typeDescriptions":{"typeIdentifier":"t_rational_226_by_1","typeString":"int_const 226"},"value":"226"},"visibility":"internal"},{"constant":true,"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"25367:28:1","text":"Nft metadata is too long"},"id":2025,"mutability":"constant","name":"METADATA_TOO_LONG","nameLocation":"25424:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"25400:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2023,"name":"int32","nodeType":"ElementaryTypeName","src":"25400:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323237","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25444:3:1","typeDescriptions":{"typeIdentifier":"t_rational_227_by_1","typeString":"int_const 227"},"value":"227"},"visibility":"internal"},{"constant":true,"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"25454:47:1","text":"Repeated operations count exceeds the limit"},"id":2029,"mutability":"constant","name":"BATCH_SIZE_LIMIT_EXCEEDED","nameLocation":"25530:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"25506:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2027,"name":"int32","nodeType":"ElementaryTypeName","src":"25506:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323238","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25558:3:1","typeDescriptions":{"typeIdentifier":"t_rational_228_by_1","typeString":"int_const 228"},"value":"228"},"visibility":"internal"},{"constant":true,"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"25568:65:1","text":"The range of data to be gathered is out of the set boundaries"},"id":2033,"mutability":"constant","name":"INVALID_QUERY_RANGE","nameLocation":"25662:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"25638:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2031,"name":"int32","nodeType":"ElementaryTypeName","src":"25638:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323239","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25684:3:1","typeDescriptions":{"typeIdentifier":"t_rational_229_by_1","typeString":"int_const 229"},"value":"229"},"visibility":"internal"},{"constant":true,"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"25694:53:1","text":"A custom fractional fee set a denominator of zero"},"id":2037,"mutability":"constant","name":"FRACTION_DIVIDES_BY_ZERO","nameLocation":"25776:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"25752:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2035,"name":"int32","nodeType":"ElementaryTypeName","src":"25752:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323330","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25803:3:1","typeDescriptions":{"typeIdentifier":"t_rational_230_by_1","typeString":"int_const 230"},"value":"230"},"visibility":"internal"},{"constant":true,"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"25813:55:1","text":"The transaction payer could not afford a custom fee"},"id":2041,"mutability":"constant","name":"INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE","nameLocation":"25897:41:1","nodeType":"VariableDeclaration","scope":2666,"src":"25873:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2039,"name":"int32","nodeType":"ElementaryTypeName","src":"25873:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323331","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25941:3:1","typeDescriptions":{"typeIdentifier":"t_rational_231_by_1","typeString":"int_const 231"},"value":"231"},"visibility":"internal"},{"constant":true,"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"25951:43:1","text":"More than 10 custom fees were specified"},"id":2045,"mutability":"constant","name":"CUSTOM_FEES_LIST_TOO_LONG","nameLocation":"26023:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"25999:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2043,"name":"int32","nodeType":"ElementaryTypeName","src":"25999:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323332","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26051:3:1","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"visibility":"internal"},{"constant":true,"documentation":{"id":2046,"nodeType":"StructuredDocumentation","src":"26061:62:1","text":"Any of the feeCollector accounts for customFees is invalid"},"id":2049,"mutability":"constant","name":"INVALID_CUSTOM_FEE_COLLECTOR","nameLocation":"26152:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"26128:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2047,"name":"int32","nodeType":"ElementaryTypeName","src":"26128:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323333","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26183:3:1","typeDescriptions":{"typeIdentifier":"t_rational_233_by_1","typeString":"int_const 233"},"value":"233"},"visibility":"internal"},{"constant":true,"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"26193:49:1","text":"Any of the token Ids in customFees is invalid"},"id":2053,"mutability":"constant","name":"INVALID_TOKEN_ID_IN_CUSTOM_FEES","nameLocation":"26271:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"26247:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2051,"name":"int32","nodeType":"ElementaryTypeName","src":"26247:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323334","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26305:3:1","typeDescriptions":{"typeIdentifier":"t_rational_234_by_1","typeString":"int_const 234"},"value":"234"},"visibility":"internal"},{"constant":true,"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"26315:73:1","text":"Any of the token Ids in customFees are not associated to feeCollector"},"id":2057,"mutability":"constant","name":"TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR","nameLocation":"26417:37:1","nodeType":"VariableDeclaration","scope":2666,"src":"26393:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2055,"name":"int32","nodeType":"ElementaryTypeName","src":"26393:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323335","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26457:3:1","typeDescriptions":{"typeIdentifier":"t_rational_235_by_1","typeString":"int_const 235"},"value":"235"},"visibility":"internal"},{"constant":true,"documentation":{"id":2058,"nodeType":"StructuredDocumentation","src":"26467:78:1","text":"A token cannot have more units minted due to its configured supply ceiling"},"id":2061,"mutability":"constant","name":"TOKEN_MAX_SUPPLY_REACHED","nameLocation":"26574:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"26550:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2059,"name":"int32","nodeType":"ElementaryTypeName","src":"26550:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323336","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26601:3:1","typeDescriptions":{"typeIdentifier":"t_rational_236_by_1","typeString":"int_const 236"},"value":"236"},"visibility":"internal"},{"constant":true,"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"26611:95:1","text":"The transaction attempted to move an NFT serial number from an account other than its owner"},"id":2065,"mutability":"constant","name":"SENDER_DOES_NOT_OWN_NFT_SERIAL_NO","nameLocation":"26735:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"26711:63:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2063,"name":"int32","nodeType":"ElementaryTypeName","src":"26711:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323337","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26771:3:1","typeDescriptions":{"typeIdentifier":"t_rational_237_by_1","typeString":"int_const 237"},"value":"237"},"visibility":"internal"},{"constant":true,"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"26781:80:1","text":"A custom fee schedule entry did not specify either a fixed or fractional fee"},"id":2069,"mutability":"constant","name":"CUSTOM_FEE_NOT_FULLY_SPECIFIED","nameLocation":"26890:30:1","nodeType":"VariableDeclaration","scope":2666,"src":"26866:60:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2067,"name":"int32","nodeType":"ElementaryTypeName","src":"26866:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323338","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26923:3:1","typeDescriptions":{"typeIdentifier":"t_rational_238_by_1","typeString":"int_const 238"},"value":"238"},"visibility":"internal"},{"constant":true,"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"26933:51:1","text":"Only positive fees may be assessed at this time"},"id":2073,"mutability":"constant","name":"CUSTOM_FEE_MUST_BE_POSITIVE","nameLocation":"27013:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"26989:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2071,"name":"int32","nodeType":"ElementaryTypeName","src":"26989:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323339","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27043:3:1","typeDescriptions":{"typeIdentifier":"t_rational_239_by_1","typeString":"int_const 239"},"value":"239"},"visibility":"internal"},{"constant":true,"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"27053:40:1","text":"Fee schedule key is not set on token"},"id":2077,"mutability":"constant","name":"TOKEN_HAS_NO_FEE_SCHEDULE_KEY","nameLocation":"27122:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"27098:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2075,"name":"int32","nodeType":"ElementaryTypeName","src":"27098:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323430","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27154:3:1","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},"visibility":"internal"},{"constant":true,"documentation":{"id":2078,"nodeType":"StructuredDocumentation","src":"27164:73:1","text":"A fractional custom fee exceeded the range of a 64-bit signed integer"},"id":2081,"mutability":"constant","name":"CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE","nameLocation":"27266:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"27242:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2079,"name":"int32","nodeType":"ElementaryTypeName","src":"27242:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323431","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27301:3:1","typeDescriptions":{"typeIdentifier":"t_rational_241_by_1","typeString":"int_const 241"},"value":"241"},"visibility":"internal"},{"constant":true,"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"27311:73:1","text":"A royalty cannot exceed the total fungible value exchanged for an NFT"},"id":2085,"mutability":"constant","name":"ROYALTY_FRACTION_CANNOT_EXCEED_ONE","nameLocation":"27413:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"27389:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2083,"name":"int32","nodeType":"ElementaryTypeName","src":"27389:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323432","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27450:3:1","typeDescriptions":{"typeIdentifier":"t_rational_242_by_1","typeString":"int_const 242"},"value":"242"},"visibility":"internal"},{"constant":true,"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"27460:102:1","text":"Each fractional custom fee must have its maximum_amount, if specified, at least its minimum_amount"},"id":2089,"mutability":"constant","name":"FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT","nameLocation":"27591:46:1","nodeType":"VariableDeclaration","scope":2666,"src":"27567:76:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2087,"name":"int32","nodeType":"ElementaryTypeName","src":"27567:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323433","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27640:3:1","typeDescriptions":{"typeIdentifier":"t_rational_243_by_1","typeString":"int_const 243"},"value":"243"},"visibility":"internal"},{"constant":true,"documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"27650:106:1","text":"A fee schedule update tried to clear the custom fees from a token whose fee schedule was already empty"},"id":2093,"mutability":"constant","name":"CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES","nameLocation":"27785:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"27761:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2091,"name":"int32","nodeType":"ElementaryTypeName","src":"27761:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323434","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27823:3:1","typeDescriptions":{"typeIdentifier":"t_rational_244_by_1","typeString":"int_const 244"},"value":"244"},"visibility":"internal"},{"constant":true,"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"27833:84:1","text":"Only tokens of type FUNGIBLE_COMMON can be used to as fee schedule denominations"},"id":2097,"mutability":"constant","name":"CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON","nameLocation":"27946:47:1","nodeType":"VariableDeclaration","scope":2666,"src":"27922:77:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2095,"name":"int32","nodeType":"ElementaryTypeName","src":"27922:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323435","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27996:3:1","typeDescriptions":{"typeIdentifier":"t_rational_245_by_1","typeString":"int_const 245"},"value":"245"},"visibility":"internal"},{"constant":true,"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"28006:64:1","text":"Only tokens of type FUNGIBLE_COMMON can have fractional fees"},"id":2101,"mutability":"constant","name":"CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON","nameLocation":"28099:54:1","nodeType":"VariableDeclaration","scope":2666,"src":"28075:84:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2099,"name":"int32","nodeType":"ElementaryTypeName","src":"28075:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323436","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28156:3:1","typeDescriptions":{"typeIdentifier":"t_rational_246_by_1","typeString":"int_const 246"},"value":"246"},"visibility":"internal"},{"constant":true,"documentation":{"id":2102,"nodeType":"StructuredDocumentation","src":"28166:52:1","text":"The provided custom fee schedule key was invalid"},"id":2105,"mutability":"constant","name":"INVALID_CUSTOM_FEE_SCHEDULE_KEY","nameLocation":"28247:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"28223:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2103,"name":"int32","nodeType":"ElementaryTypeName","src":"28223:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323437","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28281:3:1","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"247"},"visibility":"internal"},{"constant":true,"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"28291:49:1","text":"The requested token mint metadata was invalid"},"id":2109,"mutability":"constant","name":"INVALID_TOKEN_MINT_METADATA","nameLocation":"28369:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"28345:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2107,"name":"int32","nodeType":"ElementaryTypeName","src":"28345:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323438","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28399:3:1","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"visibility":"internal"},{"constant":true,"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"28409:49:1","text":"The requested token burn metadata was invalid"},"id":2113,"mutability":"constant","name":"INVALID_TOKEN_BURN_METADATA","nameLocation":"28487:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"28463:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2111,"name":"int32","nodeType":"ElementaryTypeName","src":"28463:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323439","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28517:3:1","typeDescriptions":{"typeIdentifier":"t_rational_249_by_1","typeString":"int_const 249"},"value":"249"},"visibility":"internal"},{"constant":true,"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"28527:75:1","text":"The treasury for a unique token cannot be changed until it owns no NFTs"},"id":2117,"mutability":"constant","name":"CURRENT_TREASURY_STILL_OWNS_NFTS","nameLocation":"28631:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"28607:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2115,"name":"int32","nodeType":"ElementaryTypeName","src":"28607:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323530","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28666:3:1","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"visibility":"internal"},{"constant":true,"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"28676:86:1","text":"An account cannot be dissociated from a unique token if it owns NFTs for the token"},"id":2121,"mutability":"constant","name":"ACCOUNT_STILL_OWNS_NFTS","nameLocation":"28791:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"28767:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2119,"name":"int32","nodeType":"ElementaryTypeName","src":"28767:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323531","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28817:3:1","typeDescriptions":{"typeIdentifier":"t_rational_251_by_1","typeString":"int_const 251"},"value":"251"},"visibility":"internal"},{"constant":true,"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"28827:70:1","text":"A NFT can only be burned when owned by the unique token's treasury"},"id":2125,"mutability":"constant","name":"TREASURY_MUST_OWN_BURNED_NFT","nameLocation":"28926:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"28902:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2123,"name":"int32","nodeType":"ElementaryTypeName","src":"28902:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323532","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28957:3:1","typeDescriptions":{"typeIdentifier":"t_rational_252_by_1","typeString":"int_const 252"},"value":"252"},"visibility":"internal"},{"constant":true,"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"28967:46:1","text":"An account did not own the NFT to be wiped"},"id":2129,"mutability":"constant","name":"ACCOUNT_DOES_NOT_OWN_WIPED_NFT","nameLocation":"29042:30:1","nodeType":"VariableDeclaration","scope":2666,"src":"29018:60:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2127,"name":"int32","nodeType":"ElementaryTypeName","src":"29018:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323533","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29075:3:1","typeDescriptions":{"typeIdentifier":"t_rational_253_by_1","typeString":"int_const 253"},"value":"253"},"visibility":"internal"},{"constant":true,"documentation":{"id":2130,"nodeType":"StructuredDocumentation","src":"29085:92:1","text":"An AccountAmount token transfers list referenced a token type other than FUNGIBLE_COMMON"},"id":2133,"mutability":"constant","name":"ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON","nameLocation":"29206:57:1","nodeType":"VariableDeclaration","scope":2666,"src":"29182:87:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2131,"name":"int32","nodeType":"ElementaryTypeName","src":"29182:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323534","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29266:3:1","typeDescriptions":{"typeIdentifier":"t_rational_254_by_1","typeString":"int_const 254"},"value":"254"},"visibility":"internal"},{"constant":true,"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"29276:77:1","text":"All the NFTs allowed in the current price regime have already been minted"},"id":2137,"mutability":"constant","name":"MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED","nameLocation":"29382:41:1","nodeType":"VariableDeclaration","scope":2666,"src":"29358:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2135,"name":"int32","nodeType":"ElementaryTypeName","src":"29358:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323535","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29426:3:1","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"visibility":"internal"},{"constant":true,"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"29436:48:1","text":"The payer account has been marked as deleted"},"id":2141,"mutability":"constant","name":"PAYER_ACCOUNT_DELETED","nameLocation":"29513:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"29489:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2139,"name":"int32","nodeType":"ElementaryTypeName","src":"29489:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323536","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29537:3:1","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"visibility":"internal"},{"constant":true,"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"29547:95:1","text":"The reference chain of custom fees for a transferred token exceeded the maximum length of 2"},"id":2145,"mutability":"constant","name":"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH","nameLocation":"29671:48:1","nodeType":"VariableDeclaration","scope":2666,"src":"29647:78:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2143,"name":"int32","nodeType":"ElementaryTypeName","src":"29647:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323537","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29722:3:1","typeDescriptions":{"typeIdentifier":"t_rational_257_by_1","typeString":"int_const 257"},"value":"257"},"visibility":"internal"},{"constant":true,"documentation":{"id":2146,"nodeType":"StructuredDocumentation","src":"29732:105:1","text":"More than 20 balance adjustments were to satisfy a CryptoTransfer and its implied custom fee payments"},"id":2149,"mutability":"constant","name":"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS","nameLocation":"29866:48:1","nodeType":"VariableDeclaration","scope":2666,"src":"29842:78:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2147,"name":"int32","nodeType":"ElementaryTypeName","src":"29842:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323538","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29917:3:1","typeDescriptions":{"typeIdentifier":"t_rational_258_by_1","typeString":"int_const 258"},"value":"258"},"visibility":"internal"},{"constant":true,"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"29927:86:1","text":"The sender account in the token transfer transaction could not afford a custom fee"},"id":2153,"mutability":"constant","name":"INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE","nameLocation":"30042:50:1","nodeType":"VariableDeclaration","scope":2666,"src":"30018:80:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2151,"name":"int32","nodeType":"ElementaryTypeName","src":"30018:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323539","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30095:3:1","typeDescriptions":{"typeIdentifier":"t_rational_259_by_1","typeString":"int_const 259"},"value":"259"},"visibility":"internal"},{"constant":true,"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"30105:89:1","text":"Currently no more than 4,294,967,295 NFTs may be minted for a given unique token type"},"id":2157,"mutability":"constant","name":"SERIAL_NUMBER_LIMIT_REACHED","nameLocation":"30223:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"30199:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2155,"name":"int32","nodeType":"ElementaryTypeName","src":"30199:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323630","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30253:3:1","typeDescriptions":{"typeIdentifier":"t_rational_260_by_1","typeString":"int_const 260"},"value":"260"},"visibility":"internal"},{"constant":true,"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"30263:65:1","text":"Only tokens of type NON_FUNGIBLE_UNIQUE can have royalty fees"},"id":2161,"mutability":"constant","name":"CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE","nameLocation":"30357:55:1","nodeType":"VariableDeclaration","scope":2666,"src":"30333:85:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2159,"name":"int32","nodeType":"ElementaryTypeName","src":"30333:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323631","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:3:1","typeDescriptions":{"typeIdentifier":"t_rational_261_by_1","typeString":"int_const 261"},"value":"261"},"visibility":"internal"},{"constant":true,"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"30425:74:1","text":"The account has reached the limit on the automatic associations count."},"id":2165,"mutability":"constant","name":"NO_REMAINING_AUTOMATIC_ASSOCIATIONS","nameLocation":"30528:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"30504:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2163,"name":"int32","nodeType":"ElementaryTypeName","src":"30504:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323632","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30566:3:1","typeDescriptions":{"typeIdentifier":"t_rational_262_by_1","typeString":"int_const 262"},"value":"262"},"visibility":"internal"},{"constant":true,"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"30576:97:1","text":"Already existing automatic associations are more than the new maximum automatic associations."},"id":2169,"mutability":"constant","name":"EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT","nameLocation":"30702:50:1","nodeType":"VariableDeclaration","scope":2666,"src":"30678:80:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2167,"name":"int32","nodeType":"ElementaryTypeName","src":"30678:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323633","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30755:3:1","typeDescriptions":{"typeIdentifier":"t_rational_263_by_1","typeString":"int_const 263"},"value":"263"},"visibility":"internal"},{"constant":true,"documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"30765:146:1","text":"Cannot set the number of automatic associations for an account more than the maximum allowed token associations <tt>tokens.maxPerAccount</tt>."},"id":2173,"mutability":"constant","name":"REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT","nameLocation":"30940:62:1","nodeType":"VariableDeclaration","scope":2666,"src":"30916:92:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2171,"name":"int32","nodeType":"ElementaryTypeName","src":"30916:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323634","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31005:3:1","typeDescriptions":{"typeIdentifier":"t_rational_264_by_1","typeString":"int_const 264"},"value":"264"},"visibility":"internal"},{"constant":true,"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"31015:91:1","text":"Token is paused. This Token cannot be a part of any kind of Transaction until unpaused."},"id":2177,"mutability":"constant","name":"TOKEN_IS_PAUSED","nameLocation":"31135:15:1","nodeType":"VariableDeclaration","scope":2666,"src":"31111:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2175,"name":"int32","nodeType":"ElementaryTypeName","src":"31111:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323635","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31153:3:1","typeDescriptions":{"typeIdentifier":"t_rational_265_by_1","typeString":"int_const 265"},"value":"265"},"visibility":"internal"},{"constant":true,"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"31163:33:1","text":"Pause key is not set on token"},"id":2181,"mutability":"constant","name":"TOKEN_HAS_NO_PAUSE_KEY","nameLocation":"31225:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"31201:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2179,"name":"int32","nodeType":"ElementaryTypeName","src":"31201:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323636","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31250:3:1","typeDescriptions":{"typeIdentifier":"t_rational_266_by_1","typeString":"int_const 266"},"value":"266"},"visibility":"internal"},{"constant":true,"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"31260:38:1","text":"The provided pause key was invalid"},"id":2185,"mutability":"constant","name":"INVALID_PAUSE_KEY","nameLocation":"31327:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"31303:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2183,"name":"int32","nodeType":"ElementaryTypeName","src":"31303:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323637","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31347:3:1","typeDescriptions":{"typeIdentifier":"t_rational_267_by_1","typeString":"int_const 267"},"value":"267"},"visibility":"internal"},{"constant":true,"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"31357:60:1","text":"The update file in a freeze transaction body must exist."},"id":2189,"mutability":"constant","name":"FREEZE_UPDATE_FILE_DOES_NOT_EXIST","nameLocation":"31446:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"31422:63:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2187,"name":"int32","nodeType":"ElementaryTypeName","src":"31422:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323638","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31482:3:1","typeDescriptions":{"typeIdentifier":"t_rational_268_by_1","typeString":"int_const 268"},"value":"268"},"visibility":"internal"},{"constant":true,"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"31492:91:1","text":"The hash of the update file in a freeze transaction body must match the in-memory hash."},"id":2193,"mutability":"constant","name":"FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH","nameLocation":"31612:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"31588:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2191,"name":"int32","nodeType":"ElementaryTypeName","src":"31588:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323639","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31653:3:1","typeDescriptions":{"typeIdentifier":"t_rational_269_by_1","typeString":"int_const 269"},"value":"269"},"visibility":"internal"},{"constant":true,"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"31663:78:1","text":"A FREEZE_UPGRADE transaction was handled with no previous update prepared."},"id":2197,"mutability":"constant","name":"NO_UPGRADE_HAS_BEEN_PREPARED","nameLocation":"31770:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"31746:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2195,"name":"int32","nodeType":"ElementaryTypeName","src":"31746:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323730","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31801:3:1","typeDescriptions":{"typeIdentifier":"t_rational_270_by_1","typeString":"int_const 270"},"value":"270"},"visibility":"internal"},{"constant":true,"documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"31811:68:1","text":"A FREEZE_ABORT transaction was handled with no scheduled freeze."},"id":2201,"mutability":"constant","name":"NO_FREEZE_IS_SCHEDULED","nameLocation":"31908:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"31884:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2199,"name":"int32","nodeType":"ElementaryTypeName","src":"31884:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323731","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31933:3:1","typeDescriptions":{"typeIdentifier":"t_rational_271_by_1","typeString":"int_const 271"},"value":"271"},"visibility":"internal"},{"constant":true,"documentation":{"id":2202,"nodeType":"StructuredDocumentation","src":"31943:151:1","text":"The update file hash when handling a FREEZE_UPGRADE transaction differs from the file hash at the time of handling the PREPARE_UPGRADE transaction."},"id":2205,"mutability":"constant","name":"UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE","nameLocation":"32123:46:1","nodeType":"VariableDeclaration","scope":2666,"src":"32099:76:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2203,"name":"int32","nodeType":"ElementaryTypeName","src":"32099:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323732","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32172:3:1","typeDescriptions":{"typeIdentifier":"t_rational_272_by_1","typeString":"int_const 272"},"value":"272"},"visibility":"internal"},{"constant":true,"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"32182:60:1","text":"The given freeze start time was in the (consensus) past."},"id":2209,"mutability":"constant","name":"FREEZE_START_TIME_MUST_BE_FUTURE","nameLocation":"32271:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"32247:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2207,"name":"int32","nodeType":"ElementaryTypeName","src":"32247:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323733","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32306:3:1","typeDescriptions":{"typeIdentifier":"t_rational_273_by_1","typeString":"int_const 273"},"value":"273"},"visibility":"internal"},{"constant":true,"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"32316:139:1","text":"The prepared update file cannot be updated or appended until either the upgrade has been completed, or a FREEZE_ABORT has been handled."},"id":2213,"mutability":"constant","name":"PREPARED_UPDATE_FILE_IS_IMMUTABLE","nameLocation":"32484:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"32460:63:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2211,"name":"int32","nodeType":"ElementaryTypeName","src":"32460:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323734","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32520:3:1","typeDescriptions":{"typeIdentifier":"t_rational_274_by_1","typeString":"int_const 274"},"value":"274"},"visibility":"internal"},{"constant":true,"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"32530:104:1","text":"Once a freeze is scheduled, it must be aborted before any other type of freeze can can be performed."},"id":2217,"mutability":"constant","name":"FREEZE_ALREADY_SCHEDULED","nameLocation":"32663:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"32639:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2215,"name":"int32","nodeType":"ElementaryTypeName","src":"32639:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323735","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32690:3:1","typeDescriptions":{"typeIdentifier":"t_rational_275_by_1","typeString":"int_const 275"},"value":"275"},"visibility":"internal"},{"constant":true,"documentation":{"id":2218,"nodeType":"StructuredDocumentation","src":"32700:145:1","text":"If an NMT upgrade has been prepared, the following operation must be a FREEZE_UPGRADE. (To issue a FREEZE_ONLY, submit a FREEZE_ABORT first.)"},"id":2221,"mutability":"constant","name":"FREEZE_UPGRADE_IN_PROGRESS","nameLocation":"32874:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"32850:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2219,"name":"int32","nodeType":"ElementaryTypeName","src":"32850:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323736","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32903:3:1","typeDescriptions":{"typeIdentifier":"t_rational_276_by_1","typeString":"int_const 276"},"value":"276"},"visibility":"internal"},{"constant":true,"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"32913:141:1","text":"If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the id of the file to be used in the upgrade."},"id":2225,"mutability":"constant","name":"UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED","nameLocation":"33083:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"33059:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2223,"name":"int32","nodeType":"ElementaryTypeName","src":"33059:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323737","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33124:3:1","typeDescriptions":{"typeIdentifier":"t_rational_277_by_1","typeString":"int_const 277"},"value":"277"},"visibility":"internal"},{"constant":true,"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"33134:143:1","text":"If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the hash of the file to be used in the upgrade."},"id":2229,"mutability":"constant","name":"UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED","nameLocation":"33306:40:1","nodeType":"VariableDeclaration","scope":2666,"src":"33282:70:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2227,"name":"int32","nodeType":"ElementaryTypeName","src":"33282:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323738","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33349:3:1","typeDescriptions":{"typeIdentifier":"t_rational_278_by_1","typeString":"int_const 278"},"value":"278"},"visibility":"internal"},{"constant":true,"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"33359:107:1","text":"Consensus throttle did not allow execution of this transaction. System is throttled at consensus level."},"id":2233,"mutability":"constant","name":"CONSENSUS_GAS_EXHAUSTED","nameLocation":"33495:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"33471:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2231,"name":"int32","nodeType":"ElementaryTypeName","src":"33471:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323739","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33521:3:1","typeDescriptions":{"typeIdentifier":"t_rational_279_by_1","typeString":"int_const 279"},"value":"279"},"visibility":"internal"},{"constant":true,"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"33531:61:1","text":"A precompiled contract succeeded, but was later reverted."},"id":2237,"mutability":"constant","name":"REVERTED_SUCCESS","nameLocation":"33621:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"33597:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2235,"name":"int32","nodeType":"ElementaryTypeName","src":"33597:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323830","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33640:3:1","typeDescriptions":{"typeIdentifier":"t_rational_280_by_1","typeString":"int_const 280"},"value":"280"},"visibility":"internal"},{"constant":true,"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"33650:81:1","text":"All contract storage allocated to the current price regime has been consumed."},"id":2241,"mutability":"constant","name":"MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED","nameLocation":"33760:41:1","nodeType":"VariableDeclaration","scope":2666,"src":"33736:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2239,"name":"int32","nodeType":"ElementaryTypeName","src":"33736:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323831","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33804:3:1","typeDescriptions":{"typeIdentifier":"t_rational_281_by_1","typeString":"int_const 281"},"value":"281"},"visibility":"internal"},{"constant":true,"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"33814:202:1","text":"An alias used in a CryptoTransfer transaction is not the serialization of a primitive Key message--that is, a Key with a single Ed25519 or ECDSA(secp256k1) public key and no unknown protobuf fields."},"id":2245,"mutability":"constant","name":"INVALID_ALIAS_KEY","nameLocation":"34045:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"34021:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2243,"name":"int32","nodeType":"ElementaryTypeName","src":"34021:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323832","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34065:3:1","typeDescriptions":{"typeIdentifier":"t_rational_282_by_1","typeString":"int_const 282"},"value":"282"},"visibility":"internal"},{"constant":true,"documentation":{"id":2246,"nodeType":"StructuredDocumentation","src":"34075:106:1","text":"A fungible token transfer expected a different number of decimals than the involved type actually has."},"id":2249,"mutability":"constant","name":"UNEXPECTED_TOKEN_DECIMALS","nameLocation":"34210:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"34186:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2247,"name":"int32","nodeType":"ElementaryTypeName","src":"34186:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323833","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34238:3:1","typeDescriptions":{"typeIdentifier":"t_rational_283_by_1","typeString":"int_const 283"},"value":"283"},"visibility":"internal"},{"constant":true,"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"34248:54:1","text":"The proxy account id is invalid or does not exist."},"id":2253,"mutability":"constant","name":"INVALID_PROXY_ACCOUNT_ID","nameLocation":"34331:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"34307:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2251,"name":"int32","nodeType":"ElementaryTypeName","src":"34307:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323834","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34358:3:1","typeDescriptions":{"typeIdentifier":"t_rational_284_by_1","typeString":"int_const 284"},"value":"284"},"visibility":"internal"},{"constant":true,"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"34368:85:1","text":"The transfer account id in CryptoDelete transaction is invalid or does not exist."},"id":2257,"mutability":"constant","name":"INVALID_TRANSFER_ACCOUNT_ID","nameLocation":"34482:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"34458:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2255,"name":"int32","nodeType":"ElementaryTypeName","src":"34458:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323835","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34512:3:1","typeDescriptions":{"typeIdentifier":"t_rational_285_by_1","typeString":"int_const 285"},"value":"285"},"visibility":"internal"},{"constant":true,"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"34522:88:1","text":"The fee collector account id in TokenFeeScheduleUpdate is invalid or does not exist."},"id":2261,"mutability":"constant","name":"INVALID_FEE_COLLECTOR_ACCOUNT_ID","nameLocation":"34639:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"34615:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2259,"name":"int32","nodeType":"ElementaryTypeName","src":"34615:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323836","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34674:3:1","typeDescriptions":{"typeIdentifier":"t_rational_286_by_1","typeString":"int_const 286"},"value":"286"},"visibility":"internal"},{"constant":true,"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"34684:89:1","text":"The alias already set on an account cannot be updated using CryptoUpdate transaction."},"id":2265,"mutability":"constant","name":"ALIAS_IS_IMMUTABLE","nameLocation":"34802:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"34778:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2263,"name":"int32","nodeType":"ElementaryTypeName","src":"34778:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323837","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34823:3:1","typeDescriptions":{"typeIdentifier":"t_rational_287_by_1","typeString":"int_const 287"},"value":"287"},"visibility":"internal"},{"constant":true,"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"34833:103:1","text":"An approved allowance specifies a spender account that is the same as the hbar/token owner account."},"id":2269,"mutability":"constant","name":"SPENDER_ACCOUNT_SAME_AS_OWNER","nameLocation":"34965:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"34941:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2267,"name":"int32","nodeType":"ElementaryTypeName","src":"34941:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323838","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34997:3:1","typeDescriptions":{"typeIdentifier":"t_rational_288_by_1","typeString":"int_const 288"},"value":"288"},"visibility":"internal"},{"constant":true,"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"35007:122:1","text":"The establishment or adjustment of an approved allowance cause the token allowance to exceed the token maximum supply."},"id":2273,"mutability":"constant","name":"AMOUNT_EXCEEDS_TOKEN_MAX_SUPPLY","nameLocation":"35158:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"35134:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2271,"name":"int32","nodeType":"ElementaryTypeName","src":"35134:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323839","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35192:3:1","typeDescriptions":{"typeIdentifier":"t_rational_289_by_1","typeString":"int_const 289"},"value":"289"},"visibility":"internal"},{"constant":true,"documentation":{"id":2274,"nodeType":"StructuredDocumentation","src":"35202:70:1","text":"The specified amount for an approved allowance cannot be negative."},"id":2277,"mutability":"constant","name":"NEGATIVE_ALLOWANCE_AMOUNT","nameLocation":"35301:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"35277:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2275,"name":"int32","nodeType":"ElementaryTypeName","src":"35277:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323930","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35329:3:1","typeDescriptions":{"typeIdentifier":"t_rational_290_by_1","typeString":"int_const 290"},"value":"290"},"visibility":"internal"},{"constant":true,"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"35339:62:1","text":"The approveForAll flag cannot be set for a fungible token."},"id":2281,"mutability":"constant","name":"CANNOT_APPROVE_FOR_ALL_FUNGIBLE_COMMON","nameLocation":"35430:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"35406:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2279,"name":"int32","nodeType":"ElementaryTypeName","src":"35406:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323931","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35471:3:1","typeDescriptions":{"typeIdentifier":"t_rational_291_by_1","typeString":"int_const 291"},"value":"291"},"visibility":"internal"},{"constant":true,"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"35481:87:1","text":"The spender does not have an existing approved allowance with the hbar/token owner."},"id":2285,"mutability":"constant","name":"SPENDER_DOES_NOT_HAVE_ALLOWANCE","nameLocation":"35597:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"35573:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2283,"name":"int32","nodeType":"ElementaryTypeName","src":"35573:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323932","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35631:3:1","typeDescriptions":{"typeIdentifier":"t_rational_292_by_1","typeString":"int_const 292"},"value":"292"},"visibility":"internal"},{"constant":true,"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"35641:87:1","text":"The transfer amount exceeds the current approved allowance for the spender account."},"id":2289,"mutability":"constant","name":"AMOUNT_EXCEEDS_ALLOWANCE","nameLocation":"35757:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"35733:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2287,"name":"int32","nodeType":"ElementaryTypeName","src":"35733:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323933","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35784:3:1","typeDescriptions":{"typeIdentifier":"t_rational_293_by_1","typeString":"int_const 293"},"value":"293"},"visibility":"internal"},{"constant":true,"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"35794:145:1","text":"The payer account of an approveAllowances or adjustAllowance transaction is attempting to go beyond the maximum allowed number of allowances."},"id":2293,"mutability":"constant","name":"MAX_ALLOWANCES_EXCEEDED","nameLocation":"35968:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"35944:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2291,"name":"int32","nodeType":"ElementaryTypeName","src":"35944:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323934","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35994:3:1","typeDescriptions":{"typeIdentifier":"t_rational_294_by_1","typeString":"int_const 294"},"value":"294"},"visibility":"internal"},{"constant":true,"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"36004:66:1","text":"No allowances have been specified in the approval transaction."},"id":2297,"mutability":"constant","name":"EMPTY_ALLOWANCES","nameLocation":"36099:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"36075:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2295,"name":"int32","nodeType":"ElementaryTypeName","src":"36075:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323935","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36118:3:1","typeDescriptions":{"typeIdentifier":"t_rational_295_by_1","typeString":"int_const 295"},"value":"295"},"visibility":"internal"},{"constant":true,"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"36128:128:1","text":"Spender is repeated more than once in Crypto or Token or NFT allowance lists in a single CryptoApproveAllowance transaction."},"id":2301,"mutability":"constant","name":"SPENDER_ACCOUNT_REPEATED_IN_ALLOWANCES","nameLocation":"36285:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"36261:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2299,"name":"int32","nodeType":"ElementaryTypeName","src":"36261:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323936","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36326:3:1","typeDescriptions":{"typeIdentifier":"t_rational_296_by_1","typeString":"int_const 296"},"value":"296"},"visibility":"internal"},{"constant":true,"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"36336:77:1","text":"Serial numbers are repeated in nft allowance for a single spender account"},"id":2305,"mutability":"constant","name":"REPEATED_SERIAL_NUMS_IN_NFT_ALLOWANCES","nameLocation":"36442:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"36418:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2303,"name":"int32","nodeType":"ElementaryTypeName","src":"36418:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323937","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36483:3:1","typeDescriptions":{"typeIdentifier":"t_rational_297_by_1","typeString":"int_const 297"},"value":"297"},"visibility":"internal"},{"constant":true,"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"36493:48:1","text":"Fungible common token used in NFT allowances"},"id":2309,"mutability":"constant","name":"FUNGIBLE_TOKEN_IN_NFT_ALLOWANCES","nameLocation":"36570:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"36546:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2307,"name":"int32","nodeType":"ElementaryTypeName","src":"36546:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323938","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36605:3:1","typeDescriptions":{"typeIdentifier":"t_rational_298_by_1","typeString":"int_const 298"},"value":"298"},"visibility":"internal"},{"constant":true,"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"36615:56:1","text":"Non fungible token used in fungible token allowances"},"id":2313,"mutability":"constant","name":"NFT_IN_FUNGIBLE_TOKEN_ALLOWANCES","nameLocation":"36700:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"36676:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2311,"name":"int32","nodeType":"ElementaryTypeName","src":"36676:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"323939","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36735:3:1","typeDescriptions":{"typeIdentifier":"t_rational_299_by_1","typeString":"int_const 299"},"value":"299"},"visibility":"internal"},{"constant":true,"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"36745:71:1","text":"The account id specified as the owner is invalid or does not exist."},"id":2317,"mutability":"constant","name":"INVALID_ALLOWANCE_OWNER_ID","nameLocation":"36845:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"36821:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2315,"name":"int32","nodeType":"ElementaryTypeName","src":"36821:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333030","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36874:3:1","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"internal"},{"constant":true,"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"36884:73:1","text":"The account id specified as the spender is invalid or does not exist."},"id":2321,"mutability":"constant","name":"INVALID_ALLOWANCE_SPENDER_ID","nameLocation":"36986:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"36962:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2319,"name":"int32","nodeType":"ElementaryTypeName","src":"36962:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333031","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37017:3:1","typeDescriptions":{"typeIdentifier":"t_rational_301_by_1","typeString":"int_const 301"},"value":"301"},"visibility":"internal"},{"constant":true,"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"37027:115:1","text":"[Deprecated] If the CryptoDeleteAllowance transaction has repeated crypto or token or Nft allowances to delete."},"id":2325,"mutability":"constant","name":"REPEATED_ALLOWANCES_TO_DELETE","nameLocation":"37171:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"37147:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2323,"name":"int32","nodeType":"ElementaryTypeName","src":"37147:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333032","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37203:3:1","typeDescriptions":{"typeIdentifier":"t_rational_302_by_1","typeString":"int_const 302"},"value":"302"},"visibility":"internal"},{"constant":true,"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"37213:87:1","text":"If the account Id specified as the delegating spender is invalid or does not exist."},"id":2329,"mutability":"constant","name":"INVALID_DELEGATING_SPENDER","nameLocation":"37329:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"37305:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2327,"name":"int32","nodeType":"ElementaryTypeName","src":"37305:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333033","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37358:3:1","typeDescriptions":{"typeIdentifier":"t_rational_303_by_1","typeString":"int_const 303"},"value":"303"},"visibility":"internal"},{"constant":true,"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"37368:104:1","text":"The delegating Spender cannot grant approveForAll allowance on a NFT token type for another spender."},"id":2333,"mutability":"constant","name":"DELEGATING_SPENDER_CANNOT_GRANT_APPROVE_FOR_ALL","nameLocation":"37501:47:1","nodeType":"VariableDeclaration","scope":2666,"src":"37477:77:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2331,"name":"int32","nodeType":"ElementaryTypeName","src":"37477:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333034","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37551:3:1","typeDescriptions":{"typeIdentifier":"t_rational_304_by_1","typeString":"int_const 304"},"value":"304"},"visibility":"internal"},{"constant":true,"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"37561:145:1","text":"The delegating Spender cannot grant allowance on a NFT serial for another spender as it doesnt not have approveForAll granted on token-owner."},"id":2337,"mutability":"constant","name":"DELEGATING_SPENDER_DOES_NOT_HAVE_APPROVE_FOR_ALL","nameLocation":"37735:48:1","nodeType":"VariableDeclaration","scope":2666,"src":"37711:78:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2335,"name":"int32","nodeType":"ElementaryTypeName","src":"37711:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333035","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37786:3:1","typeDescriptions":{"typeIdentifier":"t_rational_305_by_1","typeString":"int_const 305"},"value":"305"},"visibility":"internal"},{"constant":true,"documentation":{"id":2338,"nodeType":"StructuredDocumentation","src":"37796:106:1","text":"The scheduled transaction could not be created because it's expiration_time was too far in the future."},"id":2341,"mutability":"constant","name":"SCHEDULE_EXPIRATION_TIME_TOO_FAR_IN_FUTURE","nameLocation":"37931:42:1","nodeType":"VariableDeclaration","scope":2666,"src":"37907:72:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2339,"name":"int32","nodeType":"ElementaryTypeName","src":"37907:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333036","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37976:3:1","typeDescriptions":{"typeIdentifier":"t_rational_306_by_1","typeString":"int_const 306"},"value":"306"},"visibility":"internal"},{"constant":true,"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"37986:125:1","text":"The scheduled transaction could not be created because it's expiration_time was less than or equal to the consensus time."},"id":2345,"mutability":"constant","name":"SCHEDULE_EXPIRATION_TIME_MUST_BE_HIGHER_THAN_CONSENSUS_TIME","nameLocation":"38140:59:1","nodeType":"VariableDeclaration","scope":2666,"src":"38116:89:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2343,"name":"int32","nodeType":"ElementaryTypeName","src":"38116:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333037","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38202:3:1","typeDescriptions":{"typeIdentifier":"t_rational_307_by_1","typeString":"int_const 307"},"value":"307"},"visibility":"internal"},{"constant":true,"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"38212:132:1","text":"The scheduled transaction could not be created because it would cause throttles to be violated on the specified expiration_time."},"id":2349,"mutability":"constant","name":"SCHEDULE_FUTURE_THROTTLE_EXCEEDED","nameLocation":"38373:33:1","nodeType":"VariableDeclaration","scope":2666,"src":"38349:63:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2347,"name":"int32","nodeType":"ElementaryTypeName","src":"38349:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333038","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38409:3:1","typeDescriptions":{"typeIdentifier":"t_rational_308_by_1","typeString":"int_const 308"},"value":"308"},"visibility":"internal"},{"constant":true,"documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"38419:136:1","text":"The scheduled transaction could not be created because it would cause the gas limit to be violated on the specified expiration_time."},"id":2353,"mutability":"constant","name":"SCHEDULE_FUTURE_GAS_LIMIT_EXCEEDED","nameLocation":"38584:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"38560:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2351,"name":"int32","nodeType":"ElementaryTypeName","src":"38560:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333039","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38621:3:1","typeDescriptions":{"typeIdentifier":"t_rational_309_by_1","typeString":"int_const 309"},"value":"309"},"visibility":"internal"},{"constant":true,"documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"38631:160:1","text":"The ethereum transaction either failed parsing or failed signature validation, or some other EthereumTransaction error not covered by another response code."},"id":2357,"mutability":"constant","name":"INVALID_ETHEREUM_TRANSACTION","nameLocation":"38820:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"38796:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2355,"name":"int32","nodeType":"ElementaryTypeName","src":"38796:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333130","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38851:3:1","typeDescriptions":{"typeIdentifier":"t_rational_310_by_1","typeString":"int_const 310"},"value":"310"},"visibility":"internal"},{"constant":true,"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"38861:88:1","text":"EthereumTransaction was signed against a chainId that this network does not support."},"id":2361,"mutability":"constant","name":"WRONG_CHAIN_ID","nameLocation":"38978:14:1","nodeType":"VariableDeclaration","scope":2666,"src":"38954:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2359,"name":"int32","nodeType":"ElementaryTypeName","src":"38954:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333131","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38995:3:1","typeDescriptions":{"typeIdentifier":"t_rational_311_by_1","typeString":"int_const 311"},"value":"311"},"visibility":"internal"},{"constant":true,"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"39005:101:1","text":"This transaction specified an ethereumNonce that is not the current ethereumNonce of the account."},"id":2365,"mutability":"constant","name":"WRONG_NONCE","nameLocation":"39135:11:1","nodeType":"VariableDeclaration","scope":2666,"src":"39111:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2363,"name":"int32","nodeType":"ElementaryTypeName","src":"39111:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333132","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39149:3:1","typeDescriptions":{"typeIdentifier":"t_rational_312_by_1","typeString":"int_const 312"},"value":"312"},"visibility":"internal"},{"constant":true,"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"39159:90:1","text":"The ethereum transaction specified an access list, which the network does not support."},"id":2369,"mutability":"constant","name":"ACCESS_LIST_UNSUPPORTED","nameLocation":"39278:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"39254:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2367,"name":"int32","nodeType":"ElementaryTypeName","src":"39254:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333133","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39304:3:1","typeDescriptions":{"typeIdentifier":"t_rational_313_by_1","typeString":"int_const 313"},"value":"313"},"visibility":"internal"},{"constant":true,"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"39314:126:1","text":"A schedule being signed or deleted has passed it's expiration date and is pending execution if needed and then expiration."},"id":2373,"mutability":"constant","name":"SCHEDULE_PENDING_EXPIRATION","nameLocation":"39469:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"39445:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2371,"name":"int32","nodeType":"ElementaryTypeName","src":"39445:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333134","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39499:3:1","typeDescriptions":{"typeIdentifier":"t_rational_314_by_1","typeString":"int_const 314"},"value":"314"},"visibility":"internal"},{"constant":true,"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"39509:82:1","text":"A selfdestruct or ContractDelete targeted a contract that is a token treasury."},"id":2377,"mutability":"constant","name":"CONTRACT_IS_TOKEN_TREASURY","nameLocation":"39620:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"39596:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2375,"name":"int32","nodeType":"ElementaryTypeName","src":"39596:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333135","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39649:3:1","typeDescriptions":{"typeIdentifier":"t_rational_315_by_1","typeString":"int_const 315"},"value":"315"},"visibility":"internal"},{"constant":true,"documentation":{"id":2378,"nodeType":"StructuredDocumentation","src":"39659:86:1","text":"A selfdestruct or ContractDelete targeted a contract with non-zero token balances."},"id":2381,"mutability":"constant","name":"CONTRACT_HAS_NON_ZERO_TOKEN_BALANCES","nameLocation":"39774:36:1","nodeType":"VariableDeclaration","scope":2666,"src":"39750:66:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2379,"name":"int32","nodeType":"ElementaryTypeName","src":"39750:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333136","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39813:3:1","typeDescriptions":{"typeIdentifier":"t_rational_316_by_1","typeString":"int_const 316"},"value":"316"},"visibility":"internal"},{"constant":true,"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"39823:175:1","text":"A contract referenced by a transaction is \"detached\"; that is, expired and lacking any hbar funds for auto-renewal payment---but still within its post-expiry grace period."},"id":2385,"mutability":"constant","name":"CONTRACT_EXPIRED_AND_PENDING_REMOVAL","nameLocation":"40027:36:1","nodeType":"VariableDeclaration","scope":2666,"src":"40003:66:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2383,"name":"int32","nodeType":"ElementaryTypeName","src":"40003:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333137","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40066:3:1","typeDescriptions":{"typeIdentifier":"t_rational_317_by_1","typeString":"int_const 317"},"value":"317"},"visibility":"internal"},{"constant":true,"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"40076:119:1","text":"A ContractUpdate requested removal of a contract's auto-renew account, but that contract has no auto-renew account."},"id":2389,"mutability":"constant","name":"CONTRACT_HAS_NO_AUTO_RENEW_ACCOUNT","nameLocation":"40224:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"40200:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2387,"name":"int32","nodeType":"ElementaryTypeName","src":"40200:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333138","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40261:3:1","typeDescriptions":{"typeIdentifier":"t_rational_318_by_1","typeString":"int_const 318"},"value":"318"},"visibility":"internal"},{"constant":true,"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"40271:70:1","text":"A delete transaction submitted via HAPI set permanent_removal=true"},"id":2393,"mutability":"constant","name":"PERMANENT_REMOVAL_REQUIRES_SYSTEM_INITIATION","nameLocation":"40370:44:1","nodeType":"VariableDeclaration","scope":2666,"src":"40346:74:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2391,"name":"int32","nodeType":"ElementaryTypeName","src":"40346:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333139","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40417:3:1","typeDescriptions":{"typeIdentifier":"t_rational_319_by_1","typeString":"int_const 319"},"value":"319"},"visibility":"internal"},{"constant":true,"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"40427:78:1","text":"A CryptoCreate or ContractCreate used the deprecated proxyAccountID field."},"id":2397,"mutability":"constant","name":"PROXY_ACCOUNT_ID_FIELD_IS_DEPRECATED","nameLocation":"40534:36:1","nodeType":"VariableDeclaration","scope":2666,"src":"40510:66:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2395,"name":"int32","nodeType":"ElementaryTypeName","src":"40510:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333230","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40573:3:1","typeDescriptions":{"typeIdentifier":"t_rational_320_by_1","typeString":"int_const 320"},"value":"320"},"visibility":"internal"},{"constant":true,"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"40583:98:1","text":"An account set the staked_account_id to itself in CryptoUpdate or ContractUpdate transactions."},"id":2401,"mutability":"constant","name":"SELF_STAKING_IS_NOT_ALLOWED","nameLocation":"40710:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"40686:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2399,"name":"int32","nodeType":"ElementaryTypeName","src":"40686:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333231","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40740:3:1","typeDescriptions":{"typeIdentifier":"t_rational_321_by_1","typeString":"int_const 321"},"value":"321"},"visibility":"internal"},{"constant":true,"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"40750:81:1","text":"The staking account id or staking node id given is invalid or does not exist."},"id":2405,"mutability":"constant","name":"INVALID_STAKING_ID","nameLocation":"40860:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"40836:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2403,"name":"int32","nodeType":"ElementaryTypeName","src":"40836:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333232","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40881:3:1","typeDescriptions":{"typeIdentifier":"t_rational_322_by_1","typeString":"int_const 322"},"value":"322"},"visibility":"internal"},{"constant":true,"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"40891:74:1","text":"Native staking, while implemented, has not yet enabled by the council."},"id":2409,"mutability":"constant","name":"STAKING_NOT_ENABLED","nameLocation":"40994:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"40970:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2407,"name":"int32","nodeType":"ElementaryTypeName","src":"40970:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333233","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41016:3:1","typeDescriptions":{"typeIdentifier":"t_rational_323_by_1","typeString":"int_const 323"},"value":"323"},"visibility":"internal"},{"constant":true,"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"41026:59:1","text":"The range provided in UtilPrng transaction is negative."},"id":2413,"mutability":"constant","name":"INVALID_PRNG_RANGE","nameLocation":"41114:18:1","nodeType":"VariableDeclaration","scope":2666,"src":"41090:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2411,"name":"int32","nodeType":"ElementaryTypeName","src":"41090:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333234","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41135:3:1","typeDescriptions":{"typeIdentifier":"t_rational_324_by_1","typeString":"int_const 324"},"value":"324"},"visibility":"internal"},{"constant":true,"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"41145:89:1","text":"The maximum number of entities allowed in the current price regime have been created."},"id":2417,"mutability":"constant","name":"MAX_ENTITIES_IN_PRICE_REGIME_HAVE_BEEN_CREATED","nameLocation":"41263:46:1","nodeType":"VariableDeclaration","scope":2666,"src":"41239:76:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2415,"name":"int32","nodeType":"ElementaryTypeName","src":"41239:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333235","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41312:3:1","typeDescriptions":{"typeIdentifier":"t_rational_325_by_1","typeString":"int_const 325"},"value":"325"},"visibility":"internal"},{"constant":true,"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"41322:57:1","text":"The full prefix signature for precompile is not valid"},"id":2421,"mutability":"constant","name":"INVALID_FULL_PREFIX_SIGNATURE_FOR_PRECOMPILE","nameLocation":"41408:44:1","nodeType":"VariableDeclaration","scope":2666,"src":"41384:74:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2419,"name":"int32","nodeType":"ElementaryTypeName","src":"41384:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333236","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41455:3:1","typeDescriptions":{"typeIdentifier":"t_rational_326_by_1","typeString":"int_const 326"},"value":"326"},"visibility":"internal"},{"constant":true,"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"41465:149:1","text":"The combined balances of a contract and its auto-renew account (if any) did not cover the rent charged for net new storage used in a transaction."},"id":2425,"mutability":"constant","name":"INSUFFICIENT_BALANCES_FOR_STORAGE_RENT","nameLocation":"41643:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"41619:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2423,"name":"int32","nodeType":"ElementaryTypeName","src":"41619:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333237","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41684:3:1","typeDescriptions":{"typeIdentifier":"t_rational_327_by_1","typeString":"int_const 327"},"value":"327"},"visibility":"internal"},{"constant":true,"documentation":{"id":2426,"nodeType":"StructuredDocumentation","src":"41694:153:1","text":"A contract transaction tried to use more than the allowed number of child records, via either system contract records or internal contract creations."},"id":2429,"mutability":"constant","name":"MAX_CHILD_RECORDS_EXCEEDED","nameLocation":"41876:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"41852:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2427,"name":"int32","nodeType":"ElementaryTypeName","src":"41852:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333238","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41905:3:1","typeDescriptions":{"typeIdentifier":"t_rational_328_by_1","typeString":"int_const 328"},"value":"328"},"visibility":"internal"},{"constant":true,"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"41915:154:1","text":"The combined balances of a contract and its auto-renew account (if any) or balance of an account did not cover the auto-renewal fees in a transaction."},"id":2433,"mutability":"constant","name":"INSUFFICIENT_BALANCES_FOR_RENEWAL_FEES","nameLocation":"42098:38:1","nodeType":"VariableDeclaration","scope":2666,"src":"42074:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2431,"name":"int32","nodeType":"ElementaryTypeName","src":"42074:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333239","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42139:3:1","typeDescriptions":{"typeIdentifier":"t_rational_329_by_1","typeString":"int_const 329"},"value":"329"},"visibility":"internal"},{"constant":true,"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"42149:142:1","text":"A transaction's protobuf message includes unknown fields; could mean that a client expects not-yet-released functionality to be available."},"id":2437,"mutability":"constant","name":"TRANSACTION_HAS_UNKNOWN_FIELDS","nameLocation":"42320:30:1","nodeType":"VariableDeclaration","scope":2666,"src":"42296:60:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2435,"name":"int32","nodeType":"ElementaryTypeName","src":"42296:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333330","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42353:3:1","typeDescriptions":{"typeIdentifier":"t_rational_330_by_1","typeString":"int_const 330"},"value":"330"},"visibility":"internal"},{"constant":true,"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"42363:60:1","text":"The account cannot be modified. Account's key is not set"},"id":2441,"mutability":"constant","name":"ACCOUNT_IS_IMMUTABLE","nameLocation":"42452:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"42428:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2439,"name":"int32","nodeType":"ElementaryTypeName","src":"42428:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333331","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42475:3:1","typeDescriptions":{"typeIdentifier":"t_rational_331_by_1","typeString":"int_const 331"},"value":"331"},"visibility":"internal"},{"constant":true,"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"42485:106:1","text":"An alias that is assigned to an account or contract cannot be assigned to another account or contract."},"id":2445,"mutability":"constant","name":"ALIAS_ALREADY_ASSIGNED","nameLocation":"42620:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"42596:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2443,"name":"int32","nodeType":"ElementaryTypeName","src":"42596:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333332","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42645:3:1","typeDescriptions":{"typeIdentifier":"t_rational_332_by_1","typeString":"int_const 332"},"value":"332"},"visibility":"internal"},{"constant":true,"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"42655:139:1","text":"A provided metadata key was invalid. Verification includes, for example, checking the size of Ed25519 and ECDSA(secp256k1) public keys."},"id":2449,"mutability":"constant","name":"INVALID_METADATA_KEY","nameLocation":"42823:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"42799:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2447,"name":"int32","nodeType":"ElementaryTypeName","src":"42799:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333333","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42846:3:1","typeDescriptions":{"typeIdentifier":"t_rational_333_by_1","typeString":"int_const 333"},"value":"333"},"visibility":"internal"},{"constant":true,"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"42856:36:1","text":"Metadata key is not set on token"},"id":2453,"mutability":"constant","name":"TOKEN_HAS_NO_METADATA_KEY","nameLocation":"42921:25:1","nodeType":"VariableDeclaration","scope":2666,"src":"42897:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2451,"name":"int32","nodeType":"ElementaryTypeName","src":"42897:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333334","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42949:3:1","typeDescriptions":{"typeIdentifier":"t_rational_334_by_1","typeString":"int_const 334"},"value":"334"},"visibility":"internal"},{"constant":true,"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"42959:34:1","text":"Token Metadata is not provided"},"id":2457,"mutability":"constant","name":"MISSING_TOKEN_METADATA","nameLocation":"43022:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"42998:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2455,"name":"int32","nodeType":"ElementaryTypeName","src":"42998:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333335","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43047:3:1","typeDescriptions":{"typeIdentifier":"t_rational_335_by_1","typeString":"int_const 335"},"value":"335"},"visibility":"internal"},{"constant":true,"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"43057:72:1","text":"NFT serial numbers are missing in the TokenUpdateNftsTransactionBody"},"id":2461,"mutability":"constant","name":"MISSING_SERIAL_NUMBERS","nameLocation":"43158:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"43134:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2459,"name":"int32","nodeType":"ElementaryTypeName","src":"43134:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333336","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43183:3:1","typeDescriptions":{"typeIdentifier":"t_rational_336_by_1","typeString":"int_const 336"},"value":"336"},"visibility":"internal"},{"constant":true,"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"43193:33:1","text":"Admin key is not set on token"},"id":2465,"mutability":"constant","name":"TOKEN_HAS_NO_ADMIN_KEY","nameLocation":"43255:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"43231:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2463,"name":"int32","nodeType":"ElementaryTypeName","src":"43231:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333337","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43280:3:1","typeDescriptions":{"typeIdentifier":"t_rational_337_by_1","typeString":"int_const 337"},"value":"337"},"visibility":"internal"},{"constant":true,"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"43290:96:1","text":"A transaction failed because the consensus node identified is deleted from the address book."},"id":2469,"mutability":"constant","name":"NODE_DELETED","nameLocation":"43415:12:1","nodeType":"VariableDeclaration","scope":2666,"src":"43391:42:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2467,"name":"int32","nodeType":"ElementaryTypeName","src":"43391:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333338","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43430:3:1","typeDescriptions":{"typeIdentifier":"t_rational_338_by_1","typeString":"int_const 338"},"value":"338"},"visibility":"internal"},{"constant":true,"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"43440:103:1","text":"A transaction failed because the consensus node identified is not valid or does not exist in state."},"id":2473,"mutability":"constant","name":"INVALID_NODE_ID","nameLocation":"43572:15:1","nodeType":"VariableDeclaration","scope":2666,"src":"43548:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2471,"name":"int32","nodeType":"ElementaryTypeName","src":"43548:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333339","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43590:3:1","typeDescriptions":{"typeIdentifier":"t_rational_339_by_1","typeString":"int_const 339"},"value":"339"},"visibility":"internal"},{"constant":true,"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"43600:261:1","text":"A transaction failed because one or more entries in the list of service endpoints for the `gossip_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port."},"id":2477,"mutability":"constant","name":"INVALID_GOSSIP_ENDPOINT","nameLocation":"43890:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"43866:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2475,"name":"int32","nodeType":"ElementaryTypeName","src":"43866:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333430","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43916:3:1","typeDescriptions":{"typeIdentifier":"t_rational_340_by_1","typeString":"int_const 340"},"value":"340"},"visibility":"internal"},{"constant":true,"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"43926:228:1","text":"A transaction failed because the node account identifier provided does not exist or is not valid.<br/> One common source of this error is providing a node account identifier using the \"alias\" form rather than \"numeric\" form."},"id":2481,"mutability":"constant","name":"INVALID_NODE_ACCOUNT_ID","nameLocation":"44183:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"44159:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2479,"name":"int32","nodeType":"ElementaryTypeName","src":"44159:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333431","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44209:3:1","typeDescriptions":{"typeIdentifier":"t_rational_341_by_1","typeString":"int_const 341"},"value":"341"},"visibility":"internal"},{"constant":true,"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"44219:121:1","text":"A transaction failed because the description field cannot be encoded as UTF-8 or is more than 100 bytes when encoded."},"id":2485,"mutability":"constant","name":"INVALID_NODE_DESCRIPTION","nameLocation":"44369:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"44345:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2483,"name":"int32","nodeType":"ElementaryTypeName","src":"44345:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333432","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44396:3:1","typeDescriptions":{"typeIdentifier":"t_rational_342_by_1","typeString":"int_const 342"},"value":"342"},"visibility":"internal"},{"constant":true,"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"44406:262:1","text":"A transaction failed because one or more entries in the list of service endpoints for the `service_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port."},"id":2489,"mutability":"constant","name":"INVALID_SERVICE_ENDPOINT","nameLocation":"44697:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"44673:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2487,"name":"int32","nodeType":"ElementaryTypeName","src":"44673:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333433","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44724:3:1","typeDescriptions":{"typeIdentifier":"t_rational_343_by_1","typeString":"int_const 343"},"value":"343"},"visibility":"internal"},{"constant":true,"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"44734:412:1","text":"A transaction failed because the TLS certificate provided for the node is missing or invalid. <p> #### Probable Causes The certificate MUST be a TLS certificate of a type permitted for gossip signatures.<br/> The value presented MUST be a UTF-8 NFKD encoding of the TLS certificate.<br/> The certificate encoded MUST be in PEM format.<br/> The `gossip_ca_certificate` field is REQUIRED and MUST NOT be empty."},"id":2493,"mutability":"constant","name":"INVALID_GOSSIP_CA_CERTIFICATE","nameLocation":"45175:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"45151:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2491,"name":"int32","nodeType":"ElementaryTypeName","src":"45151:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333434","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45207:3:1","typeDescriptions":{"typeIdentifier":"t_rational_344_by_1","typeString":"int_const 344"},"value":"344"},"visibility":"internal"},{"constant":true,"documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"45217:317:1","text":"A transaction failed because the hash provided for the gRPC certificate is present but invalid. <p> #### Probable Causes The `grpc_certificate_hash` MUST be a SHA-384 hash.<br/> The input hashed MUST be a UTF-8 NFKD encoding of the actual TLS certificate.<br/> The certificate to be encoded MUST be in PEM format."},"id":2497,"mutability":"constant","name":"INVALID_GRPC_CERTIFICATE","nameLocation":"45563:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"45539:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2495,"name":"int32","nodeType":"ElementaryTypeName","src":"45539:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333435","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45590:3:1","typeDescriptions":{"typeIdentifier":"t_rational_345_by_1","typeString":"int_const 345"},"value":"345"},"visibility":"internal"},{"constant":true,"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"45600:127:1","text":"The maximum automatic associations value is not valid.<br/> The most common cause for this error is a value less than `-1`."},"id":2501,"mutability":"constant","name":"INVALID_MAX_AUTO_ASSOCIATIONS","nameLocation":"45756:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"45732:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2499,"name":"int32","nodeType":"ElementaryTypeName","src":"45732:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333436","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45788:3:1","typeDescriptions":{"typeIdentifier":"t_rational_346_by_1","typeString":"int_const 346"},"value":"346"},"visibility":"internal"},{"constant":true,"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"45798:78:1","text":"The maximum number of nodes allowed in the address book have been created."},"id":2505,"mutability":"constant","name":"MAX_NODES_CREATED","nameLocation":"45905:17:1","nodeType":"VariableDeclaration","scope":2666,"src":"45881:47:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2503,"name":"int32","nodeType":"ElementaryTypeName","src":"45881:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333437","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45925:3:1","typeDescriptions":{"typeIdentifier":"t_rational_347_by_1","typeString":"int_const 347"},"value":"347"},"visibility":"internal"},{"constant":true,"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"45935:74:1","text":"In ServiceEndpoint, domain_name and ipAddressV4 are mutually exclusive"},"id":2509,"mutability":"constant","name":"IP_FQDN_CANNOT_BE_SET_FOR_SAME_ENDPOINT","nameLocation":"46038:39:1","nodeType":"VariableDeclaration","scope":2666,"src":"46014:69:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2507,"name":"int32","nodeType":"ElementaryTypeName","src":"46014:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333438","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46080:3:1","typeDescriptions":{"typeIdentifier":"t_rational_348_by_1","typeString":"int_const 348"},"value":"348"},"visibility":"internal"},{"constant":true,"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"46090:65:1","text":"Fully qualified domain name is not allowed in gossip_endpoint"},"id":2513,"mutability":"constant","name":"GOSSIP_ENDPOINT_CANNOT_HAVE_FQDN","nameLocation":"46184:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"46160:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2511,"name":"int32","nodeType":"ElementaryTypeName","src":"46160:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333439","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46219:3:1","typeDescriptions":{"typeIdentifier":"t_rational_349_by_1","typeString":"int_const 349"},"value":"349"},"visibility":"internal"},{"constant":true,"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"46229:50:1","text":"In ServiceEndpoint, domain_name size too large"},"id":2517,"mutability":"constant","name":"FQDN_SIZE_TOO_LARGE","nameLocation":"46308:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"46284:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2515,"name":"int32","nodeType":"ElementaryTypeName","src":"46284:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333530","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46330:3:1","typeDescriptions":{"typeIdentifier":"t_rational_350_by_1","typeString":"int_const 350"},"value":"350"},"visibility":"internal"},{"constant":true,"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"46340:30:1","text":"ServiceEndpoint is invalid"},"id":2521,"mutability":"constant","name":"INVALID_ENDPOINT","nameLocation":"46399:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"46375:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2519,"name":"int32","nodeType":"ElementaryTypeName","src":"46375:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333531","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46418:3:1","typeDescriptions":{"typeIdentifier":"t_rational_351_by_1","typeString":"int_const 351"},"value":"351"},"visibility":"internal"},{"constant":true,"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"46428:52:1","text":"The number of gossip endpoints exceeds the limit"},"id":2525,"mutability":"constant","name":"GOSSIP_ENDPOINTS_EXCEEDED_LIMIT","nameLocation":"46509:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"46485:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2523,"name":"int32","nodeType":"ElementaryTypeName","src":"46485:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333532","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46543:3:1","typeDescriptions":{"typeIdentifier":"t_rational_352_by_1","typeString":"int_const 352"},"value":"352"},"visibility":"internal"},{"constant":true,"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"46553:154:1","text":"The transaction attempted to use duplicate `TokenReference`.<br/> This affects `TokenReject` attempting to reject same token reference more than once."},"id":2529,"mutability":"constant","name":"TOKEN_REFERENCE_REPEATED","nameLocation":"46736:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"46712:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2527,"name":"int32","nodeType":"ElementaryTypeName","src":"46712:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333533","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46763:3:1","typeDescriptions":{"typeIdentifier":"t_rational_353_by_1","typeString":"int_const 353"},"value":"353"},"visibility":"internal"},{"constant":true,"documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"46773:88:1","text":"The account id specified as the owner in `TokenReject` is invalid or does not exist."},"id":2533,"mutability":"constant","name":"INVALID_OWNER_ID","nameLocation":"46890:16:1","nodeType":"VariableDeclaration","scope":2666,"src":"46866:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2531,"name":"int32","nodeType":"ElementaryTypeName","src":"46866:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333534","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46909:3:1","typeDescriptions":{"typeIdentifier":"t_rational_354_by_1","typeString":"int_const 354"},"value":"354"},"visibility":"internal"},{"constant":true,"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"46919:86:1","text":"The transaction attempted to use more than the allowed number of `TokenReference`."},"id":2537,"mutability":"constant","name":"TOKEN_REFERENCE_LIST_SIZE_LIMIT_EXCEEDED","nameLocation":"47034:40:1","nodeType":"VariableDeclaration","scope":2666,"src":"47010:70:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2535,"name":"int32","nodeType":"ElementaryTypeName","src":"47010:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333535","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47077:3:1","typeDescriptions":{"typeIdentifier":"t_rational_355_by_1","typeString":"int_const 355"},"value":"355"},"visibility":"internal"},{"constant":true,"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"47087:53:1","text":"The number of service endpoints exceeds the limit"},"id":2541,"mutability":"constant","name":"SERVICE_ENDPOINTS_EXCEEDED_LIMIT","nameLocation":"47169:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"47145:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2539,"name":"int32","nodeType":"ElementaryTypeName","src":"47145:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333536","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47204:3:1","typeDescriptions":{"typeIdentifier":"t_rational_356_by_1","typeString":"int_const 356"},"value":"356"},"visibility":"internal"},{"constant":true,"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"47214:31:1","text":"The IPv4 address is invalid"},"id":2545,"mutability":"constant","name":"INVALID_IPV4_ADDRESS","nameLocation":"47274:20:1","nodeType":"VariableDeclaration","scope":2666,"src":"47250:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2543,"name":"int32","nodeType":"ElementaryTypeName","src":"47250:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333537","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47297:3:1","typeDescriptions":{"typeIdentifier":"t_rational_357_by_1","typeString":"int_const 357"},"value":"357"},"visibility":"internal"},{"constant":true,"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"47307:65:1","text":"The transaction attempted to use empty `TokenReference` list."},"id":2549,"mutability":"constant","name":"EMPTY_TOKEN_REFERENCE_LIST","nameLocation":"47401:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"47377:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2547,"name":"int32","nodeType":"ElementaryTypeName","src":"47377:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333538","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47430:3:1","typeDescriptions":{"typeIdentifier":"t_rational_358_by_1","typeString":"int_const 358"},"value":"358"},"visibility":"internal"},{"constant":true,"documentation":{"id":2550,"nodeType":"StructuredDocumentation","src":"47440:49:1","text":"The node account is not allowed to be updated"},"id":2553,"mutability":"constant","name":"UPDATE_NODE_ACCOUNT_NOT_ALLOWED","nameLocation":"47518:31:1","nodeType":"VariableDeclaration","scope":2666,"src":"47494:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2551,"name":"int32","nodeType":"ElementaryTypeName","src":"47494:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333539","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47552:3:1","typeDescriptions":{"typeIdentifier":"t_rational_359_by_1","typeString":"int_const 359"},"value":"359"},"visibility":"internal"},{"constant":true,"documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"47562:43:1","text":"The token has no metadata or supply key"},"id":2557,"mutability":"constant","name":"TOKEN_HAS_NO_METADATA_OR_SUPPLY_KEY","nameLocation":"47634:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"47610:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2555,"name":"int32","nodeType":"ElementaryTypeName","src":"47610:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333630","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47672:3:1","typeDescriptions":{"typeIdentifier":"t_rational_360_by_1","typeString":"int_const 360"},"value":"360"},"visibility":"internal"},{"constant":true,"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"47682:67:1","text":"The list of `PendingAirdropId`s is empty and MUST NOT be empty."},"id":2561,"mutability":"constant","name":"EMPTY_PENDING_AIRDROP_ID_LIST","nameLocation":"47778:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"47754:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2559,"name":"int32","nodeType":"ElementaryTypeName","src":"47754:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333631","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47810:3:1","typeDescriptions":{"typeIdentifier":"t_rational_361_by_1","typeString":"int_const 361"},"value":"361"},"visibility":"internal"},{"constant":true,"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"47820:74:1","text":"A `PendingAirdropId` is repeated in a `claim` or `cancel` transaction."},"id":2565,"mutability":"constant","name":"PENDING_AIRDROP_ID_REPEATED","nameLocation":"47923:27:1","nodeType":"VariableDeclaration","scope":2666,"src":"47899:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2563,"name":"int32","nodeType":"ElementaryTypeName","src":"47899:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333632","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47953:3:1","typeDescriptions":{"typeIdentifier":"t_rational_362_by_1","typeString":"int_const 362"},"value":"362"},"visibility":"internal"},{"constant":true,"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"47963:93:1","text":"The number of `PendingAirdropId` values in the list exceeds the maximum allowable number."},"id":2569,"mutability":"constant","name":"PENDING_AIRDROP_ID_LIST_TOO_LONG","nameLocation":"48085:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"48061:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2567,"name":"int32","nodeType":"ElementaryTypeName","src":"48061:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333633","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48120:3:1","typeDescriptions":{"typeIdentifier":"t_rational_363_by_1","typeString":"int_const 363"},"value":"363"},"visibility":"internal"},{"constant":true,"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"48130:59:1","text":"A pending airdrop already exists for the specified NFT."},"id":2573,"mutability":"constant","name":"PENDING_NFT_AIRDROP_ALREADY_EXISTS","nameLocation":"48218:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"48194:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2571,"name":"int32","nodeType":"ElementaryTypeName","src":"48194:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333634","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48255:3:1","typeDescriptions":{"typeIdentifier":"t_rational_364_by_1","typeString":"int_const 364"},"value":"364"},"visibility":"internal"},{"constant":true,"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"48265:182:1","text":"The identified account is sender for one or more pending airdrop(s) and cannot be deleted. <p> The requester SHOULD cancel all pending airdrops before resending this transaction."},"id":2577,"mutability":"constant","name":"ACCOUNT_HAS_PENDING_AIRDROPS","nameLocation":"48476:28:1","nodeType":"VariableDeclaration","scope":2666,"src":"48452:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2575,"name":"int32","nodeType":"ElementaryTypeName","src":"48452:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333635","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48507:3:1","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"visibility":"internal"},{"constant":true,"documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"48517:128:1","text":"Consensus throttle did not allow execution of this transaction.<br/> The transaction should be retried after a modest delay."},"id":2581,"mutability":"constant","name":"THROTTLED_AT_CONSENSUS","nameLocation":"48674:22:1","nodeType":"VariableDeclaration","scope":2666,"src":"48650:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2579,"name":"int32","nodeType":"ElementaryTypeName","src":"48650:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333636","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48699:3:1","typeDescriptions":{"typeIdentifier":"t_rational_366_by_1","typeString":"int_const 366"},"value":"366"},"visibility":"internal"},{"constant":true,"documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"48709:208:1","text":"The provided pending airdrop id is invalid.<br/> This pending airdrop MAY already be claimed or cancelled. <p> The client SHOULD query a mirror node to determine the current status of the pending airdrop."},"id":2585,"mutability":"constant","name":"INVALID_PENDING_AIRDROP_ID","nameLocation":"48946:26:1","nodeType":"VariableDeclaration","scope":2666,"src":"48922:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2583,"name":"int32","nodeType":"ElementaryTypeName","src":"48922:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333637","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48975:3:1","typeDescriptions":{"typeIdentifier":"t_rational_367_by_1","typeString":"int_const 367"},"value":"367"},"visibility":"internal"},{"constant":true,"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"48985:115:1","text":"The token to be airdropped has a fallback royalty fee and cannot be sent or claimed via an airdrop transaction."},"id":2589,"mutability":"constant","name":"TOKEN_AIRDROP_WITH_FALLBACK_ROYALTY","nameLocation":"49129:35:1","nodeType":"VariableDeclaration","scope":2666,"src":"49105:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2587,"name":"int32","nodeType":"ElementaryTypeName","src":"49105:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333638","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49167:3:1","typeDescriptions":{"typeIdentifier":"t_rational_368_by_1","typeString":"int_const 368"},"value":"368"},"visibility":"internal"},{"constant":true,"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"49177:299:1","text":"This airdrop claim is for a pending airdrop with an invalid token.<br/> The token might be deleted, or the sender may not have enough tokens to fulfill the offer. <p> The client SHOULD query mirror node to determine the status of the pending airdrop and whether the sender can fulfill the offer."},"id":2593,"mutability":"constant","name":"INVALID_TOKEN_IN_PENDING_AIRDROP","nameLocation":"49505:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"49481:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2591,"name":"int32","nodeType":"ElementaryTypeName","src":"49481:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333639","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49540:3:1","typeDescriptions":{"typeIdentifier":"t_rational_369_by_1","typeString":"int_const 369"},"value":"369"},"visibility":"internal"},{"constant":true,"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"49550:216:1","text":"A scheduled transaction configured to wait for expiry to execute was given an expiry time at which there is already too many transactions scheduled to expire; its creation must be retried with a different expiry."},"id":2597,"mutability":"constant","name":"SCHEDULE_EXPIRY_IS_BUSY","nameLocation":"49795:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"49771:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2595,"name":"int32","nodeType":"ElementaryTypeName","src":"49771:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333730","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49821:3:1","typeDescriptions":{"typeIdentifier":"t_rational_370_by_1","typeString":"int_const 370"},"value":"370"},"visibility":"internal"},{"constant":true,"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"49831:50:1","text":"The provided gRPC certificate hash is invalid."},"id":2601,"mutability":"constant","name":"INVALID_GRPC_CERTIFICATE_HASH","nameLocation":"49910:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"49886:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2599,"name":"int32","nodeType":"ElementaryTypeName","src":"49886:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333731","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49942:3:1","typeDescriptions":{"typeIdentifier":"t_rational_371_by_1","typeString":"int_const 371"},"value":"371"},"visibility":"internal"},{"constant":true,"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"49952:111:1","text":"A scheduled transaction configured to wait for expiry to execute was not given an explicit expiration time."},"id":2605,"mutability":"constant","name":"MISSING_EXPIRY_TIME","nameLocation":"50092:19:1","nodeType":"VariableDeclaration","scope":2666,"src":"50068:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2603,"name":"int32","nodeType":"ElementaryTypeName","src":"50068:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333732","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50114:3:1","typeDescriptions":{"typeIdentifier":"t_rational_372_by_1","typeString":"int_const 372"},"value":"372"},"visibility":"internal"},{"constant":true,"documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"50124:124:1","text":"A contract operation attempted to schedule another transaction after it had already scheduled a recursive contract call."},"id":2609,"mutability":"constant","name":"NO_SCHEDULING_ALLOWED_AFTER_SCHEDULED_RECURSION","nameLocation":"50277:47:1","nodeType":"VariableDeclaration","scope":2666,"src":"50253:77:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2607,"name":"int32","nodeType":"ElementaryTypeName","src":"50253:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333733","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50327:3:1","typeDescriptions":{"typeIdentifier":"t_rational_373_by_1","typeString":"int_const 373"},"value":"373"},"visibility":"internal"},{"constant":true,"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"50337:147:1","text":"A contract can schedule recursive calls a finite number of times (this is approximately four million times with typical network configuration.)"},"id":2613,"mutability":"constant","name":"RECURSIVE_SCHEDULING_LIMIT_REACHED","nameLocation":"50513:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"50489:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2611,"name":"int32","nodeType":"ElementaryTypeName","src":"50489:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333734","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50550:3:1","typeDescriptions":{"typeIdentifier":"t_rational_374_by_1","typeString":"int_const 374"},"value":"374"},"visibility":"internal"},{"constant":true,"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"50560:130:1","text":"The target network is waiting for the ledger ID to be set, which is a side effect of finishing the network's TSS construction."},"id":2617,"mutability":"constant","name":"WAITING_FOR_LEDGER_ID","nameLocation":"50719:21:1","nodeType":"VariableDeclaration","scope":2666,"src":"50695:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2615,"name":"int32","nodeType":"ElementaryTypeName","src":"50695:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333735","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50743:3:1","typeDescriptions":{"typeIdentifier":"t_rational_375_by_1","typeString":"int_const 375"},"value":"375"},"visibility":"internal"},{"constant":true,"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"50753:61:1","text":"The provided fee exempt key list size exceeded the limit."},"id":2621,"mutability":"constant","name":"MAX_ENTRIES_FOR_FEE_EXEMPT_KEY_LIST_EXCEEDED","nameLocation":"50843:44:1","nodeType":"VariableDeclaration","scope":2666,"src":"50819:74:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2619,"name":"int32","nodeType":"ElementaryTypeName","src":"50819:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333736","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50890:3:1","typeDescriptions":{"typeIdentifier":"t_rational_376_by_1","typeString":"int_const 376"},"value":"376"},"visibility":"internal"},{"constant":true,"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"50900:62:1","text":"The provided fee exempt key list contains duplicated keys."},"id":2625,"mutability":"constant","name":"FEE_EXEMPT_KEY_LIST_CONTAINS_DUPLICATED_KEYS","nameLocation":"50991:44:1","nodeType":"VariableDeclaration","scope":2666,"src":"50967:74:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2623,"name":"int32","nodeType":"ElementaryTypeName","src":"50967:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333737","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51038:3:1","typeDescriptions":{"typeIdentifier":"t_rational_377_by_1","typeString":"int_const 377"},"value":"377"},"visibility":"internal"},{"constant":true,"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"51048:61:1","text":"The provided fee exempt key list contains an invalid key."},"id":2629,"mutability":"constant","name":"INVALID_KEY_IN_FEE_EXEMPT_KEY_LIST","nameLocation":"51138:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"51114:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2627,"name":"int32","nodeType":"ElementaryTypeName","src":"51114:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333738","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51175:3:1","typeDescriptions":{"typeIdentifier":"t_rational_378_by_1","typeString":"int_const 378"},"value":"378"},"visibility":"internal"},{"constant":true,"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"51185:58:1","text":"The provided fee schedule key contains an invalid key."},"id":2633,"mutability":"constant","name":"INVALID_FEE_SCHEDULE_KEY","nameLocation":"51272:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"51248:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2631,"name":"int32","nodeType":"ElementaryTypeName","src":"51248:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333739","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51299:3:1","typeDescriptions":{"typeIdentifier":"t_rational_379_by_1","typeString":"int_const 379"},"value":"379"},"visibility":"internal"},{"constant":true,"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"51309:87:1","text":"If a fee schedule key is not set when we create a topic we cannot add it on update."},"id":2637,"mutability":"constant","name":"FEE_SCHEDULE_KEY_CANNOT_BE_UPDATED","nameLocation":"51425:34:1","nodeType":"VariableDeclaration","scope":2666,"src":"51401:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2635,"name":"int32","nodeType":"ElementaryTypeName","src":"51401:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333830","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51462:3:1","typeDescriptions":{"typeIdentifier":"t_rational_380_by_1","typeString":"int_const 380"},"value":"380"},"visibility":"internal"},{"constant":true,"documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"51472:83:1","text":"If the topic's custom fees are updated the topic SHOULD have a fee schedule key"},"id":2641,"mutability":"constant","name":"FEE_SCHEDULE_KEY_NOT_SET","nameLocation":"51584:24:1","nodeType":"VariableDeclaration","scope":2666,"src":"51560:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2639,"name":"int32","nodeType":"ElementaryTypeName","src":"51560:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333831","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51611:3:1","typeDescriptions":{"typeIdentifier":"t_rational_381_by_1","typeString":"int_const 381"},"value":"381"},"visibility":"internal"},{"constant":true,"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"51621:76:1","text":"The fee amount is exceeding the amount that the payer is willing to pay."},"id":2645,"mutability":"constant","name":"MAX_CUSTOM_FEE_LIMIT_EXCEEDED","nameLocation":"51726:29:1","nodeType":"VariableDeclaration","scope":2666,"src":"51702:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2643,"name":"int32","nodeType":"ElementaryTypeName","src":"51702:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333832","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51758:3:1","typeDescriptions":{"typeIdentifier":"t_rational_382_by_1","typeString":"int_const 382"},"value":"382"},"visibility":"internal"},{"constant":true,"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"51768:43:1","text":"There are no corresponding custom fees."},"id":2649,"mutability":"constant","name":"NO_VALID_MAX_CUSTOM_FEE","nameLocation":"51840:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"51816:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2647,"name":"int32","nodeType":"ElementaryTypeName","src":"51816:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333833","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51866:3:1","typeDescriptions":{"typeIdentifier":"t_rational_383_by_1","typeString":"int_const 383"},"value":"383"},"visibility":"internal"},{"constant":true,"documentation":{"id":2650,"nodeType":"StructuredDocumentation","src":"51876:54:1","text":"The provided list contains invalid max custom fee."},"id":2653,"mutability":"constant","name":"INVALID_MAX_CUSTOM_FEES","nameLocation":"51959:23:1","nodeType":"VariableDeclaration","scope":2666,"src":"51935:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2651,"name":"int32","nodeType":"ElementaryTypeName","src":"51935:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333834","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51985:3:1","typeDescriptions":{"typeIdentifier":"t_rational_384_by_1","typeString":"int_const 384"},"value":"384"},"visibility":"internal"},{"constant":true,"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"51995:80:1","text":"The provided max custom fee list contains fees with duplicate denominations."},"id":2657,"mutability":"constant","name":"DUPLICATE_DENOMINATION_IN_MAX_CUSTOM_FEE_LIST","nameLocation":"52104:45:1","nodeType":"VariableDeclaration","scope":2666,"src":"52080:75:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2655,"name":"int32","nodeType":"ElementaryTypeName","src":"52080:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333835","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52152:3:1","typeDescriptions":{"typeIdentifier":"t_rational_385_by_1","typeString":"int_const 385"},"value":"385"},"visibility":"internal"},{"constant":true,"documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"52162:77:1","text":"The provided max custom fee list contains fees with duplicate account id."},"id":2661,"mutability":"constant","name":"DUPLICATE_ACCOUNT_ID_IN_MAX_CUSTOM_FEE_LIST","nameLocation":"52268:43:1","nodeType":"VariableDeclaration","scope":2666,"src":"52244:73:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2659,"name":"int32","nodeType":"ElementaryTypeName","src":"52244:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333836","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52314:3:1","typeDescriptions":{"typeIdentifier":"t_rational_386_by_1","typeString":"int_const 386"},"value":"386"},"visibility":"internal"},{"constant":true,"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"52324:61:1","text":"Max custom fees list is not supported for this operation."},"id":2665,"mutability":"constant","name":"MAX_CUSTOM_FEES_IS_NOT_SUPPORTED","nameLocation":"52414:32:1","nodeType":"VariableDeclaration","scope":2666,"src":"52390:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2663,"name":"int32","nodeType":"ElementaryTypeName","src":"52390:5:1","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"333837","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52449:3:1","typeDescriptions":{"typeIdentifier":"t_rational_387_by_1","typeString":"int_const 387"},"value":"387"},"visibility":"internal"}],"scope":2667,"src":"391:52065:1","usedErrors":[],"usedEvents":[]}],"src":"39:52417:1"},"id":1},"app/contracts/HederaTokenService.sol":{"ast":{"absolutePath":"app/contracts/HederaTokenService.sol","exportedSymbols":{"HederaResponseCodes":[2666],"HederaTokenService":[5343],"IHederaTokenService":[6223]},"id":5344,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2668,"literals":["solidity",">=","0.5",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"39:31:2"},{"id":2669,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"71:33:2"},{"absolutePath":"app/contracts/HederaResponseCodes.sol","file":"./HederaResponseCodes.sol","id":2670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5344,"sourceUnit":2667,"src":"106:35:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"app/contracts/IHederaTokenService.sol","file":"./IHederaTokenService.sol","id":2671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5344,"sourceUnit":6224,"src":"142:35:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"HederaTokenService","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5343,"linearizedBaseContracts":[5343],"name":"HederaTokenService","nameLocation":"197:18:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2677,"mutability":"constant","name":"precompileAddress","nameLocation":"239:17:2","nodeType":"VariableDeclaration","scope":5343,"src":"222:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"3078313637","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"267:5:2","typeDescriptions":{"typeIdentifier":"t_rational_359_by_1","typeString":"int_const 359"},"value":"0x167"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_359_by_1","typeString":"int_const 359"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"259:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"259:7:2","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"259:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":true,"id":2680,"mutability":"constant","name":"defaultAutoRenewPeriod","nameLocation":"320:22:2","nodeType":"VariableDeclaration","scope":5343,"src":"305:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2678,"name":"int32","nodeType":"ElementaryTypeName","src":"305:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"value":{"hexValue":"37373736303030","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"345:7:2","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"7776000"},"visibility":"internal"},{"body":{"id":2707,"nodeType":"Block","src":"433:172:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2685,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"447:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}},"id":2686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"453:6:2","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":5425,"src":"447:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry memory"}},"id":2687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"460:6:2","memberName":"second","nodeType":"MemberAccess","referencedDeclaration":5383,"src":"447:19:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"470:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"447:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2690,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"475:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}},"id":2691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"481:6:2","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":5425,"src":"475:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry memory"}},"id":2692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"488:15:2","memberName":"autoRenewPeriod","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"475:28:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"507:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"475:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"447:61:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2705,"nodeType":"IfStatement","src":"443:145:2","trueBody":{"id":2704,"nodeType":"Block","src":"510:78:2","statements":[{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":2696,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"524:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}},"id":2699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"530:6:2","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":5425,"src":"524:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry memory"}},"id":2700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"537:15:2","memberName":"autoRenewPeriod","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"524:28:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2701,"name":"defaultAutoRenewPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"555:22:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"524:53:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2703,"nodeType":"ExpressionStatement","src":"524:53:2"}]}},{"id":2706,"nodeType":"PlaceholderStatement","src":"597:1:2"}]},"id":2708,"name":"nonEmptyExpiry","nameLocation":"368:14:2","nodeType":"ModifierDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"token","nameLocation":"422:5:2","nodeType":"VariableDeclaration","scope":2708,"src":"383:44:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":2682,"nodeType":"UserDefinedTypeName","pathNode":{"id":2681,"name":"IHederaTokenService.HederaToken","nameLocations":["383:19:2","403:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"383:31:2"},"referencedDeclaration":5426,"src":"383:31:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"}],"src":"382:46:2"},"src":"359:246:2","virtual":false,"visibility":"internal"},{"anonymous":false,"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"611:17:2","text":"Generic event"},"eventSelector":"4af4780e06fe8cb9df64b0794fa6f01399af979175bb988e35e0e57e594567bc","id":2715,"name":"CallResponseEvent","nameLocation":"639:17:2","nodeType":"EventDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2715,"src":"657:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2710,"name":"bool","nodeType":"ElementaryTypeName","src":"657:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2713,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2715,"src":"663:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2712,"name":"bytes","nodeType":"ElementaryTypeName","src":"663:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"656:13:2"},"src":"633:37:2"},{"body":{"id":2758,"nodeType":"Block","src":"1269:281:2","statements":[{"assignments":[2729,2731],"declarations":[{"constant":false,"id":2729,"mutability":"mutable","name":"success","nameLocation":"1285:7:2","nodeType":"VariableDeclaration","scope":2758,"src":"1280:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2728,"name":"bool","nodeType":"ElementaryTypeName","src":"1280:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"result","nameLocation":"1307:6:2","nodeType":"VariableDeclaration","scope":2758,"src":"1294:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2730,"name":"bytes","nodeType":"ElementaryTypeName","src":"1294:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2743,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":2736,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"1376:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1396:14:2","memberName":"cryptoTransfer","nodeType":"MemberAccess","referencedDeclaration":5561,"src":"1376:34:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_TransferList_$5380_memory_ptr_$_t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.cryptoTransfer(struct IHederaTokenService.TransferList memory,struct IHederaTokenService.TokenTransferList memory[] memory) returns (int64)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1411:8:2","memberName":"selector","nodeType":"MemberAccess","src":"1376:43:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2739,"name":"transferList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1421:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_TransferList_$5380_memory_ptr","typeString":"struct IHederaTokenService.TransferList memory"}},{"id":2740,"name":"tokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"1435:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenTransferList memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_TransferList_$5380_memory_ptr","typeString":"struct IHederaTokenService.TransferList memory"},{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenTransferList memory[] memory"}],"expression":{"id":2734,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1353:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1357:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1353:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2732,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"1317:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1335:4:2","memberName":"call","nodeType":"MemberAccess","src":"1317:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1317:134:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1279:172:2"},{"expression":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2744,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"1461:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":2745,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1476:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":2753,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1516:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1536:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"1516:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:67:2","trueExpression":{"arguments":[{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"1497:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1506:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2749,"name":"int32","nodeType":"ElementaryTypeName","src":"1506:5:2","typeDescriptions":{}}}],"id":2751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1505:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":2746,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1486:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1490:6:2","memberName":"decode","nodeType":"MemberAccess","src":"1486:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"1461:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2757,"nodeType":"ExpressionStatement","src":"1461:82:2"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"676:403:2","text":"Performs transfers among combinations of tokens and hbars\n @param transferList the list of hbar transfers to do\n @param tokenTransfers the list of transfers to do\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)"},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"cryptoTransfer","nameLocation":"1093:14:2","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"transferList","nameLocation":"1148:12:2","nodeType":"VariableDeclaration","scope":2759,"src":"1108:52:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TransferList_$5380_memory_ptr","typeString":"struct IHederaTokenService.TransferList"},"typeName":{"id":2718,"nodeType":"UserDefinedTypeName","pathNode":{"id":2717,"name":"IHederaTokenService.TransferList","nameLocations":["1108:19:2","1128:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":5380,"src":"1108:32:2"},"referencedDeclaration":5380,"src":"1108:32:2","typeDescriptions":{"typeIdentifier":"t_struct$_TransferList_$5380_storage_ptr","typeString":"struct IHederaTokenService.TransferList"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"tokenTransfers","nameLocation":"1209:14:2","nodeType":"VariableDeclaration","scope":2759,"src":"1162:61:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenTransferList[]"},"typeName":{"baseType":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"IHederaTokenService.TokenTransferList","nameLocations":["1162:19:2","1182:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":5375,"src":"1162:37:2"},"referencedDeclaration":5375,"src":"1162:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTransferList_$5375_storage_ptr","typeString":"struct IHederaTokenService.TokenTransferList"}},"id":2722,"nodeType":"ArrayTypeName","src":"1162:39:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.TokenTransferList[]"}},"visibility":"internal"}],"src":"1107:117:2"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"responseCode","nameLocation":"1251:12:2","nodeType":"VariableDeclaration","scope":2759,"src":"1247:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2725,"name":"int","nodeType":"ElementaryTypeName","src":"1247:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1246:18:2"},"scope":5343,"src":"1084:466:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2826,"nodeType":"Block","src":"2714:384:2","statements":[{"assignments":[2778,2780],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"success","nameLocation":"2730:7:2","nodeType":"VariableDeclaration","scope":2826,"src":"2725:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2777,"name":"bool","nodeType":"ElementaryTypeName","src":"2725:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"result","nameLocation":"2752:6:2","nodeType":"VariableDeclaration","scope":2826,"src":"2739:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2779,"name":"bytes","nodeType":"ElementaryTypeName","src":"2739:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2793,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":2785,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"2821:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2841:9:2","memberName":"mintToken","nodeType":"MemberAccess","referencedDeclaration":5579,"src":"2821:29:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_int64_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$_t_int64_$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"function IHederaTokenService.mintToken(address,int64,bytes memory[] memory) returns (int64,int64,int64[] memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2851:8:2","memberName":"selector","nodeType":"MemberAccess","src":"2821:38:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2788,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"2873:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2789,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"2880:6:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":2790,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2888:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"expression":{"id":2783,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2798:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2802:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2798:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2781,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2762:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2780:4:2","memberName":"call","nodeType":"MemberAccess","src":"2762:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2762:136:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2724:174:2"},{"expression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2794,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"2909:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2795,"name":"newTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"2923:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":2796,"name":"serialNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2939:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2908:45:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int64_$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"tuple(int256,int64,int64[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":2798,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"2964:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":2811,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3037:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3057:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"3037:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"arguments":[{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3072:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3066:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2813,"name":"int64","nodeType":"ElementaryTypeName","src":"3066:5:2","typeDescriptions":{}}},"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"arguments":[{"hexValue":"30","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3088:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3076:11:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (int64[] memory)"},"typeName":{"baseType":{"id":2817,"name":"int64","nodeType":"ElementaryTypeName","src":"3080:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2818,"nodeType":"ArrayTypeName","src":"3080:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}}],"id":2822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3036:55:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_int64_$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"tuple(int32,int64,int64[] memory)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2964:127:2","trueExpression":{"arguments":[{"id":2801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"2993:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3002:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2802,"name":"int32","nodeType":"ElementaryTypeName","src":"3002:5:2","typeDescriptions":{}}},{"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2804,"name":"int64","nodeType":"ElementaryTypeName","src":"3009:5:2","typeDescriptions":{}}},{"baseExpression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3016:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2806,"name":"int64","nodeType":"ElementaryTypeName","src":"3016:5:2","typeDescriptions":{}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"type(int64[] memory)"}}],"id":2809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3001:23:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_int64_$_$_t_type$_t_array$_t_int64_$dyn_memory_ptr_$_$","typeString":"tuple(type(int32),type(int64),type(int64[] memory))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_int64_$_$_t_type$_t_array$_t_int64_$dyn_memory_ptr_$_$","typeString":"tuple(type(int32),type(int64),type(int64[] memory))"}],"expression":{"id":2799,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2982:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2986:6:2","memberName":"decode","nodeType":"MemberAccess","src":"2982:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2982:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_int64_$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"tuple(int32,int64,int64[] memory)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_int64_$_t_array$_t_int64_$dyn_memory_ptr_$","typeString":"tuple(int32,int64,int64[] memory)"}},"src":"2908:183:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2825,"nodeType":"ExpressionStatement","src":"2908:183:2"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"1556:984:2","text":"Mints an amount of the token to the defined treasury account\n @param token The token for which to mint tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n               Amount must be a positive non-zero number represented in the lowest denomination of the\n               token. The new supply must be lower than 2^63.\n @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n                 Maximum allowed size of each metadata is 100 bytes\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n @return serialNumbers If the token is an NFT the newly generate serial numbers, otherwise empty."},"id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"mintToken","nameLocation":"2554:9:2","nodeType":"FunctionDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"token","nameLocation":"2572:5:2","nodeType":"VariableDeclaration","scope":2827,"src":"2564:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"amount","nameLocation":"2585:6:2","nodeType":"VariableDeclaration","scope":2827,"src":"2579:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2763,"name":"int64","nodeType":"ElementaryTypeName","src":"2579:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":2767,"mutability":"mutable","name":"metadata","nameLocation":"2608:8:2","nodeType":"VariableDeclaration","scope":2827,"src":"2593:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2765,"name":"bytes","nodeType":"ElementaryTypeName","src":"2593:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2766,"nodeType":"ArrayTypeName","src":"2593:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2563:54:2"},"returnParameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"responseCode","nameLocation":"2644:12:2","nodeType":"VariableDeclaration","scope":2827,"src":"2640:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2769,"name":"int","nodeType":"ElementaryTypeName","src":"2640:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"newTotalSupply","nameLocation":"2664:14:2","nodeType":"VariableDeclaration","scope":2827,"src":"2658:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2771,"name":"int64","nodeType":"ElementaryTypeName","src":"2658:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"serialNumbers","nameLocation":"2695:13:2","nodeType":"VariableDeclaration","scope":2827,"src":"2680:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":2773,"name":"int64","nodeType":"ElementaryTypeName","src":"2680:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2774,"nodeType":"ArrayTypeName","src":"2680:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"2639:70:2"},"scope":5343,"src":"2545:553:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2882,"nodeType":"Block","src":"4087:349:2","statements":[{"assignments":[2843,2845],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"success","nameLocation":"4103:7:2","nodeType":"VariableDeclaration","scope":2882,"src":"4098:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2842,"name":"bool","nodeType":"ElementaryTypeName","src":"4098:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"result","nameLocation":"4125:6:2","nodeType":"VariableDeclaration","scope":2882,"src":"4112:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2844,"name":"bytes","nodeType":"ElementaryTypeName","src":"4112:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2858,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":2850,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"4194:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4214:9:2","memberName":"burnToken","nodeType":"MemberAccess","referencedDeclaration":5594,"src":"4194:29:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_int64_$_t_array$_t_int64_$dyn_memory_ptr_$returns$_t_int64_$_t_int64_$","typeString":"function IHederaTokenService.burnToken(address,int64,int64[] memory) returns (int64,int64)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4224:8:2","memberName":"selector","nodeType":"MemberAccess","src":"4194:38:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2853,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"4246:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2854,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"4253:6:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":2855,"name":"serialNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4261:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}],"expression":{"id":2848,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4171:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4175:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4171:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4171:104:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2846,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"4135:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4153:4:2","memberName":"call","nodeType":"MemberAccess","src":"4135:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:141:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4097:179:2"},{"expression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2859,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"4287:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2860,"name":"newTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"4301:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":2861,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4286:30:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int64_$","typeString":"tuple(int256,int64)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":2862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"4327:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":2872,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4391:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4411:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"4391:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"arguments":[{"hexValue":"30","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4420:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2874,"name":"int64","nodeType":"ElementaryTypeName","src":"4420:5:2","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":2878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4390:39:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_int64_$","typeString":"tuple(int32,int64)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4327:102:2","trueExpression":{"arguments":[{"id":2865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4356:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4365:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2866,"name":"int32","nodeType":"ElementaryTypeName","src":"4365:5:2","typeDescriptions":{}}},{"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4372:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2868,"name":"int64","nodeType":"ElementaryTypeName","src":"4372:5:2","typeDescriptions":{}}}],"id":2870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4364:14:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_int64_$_$","typeString":"tuple(type(int32),type(int64))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_int64_$_$","typeString":"tuple(type(int32),type(int64))"}],"expression":{"id":2863,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4345:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4349:6:2","memberName":"decode","nodeType":"MemberAccess","src":"4345:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4345:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_int64_$","typeString":"tuple(int32,int64)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_int64_$","typeString":"tuple(int32,int64)"}},"src":"4286:143:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2881,"nodeType":"ExpressionStatement","src":"4286:143:2"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"3104:834:2","text":"Burns an amount of the token from the defined treasury account\n @param token The token for which to burn tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n                account (0; balance], represented in the lowest denomination.\n @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs"},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"burnToken","nameLocation":"3952:9:2","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"token","nameLocation":"3970:5:2","nodeType":"VariableDeclaration","scope":2883,"src":"3962:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"3962:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"amount","nameLocation":"3983:6:2","nodeType":"VariableDeclaration","scope":2883,"src":"3977:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2831,"name":"int64","nodeType":"ElementaryTypeName","src":"3977:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"serialNumbers","nameLocation":"4006:13:2","nodeType":"VariableDeclaration","scope":2883,"src":"3991:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":2833,"name":"int64","nodeType":"ElementaryTypeName","src":"3991:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2834,"nodeType":"ArrayTypeName","src":"3991:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"3961:59:2"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"responseCode","nameLocation":"4047:12:2","nodeType":"VariableDeclaration","scope":2883,"src":"4043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2837,"name":"int","nodeType":"ElementaryTypeName","src":"4043:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"newTotalSupply","nameLocation":"4067:14:2","nodeType":"VariableDeclaration","scope":2883,"src":"4061:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2839,"name":"int64","nodeType":"ElementaryTypeName","src":"4061:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"4042:40:2"},"scope":5343,"src":"3943:493:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2924,"nodeType":"Block","src":"6065:281:2","statements":[{"assignments":[2895,2897],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"success","nameLocation":"6081:7:2","nodeType":"VariableDeclaration","scope":2924,"src":"6076:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2894,"name":"bool","nodeType":"ElementaryTypeName","src":"6076:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"result","nameLocation":"6103:6:2","nodeType":"VariableDeclaration","scope":2924,"src":"6090:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2896,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2909,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":2902,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"6172:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6192:15:2","memberName":"associateTokens","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"6172:35:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.associateTokens(address,address[] memory) returns (int64)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6208:8:2","memberName":"selector","nodeType":"MemberAccess","src":"6172:44:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2905,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"6230:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2906,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"6239:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":2900,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6149:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6153:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"6149:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2898,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"6113:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6131:4:2","memberName":"call","nodeType":"MemberAccess","src":"6113:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6113:134:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6075:172:2"},{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2910,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"6257:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":2911,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"6272:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":2919,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"6312:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6332:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"6312:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6272:67:2","trueExpression":{"arguments":[{"id":2914,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"6293:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6302:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2915,"name":"int32","nodeType":"ElementaryTypeName","src":"6302:5:2","typeDescriptions":{}}}],"id":2917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6301:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":2912,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6282:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6286:6:2","memberName":"decode","nodeType":"MemberAccess","src":"6282:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6282:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"6257:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2923,"nodeType":"ExpressionStatement","src":"6257:82:2"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"4442:1515:2","text":"Associates the provided account with the provided tokens. Must be signed by the provided\n  Account's key or called from the accounts contract key\n  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n  If an association between the provided account and any of the tokens already exists, the\n  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n  If the provided account's associations count exceed the constraint of maximum token associations\n    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n  On success, associations between the provided account and tokens are made and the account is\n    ready to interact with the tokens.\n @param account The account to be associated with the provided tokens\n @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n               token type\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":2925,"implemented":true,"kind":"function","modifiers":[],"name":"associateTokens","nameLocation":"5971:15:2","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"account","nameLocation":"5995:7:2","nodeType":"VariableDeclaration","scope":2925,"src":"5987:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"5987:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"tokens","nameLocation":"6021:6:2","nodeType":"VariableDeclaration","scope":2925,"src":"6004:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2887,"name":"address","nodeType":"ElementaryTypeName","src":"6004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2888,"nodeType":"ArrayTypeName","src":"6004:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5986:42:2"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"responseCode","nameLocation":"6051:12:2","nodeType":"VariableDeclaration","scope":2925,"src":"6047:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2891,"name":"int","nodeType":"ElementaryTypeName","src":"6047:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6046:18:2"},"scope":5343,"src":"5962:384:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2964,"nodeType":"Block","src":"6444:279:2","statements":[{"assignments":[2935,2937],"declarations":[{"constant":false,"id":2935,"mutability":"mutable","name":"success","nameLocation":"6460:7:2","nodeType":"VariableDeclaration","scope":2964,"src":"6455:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2934,"name":"bool","nodeType":"ElementaryTypeName","src":"6455:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"result","nameLocation":"6482:6:2","nodeType":"VariableDeclaration","scope":2964,"src":"6469:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2936,"name":"bytes","nodeType":"ElementaryTypeName","src":"6469:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2949,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":2942,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"6551:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6571:14:2","memberName":"associateToken","nodeType":"MemberAccess","referencedDeclaration":5615,"src":"6551:34:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.associateToken(address,address) returns (int64)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6586:8:2","memberName":"selector","nodeType":"MemberAccess","src":"6551:43:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2945,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"6608:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2946,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6617:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2940,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6528:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6532:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"6528:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6528:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2938,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"6492:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6510:4:2","memberName":"call","nodeType":"MemberAccess","src":"6492:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6492:132:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6454:170:2"},{"expression":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2950,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"6634:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":2951,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6649:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":2959,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"6689:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6709:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"6689:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6649:67:2","trueExpression":{"arguments":[{"id":2954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"6670:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6679:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2955,"name":"int32","nodeType":"ElementaryTypeName","src":"6679:5:2","typeDescriptions":{}}}],"id":2957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6678:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":2952,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6659:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6663:6:2","memberName":"decode","nodeType":"MemberAccess","src":"6659:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6659:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"6634:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2963,"nodeType":"ExpressionStatement","src":"6634:82:2"}]},"id":2965,"implemented":true,"kind":"function","modifiers":[],"name":"associateToken","nameLocation":"6361:14:2","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"account","nameLocation":"6384:7:2","nodeType":"VariableDeclaration","scope":2965,"src":"6376:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"6376:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"token","nameLocation":"6401:5:2","nodeType":"VariableDeclaration","scope":2965,"src":"6393:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"6393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6375:32:2"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"responseCode","nameLocation":"6430:12:2","nodeType":"VariableDeclaration","scope":2965,"src":"6426:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2931,"name":"int","nodeType":"ElementaryTypeName","src":"6426:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6425:18:2"},"scope":5343,"src":"6352:371:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"8371:282:2","statements":[{"assignments":[2977,2979],"declarations":[{"constant":false,"id":2977,"mutability":"mutable","name":"success","nameLocation":"8387:7:2","nodeType":"VariableDeclaration","scope":3006,"src":"8382:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2976,"name":"bool","nodeType":"ElementaryTypeName","src":"8382:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2979,"mutability":"mutable","name":"result","nameLocation":"8409:6:2","nodeType":"VariableDeclaration","scope":3006,"src":"8396:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2978,"name":"bytes","nodeType":"ElementaryTypeName","src":"8396:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2991,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":2984,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"8478:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8498:16:2","memberName":"dissociateTokens","nodeType":"MemberAccess","referencedDeclaration":5626,"src":"8478:36:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.dissociateTokens(address,address[] memory) returns (int64)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8515:8:2","memberName":"selector","nodeType":"MemberAccess","src":"8478:45:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2987,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"8537:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2988,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"8546:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":2982,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8455:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8459:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"8455:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8455:98:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2980,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"8419:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8437:4:2","memberName":"call","nodeType":"MemberAccess","src":"8419:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:135:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8381:173:2"},{"expression":{"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2992,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"8564:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":2993,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"8579:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3001,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"8619:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8639:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"8619:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8579:67:2","trueExpression":{"arguments":[{"id":2996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"8600:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8609:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2997,"name":"int32","nodeType":"ElementaryTypeName","src":"8609:5:2","typeDescriptions":{}}}],"id":2999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8608:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":2994,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8589:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8593:6:2","memberName":"decode","nodeType":"MemberAccess","src":"8589:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8589:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"8564:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3005,"nodeType":"ExpressionStatement","src":"8564:82:2"}]},"documentation":{"id":2966,"nodeType":"StructuredDocumentation","src":"6729:1533:2","text":"Dissociates the provided account with the provided tokens. Must be signed by the provided\n Account's key.\n If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n If an association between the provided account and any of the tokens does not exist, the\n transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n not zero.\n If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n On success, associations between the provided account and tokens are removed.\n @param account The account to be dissociated from the provided tokens\n @param tokens The tokens to be dissociated from the provided account.\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"dissociateTokens","nameLocation":"8276:16:2","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"account","nameLocation":"8301:7:2","nodeType":"VariableDeclaration","scope":3007,"src":"8293:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"8293:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"tokens","nameLocation":"8327:6:2","nodeType":"VariableDeclaration","scope":3007,"src":"8310:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2969,"name":"address","nodeType":"ElementaryTypeName","src":"8310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2970,"nodeType":"ArrayTypeName","src":"8310:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8292:42:2"},"returnParameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"responseCode","nameLocation":"8357:12:2","nodeType":"VariableDeclaration","scope":3007,"src":"8353:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2973,"name":"int","nodeType":"ElementaryTypeName","src":"8353:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8352:18:2"},"scope":5343,"src":"8267:386:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"8752:280:2","statements":[{"assignments":[3017,3019],"declarations":[{"constant":false,"id":3017,"mutability":"mutable","name":"success","nameLocation":"8768:7:2","nodeType":"VariableDeclaration","scope":3046,"src":"8763:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3016,"name":"bool","nodeType":"ElementaryTypeName","src":"8763:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"result","nameLocation":"8790:6:2","nodeType":"VariableDeclaration","scope":3046,"src":"8777:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3018,"name":"bytes","nodeType":"ElementaryTypeName","src":"8777:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3031,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3024,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"8859:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8879:15:2","memberName":"dissociateToken","nodeType":"MemberAccess","referencedDeclaration":5636,"src":"8859:35:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.dissociateToken(address,address) returns (int64)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8895:8:2","memberName":"selector","nodeType":"MemberAccess","src":"8859:44:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3027,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"8917:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3028,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"8926:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3022,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8836:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8840:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"8836:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8836:96:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3020,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"8800:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8818:4:2","memberName":"call","nodeType":"MemberAccess","src":"8800:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8800:133:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8762:171:2"},{"expression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3032,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"8943:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3033,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"8958:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3041,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"8998:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9018:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"8998:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8958:67:2","trueExpression":{"arguments":[{"id":3036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"8979:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8988:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3037,"name":"int32","nodeType":"ElementaryTypeName","src":"8988:5:2","typeDescriptions":{}}}],"id":3039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8987:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":3034,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8968:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8972:6:2","memberName":"decode","nodeType":"MemberAccess","src":"8968:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8968:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"8943:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3045,"nodeType":"ExpressionStatement","src":"8943:82:2"}]},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"dissociateToken","nameLocation":"8668:15:2","nodeType":"FunctionDefinition","parameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"account","nameLocation":"8692:7:2","nodeType":"VariableDeclaration","scope":3047,"src":"8684:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"8684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"token","nameLocation":"8709:5:2","nodeType":"VariableDeclaration","scope":3047,"src":"8701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"8701:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8683:32:2"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"responseCode","nameLocation":"8738:12:2","nodeType":"VariableDeclaration","scope":3047,"src":"8734:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3013,"name":"int","nodeType":"ElementaryTypeName","src":"8734:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8733:18:2"},"scope":5343,"src":"8659:373:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3108,"nodeType":"Block","src":"9833:365:2","statements":[{"assignments":[3066,3068],"declarations":[{"constant":false,"id":3066,"mutability":"mutable","name":"success","nameLocation":"9849:7:2","nodeType":"VariableDeclaration","scope":3108,"src":"9844:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3065,"name":"bool","nodeType":"ElementaryTypeName","src":"9844:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"result","nameLocation":"9871:6:2","nodeType":"VariableDeclaration","scope":3108,"src":"9858:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3067,"name":"bytes","nodeType":"ElementaryTypeName","src":"9858:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3084,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3076,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"9959:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9979:19:2","memberName":"createFungibleToken","nodeType":"MemberAccess","referencedDeclaration":5651,"src":"9959:39:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_struct$_HederaToken_$5426_memory_ptr_$_t_int64_$_t_int32_$returns$_t_int64_$_t_address_$","typeString":"function IHederaTokenService.createFungibleToken(struct IHederaTokenService.HederaToken memory,int64,int32) payable returns (int64,address)"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9999:8:2","memberName":"selector","nodeType":"MemberAccess","src":"9959:48:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10021:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}},{"id":3080,"name":"initialTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"10028:18:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":3081,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"10048:8:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int32","typeString":"int32"}],"expression":{"id":3074,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9936:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9940:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"9936:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:121:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3069,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"9881:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9899:4:2","memberName":"call","nodeType":"MemberAccess","src":"9881:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3071,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9912:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9916:5:2","memberName":"value","nodeType":"MemberAccess","src":"9912:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9881:41:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9881:177:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9843:215:2"},{"expression":{"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3085,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"10071:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3086,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10085:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3087,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"10070:28:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_address_$","typeString":"tuple(int256,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3088,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"10101:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3098,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10151:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10171:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"10151:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"arguments":[{"hexValue":"30","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10188:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10180:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3100,"name":"address","nodeType":"ElementaryTypeName","src":"10180:7:2","typeDescriptions":{}}},"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10180:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10150:41:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10101:90:2","trueExpression":{"arguments":[{"id":3091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"10122:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10131:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3092,"name":"int32","nodeType":"ElementaryTypeName","src":"10131:5:2","typeDescriptions":{}}},{"id":3095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10138:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3094,"name":"address","nodeType":"ElementaryTypeName","src":"10138:7:2","typeDescriptions":{}}}],"id":3096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10130:16:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}],"expression":{"id":3089,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10111:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10115:6:2","memberName":"decode","nodeType":"MemberAccess","src":"10111:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10111:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_payable_$","typeString":"tuple(int32,address payable)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"src":"10070:121:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3107,"nodeType":"ExpressionStatement","src":"10070:121:2"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"9038:564:2","text":"Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"},"id":3109,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3058,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"9764:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}}],"id":3059,"kind":"modifierInvocation","modifierName":{"id":3057,"name":"nonEmptyExpiry","nameLocations":["9749:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2708,"src":"9749:14:2"},"nodeType":"ModifierInvocation","src":"9749:21:2"}],"name":"createFungibleToken","nameLocation":"9616:19:2","nodeType":"FunctionDefinition","parameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"token","nameLocation":"9684:5:2","nodeType":"VariableDeclaration","scope":3109,"src":"9645:44:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":3050,"nodeType":"UserDefinedTypeName","pathNode":{"id":3049,"name":"IHederaTokenService.HederaToken","nameLocations":["9645:19:2","9665:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"9645:31:2"},"referencedDeclaration":5426,"src":"9645:31:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"initialTotalSupply","nameLocation":"9705:18:2","nodeType":"VariableDeclaration","scope":3109,"src":"9699:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3052,"name":"int64","nodeType":"ElementaryTypeName","src":"9699:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"decimals","nameLocation":"9739:8:2","nodeType":"VariableDeclaration","scope":3109,"src":"9733:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3054,"name":"int32","nodeType":"ElementaryTypeName","src":"9733:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"9635:113:2"},"returnParameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"responseCode","nameLocation":"9797:12:2","nodeType":"VariableDeclaration","scope":3109,"src":"9793:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3060,"name":"int","nodeType":"ElementaryTypeName","src":"9793:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"tokenAddress","nameLocation":"9819:12:2","nodeType":"VariableDeclaration","scope":3109,"src":"9811:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3062,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9792:40:2"},"scope":5343,"src":"9607:591:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3180,"nodeType":"Block","src":"11279:404:2","statements":[{"assignments":[3136,3138],"declarations":[{"constant":false,"id":3136,"mutability":"mutable","name":"success","nameLocation":"11295:7:2","nodeType":"VariableDeclaration","scope":3180,"src":"11290:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3135,"name":"bool","nodeType":"ElementaryTypeName","src":"11290:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"result","nameLocation":"11317:6:2","nodeType":"VariableDeclaration","scope":3180,"src":"11304:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3137,"name":"bytes","nodeType":"ElementaryTypeName","src":"11304:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3156,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3146,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"11405:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11425:33:2","memberName":"createFungibleTokenWithCustomFees","nodeType":"MemberAccess","referencedDeclaration":5674,"src":"11405:53:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_struct$_HederaToken_$5426_memory_ptr_$_t_int64_$_t_int32_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$_t_address_$","typeString":"function IHederaTokenService.createFungibleTokenWithCustomFees(struct IHederaTokenService.HederaToken memory,int64,int32,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.FractionalFee memory[] memory) payable returns (int64,address)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11459:8:2","memberName":"selector","nodeType":"MemberAccess","src":"11405:62:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3149,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"11481:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}},{"id":3150,"name":"initialTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"11488:18:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":3151,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"11508:8:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":3152,"name":"fixedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"11518:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"}},{"id":3153,"name":"fractionalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"11529:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int32","typeString":"int32"},{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee memory[] memory"}],"expression":{"id":3144,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11382:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11386:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"11382:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:162:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3139,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"11327:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11345:4:2","memberName":"call","nodeType":"MemberAccess","src":"11327:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3141,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11358:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11362:5:2","memberName":"value","nodeType":"MemberAccess","src":"11358:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11327:41:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11327:218:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11289:256:2"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3157,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"11556:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3158,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"11570:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3159,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11555:28:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_address_$","typeString":"tuple(int256,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3160,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"11586:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3170,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"11636:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11656:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"11636:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"arguments":[{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11673:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11665:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"11665:7:2","typeDescriptions":{}}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11665:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11635:41:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11586:90:2","trueExpression":{"arguments":[{"id":3163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"11607:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11616:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3164,"name":"int32","nodeType":"ElementaryTypeName","src":"11616:5:2","typeDescriptions":{}}},{"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11623:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"11623:7:2","typeDescriptions":{}}}],"id":3168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11615:16:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}],"expression":{"id":3161,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11596:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11600:6:2","memberName":"decode","nodeType":"MemberAccess","src":"11596:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11596:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_payable_$","typeString":"tuple(int32,address payable)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"src":"11555:121:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3179,"nodeType":"ExpressionStatement","src":"11555:121:2"}]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"10204:706:2","text":"Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by\n @param fixedFees list of fixed fees to apply to the token\n @param fractionalFees list of fractional fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"},"id":3181,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3128,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"11210:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}}],"id":3129,"kind":"modifierInvocation","modifierName":{"id":3127,"name":"nonEmptyExpiry","nameLocations":["11195:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2708,"src":"11195:14:2"},"nodeType":"ModifierInvocation","src":"11195:21:2"}],"name":"createFungibleTokenWithCustomFees","nameLocation":"10924:33:2","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"token","nameLocation":"11006:5:2","nodeType":"VariableDeclaration","scope":3181,"src":"10967:44:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":3112,"nodeType":"UserDefinedTypeName","pathNode":{"id":3111,"name":"IHederaTokenService.HederaToken","nameLocations":["10967:19:2","10987:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"10967:31:2"},"referencedDeclaration":5426,"src":"10967:31:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"initialTotalSupply","nameLocation":"11027:18:2","nodeType":"VariableDeclaration","scope":3181,"src":"11021:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3114,"name":"int64","nodeType":"ElementaryTypeName","src":"11021:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"decimals","nameLocation":"11061:8:2","nodeType":"VariableDeclaration","scope":3181,"src":"11055:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3116,"name":"int32","nodeType":"ElementaryTypeName","src":"11055:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"fixedFees","nameLocation":"11117:9:2","nodeType":"VariableDeclaration","scope":3181,"src":"11079:47:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":3119,"nodeType":"UserDefinedTypeName","pathNode":{"id":3118,"name":"IHederaTokenService.FixedFee","nameLocations":["11079:19:2","11099:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"11079:28:2"},"referencedDeclaration":5504,"src":"11079:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":3120,"nodeType":"ArrayTypeName","src":"11079:30:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"fractionalFees","nameLocation":"11179:14:2","nodeType":"VariableDeclaration","scope":3181,"src":"11136:57:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"},"typeName":{"baseType":{"id":3123,"nodeType":"UserDefinedTypeName","pathNode":{"id":3122,"name":"IHederaTokenService.FractionalFee","nameLocations":["11136:19:2","11156:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"11136:33:2"},"referencedDeclaration":5518,"src":"11136:33:2","typeDescriptions":{"typeIdentifier":"t_struct$_FractionalFee_$5518_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee"}},"id":3124,"nodeType":"ArrayTypeName","src":"11136:35:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"}},"visibility":"internal"}],"src":"10957:237:2"},"returnParameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"responseCode","nameLocation":"11243:12:2","nodeType":"VariableDeclaration","scope":3181,"src":"11239:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3130,"name":"int","nodeType":"ElementaryTypeName","src":"11239:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"tokenAddress","nameLocation":"11265:12:2","nodeType":"VariableDeclaration","scope":3181,"src":"11257:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11238:40:2"},"scope":5343,"src":"10915:768:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3236,"nodeType":"Block","src":"12145:324:2","statements":[{"assignments":[3196,3198],"declarations":[{"constant":false,"id":3196,"mutability":"mutable","name":"success","nameLocation":"12161:7:2","nodeType":"VariableDeclaration","scope":3236,"src":"12156:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3195,"name":"bool","nodeType":"ElementaryTypeName","src":"12156:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"result","nameLocation":"12183:6:2","nodeType":"VariableDeclaration","scope":3236,"src":"12170:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3197,"name":"bytes","nodeType":"ElementaryTypeName","src":"12170:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3212,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3206,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"12271:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12291:22:2","memberName":"createNonFungibleToken","nodeType":"MemberAccess","referencedDeclaration":5685,"src":"12271:42:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_struct$_HederaToken_$5426_memory_ptr_$returns$_t_int64_$_t_address_$","typeString":"function IHederaTokenService.createNonFungibleToken(struct IHederaTokenService.HederaToken memory) payable returns (int64,address)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12314:8:2","memberName":"selector","nodeType":"MemberAccess","src":"12271:51:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3209,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"12324:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}],"expression":{"id":3204,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12248:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12252:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"12248:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:82:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3199,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"12193:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12211:4:2","memberName":"call","nodeType":"MemberAccess","src":"12193:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12224:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12228:5:2","memberName":"value","nodeType":"MemberAccess","src":"12224:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12193:41:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12193:138:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12155:176:2"},{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3213,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"12342:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3214,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"12356:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3215,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"12341:28:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_address_$","typeString":"tuple(int256,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3216,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"12372:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3226,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"12422:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12442:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"12422:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"arguments":[{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12459:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12451:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"12451:7:2","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12451:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12421:41:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12372:90:2","trueExpression":{"arguments":[{"id":3219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"12393:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12402:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3220,"name":"int32","nodeType":"ElementaryTypeName","src":"12402:5:2","typeDescriptions":{}}},{"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12409:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3222,"name":"address","nodeType":"ElementaryTypeName","src":"12409:7:2","typeDescriptions":{}}}],"id":3224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12401:16:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}],"expression":{"id":3217,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12382:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12386:6:2","memberName":"decode","nodeType":"MemberAccess","src":"12382:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_payable_$","typeString":"tuple(int32,address payable)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"src":"12341:121:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3235,"nodeType":"ExpressionStatement","src":"12341:121:2"}]},"documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"11689:289:2","text":"Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"},"id":3237,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3188,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"12076:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}}],"id":3189,"kind":"modifierInvocation","modifierName":{"id":3187,"name":"nonEmptyExpiry","nameLocations":["12061:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2708,"src":"12061:14:2"},"nodeType":"ModifierInvocation","src":"12061:21:2"}],"name":"createNonFungibleToken","nameLocation":"11992:22:2","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"token","nameLocation":"12054:5:2","nodeType":"VariableDeclaration","scope":3237,"src":"12015:44:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":3184,"nodeType":"UserDefinedTypeName","pathNode":{"id":3183,"name":"IHederaTokenService.HederaToken","nameLocations":["12015:19:2","12035:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"12015:31:2"},"referencedDeclaration":5426,"src":"12015:31:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"}],"src":"12014:46:2"},"returnParameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"responseCode","nameLocation":"12109:12:2","nodeType":"VariableDeclaration","scope":3237,"src":"12105:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3190,"name":"int","nodeType":"ElementaryTypeName","src":"12105:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"tokenAddress","nameLocation":"12131:12:2","nodeType":"VariableDeclaration","scope":3237,"src":"12123:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"12123:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12104:40:2"},"scope":5343,"src":"11983:486:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3302,"nodeType":"Block","src":"13208:374:2","statements":[{"assignments":[3260,3262],"declarations":[{"constant":false,"id":3260,"mutability":"mutable","name":"success","nameLocation":"13224:7:2","nodeType":"VariableDeclaration","scope":3302,"src":"13219:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3259,"name":"bool","nodeType":"ElementaryTypeName","src":"13219:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"result","nameLocation":"13246:6:2","nodeType":"VariableDeclaration","scope":3302,"src":"13233:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3261,"name":"bytes","nodeType":"ElementaryTypeName","src":"13233:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3278,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3270,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"13334:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13354:36:2","memberName":"createNonFungibleTokenWithCustomFees","nodeType":"MemberAccess","referencedDeclaration":5704,"src":"13334:56:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_struct$_HederaToken_$5426_memory_ptr_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$_t_address_$","typeString":"function IHederaTokenService.createNonFungibleTokenWithCustomFees(struct IHederaTokenService.HederaToken memory,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.RoyaltyFee memory[] memory) payable returns (int64,address)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13391:8:2","memberName":"selector","nodeType":"MemberAccess","src":"13334:65:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3273,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"13413:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}},{"id":3274,"name":"fixedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"13420:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"}},{"id":3275,"name":"royaltyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"13431:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"},{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee memory[] memory"}],"expression":{"id":3268,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13311:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13315:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"13311:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13311:132:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3263,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"13256:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13274:4:2","memberName":"call","nodeType":"MemberAccess","src":"13256:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3265,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13287:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13291:5:2","memberName":"value","nodeType":"MemberAccess","src":"13287:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13256:41:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13256:188:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13218:226:2"},{"expression":{"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3279,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"13455:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3280,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"13469:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3281,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13454:28:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_address_$","typeString":"tuple(int256,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"13485:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3292,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13535:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13555:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"13535:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"arguments":[{"hexValue":"30","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13572:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13564:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"13564:7:2","typeDescriptions":{}}},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13564:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13534:41:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13485:90:2","trueExpression":{"arguments":[{"id":3285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"13506:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13515:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3286,"name":"int32","nodeType":"ElementaryTypeName","src":"13515:5:2","typeDescriptions":{}}},{"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13522:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3288,"name":"address","nodeType":"ElementaryTypeName","src":"13522:7:2","typeDescriptions":{}}}],"id":3290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13514:16:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}],"expression":{"id":3283,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13495:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13499:6:2","memberName":"decode","nodeType":"MemberAccess","src":"13495:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13495:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_payable_$","typeString":"tuple(int32,address payable)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"src":"13454:121:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3301,"nodeType":"ExpressionStatement","src":"13454:121:2"}]},"documentation":{"id":3238,"nodeType":"StructuredDocumentation","src":"12475:425:2","text":"Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @param fixedFees list of fixed fees to apply to the token\n @param royaltyFees list of royalty fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"},"id":3303,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3252,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"13139:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}}],"id":3253,"kind":"modifierInvocation","modifierName":{"id":3251,"name":"nonEmptyExpiry","nameLocations":["13124:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2708,"src":"13124:14:2"},"nodeType":"ModifierInvocation","src":"13124:21:2"}],"name":"createNonFungibleTokenWithCustomFees","nameLocation":"12914:36:2","nodeType":"FunctionDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"token","nameLocation":"12999:5:2","nodeType":"VariableDeclaration","scope":3303,"src":"12960:44:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":3240,"nodeType":"UserDefinedTypeName","pathNode":{"id":3239,"name":"IHederaTokenService.HederaToken","nameLocations":["12960:19:2","12980:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"12960:31:2"},"referencedDeclaration":5426,"src":"12960:31:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"fixedFees","nameLocation":"13052:9:2","nodeType":"VariableDeclaration","scope":3303,"src":"13014:47:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":3243,"nodeType":"UserDefinedTypeName","pathNode":{"id":3242,"name":"IHederaTokenService.FixedFee","nameLocations":["13014:19:2","13034:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"13014:28:2"},"referencedDeclaration":5504,"src":"13014:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":3244,"nodeType":"ArrayTypeName","src":"13014:30:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"royaltyFees","nameLocation":"13111:11:2","nodeType":"VariableDeclaration","scope":3303,"src":"13071:51:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"},"typeName":{"baseType":{"id":3247,"nodeType":"UserDefinedTypeName","pathNode":{"id":3246,"name":"IHederaTokenService.RoyaltyFee","nameLocations":["13071:19:2","13091:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":5532,"src":"13071:30:2"},"referencedDeclaration":5532,"src":"13071:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyFee_$5532_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee"}},"id":3248,"nodeType":"ArrayTypeName","src":"13071:32:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"}},"visibility":"internal"}],"src":"12950:173:2"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"responseCode","nameLocation":"13172:12:2","nodeType":"VariableDeclaration","scope":3303,"src":"13168:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3254,"name":"int","nodeType":"ElementaryTypeName","src":"13168:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3257,"mutability":"mutable","name":"tokenAddress","nameLocation":"13194:12:2","nodeType":"VariableDeclaration","scope":3303,"src":"13186:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"13186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13167:40:2"},"scope":5343,"src":"12905:677:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3355,"nodeType":"Block","src":"13921:407:2","statements":[{"assignments":[3315,3317],"declarations":[{"constant":false,"id":3315,"mutability":"mutable","name":"success","nameLocation":"13937:7:2","nodeType":"VariableDeclaration","scope":3355,"src":"13932:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3314,"name":"bool","nodeType":"ElementaryTypeName","src":"13932:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"result","nameLocation":"13959:6:2","nodeType":"VariableDeclaration","scope":3355,"src":"13946:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3316,"name":"bytes","nodeType":"ElementaryTypeName","src":"13946:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3328,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3322,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"14028:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14048:20:2","memberName":"getFungibleTokenInfo","nodeType":"MemberAccess","referencedDeclaration":5961,"src":"14028:40:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$_t_struct$_FungibleTokenInfo_$5471_memory_ptr_$","typeString":"function IHederaTokenService.getFungibleTokenInfo(address) returns (int64,struct IHederaTokenService.FungibleTokenInfo memory)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14069:8:2","memberName":"selector","nodeType":"MemberAccess","src":"14028:49:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3325,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"14079:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3320,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14005:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14009:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"14005:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14005:80:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3318,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"13969:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13987:4:2","memberName":"call","nodeType":"MemberAccess","src":"13969:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13969:117:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13931:155:2"},{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"defaultTokenInfo","nameLocation":"14141:16:2","nodeType":"VariableDeclaration","scope":3355,"src":"14096:61:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTokenInfo_$5471_memory_ptr","typeString":"struct IHederaTokenService.FungibleTokenInfo"},"typeName":{"id":3332,"nodeType":"UserDefinedTypeName","pathNode":{"id":3331,"name":"IHederaTokenService.FungibleTokenInfo","nameLocations":["14096:19:2","14116:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":5471,"src":"14096:37:2"},"referencedDeclaration":5471,"src":"14096:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTokenInfo_$5471_storage_ptr","typeString":"struct IHederaTokenService.FungibleTokenInfo"}},"visibility":"internal"}],"id":3334,"nodeType":"VariableDeclarationStatement","src":"14096:61:2"},{"expression":{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3335,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"14168:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3336,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"14182:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTokenInfo_$5471_memory_ptr","typeString":"struct IHederaTokenService.FungibleTokenInfo memory"}}],"id":3337,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14167:25:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_struct$_FungibleTokenInfo_$5471_memory_ptr_$","typeString":"tuple(int256,struct IHederaTokenService.FungibleTokenInfo memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3338,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"14195:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3348,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14275:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14295:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"14275:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":3350,"name":"defaultTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"14304:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTokenInfo_$5471_memory_ptr","typeString":"struct IHederaTokenService.FungibleTokenInfo memory"}}],"id":3351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14274:47:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_FungibleTokenInfo_$5471_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.FungibleTokenInfo memory)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14195:126:2","trueExpression":{"arguments":[{"id":3341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"14216:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14225:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3342,"name":"int32","nodeType":"ElementaryTypeName","src":"14225:5:2","typeDescriptions":{}}},{"expression":{"id":3344,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"14232:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14252:17:2","memberName":"FungibleTokenInfo","nodeType":"MemberAccess","referencedDeclaration":5471,"src":"14232:37:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FungibleTokenInfo_$5471_storage_ptr_$","typeString":"type(struct IHederaTokenService.FungibleTokenInfo storage pointer)"}}],"id":3346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14224:46:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_FungibleTokenInfo_$5471_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.FungibleTokenInfo storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_FungibleTokenInfo_$5471_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.FungibleTokenInfo storage pointer))"}],"expression":{"id":3339,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14205:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14209:6:2","memberName":"decode","nodeType":"MemberAccess","src":"14205:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14205:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_FungibleTokenInfo_$5471_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.FungibleTokenInfo memory)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_FungibleTokenInfo_$5471_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.FungibleTokenInfo memory)"}},"src":"14167:154:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3354,"nodeType":"ExpressionStatement","src":"14167:154:2"}]},"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"13588:191:2","text":"Retrieves fungible specific token info for a fungible token\n @param token The ID of the token as a solidity address\n @dev This function reverts if the call is not successful"},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"getFungibleTokenInfo","nameLocation":"13793:20:2","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"token","nameLocation":"13822:5:2","nodeType":"VariableDeclaration","scope":3356,"src":"13814:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"13814:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13813:15:2"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"responseCode","nameLocation":"13851:12:2","nodeType":"VariableDeclaration","scope":3356,"src":"13847:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3308,"name":"int","nodeType":"ElementaryTypeName","src":"13847:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"tokenInfo","nameLocation":"13910:9:2","nodeType":"VariableDeclaration","scope":3356,"src":"13865:54:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTokenInfo_$5471_memory_ptr","typeString":"struct IHederaTokenService.FungibleTokenInfo"},"typeName":{"id":3311,"nodeType":"UserDefinedTypeName","pathNode":{"id":3310,"name":"IHederaTokenService.FungibleTokenInfo","nameLocations":["13865:19:2","13885:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":5471,"src":"13865:37:2"},"referencedDeclaration":5471,"src":"13865:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTokenInfo_$5471_storage_ptr","typeString":"struct IHederaTokenService.FungibleTokenInfo"}},"visibility":"internal"}],"src":"13846:74:2"},"scope":5343,"src":"13784:544:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3408,"nodeType":"Block","src":"14638:383:2","statements":[{"assignments":[3368,3370],"declarations":[{"constant":false,"id":3368,"mutability":"mutable","name":"success","nameLocation":"14654:7:2","nodeType":"VariableDeclaration","scope":3408,"src":"14649:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3367,"name":"bool","nodeType":"ElementaryTypeName","src":"14649:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"result","nameLocation":"14676:6:2","nodeType":"VariableDeclaration","scope":3408,"src":"14663:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3369,"name":"bytes","nodeType":"ElementaryTypeName","src":"14663:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3381,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3375,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"14745:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14765:12:2","memberName":"getTokenInfo","nodeType":"MemberAccess","referencedDeclaration":5972,"src":"14745:32:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$_t_struct$_TokenInfo_$5462_memory_ptr_$","typeString":"function IHederaTokenService.getTokenInfo(address) returns (int64,struct IHederaTokenService.TokenInfo memory)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14778:8:2","memberName":"selector","nodeType":"MemberAccess","src":"14745:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3378,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14788:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3373,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14722:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14726:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"14722:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14722:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3371,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"14686:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14704:4:2","memberName":"call","nodeType":"MemberAccess","src":"14686:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14686:109:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14648:147:2"},{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"defaultTokenInfo","nameLocation":"14842:16:2","nodeType":"VariableDeclaration","scope":3408,"src":"14805:53:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_memory_ptr","typeString":"struct IHederaTokenService.TokenInfo"},"typeName":{"id":3385,"nodeType":"UserDefinedTypeName","pathNode":{"id":3384,"name":"IHederaTokenService.TokenInfo","nameLocations":["14805:19:2","14825:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":5462,"src":"14805:29:2"},"referencedDeclaration":5462,"src":"14805:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_storage_ptr","typeString":"struct IHederaTokenService.TokenInfo"}},"visibility":"internal"}],"id":3387,"nodeType":"VariableDeclarationStatement","src":"14805:53:2"},{"expression":{"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3388,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"14869:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3389,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14883:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_memory_ptr","typeString":"struct IHederaTokenService.TokenInfo memory"}}],"id":3390,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14868:25:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_struct$_TokenInfo_$5462_memory_ptr_$","typeString":"tuple(int256,struct IHederaTokenService.TokenInfo memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3391,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"14896:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3401,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14968:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14988:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"14968:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":3403,"name":"defaultTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"14997:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_memory_ptr","typeString":"struct IHederaTokenService.TokenInfo memory"}}],"id":3404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14967:47:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_TokenInfo_$5462_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.TokenInfo memory)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14896:118:2","trueExpression":{"arguments":[{"id":3394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"14917:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14926:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3395,"name":"int32","nodeType":"ElementaryTypeName","src":"14926:5:2","typeDescriptions":{}}},{"expression":{"id":3397,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"14933:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14953:9:2","memberName":"TokenInfo","nodeType":"MemberAccess","referencedDeclaration":5462,"src":"14933:29:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenInfo_$5462_storage_ptr_$","typeString":"type(struct IHederaTokenService.TokenInfo storage pointer)"}}],"id":3399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14925:38:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_TokenInfo_$5462_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.TokenInfo storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_TokenInfo_$5462_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.TokenInfo storage pointer))"}],"expression":{"id":3392,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14906:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14910:6:2","memberName":"decode","nodeType":"MemberAccess","src":"14906:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_TokenInfo_$5462_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.TokenInfo memory)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_TokenInfo_$5462_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.TokenInfo memory)"}},"src":"14868:146:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3407,"nodeType":"ExpressionStatement","src":"14868:146:2"}]},"documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"14334:178:2","text":"Retrieves general token info for a given token\n @param token The ID of the token as a solidity address\n @dev This function reverts if the call is not successful"},"id":3409,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"14526:12:2","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"token","nameLocation":"14547:5:2","nodeType":"VariableDeclaration","scope":3409,"src":"14539:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3358,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14538:15:2"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"responseCode","nameLocation":"14576:12:2","nodeType":"VariableDeclaration","scope":3409,"src":"14572:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3361,"name":"int","nodeType":"ElementaryTypeName","src":"14572:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"tokenInfo","nameLocation":"14627:9:2","nodeType":"VariableDeclaration","scope":3409,"src":"14590:46:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_memory_ptr","typeString":"struct IHederaTokenService.TokenInfo"},"typeName":{"id":3364,"nodeType":"UserDefinedTypeName","pathNode":{"id":3363,"name":"IHederaTokenService.TokenInfo","nameLocations":["14590:19:2","14610:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":5462,"src":"14590:29:2"},"referencedDeclaration":5462,"src":"14590:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_storage_ptr","typeString":"struct IHederaTokenService.TokenInfo"}},"visibility":"internal"}],"src":"14571:66:2"},"scope":5343,"src":"14517:504:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3464,"nodeType":"Block","src":"15385:430:2","statements":[{"assignments":[3423,3425],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"success","nameLocation":"15401:7:2","nodeType":"VariableDeclaration","scope":3464,"src":"15396:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3422,"name":"bool","nodeType":"ElementaryTypeName","src":"15396:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"result","nameLocation":"15423:6:2","nodeType":"VariableDeclaration","scope":3464,"src":"15410:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3424,"name":"bytes","nodeType":"ElementaryTypeName","src":"15410:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3437,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3430,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"15492:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15512:23:2","memberName":"getNonFungibleTokenInfo","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"15492:43:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_int64_$returns$_t_int64_$_t_struct$_NonFungibleTokenInfo_$5492_memory_ptr_$","typeString":"function IHederaTokenService.getNonFungibleTokenInfo(address,int64) returns (int64,struct IHederaTokenService.NonFungibleTokenInfo memory)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15536:8:2","memberName":"selector","nodeType":"MemberAccess","src":"15492:52:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3433,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"15546:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3434,"name":"serialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"15553:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":3428,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15469:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15473:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"15469:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15469:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3426,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15433:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15451:4:2","memberName":"call","nodeType":"MemberAccess","src":"15433:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15433:134:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"15395:172:2"},{"assignments":[3442],"declarations":[{"constant":false,"id":3442,"mutability":"mutable","name":"defaultTokenInfo","nameLocation":"15625:16:2","nodeType":"VariableDeclaration","scope":3464,"src":"15577:64:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NonFungibleTokenInfo_$5492_memory_ptr","typeString":"struct IHederaTokenService.NonFungibleTokenInfo"},"typeName":{"id":3441,"nodeType":"UserDefinedTypeName","pathNode":{"id":3440,"name":"IHederaTokenService.NonFungibleTokenInfo","nameLocations":["15577:19:2","15597:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":5492,"src":"15577:40:2"},"referencedDeclaration":5492,"src":"15577:40:2","typeDescriptions":{"typeIdentifier":"t_struct$_NonFungibleTokenInfo_$5492_storage_ptr","typeString":"struct IHederaTokenService.NonFungibleTokenInfo"}},"visibility":"internal"}],"id":3443,"nodeType":"VariableDeclarationStatement","src":"15577:64:2"},{"expression":{"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3444,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"15652:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3445,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"15666:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_NonFungibleTokenInfo_$5492_memory_ptr","typeString":"struct IHederaTokenService.NonFungibleTokenInfo memory"}}],"id":3446,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"15651:25:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_struct$_NonFungibleTokenInfo_$5492_memory_ptr_$","typeString":"tuple(int256,struct IHederaTokenService.NonFungibleTokenInfo memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3447,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"15679:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3457,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"15762:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15782:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"15762:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":3459,"name":"defaultTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"15791:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_NonFungibleTokenInfo_$5492_memory_ptr","typeString":"struct IHederaTokenService.NonFungibleTokenInfo memory"}}],"id":3460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15761:47:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_NonFungibleTokenInfo_$5492_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.NonFungibleTokenInfo memory)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15679:129:2","trueExpression":{"arguments":[{"id":3450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"15700:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15709:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3451,"name":"int32","nodeType":"ElementaryTypeName","src":"15709:5:2","typeDescriptions":{}}},{"expression":{"id":3453,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"15716:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15736:20:2","memberName":"NonFungibleTokenInfo","nodeType":"MemberAccess","referencedDeclaration":5492,"src":"15716:40:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_NonFungibleTokenInfo_$5492_storage_ptr_$","typeString":"type(struct IHederaTokenService.NonFungibleTokenInfo storage pointer)"}}],"id":3455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15708:49:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_NonFungibleTokenInfo_$5492_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.NonFungibleTokenInfo storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_NonFungibleTokenInfo_$5492_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.NonFungibleTokenInfo storage pointer))"}],"expression":{"id":3448,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15689:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15693:6:2","memberName":"decode","nodeType":"MemberAccess","src":"15689:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15689:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_NonFungibleTokenInfo_$5492_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.NonFungibleTokenInfo memory)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_NonFungibleTokenInfo_$5492_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.NonFungibleTokenInfo memory)"}},"src":"15651:157:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3463,"nodeType":"ExpressionStatement","src":"15651:157:2"}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"15027:190:2","text":"Retrieves non-fungible specific token info for a given NFT\n @param token The ID of the token as a solidity address\n @dev This function reverts if the call is not successful"},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"getNonFungibleTokenInfo","nameLocation":"15231:23:2","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"token","nameLocation":"15263:5:2","nodeType":"VariableDeclaration","scope":3465,"src":"15255:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3411,"name":"address","nodeType":"ElementaryTypeName","src":"15255:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"serialNumber","nameLocation":"15276:12:2","nodeType":"VariableDeclaration","scope":3465,"src":"15270:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3413,"name":"int64","nodeType":"ElementaryTypeName","src":"15270:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"15254:35:2"},"returnParameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"responseCode","nameLocation":"15312:12:2","nodeType":"VariableDeclaration","scope":3465,"src":"15308:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3416,"name":"int","nodeType":"ElementaryTypeName","src":"15308:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3420,"mutability":"mutable","name":"tokenInfo","nameLocation":"15374:9:2","nodeType":"VariableDeclaration","scope":3465,"src":"15326:57:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NonFungibleTokenInfo_$5492_memory_ptr","typeString":"struct IHederaTokenService.NonFungibleTokenInfo"},"typeName":{"id":3419,"nodeType":"UserDefinedTypeName","pathNode":{"id":3418,"name":"IHederaTokenService.NonFungibleTokenInfo","nameLocations":["15326:19:2","15346:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":5492,"src":"15326:40:2"},"referencedDeclaration":5492,"src":"15326:40:2","typeDescriptions":{"typeIdentifier":"t_struct$_NonFungibleTokenInfo_$5492_storage_ptr","typeString":"struct IHederaTokenService.NonFungibleTokenInfo"}},"visibility":"internal"}],"src":"15307:77:2"},"scope":5343,"src":"15222:593:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3552,"nodeType":"Block","src":"16507:701:2","statements":[{"assignments":[3486,3488],"declarations":[{"constant":false,"id":3486,"mutability":"mutable","name":"success","nameLocation":"16523:7:2","nodeType":"VariableDeclaration","scope":3552,"src":"16518:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3485,"name":"bool","nodeType":"ElementaryTypeName","src":"16518:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"result","nameLocation":"16545:6:2","nodeType":"VariableDeclaration","scope":3552,"src":"16532:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3487,"name":"bytes","nodeType":"ElementaryTypeName","src":"16532:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3499,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3493,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"16614:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16634:18:2","memberName":"getTokenCustomFees","nodeType":"MemberAccess","referencedDeclaration":5919,"src":"16614:38:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$","typeString":"function IHederaTokenService.getTokenCustomFees(address) returns (int64,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.FractionalFee memory[] memory,struct IHederaTokenService.RoyaltyFee memory[] memory)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16653:8:2","memberName":"selector","nodeType":"MemberAccess","src":"16614:47:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3496,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"16663:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3491,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16591:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16595:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"16591:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16591:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3489,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"16555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16573:4:2","memberName":"call","nodeType":"MemberAccess","src":"16555:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16555:115:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16517:153:2"},{"assignments":[3505],"declarations":[{"constant":false,"id":3505,"mutability":"mutable","name":"defaultFixedFees","nameLocation":"16718:16:2","nodeType":"VariableDeclaration","scope":3552,"src":"16680:54:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":3503,"nodeType":"UserDefinedTypeName","pathNode":{"id":3502,"name":"IHederaTokenService.FixedFee","nameLocations":["16680:19:2","16700:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"16680:28:2"},"referencedDeclaration":5504,"src":"16680:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":3504,"nodeType":"ArrayTypeName","src":"16680:30:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"}],"id":3506,"nodeType":"VariableDeclarationStatement","src":"16680:54:2"},{"assignments":[3512],"declarations":[{"constant":false,"id":3512,"mutability":"mutable","name":"defaultFractionalFees","nameLocation":"16787:21:2","nodeType":"VariableDeclaration","scope":3552,"src":"16744:64:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"},"typeName":{"baseType":{"id":3510,"nodeType":"UserDefinedTypeName","pathNode":{"id":3509,"name":"IHederaTokenService.FractionalFee","nameLocations":["16744:19:2","16764:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"16744:33:2"},"referencedDeclaration":5518,"src":"16744:33:2","typeDescriptions":{"typeIdentifier":"t_struct$_FractionalFee_$5518_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee"}},"id":3511,"nodeType":"ArrayTypeName","src":"16744:35:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"}},"visibility":"internal"}],"id":3513,"nodeType":"VariableDeclarationStatement","src":"16744:64:2"},{"assignments":[3519],"declarations":[{"constant":false,"id":3519,"mutability":"mutable","name":"defaultRoyaltyFees","nameLocation":"16858:18:2","nodeType":"VariableDeclaration","scope":3552,"src":"16818:58:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"},"typeName":{"baseType":{"id":3517,"nodeType":"UserDefinedTypeName","pathNode":{"id":3516,"name":"IHederaTokenService.RoyaltyFee","nameLocations":["16818:19:2","16838:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":5532,"src":"16818:30:2"},"referencedDeclaration":5532,"src":"16818:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyFee_$5532_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee"}},"id":3518,"nodeType":"ArrayTypeName","src":"16818:32:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"}},"visibility":"internal"}],"id":3520,"nodeType":"VariableDeclarationStatement","src":"16818:58:2"},{"expression":{"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3521,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"16887:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":3522,"name":"fixedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16901:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"}},{"id":3523,"name":"fractionalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"16912:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee memory[] memory"}},{"id":3524,"name":"royaltyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"16928:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee memory[] memory"}}],"id":3525,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"16886:54:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(int64,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.FractionalFee memory[] memory,struct IHederaTokenService.RoyaltyFee memory[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3526,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"16951:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3543,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"17112:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17132:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"17112:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":3545,"name":"defaultFixedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"17141:16:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"}},{"id":3546,"name":"defaultFractionalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"17159:21:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee memory[] memory"}},{"id":3547,"name":"defaultRoyaltyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"17182:18:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee memory[] memory"}}],"id":3548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17111:90:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.FractionalFee memory[] memory,struct IHederaTokenService.RoyaltyFee memory[] memory)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16951:250:2","trueExpression":{"arguments":[{"id":3529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"16981:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16990:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3530,"name":"int32","nodeType":"ElementaryTypeName","src":"16990:5:2","typeDescriptions":{}}},{"baseExpression":{"expression":{"id":3532,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"16997:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17017:8:2","memberName":"FixedFee","nodeType":"MemberAccess","referencedDeclaration":5504,"src":"16997:28:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FixedFee_$5504_storage_ptr_$","typeString":"type(struct IHederaTokenService.FixedFee storage pointer)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16997:30:2","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$","typeString":"type(struct IHederaTokenService.FixedFee memory[] memory)"}},{"baseExpression":{"expression":{"id":3535,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"17029:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17049:13:2","memberName":"FractionalFee","nodeType":"MemberAccess","referencedDeclaration":5518,"src":"17029:33:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FractionalFee_$5518_storage_ptr_$","typeString":"type(struct IHederaTokenService.FractionalFee storage pointer)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17029:35:2","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$","typeString":"type(struct IHederaTokenService.FractionalFee memory[] memory)"}},{"baseExpression":{"expression":{"id":3538,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"17066:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17086:10:2","memberName":"RoyaltyFee","nodeType":"MemberAccess","referencedDeclaration":5532,"src":"17066:30:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyFee_$5532_storage_ptr_$","typeString":"type(struct IHederaTokenService.RoyaltyFee storage pointer)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17066:32:2","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$","typeString":"type(struct IHederaTokenService.RoyaltyFee memory[] memory)"}}],"id":3541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16989:110:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.FixedFee memory[] memory),type(struct IHederaTokenService.FractionalFee memory[] memory),type(struct IHederaTokenService.RoyaltyFee memory[] memory))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.FixedFee memory[] memory),type(struct IHederaTokenService.FractionalFee memory[] memory),type(struct IHederaTokenService.RoyaltyFee memory[] memory))"}],"expression":{"id":3527,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16961:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16965:6:2","memberName":"decode","nodeType":"MemberAccess","src":"16961:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16961:139:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.FractionalFee memory[] memory,struct IHederaTokenService.RoyaltyFee memory[] memory)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.FractionalFee memory[] memory,struct IHederaTokenService.RoyaltyFee memory[] memory)"}},"src":"16886:315:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3551,"nodeType":"ExpressionStatement","src":"16886:315:2"}]},"documentation":{"id":3466,"nodeType":"StructuredDocumentation","src":"15821:415:2","text":"Query token custom fees\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return fixedFees Set of fixed fees for `token`\n @return fractionalFees Set of fractional fees for `token`\n @return royaltyFees Set of royalty fees for `token`\n @dev This function reverts if the call is not successful"},"id":3553,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCustomFees","nameLocation":"16250:18:2","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"token","nameLocation":"16277:5:2","nodeType":"VariableDeclaration","scope":3553,"src":"16269:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3467,"name":"address","nodeType":"ElementaryTypeName","src":"16269:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16268:15:2"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"responseCode","nameLocation":"16308:12:2","nodeType":"VariableDeclaration","scope":3553,"src":"16302:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3470,"name":"int64","nodeType":"ElementaryTypeName","src":"16302:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"fixedFees","nameLocation":"16368:9:2","nodeType":"VariableDeclaration","scope":3553,"src":"16330:47:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":3473,"nodeType":"UserDefinedTypeName","pathNode":{"id":3472,"name":"IHederaTokenService.FixedFee","nameLocations":["16330:19:2","16350:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"16330:28:2"},"referencedDeclaration":5504,"src":"16330:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":3474,"nodeType":"ArrayTypeName","src":"16330:30:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"fractionalFees","nameLocation":"16430:14:2","nodeType":"VariableDeclaration","scope":3553,"src":"16387:57:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"},"typeName":{"baseType":{"id":3477,"nodeType":"UserDefinedTypeName","pathNode":{"id":3476,"name":"IHederaTokenService.FractionalFee","nameLocations":["16387:19:2","16407:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"16387:33:2"},"referencedDeclaration":5518,"src":"16387:33:2","typeDescriptions":{"typeIdentifier":"t_struct$_FractionalFee_$5518_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee"}},"id":3478,"nodeType":"ArrayTypeName","src":"16387:35:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"royaltyFees","nameLocation":"16494:11:2","nodeType":"VariableDeclaration","scope":3553,"src":"16454:51:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"},"typeName":{"baseType":{"id":3481,"nodeType":"UserDefinedTypeName","pathNode":{"id":3480,"name":"IHederaTokenService.RoyaltyFee","nameLocations":["16454:19:2","16474:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":5532,"src":"16454:30:2"},"referencedDeclaration":5532,"src":"16454:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyFee_$5532_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee"}},"id":3482,"nodeType":"ArrayTypeName","src":"16454:32:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"}},"visibility":"internal"}],"src":"16301:205:2"},"scope":5343,"src":"16241:967:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3596,"nodeType":"Block","src":"17813:280:2","statements":[{"assignments":[3566,3568],"declarations":[{"constant":false,"id":3566,"mutability":"mutable","name":"success","nameLocation":"17829:7:2","nodeType":"VariableDeclaration","scope":3596,"src":"17824:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3565,"name":"bool","nodeType":"ElementaryTypeName","src":"17824:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"result","nameLocation":"17851:6:2","nodeType":"VariableDeclaration","scope":3596,"src":"17838:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3567,"name":"bytes","nodeType":"ElementaryTypeName","src":"17838:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3581,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3573,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"17920:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17940:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":5775,"src":"17920:27:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_int64_$","typeString":"function IHederaTokenService.approve(address,address,uint256) returns (int64)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17948:8:2","memberName":"selector","nodeType":"MemberAccess","src":"17920:36:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3576,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"17970:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3577,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"17977:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3578,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"17986:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3571,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17897:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17901:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"17897:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17897:96:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3569,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"17861:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17879:4:2","memberName":"call","nodeType":"MemberAccess","src":"17861:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17861:133:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"17823:171:2"},{"expression":{"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3582,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"18004:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"18019:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3591,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"18059:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18079:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"18059:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"18019:67:2","trueExpression":{"arguments":[{"id":3586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"18040:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18049:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3587,"name":"int32","nodeType":"ElementaryTypeName","src":"18049:5:2","typeDescriptions":{}}}],"id":3589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"18048:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":3584,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18029:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18033:6:2","memberName":"decode","nodeType":"MemberAccess","src":"18029:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18029:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"18004:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3595,"nodeType":"ExpressionStatement","src":"18004:82:2"}]},"documentation":{"id":3554,"nodeType":"StructuredDocumentation","src":"17214:489:2","text":"Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n again it overwrites the current allowance with value.\n Only Applicable to Fungible Tokens\n @param token The hedera token address to approve\n @param spender the account authorized to spend\n @param amount the amount of tokens authorized to spend.\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":3597,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"17717:7:2","nodeType":"FunctionDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"token","nameLocation":"17733:5:2","nodeType":"VariableDeclaration","scope":3597,"src":"17725:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"17725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3558,"mutability":"mutable","name":"spender","nameLocation":"17748:7:2","nodeType":"VariableDeclaration","scope":3597,"src":"17740:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3557,"name":"address","nodeType":"ElementaryTypeName","src":"17740:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3560,"mutability":"mutable","name":"amount","nameLocation":"17765:6:2","nodeType":"VariableDeclaration","scope":3597,"src":"17757:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"17757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17724:48:2"},"returnParameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"responseCode","nameLocation":"17795:12:2","nodeType":"VariableDeclaration","scope":3597,"src":"17791:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3562,"name":"int","nodeType":"ElementaryTypeName","src":"17791:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17790:18:2"},"scope":5343,"src":"17708:385:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3643,"nodeType":"Block","src":"18848:286:2","statements":[{"assignments":[3612,3614],"declarations":[{"constant":false,"id":3612,"mutability":"mutable","name":"success","nameLocation":"18864:7:2","nodeType":"VariableDeclaration","scope":3643,"src":"18859:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3611,"name":"bool","nodeType":"ElementaryTypeName","src":"18859:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"result","nameLocation":"18886:6:2","nodeType":"VariableDeclaration","scope":3643,"src":"18873:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3613,"name":"bytes","nodeType":"ElementaryTypeName","src":"18873:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3628,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3619,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"18955:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18975:12:2","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":5789,"src":"18955:32:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_int64_$","typeString":"function IHederaTokenService.transferFrom(address,address,address,uint256) returns (int64)"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18988:8:2","memberName":"selector","nodeType":"MemberAccess","src":"18955:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3622,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"19010:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3623,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"19017:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3624,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"19023:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"19027:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3617,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18932:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18936:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"18932:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18932:102:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3615,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"18896:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18914:4:2","memberName":"call","nodeType":"MemberAccess","src":"18896:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18896:139:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18858:177:2"},{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"19045:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3630,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"19060:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3638,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"19100:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19120:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"19100:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19060:67:2","trueExpression":{"arguments":[{"id":3633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"19081:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19090:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3634,"name":"int32","nodeType":"ElementaryTypeName","src":"19090:5:2","typeDescriptions":{}}}],"id":3636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19089:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":3631,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19070:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19074:6:2","memberName":"decode","nodeType":"MemberAccess","src":"19070:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19070:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"19045:82:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3642,"nodeType":"ExpressionStatement","src":"19045:82:2"}]},"documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"18247:475:2","text":"Only applicable to fungible tokens\n @param token The address of the fungible Hedera token to transfer\n @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\n @param to The account address of the receiver of the `amount` tokens\n @param amount The amount of tokens to transfer from `from` to `to`\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"15dacbea","id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"18736:12:2","nodeType":"FunctionDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"token","nameLocation":"18757:5:2","nodeType":"VariableDeclaration","scope":3644,"src":"18749:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3599,"name":"address","nodeType":"ElementaryTypeName","src":"18749:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3602,"mutability":"mutable","name":"from","nameLocation":"18772:4:2","nodeType":"VariableDeclaration","scope":3644,"src":"18764:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"18764:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"to","nameLocation":"18786:2:2","nodeType":"VariableDeclaration","scope":3644,"src":"18778:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"18778:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"amount","nameLocation":"18798:6:2","nodeType":"VariableDeclaration","scope":3644,"src":"18790:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"18790:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18748:57:2"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"responseCode","nameLocation":"18830:12:2","nodeType":"VariableDeclaration","scope":3644,"src":"18824:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3608,"name":"int64","nodeType":"ElementaryTypeName","src":"18824:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"18823:20:2"},"scope":5343,"src":"18727:407:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3690,"nodeType":"Block","src":"19790:295:2","statements":[{"assignments":[3659,3661],"declarations":[{"constant":false,"id":3659,"mutability":"mutable","name":"success","nameLocation":"19806:7:2","nodeType":"VariableDeclaration","scope":3690,"src":"19801:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3658,"name":"bool","nodeType":"ElementaryTypeName","src":"19801:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"result","nameLocation":"19828:6:2","nodeType":"VariableDeclaration","scope":3690,"src":"19815:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3660,"name":"bytes","nodeType":"ElementaryTypeName","src":"19815:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3675,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3666,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"19897:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19917:15:2","memberName":"transferFromNFT","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"19897:35:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_int64_$","typeString":"function IHederaTokenService.transferFromNFT(address,address,address,uint256) returns (int64)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19933:8:2","memberName":"selector","nodeType":"MemberAccess","src":"19897:44:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3669,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"19955:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3670,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"19962:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3671,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"19968:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3672,"name":"serialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"19972:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3664,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19874:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19878:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"19874:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19874:111:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3662,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"19838:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19856:4:2","memberName":"call","nodeType":"MemberAccess","src":"19838:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19838:148:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19800:186:2"},{"expression":{"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3676,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"19996:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3677,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"20011:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3685,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"20051:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20071:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"20051:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20011:67:2","trueExpression":{"arguments":[{"id":3680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"20032:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20041:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3681,"name":"int32","nodeType":"ElementaryTypeName","src":"20041:5:2","typeDescriptions":{}}}],"id":3683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20040:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":3678,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20021:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20025:6:2","memberName":"decode","nodeType":"MemberAccess","src":"20021:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20021:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"19996:82:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3689,"nodeType":"ExpressionStatement","src":"19996:82:2"}]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"19140:515:2","text":"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\n Only applicable to NFT tokens\n @param token The address of the non-fungible Hedera token to transfer\n @param from The account address of the owner of `serialNumber` of `token`\n @param to The account address of the receiver of `serialNumber`\n @param serialNumber The NFT serial number to transfer\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"9b23d3d9","id":3691,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromNFT","nameLocation":"19669:15:2","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"token","nameLocation":"19693:5:2","nodeType":"VariableDeclaration","scope":3691,"src":"19685:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"19685:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"from","nameLocation":"19708:4:2","nodeType":"VariableDeclaration","scope":3691,"src":"19700:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3648,"name":"address","nodeType":"ElementaryTypeName","src":"19700:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3651,"mutability":"mutable","name":"to","nameLocation":"19722:2:2","nodeType":"VariableDeclaration","scope":3691,"src":"19714:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3650,"name":"address","nodeType":"ElementaryTypeName","src":"19714:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"serialNumber","nameLocation":"19734:12:2","nodeType":"VariableDeclaration","scope":3691,"src":"19726:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"19726:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19684:63:2"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"responseCode","nameLocation":"19772:12:2","nodeType":"VariableDeclaration","scope":3691,"src":"19766:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3655,"name":"int64","nodeType":"ElementaryTypeName","src":"19766:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"19765:20:2"},"scope":5343,"src":"19660:425:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3742,"nodeType":"Block","src":"20609:305:2","statements":[{"assignments":[3706,3708],"declarations":[{"constant":false,"id":3706,"mutability":"mutable","name":"success","nameLocation":"20625:7:2","nodeType":"VariableDeclaration","scope":3742,"src":"20620:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3705,"name":"bool","nodeType":"ElementaryTypeName","src":"20620:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"result","nameLocation":"20647:6:2","nodeType":"VariableDeclaration","scope":3742,"src":"20634:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3707,"name":"bytes","nodeType":"ElementaryTypeName","src":"20634:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3721,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3713,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"20716:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20736:9:2","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":5803,"src":"20716:29:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_int64_$_t_uint256_$","typeString":"function IHederaTokenService.allowance(address,address,address) returns (int64,uint256)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20746:8:2","memberName":"selector","nodeType":"MemberAccess","src":"20716:38:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3716,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"20768:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"20775:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3718,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"20782:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3711,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20693:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20697:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"20693:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20693:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3709,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"20657:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20675:4:2","memberName":"call","nodeType":"MemberAccess","src":"20657:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20657:134:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"20619:172:2"},{"expression":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3722,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"20802:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3723,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"20816:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3724,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"20801:22:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_uint256_$","typeString":"tuple(int256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3725,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"20826:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3735,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"20876:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20896:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"20876:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"hexValue":"30","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20905:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20875:32:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_rational_0_by_1_$","typeString":"tuple(int32,int_const 0)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20826:81:2","trueExpression":{"arguments":[{"id":3728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"20847:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20856:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3729,"name":"int32","nodeType":"ElementaryTypeName","src":"20856:5:2","typeDescriptions":{}}},{"id":3732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20863:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"20863:7:2","typeDescriptions":{}}}],"id":3733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20855:16:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(int32),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(int32),type(uint256))"}],"expression":{"id":3726,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20836:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20840:6:2","memberName":"decode","nodeType":"MemberAccess","src":"20836:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20836:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_uint256_$","typeString":"tuple(int32,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_uint256_$","typeString":"tuple(int32,uint256)"}},"src":"20801:106:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3741,"nodeType":"ExpressionStatement","src":"20801:106:2"}]},"documentation":{"id":3692,"nodeType":"StructuredDocumentation","src":"20091:391:2","text":"Returns the amount which spender is still allowed to withdraw from owner.\n Only Applicable to Fungible Tokens\n @param token The Hedera token address to check the allowance of\n @param owner the owner of the tokens to be spent\n @param spender the spender of the tokens\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"20496:9:2","nodeType":"FunctionDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"token","nameLocation":"20514:5:2","nodeType":"VariableDeclaration","scope":3743,"src":"20506:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3693,"name":"address","nodeType":"ElementaryTypeName","src":"20506:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"owner","nameLocation":"20529:5:2","nodeType":"VariableDeclaration","scope":3743,"src":"20521:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3695,"name":"address","nodeType":"ElementaryTypeName","src":"20521:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"spender","nameLocation":"20544:7:2","nodeType":"VariableDeclaration","scope":3743,"src":"20536:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3697,"name":"address","nodeType":"ElementaryTypeName","src":"20536:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20505:47:2"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"responseCode","nameLocation":"20575:12:2","nodeType":"VariableDeclaration","scope":3743,"src":"20571:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3700,"name":"int","nodeType":"ElementaryTypeName","src":"20571:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3703,"mutability":"mutable","name":"amount","nameLocation":"20597:6:2","nodeType":"VariableDeclaration","scope":3743,"src":"20589:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"20589:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20570:34:2"},"scope":5343,"src":"20487:427:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3786,"nodeType":"Block","src":"21494:290:2","statements":[{"assignments":[3756,3758],"declarations":[{"constant":false,"id":3756,"mutability":"mutable","name":"success","nameLocation":"21510:7:2","nodeType":"VariableDeclaration","scope":3786,"src":"21505:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3755,"name":"bool","nodeType":"ElementaryTypeName","src":"21505:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"result","nameLocation":"21532:6:2","nodeType":"VariableDeclaration","scope":3786,"src":"21519:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3757,"name":"bytes","nodeType":"ElementaryTypeName","src":"21519:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3771,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3763,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"21601:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21621:10:2","memberName":"approveNFT","nodeType":"MemberAccess","referencedDeclaration":5815,"src":"21601:30:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_int64_$","typeString":"function IHederaTokenService.approveNFT(address,address,uint256) returns (int64)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21632:8:2","memberName":"selector","nodeType":"MemberAccess","src":"21601:39:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3766,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"21654:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3767,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"21661:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3768,"name":"serialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"21671:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3761,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21578:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21582:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"21578:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21578:106:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3759,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"21542:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21560:4:2","memberName":"call","nodeType":"MemberAccess","src":"21542:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21542:143:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"21504:181:2"},{"expression":{"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3772,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"21695:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3773,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"21710:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3781,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"21750:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21770:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"21750:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"21710:67:2","trueExpression":{"arguments":[{"id":3776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"21731:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21740:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3777,"name":"int32","nodeType":"ElementaryTypeName","src":"21740:5:2","typeDescriptions":{}}}],"id":3779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21739:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":3774,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21720:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21724:6:2","memberName":"decode","nodeType":"MemberAccess","src":"21720:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21720:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"21695:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3785,"nodeType":"ExpressionStatement","src":"21695:82:2"}]},"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"20920:454:2","text":"Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n @param serialNumber The NFT serial number  to approve\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":3787,"implemented":true,"kind":"function","modifiers":[],"name":"approveNFT","nameLocation":"21388:10:2","nodeType":"FunctionDefinition","parameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"token","nameLocation":"21407:5:2","nodeType":"VariableDeclaration","scope":3787,"src":"21399:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3745,"name":"address","nodeType":"ElementaryTypeName","src":"21399:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"approved","nameLocation":"21422:8:2","nodeType":"VariableDeclaration","scope":3787,"src":"21414:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3747,"name":"address","nodeType":"ElementaryTypeName","src":"21414:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3750,"mutability":"mutable","name":"serialNumber","nameLocation":"21440:12:2","nodeType":"VariableDeclaration","scope":3787,"src":"21432:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"21432:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21398:55:2"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"responseCode","nameLocation":"21476:12:2","nodeType":"VariableDeclaration","scope":3787,"src":"21472:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3752,"name":"int","nodeType":"ElementaryTypeName","src":"21472:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21471:18:2"},"scope":5343,"src":"21379:405:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3838,"nodeType":"Block","src":"22321:340:2","statements":[{"assignments":[3800,3802],"declarations":[{"constant":false,"id":3800,"mutability":"mutable","name":"success","nameLocation":"22337:7:2","nodeType":"VariableDeclaration","scope":3838,"src":"22332:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3799,"name":"bool","nodeType":"ElementaryTypeName","src":"22332:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"result","nameLocation":"22359:6:2","nodeType":"VariableDeclaration","scope":3838,"src":"22346:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3801,"name":"bytes","nodeType":"ElementaryTypeName","src":"22346:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3814,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3807,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"22428:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22448:11:2","memberName":"getApproved","nodeType":"MemberAccess","referencedDeclaration":5841,"src":"22428:31:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_int64_$_t_address_$","typeString":"function IHederaTokenService.getApproved(address,uint256) returns (int64,address)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22460:8:2","memberName":"selector","nodeType":"MemberAccess","src":"22428:40:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3810,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"22482:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3811,"name":"serialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"22489:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3805,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22405:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22409:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"22405:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22405:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3803,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"22369:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22387:4:2","memberName":"call","nodeType":"MemberAccess","src":"22369:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22369:134:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"22331:172:2"},{"expression":{"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3815,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"22514:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3816,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22528:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3817,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"22513:24:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_address_$","typeString":"tuple(int256,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3818,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"22548:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3828,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"22614:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22634:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"22614:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"arguments":[{"hexValue":"30","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22651:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22643:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3830,"name":"address","nodeType":"ElementaryTypeName","src":"22643:7:2","typeDescriptions":{}}},"id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22643:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22613:41:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22548:106:2","trueExpression":{"arguments":[{"id":3821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"22577:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22586:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3822,"name":"int32","nodeType":"ElementaryTypeName","src":"22586:5:2","typeDescriptions":{}}},{"id":3825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22593:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3824,"name":"address","nodeType":"ElementaryTypeName","src":"22593:7:2","typeDescriptions":{}}}],"id":3826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22585:16:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_address_$_$","typeString":"tuple(type(int32),type(address))"}],"expression":{"id":3819,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22566:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22570:6:2","memberName":"decode","nodeType":"MemberAccess","src":"22566:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22566:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_payable_$","typeString":"tuple(int32,address payable)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_address_$","typeString":"tuple(int32,address)"}},"src":"22513:141:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3837,"nodeType":"ExpressionStatement","src":"22513:141:2"}]},"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"21790:410:2","text":"Get the approved address for a single NFT\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to check approval\n @param serialNumber The NFT to find the approved address for\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved The approved address for this NFT, or the zero address if there is none"},"id":3839,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"22214:11:2","nodeType":"FunctionDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"token","nameLocation":"22234:5:2","nodeType":"VariableDeclaration","scope":3839,"src":"22226:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"22226:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"serialNumber","nameLocation":"22249:12:2","nodeType":"VariableDeclaration","scope":3839,"src":"22241:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"22241:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22225:37:2"},"returnParameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"responseCode","nameLocation":"22285:12:2","nodeType":"VariableDeclaration","scope":3839,"src":"22281:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3794,"name":"int","nodeType":"ElementaryTypeName","src":"22281:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"approved","nameLocation":"22307:8:2","nodeType":"VariableDeclaration","scope":3839,"src":"22299:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3796,"name":"address","nodeType":"ElementaryTypeName","src":"22299:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22280:36:2"},"scope":5343,"src":"22205:456:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3887,"nodeType":"Block","src":"23146:286:2","statements":[{"assignments":[3852,3854],"declarations":[{"constant":false,"id":3852,"mutability":"mutable","name":"success","nameLocation":"23162:7:2","nodeType":"VariableDeclaration","scope":3887,"src":"23157:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3851,"name":"bool","nodeType":"ElementaryTypeName","src":"23157:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"result","nameLocation":"23184:6:2","nodeType":"VariableDeclaration","scope":3887,"src":"23171:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3853,"name":"bytes","nodeType":"ElementaryTypeName","src":"23171:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3866,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3859,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"23253:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23273:8:2","memberName":"isFrozen","nodeType":"MemberAccess","referencedDeclaration":5879,"src":"23253:28:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$_t_bool_$","typeString":"function IHederaTokenService.isFrozen(address,address) returns (int64,bool)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23282:8:2","memberName":"selector","nodeType":"MemberAccess","src":"23253:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3862,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"23292:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3863,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"23299:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3857,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23230:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23234:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"23230:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23230:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3855,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"23194:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23212:4:2","memberName":"call","nodeType":"MemberAccess","src":"23194:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23194:114:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"23156:152:2"},{"expression":{"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3867,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"23319:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":3868,"name":"frozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"23333:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3869,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"23318:22:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_bool_$","typeString":"tuple(int64,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"23343:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3880,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"23390:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23410:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"23390:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"hexValue":"66616c7365","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23419:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":3883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23389:36:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23343:82:2","trueExpression":{"arguments":[{"id":3873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"23364:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23373:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3874,"name":"int32","nodeType":"ElementaryTypeName","src":"23373:5:2","typeDescriptions":{}}},{"id":3877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23380:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3876,"name":"bool","nodeType":"ElementaryTypeName","src":"23380:4:2","typeDescriptions":{}}}],"id":3878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23372:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}],"expression":{"id":3871,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23353:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23357:6:2","memberName":"decode","nodeType":"MemberAccess","src":"23353:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23353:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"src":"23318:107:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3886,"nodeType":"ExpressionStatement","src":"23318:107:2"}]},"documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"22667:374:2","text":"Query if token account is frozen\n @param token The token address to check\n @param account The account address associated with the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return frozen True if `account` is frozen for `token`\n @dev This function reverts if the call is not successful"},"id":3888,"implemented":true,"kind":"function","modifiers":[],"name":"isFrozen","nameLocation":"23055:8:2","nodeType":"FunctionDefinition","parameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"token","nameLocation":"23072:5:2","nodeType":"VariableDeclaration","scope":3888,"src":"23064:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"23064:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"account","nameLocation":"23087:7:2","nodeType":"VariableDeclaration","scope":3888,"src":"23079:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3843,"name":"address","nodeType":"ElementaryTypeName","src":"23079:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23063:32:2"},"returnParameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"responseCode","nameLocation":"23120:12:2","nodeType":"VariableDeclaration","scope":3888,"src":"23114:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3846,"name":"int64","nodeType":"ElementaryTypeName","src":"23114:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"frozen","nameLocation":"23139:6:2","nodeType":"VariableDeclaration","scope":3888,"src":"23134:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3848,"name":"bool","nodeType":"ElementaryTypeName","src":"23134:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23113:33:2"},"scope":5343,"src":"23046:386:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3936,"nodeType":"Block","src":"23934:287:2","statements":[{"assignments":[3901,3903],"declarations":[{"constant":false,"id":3901,"mutability":"mutable","name":"success","nameLocation":"23950:7:2","nodeType":"VariableDeclaration","scope":3936,"src":"23945:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3900,"name":"bool","nodeType":"ElementaryTypeName","src":"23945:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"result","nameLocation":"23972:6:2","nodeType":"VariableDeclaration","scope":3936,"src":"23959:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3902,"name":"bytes","nodeType":"ElementaryTypeName","src":"23959:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3915,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3908,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"24041:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24061:5:2","memberName":"isKyc","nodeType":"MemberAccess","referencedDeclaration":5891,"src":"24041:25:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$_t_bool_$","typeString":"function IHederaTokenService.isKyc(address,address) returns (int64,bool)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24067:8:2","memberName":"selector","nodeType":"MemberAccess","src":"24041:34:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3911,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"24077:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3912,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"24084:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3906,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24018:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24022:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"24018:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24018:74:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3904,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"23982:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24000:4:2","memberName":"call","nodeType":"MemberAccess","src":"23982:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23982:111:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"23944:149:2"},{"expression":{"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3916,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24104:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":3917,"name":"kycGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"24118:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3918,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"24103:26:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_bool_$","typeString":"tuple(int64,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3919,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"24132:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":3929,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24179:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24199:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"24179:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"hexValue":"66616c7365","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24208:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":3932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24178:36:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24132:82:2","trueExpression":{"arguments":[{"id":3922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"24153:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24162:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3923,"name":"int32","nodeType":"ElementaryTypeName","src":"24162:5:2","typeDescriptions":{}}},{"id":3926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24169:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3925,"name":"bool","nodeType":"ElementaryTypeName","src":"24169:4:2","typeDescriptions":{}}}],"id":3927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24161:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}],"expression":{"id":3920,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24142:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24146:6:2","memberName":"decode","nodeType":"MemberAccess","src":"24142:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24142:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"src":"24103:111:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3935,"nodeType":"ExpressionStatement","src":"24103:111:2"}]},"documentation":{"id":3889,"nodeType":"StructuredDocumentation","src":"23438:390:2","text":"Query if token account has kyc granted\n @param token The token address to check\n @param account The account address associated with the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return kycGranted True if `account` has kyc granted for `token`\n @dev This function reverts if the call is not successful"},"id":3937,"implemented":true,"kind":"function","modifiers":[],"name":"isKyc","nameLocation":"23842:5:2","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"token","nameLocation":"23856:5:2","nodeType":"VariableDeclaration","scope":3937,"src":"23848:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3890,"name":"address","nodeType":"ElementaryTypeName","src":"23848:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"account","nameLocation":"23871:7:2","nodeType":"VariableDeclaration","scope":3937,"src":"23863:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3892,"name":"address","nodeType":"ElementaryTypeName","src":"23863:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23847:32:2"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"responseCode","nameLocation":"23904:12:2","nodeType":"VariableDeclaration","scope":3937,"src":"23898:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3895,"name":"int64","nodeType":"ElementaryTypeName","src":"23898:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"kycGranted","nameLocation":"23923:10:2","nodeType":"VariableDeclaration","scope":3937,"src":"23918:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3897,"name":"bool","nodeType":"ElementaryTypeName","src":"23918:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23897:37:2"},"scope":5343,"src":"23833:388:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3978,"nodeType":"Block","src":"24547:266:2","statements":[{"assignments":[3948,3950],"declarations":[{"constant":false,"id":3948,"mutability":"mutable","name":"success","nameLocation":"24563:7:2","nodeType":"VariableDeclaration","scope":3978,"src":"24558:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3947,"name":"bool","nodeType":"ElementaryTypeName","src":"24558:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3950,"mutability":"mutable","name":"result","nameLocation":"24585:6:2","nodeType":"VariableDeclaration","scope":3978,"src":"24572:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3949,"name":"bytes","nodeType":"ElementaryTypeName","src":"24572:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3962,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3955,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"24654:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24674:11:2","memberName":"freezeToken","nodeType":"MemberAccess","referencedDeclaration":6008,"src":"24654:31:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.freezeToken(address,address) returns (int64)"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24686:8:2","memberName":"selector","nodeType":"MemberAccess","src":"24654:40:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3958,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"24696:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3959,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"24703:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3953,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24631:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24635:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"24631:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24631:80:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3951,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"24595:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24613:4:2","memberName":"call","nodeType":"MemberAccess","src":"24595:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:117:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"24557:155:2"},{"expression":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3963,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"24723:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":3964,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"24722:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3965,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"24739:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3973,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24779:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24799:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"24779:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24739:67:2","trueExpression":{"arguments":[{"id":3968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"24760:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24769:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3969,"name":"int32","nodeType":"ElementaryTypeName","src":"24769:5:2","typeDescriptions":{}}}],"id":3971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24768:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":3966,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24749:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24753:6:2","memberName":"decode","nodeType":"MemberAccess","src":"24749:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24749:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"24722:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3977,"nodeType":"ExpressionStatement","src":"24722:84:2"}]},"documentation":{"id":3938,"nodeType":"StructuredDocumentation","src":"24227:225:2","text":"Operation to freeze token account\n @param token The token address\n @param account The account address to be frozen\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":3979,"implemented":true,"kind":"function","modifiers":[],"name":"freezeToken","nameLocation":"24466:11:2","nodeType":"FunctionDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"token","nameLocation":"24486:5:2","nodeType":"VariableDeclaration","scope":3979,"src":"24478:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"24478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3942,"mutability":"mutable","name":"account","nameLocation":"24501:7:2","nodeType":"VariableDeclaration","scope":3979,"src":"24493:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3941,"name":"address","nodeType":"ElementaryTypeName","src":"24493:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24477:32:2"},"returnParameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"responseCode","nameLocation":"24534:12:2","nodeType":"VariableDeclaration","scope":3979,"src":"24528:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3944,"name":"int64","nodeType":"ElementaryTypeName","src":"24528:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"24527:20:2"},"scope":5343,"src":"24457:356:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4020,"nodeType":"Block","src":"25145:268:2","statements":[{"assignments":[3990,3992],"declarations":[{"constant":false,"id":3990,"mutability":"mutable","name":"success","nameLocation":"25161:7:2","nodeType":"VariableDeclaration","scope":4020,"src":"25156:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3989,"name":"bool","nodeType":"ElementaryTypeName","src":"25156:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"result","nameLocation":"25183:6:2","nodeType":"VariableDeclaration","scope":4020,"src":"25170:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3991,"name":"bytes","nodeType":"ElementaryTypeName","src":"25170:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4004,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3997,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"25252:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25272:13:2","memberName":"unfreezeToken","nodeType":"MemberAccess","referencedDeclaration":6018,"src":"25252:33:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.unfreezeToken(address,address) returns (int64)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25286:8:2","memberName":"selector","nodeType":"MemberAccess","src":"25252:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4000,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"25296:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4001,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"25303:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3995,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"25229:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25233:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"25229:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25229:82:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3993,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"25193:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25211:4:2","memberName":"call","nodeType":"MemberAccess","src":"25193:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25193:119:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"25155:157:2"},{"expression":{"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4005,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"25323:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":4006,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"25322:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4007,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"25339:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4015,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25379:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25399:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"25379:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"25339:67:2","trueExpression":{"arguments":[{"id":4010,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"25360:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25369:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4011,"name":"int32","nodeType":"ElementaryTypeName","src":"25369:5:2","typeDescriptions":{}}}],"id":4013,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"25368:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4008,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"25349:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25353:6:2","memberName":"decode","nodeType":"MemberAccess","src":"25349:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25349:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"25322:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4019,"nodeType":"ExpressionStatement","src":"25322:84:2"}]},"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"24819:229:2","text":"Operation to unfreeze token account\n @param token The token address\n @param account The account address to be unfrozen\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"unfreezeToken","nameLocation":"25062:13:2","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"token","nameLocation":"25084:5:2","nodeType":"VariableDeclaration","scope":4021,"src":"25076:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3981,"name":"address","nodeType":"ElementaryTypeName","src":"25076:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"account","nameLocation":"25099:7:2","nodeType":"VariableDeclaration","scope":4021,"src":"25091:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3983,"name":"address","nodeType":"ElementaryTypeName","src":"25091:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25075:32:2"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"responseCode","nameLocation":"25132:12:2","nodeType":"VariableDeclaration","scope":4021,"src":"25126:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3986,"name":"int64","nodeType":"ElementaryTypeName","src":"25126:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"25125:20:2"},"scope":5343,"src":"25053:360:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4062,"nodeType":"Block","src":"25747:268:2","statements":[{"assignments":[4032,4034],"declarations":[{"constant":false,"id":4032,"mutability":"mutable","name":"success","nameLocation":"25763:7:2","nodeType":"VariableDeclaration","scope":4062,"src":"25758:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4031,"name":"bool","nodeType":"ElementaryTypeName","src":"25758:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"result","nameLocation":"25785:6:2","nodeType":"VariableDeclaration","scope":4062,"src":"25772:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4033,"name":"bytes","nodeType":"ElementaryTypeName","src":"25772:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4046,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4039,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"25854:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25874:13:2","memberName":"grantTokenKyc","nodeType":"MemberAccess","referencedDeclaration":6028,"src":"25854:33:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.grantTokenKyc(address,address) returns (int64)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25888:8:2","memberName":"selector","nodeType":"MemberAccess","src":"25854:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4042,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"25898:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4043,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"25905:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4037,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"25831:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25835:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"25831:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25831:82:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4035,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"25795:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25813:4:2","memberName":"call","nodeType":"MemberAccess","src":"25795:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25795:119:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"25757:157:2"},{"expression":{"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4047,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"25925:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":4048,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"25924:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4049,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"25941:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4057,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25981:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26001:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"25981:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"25941:67:2","trueExpression":{"arguments":[{"id":4052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"25962:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25971:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4053,"name":"int32","nodeType":"ElementaryTypeName","src":"25971:5:2","typeDescriptions":{}}}],"id":4055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"25970:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4050,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"25951:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25955:6:2","memberName":"decode","nodeType":"MemberAccess","src":"25951:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25951:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"25924:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4061,"nodeType":"ExpressionStatement","src":"25924:84:2"}]},"documentation":{"id":4022,"nodeType":"StructuredDocumentation","src":"25419:231:2","text":"Operation to grant kyc to token account\n @param token The token address\n @param account The account address to grant kyc\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4063,"implemented":true,"kind":"function","modifiers":[],"name":"grantTokenKyc","nameLocation":"25664:13:2","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"token","nameLocation":"25686:5:2","nodeType":"VariableDeclaration","scope":4063,"src":"25678:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"25678:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"account","nameLocation":"25701:7:2","nodeType":"VariableDeclaration","scope":4063,"src":"25693:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4025,"name":"address","nodeType":"ElementaryTypeName","src":"25693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25677:32:2"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"responseCode","nameLocation":"25734:12:2","nodeType":"VariableDeclaration","scope":4063,"src":"25728:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4028,"name":"int64","nodeType":"ElementaryTypeName","src":"25728:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"25727:20:2"},"scope":5343,"src":"25655:360:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"26352:269:2","statements":[{"assignments":[4074,4076],"declarations":[{"constant":false,"id":4074,"mutability":"mutable","name":"success","nameLocation":"26368:7:2","nodeType":"VariableDeclaration","scope":4104,"src":"26363:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4073,"name":"bool","nodeType":"ElementaryTypeName","src":"26363:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"result","nameLocation":"26390:6:2","nodeType":"VariableDeclaration","scope":4104,"src":"26377:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4075,"name":"bytes","nodeType":"ElementaryTypeName","src":"26377:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4088,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4081,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"26459:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26479:14:2","memberName":"revokeTokenKyc","nodeType":"MemberAccess","referencedDeclaration":6038,"src":"26459:34:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.revokeTokenKyc(address,address) returns (int64)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26494:8:2","memberName":"selector","nodeType":"MemberAccess","src":"26459:43:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4084,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"26504:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4085,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"26511:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4079,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26436:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26440:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"26436:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26436:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4077,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"26400:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26418:4:2","memberName":"call","nodeType":"MemberAccess","src":"26400:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26400:120:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"26362:158:2"},{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4089,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"26531:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":4090,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"26530:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4091,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"26547:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4099,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"26587:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26607:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"26587:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"26547:67:2","trueExpression":{"arguments":[{"id":4094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"26568:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26577:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4095,"name":"int32","nodeType":"ElementaryTypeName","src":"26577:5:2","typeDescriptions":{}}}],"id":4097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"26576:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4092,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26557:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26561:6:2","memberName":"decode","nodeType":"MemberAccess","src":"26557:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26557:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"26530:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4103,"nodeType":"ExpressionStatement","src":"26530:84:2"}]},"documentation":{"id":4064,"nodeType":"StructuredDocumentation","src":"26021:233:2","text":"Operation to revoke kyc to token account\n @param token The token address\n @param account The account address to revoke kyc\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"revokeTokenKyc","nameLocation":"26268:14:2","nodeType":"FunctionDefinition","parameters":{"id":4069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"token","nameLocation":"26291:5:2","nodeType":"VariableDeclaration","scope":4105,"src":"26283:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4065,"name":"address","nodeType":"ElementaryTypeName","src":"26283:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4068,"mutability":"mutable","name":"account","nameLocation":"26306:7:2","nodeType":"VariableDeclaration","scope":4105,"src":"26298:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4067,"name":"address","nodeType":"ElementaryTypeName","src":"26298:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26282:32:2"},"returnParameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"mutability":"mutable","name":"responseCode","nameLocation":"26339:12:2","nodeType":"VariableDeclaration","scope":4105,"src":"26333:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4070,"name":"int64","nodeType":"ElementaryTypeName","src":"26333:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"26332:20:2"},"scope":5343,"src":"26259:362:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4148,"nodeType":"Block","src":"27167:293:2","statements":[{"assignments":[4118,4120],"declarations":[{"constant":false,"id":4118,"mutability":"mutable","name":"success","nameLocation":"27183:7:2","nodeType":"VariableDeclaration","scope":4148,"src":"27178:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4117,"name":"bool","nodeType":"ElementaryTypeName","src":"27178:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4120,"mutability":"mutable","name":"result","nameLocation":"27205:6:2","nodeType":"VariableDeclaration","scope":4148,"src":"27192:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4119,"name":"bytes","nodeType":"ElementaryTypeName","src":"27192:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4133,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4125,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"27274:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27294:17:2","memberName":"setApprovalForAll","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"27274:37:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$returns$_t_int64_$","typeString":"function IHederaTokenService.setApprovalForAll(address,address,bool) returns (int64)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27312:8:2","memberName":"selector","nodeType":"MemberAccess","src":"27274:46:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4128,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"27334:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4129,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"27341:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4130,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"27351:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"27251:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27255:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"27251:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27251:109:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4121,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27215:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27233:4:2","memberName":"call","nodeType":"MemberAccess","src":"27215:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27215:146:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"27177:184:2"},{"expression":{"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4134,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"27371:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4135,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"27386:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4143,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"27426:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27446:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"27426:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"27386:67:2","trueExpression":{"arguments":[{"id":4138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"27407:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27416:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4139,"name":"int32","nodeType":"ElementaryTypeName","src":"27416:5:2","typeDescriptions":{}}}],"id":4141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27415:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4136,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"27396:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27400:6:2","memberName":"decode","nodeType":"MemberAccess","src":"27396:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27396:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"27371:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4147,"nodeType":"ExpressionStatement","src":"27371:82:2"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"26627:420:2","text":"Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @param token The Hedera NFT token address to approve\n @param operator Address to add to the set of authorized operators\n @param approved True if the operator is approved, false to revoke approval\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4149,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"27061:17:2","nodeType":"FunctionDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"token","nameLocation":"27087:5:2","nodeType":"VariableDeclaration","scope":4149,"src":"27079:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4107,"name":"address","nodeType":"ElementaryTypeName","src":"27079:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4110,"mutability":"mutable","name":"operator","nameLocation":"27102:8:2","nodeType":"VariableDeclaration","scope":4149,"src":"27094:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4109,"name":"address","nodeType":"ElementaryTypeName","src":"27094:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"approved","nameLocation":"27117:8:2","nodeType":"VariableDeclaration","scope":4149,"src":"27112:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4111,"name":"bool","nodeType":"ElementaryTypeName","src":"27112:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27078:48:2"},"returnParameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"responseCode","nameLocation":"27149:12:2","nodeType":"VariableDeclaration","scope":4149,"src":"27145:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4114,"name":"int","nodeType":"ElementaryTypeName","src":"27145:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27144:18:2"},"scope":5343,"src":"27052:408:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4200,"nodeType":"Block","src":"28079:340:2","statements":[{"assignments":[4164,4166],"declarations":[{"constant":false,"id":4164,"mutability":"mutable","name":"success","nameLocation":"28095:7:2","nodeType":"VariableDeclaration","scope":4200,"src":"28090:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4163,"name":"bool","nodeType":"ElementaryTypeName","src":"28090:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4166,"mutability":"mutable","name":"result","nameLocation":"28117:6:2","nodeType":"VariableDeclaration","scope":4200,"src":"28104:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4165,"name":"bytes","nodeType":"ElementaryTypeName","src":"28104:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4179,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4171,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"28186:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28206:16:2","memberName":"isApprovedForAll","nodeType":"MemberAccess","referencedDeclaration":5867,"src":"28186:36:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_int64_$_t_bool_$","typeString":"function IHederaTokenService.isApprovedForAll(address,address,address) returns (int64,bool)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28223:8:2","memberName":"selector","nodeType":"MemberAccess","src":"28186:45:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4174,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"28245:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4175,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"28252:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4176,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"28259:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4169,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"28163:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28167:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"28163:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28163:105:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4167,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"28127:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28145:4:2","memberName":"call","nodeType":"MemberAccess","src":"28127:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28127:142:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"28089:180:2"},{"expression":{"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4180,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"28280:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4181,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"28294:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4182,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"28279:24:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_bool_$","typeString":"tuple(int256,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4183,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"28314:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":4193,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"28377:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28397:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"28377:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"hexValue":"66616c7365","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28406:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":4196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"28376:36:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"28314:98:2","trueExpression":{"arguments":[{"id":4186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"28343:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28352:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4187,"name":"int32","nodeType":"ElementaryTypeName","src":"28352:5:2","typeDescriptions":{}}},{"id":4190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28359:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":4189,"name":"bool","nodeType":"ElementaryTypeName","src":"28359:4:2","typeDescriptions":{}}}],"id":4191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"28351:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}],"expression":{"id":4184,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"28332:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28336:6:2","memberName":"decode","nodeType":"MemberAccess","src":"28332:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28332:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"src":"28279:133:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4199,"nodeType":"ExpressionStatement","src":"28279:133:2"}]},"documentation":{"id":4150,"nodeType":"StructuredDocumentation","src":"27466:479:2","text":"Query if an address is an authorized operator for another address\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param owner The address that owns the NFTs\n @param operator The address that acts on behalf of the owner\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved True if `operator` is an approved operator for `owner`, false otherwise"},"id":4201,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"27959:16:2","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"token","nameLocation":"27984:5:2","nodeType":"VariableDeclaration","scope":4201,"src":"27976:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4151,"name":"address","nodeType":"ElementaryTypeName","src":"27976:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4154,"mutability":"mutable","name":"owner","nameLocation":"27999:5:2","nodeType":"VariableDeclaration","scope":4201,"src":"27991:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4153,"name":"address","nodeType":"ElementaryTypeName","src":"27991:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4156,"mutability":"mutable","name":"operator","nameLocation":"28014:8:2","nodeType":"VariableDeclaration","scope":4201,"src":"28006:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"28006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27975:48:2"},"returnParameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"responseCode","nameLocation":"28046:12:2","nodeType":"VariableDeclaration","scope":4201,"src":"28042:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4158,"name":"int","nodeType":"ElementaryTypeName","src":"28042:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"approved","nameLocation":"28065:8:2","nodeType":"VariableDeclaration","scope":4201,"src":"28060:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4160,"name":"bool","nodeType":"ElementaryTypeName","src":"28060:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28041:33:2"},"scope":5343,"src":"27950:469:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4246,"nodeType":"Block","src":"28872:309:2","statements":[{"assignments":[4212,4214],"declarations":[{"constant":false,"id":4212,"mutability":"mutable","name":"success","nameLocation":"28888:7:2","nodeType":"VariableDeclaration","scope":4246,"src":"28883:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4211,"name":"bool","nodeType":"ElementaryTypeName","src":"28883:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4214,"mutability":"mutable","name":"result","nameLocation":"28910:6:2","nodeType":"VariableDeclaration","scope":4246,"src":"28897:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4213,"name":"bytes","nodeType":"ElementaryTypeName","src":"28897:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4225,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4219,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"28979:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28999:27:2","memberName":"getTokenDefaultFreezeStatus","nodeType":"MemberAccess","referencedDeclaration":5929,"src":"28979:47:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$_t_bool_$","typeString":"function IHederaTokenService.getTokenDefaultFreezeStatus(address) returns (int64,bool)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29027:8:2","memberName":"selector","nodeType":"MemberAccess","src":"28979:56:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"29037:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4217,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"28956:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28960:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"28956:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:87:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4215,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"28920:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28938:4:2","memberName":"call","nodeType":"MemberAccess","src":"28920:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28920:124:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"28882:162:2"},{"expression":{"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4226,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"29055:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4227,"name":"defaultFreezeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"29069:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4228,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"29054:35:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_bool_$","typeString":"tuple(int256,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4229,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"29092:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":4239,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"29139:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29159:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"29139:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"hexValue":"66616c7365","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29168:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":4242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"29138:36:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"29092:82:2","trueExpression":{"arguments":[{"id":4232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"29113:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29122:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4233,"name":"int32","nodeType":"ElementaryTypeName","src":"29122:5:2","typeDescriptions":{}}},{"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29129:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":4235,"name":"bool","nodeType":"ElementaryTypeName","src":"29129:4:2","typeDescriptions":{}}}],"id":4237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"29121:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}],"expression":{"id":4230,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29102:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29106:6:2","memberName":"decode","nodeType":"MemberAccess","src":"29102:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29102:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"src":"29054:120:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4245,"nodeType":"ExpressionStatement","src":"29054:120:2"}]},"documentation":{"id":4202,"nodeType":"StructuredDocumentation","src":"28425:328:2","text":"Query token default freeze status\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return defaultFreezeStatus True if `token` default freeze status is frozen.\n @dev This function reverts if the call is not successful"},"id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenDefaultFreezeStatus","nameLocation":"28767:27:2","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"token","nameLocation":"28803:5:2","nodeType":"VariableDeclaration","scope":4247,"src":"28795:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4203,"name":"address","nodeType":"ElementaryTypeName","src":"28795:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28794:15:2"},"returnParameters":{"id":4210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"responseCode","nameLocation":"28832:12:2","nodeType":"VariableDeclaration","scope":4247,"src":"28828:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4206,"name":"int","nodeType":"ElementaryTypeName","src":"28828:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"defaultFreezeStatus","nameLocation":"28851:19:2","nodeType":"VariableDeclaration","scope":4247,"src":"28846:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4208,"name":"bool","nodeType":"ElementaryTypeName","src":"28846:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28827:44:2"},"scope":5343,"src":"28758:423:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4292,"nodeType":"Block","src":"29650:303:2","statements":[{"assignments":[4258,4260],"declarations":[{"constant":false,"id":4258,"mutability":"mutable","name":"success","nameLocation":"29666:7:2","nodeType":"VariableDeclaration","scope":4292,"src":"29661:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4257,"name":"bool","nodeType":"ElementaryTypeName","src":"29661:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4260,"mutability":"mutable","name":"result","nameLocation":"29688:6:2","nodeType":"VariableDeclaration","scope":4292,"src":"29675:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4259,"name":"bytes","nodeType":"ElementaryTypeName","src":"29675:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4271,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4265,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"29757:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29777:24:2","memberName":"getTokenDefaultKycStatus","nodeType":"MemberAccess","referencedDeclaration":5939,"src":"29757:44:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$_t_bool_$","typeString":"function IHederaTokenService.getTokenDefaultKycStatus(address) returns (int64,bool)"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29802:8:2","memberName":"selector","nodeType":"MemberAccess","src":"29757:53:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4268,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"29812:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4263,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29734:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29738:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"29734:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29734:84:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4261,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"29698:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29716:4:2","memberName":"call","nodeType":"MemberAccess","src":"29698:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29698:121:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"29660:159:2"},{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4272,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"29830:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4273,"name":"defaultKycStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"29844:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4274,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"29829:32:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_bool_$","typeString":"tuple(int256,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4275,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"29864:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":4285,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"29911:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29931:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"29911:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"hexValue":"66616c7365","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29940:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"29910:36:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"29864:82:2","trueExpression":{"arguments":[{"id":4278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"29885:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29894:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4279,"name":"int32","nodeType":"ElementaryTypeName","src":"29894:5:2","typeDescriptions":{}}},{"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29901:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":4281,"name":"bool","nodeType":"ElementaryTypeName","src":"29901:4:2","typeDescriptions":{}}}],"id":4283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"29893:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}],"expression":{"id":4276,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29874:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29878:6:2","memberName":"decode","nodeType":"MemberAccess","src":"29874:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29874:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"src":"29829:117:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4291,"nodeType":"ExpressionStatement","src":"29829:117:2"}]},"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"29187:350:2","text":"Query token default kyc status\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\n @dev This function reverts if the call is not successful"},"id":4293,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenDefaultKycStatus","nameLocation":"29551:24:2","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"token","nameLocation":"29584:5:2","nodeType":"VariableDeclaration","scope":4293,"src":"29576:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4249,"name":"address","nodeType":"ElementaryTypeName","src":"29576:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29575:15:2"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"responseCode","nameLocation":"29613:12:2","nodeType":"VariableDeclaration","scope":4293,"src":"29609:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4252,"name":"int","nodeType":"ElementaryTypeName","src":"29609:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4255,"mutability":"mutable","name":"defaultKycStatus","nameLocation":"29632:16:2","nodeType":"VariableDeclaration","scope":4293,"src":"29627:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4254,"name":"bool","nodeType":"ElementaryTypeName","src":"29627:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29608:41:2"},"scope":5343,"src":"29542:411:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"30418:291:2","statements":[{"assignments":[4308,4310],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"success","nameLocation":"30434:7:2","nodeType":"VariableDeclaration","scope":4338,"src":"30429:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4307,"name":"bool","nodeType":"ElementaryTypeName","src":"30429:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4310,"mutability":"mutable","name":"result","nameLocation":"30456:6:2","nodeType":"VariableDeclaration","scope":4338,"src":"30443:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4309,"name":"bytes","nodeType":"ElementaryTypeName","src":"30443:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4323,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4315,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"30525:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30545:14:2","memberName":"transferTokens","nodeType":"MemberAccess","referencedDeclaration":5718,"src":"30525:34:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_int64_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.transferTokens(address,address[] memory,int64[] memory) returns (int64)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30560:8:2","memberName":"selector","nodeType":"MemberAccess","src":"30525:43:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4318,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"30582:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4319,"name":"accountIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"30589:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4320,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"30601:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}],"expression":{"id":4313,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"30502:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30506:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"30502:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30502:107:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4311,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"30466:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30484:4:2","memberName":"call","nodeType":"MemberAccess","src":"30466:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30466:144:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"30428:182:2"},{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4324,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"30620:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4325,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"30635:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4333,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"30675:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30695:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"30675:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"30635:67:2","trueExpression":{"arguments":[{"id":4328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"30656:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30665:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4329,"name":"int32","nodeType":"ElementaryTypeName","src":"30665:5:2","typeDescriptions":{}}}],"id":4331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"30664:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4326,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"30645:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30649:6:2","memberName":"decode","nodeType":"MemberAccess","src":"30645:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30645:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"30620:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4337,"nodeType":"ExpressionStatement","src":"30620:82:2"}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"30045:232:2","text":"Initiates a Fungible Token Transfer\n @param token The ID of the token as a solidity address\n @param accountIds account to do a transfer to/from\n @param amounts The amount from the accountId at the same index"},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"transferTokens","nameLocation":"30291:14:2","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"token","nameLocation":"30314:5:2","nodeType":"VariableDeclaration","scope":4339,"src":"30306:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4295,"name":"address","nodeType":"ElementaryTypeName","src":"30306:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4299,"mutability":"mutable","name":"accountIds","nameLocation":"30338:10:2","nodeType":"VariableDeclaration","scope":4339,"src":"30321:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4297,"name":"address","nodeType":"ElementaryTypeName","src":"30321:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4298,"nodeType":"ArrayTypeName","src":"30321:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"amounts","nameLocation":"30365:7:2","nodeType":"VariableDeclaration","scope":4339,"src":"30350:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":4300,"name":"int64","nodeType":"ElementaryTypeName","src":"30350:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4301,"nodeType":"ArrayTypeName","src":"30350:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"30305:68:2"},"returnParameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"responseCode","nameLocation":"30400:12:2","nodeType":"VariableDeclaration","scope":4339,"src":"30396:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4304,"name":"int","nodeType":"ElementaryTypeName","src":"30396:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30395:18:2"},"scope":5343,"src":"30282:427:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"31202:300:2","statements":[{"assignments":[4357,4359],"declarations":[{"constant":false,"id":4357,"mutability":"mutable","name":"success","nameLocation":"31218:7:2","nodeType":"VariableDeclaration","scope":4388,"src":"31213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4356,"name":"bool","nodeType":"ElementaryTypeName","src":"31213:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4359,"mutability":"mutable","name":"result","nameLocation":"31240:6:2","nodeType":"VariableDeclaration","scope":4388,"src":"31227:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4358,"name":"bytes","nodeType":"ElementaryTypeName","src":"31227:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4373,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4364,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"31309:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31329:12:2","memberName":"transferNFTs","nodeType":"MemberAccess","referencedDeclaration":5735,"src":"31309:32:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_int64_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.transferNFTs(address,address[] memory,address[] memory,int64[] memory) returns (int64)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31342:8:2","memberName":"selector","nodeType":"MemberAccess","src":"31309:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4367,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"31364:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4368,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"31371:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4369,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"31379:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4370,"name":"serialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"31389:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}],"expression":{"id":4362,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"31286:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31290:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"31286:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31286:116:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4360,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"31250:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31268:4:2","memberName":"call","nodeType":"MemberAccess","src":"31250:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31250:153:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"31212:191:2"},{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4374,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"31413:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4375,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"31428:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4383,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"31468:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31488:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"31468:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"31428:67:2","trueExpression":{"arguments":[{"id":4378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"31449:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31458:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4379,"name":"int32","nodeType":"ElementaryTypeName","src":"31458:5:2","typeDescriptions":{}}}],"id":4381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31457:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4376,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"31438:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31442:6:2","memberName":"decode","nodeType":"MemberAccess","src":"31438:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31438:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"31413:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4387,"nodeType":"ExpressionStatement","src":"31413:82:2"}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"30715:320:2","text":"Initiates a Non-Fungable Token Transfer\n @param token The ID of the token as a solidity address\n @param sender the sender of an nft\n @param receiver the receiver of the nft sent by the same index at sender\n @param serialNumber the serial number of the nft sent by the same index at sender"},"id":4389,"implemented":true,"kind":"function","modifiers":[],"name":"transferNFTs","nameLocation":"31049:12:2","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"token","nameLocation":"31070:5:2","nodeType":"VariableDeclaration","scope":4389,"src":"31062:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4341,"name":"address","nodeType":"ElementaryTypeName","src":"31062:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4345,"mutability":"mutable","name":"sender","nameLocation":"31094:6:2","nodeType":"VariableDeclaration","scope":4389,"src":"31077:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4343,"name":"address","nodeType":"ElementaryTypeName","src":"31077:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4344,"nodeType":"ArrayTypeName","src":"31077:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"receiver","nameLocation":"31119:8:2","nodeType":"VariableDeclaration","scope":4389,"src":"31102:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4346,"name":"address","nodeType":"ElementaryTypeName","src":"31102:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4347,"nodeType":"ArrayTypeName","src":"31102:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4351,"mutability":"mutable","name":"serialNumber","nameLocation":"31144:12:2","nodeType":"VariableDeclaration","scope":4389,"src":"31129:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":4349,"name":"int64","nodeType":"ElementaryTypeName","src":"31129:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4350,"nodeType":"ArrayTypeName","src":"31129:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"31061:96:2"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"responseCode","nameLocation":"31184:12:2","nodeType":"VariableDeclaration","scope":4389,"src":"31180:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4353,"name":"int","nodeType":"ElementaryTypeName","src":"31180:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31179:18:2"},"scope":5343,"src":"31040:462:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"32182:295:2","statements":[{"assignments":[4404,4406],"declarations":[{"constant":false,"id":4404,"mutability":"mutable","name":"success","nameLocation":"32198:7:2","nodeType":"VariableDeclaration","scope":4435,"src":"32193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4403,"name":"bool","nodeType":"ElementaryTypeName","src":"32193:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4406,"mutability":"mutable","name":"result","nameLocation":"32220:6:2","nodeType":"VariableDeclaration","scope":4435,"src":"32207:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4405,"name":"bytes","nodeType":"ElementaryTypeName","src":"32207:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4420,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4411,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"32289:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32309:13:2","memberName":"transferToken","nodeType":"MemberAccess","referencedDeclaration":5749,"src":"32289:33:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int64_$","typeString":"function IHederaTokenService.transferToken(address,address,address,int64) returns (int64)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32323:8:2","memberName":"selector","nodeType":"MemberAccess","src":"32289:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4414,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"32345:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4415,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"32352:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4416,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"32360:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4417,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"32370:6:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":4409,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"32266:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32270:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"32266:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32266:111:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4407,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"32230:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32248:4:2","memberName":"call","nodeType":"MemberAccess","src":"32230:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32230:148:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"32192:186:2"},{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4421,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"32388:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4422,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"32403:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4430,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"32443:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32463:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"32443:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"32403:67:2","trueExpression":{"arguments":[{"id":4425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"32424:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32433:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4426,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:2","typeDescriptions":{}}}],"id":4428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"32432:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4423,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"32413:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32417:6:2","memberName":"decode","nodeType":"MemberAccess","src":"32413:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32413:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32388:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4434,"nodeType":"ExpressionStatement","src":"32388:82:2"}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"31508:539:2","text":"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param receiver The receiver of the transaction\n @param amount Non-negative value to send. a negative value will result in a failure."},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"transferToken","nameLocation":"32061:13:2","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"token","nameLocation":"32083:5:2","nodeType":"VariableDeclaration","scope":4436,"src":"32075:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4391,"name":"address","nodeType":"ElementaryTypeName","src":"32075:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"sender","nameLocation":"32098:6:2","nodeType":"VariableDeclaration","scope":4436,"src":"32090:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4393,"name":"address","nodeType":"ElementaryTypeName","src":"32090:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"receiver","nameLocation":"32114:8:2","nodeType":"VariableDeclaration","scope":4436,"src":"32106:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4395,"name":"address","nodeType":"ElementaryTypeName","src":"32106:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4398,"mutability":"mutable","name":"amount","nameLocation":"32130:6:2","nodeType":"VariableDeclaration","scope":4436,"src":"32124:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4397,"name":"int64","nodeType":"ElementaryTypeName","src":"32124:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"32074:63:2"},"returnParameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"responseCode","nameLocation":"32164:12:2","nodeType":"VariableDeclaration","scope":4436,"src":"32160:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4400,"name":"int","nodeType":"ElementaryTypeName","src":"32160:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32159:18:2"},"scope":5343,"src":"32052:425:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4482,"nodeType":"Block","src":"33138:299:2","statements":[{"assignments":[4451,4453],"declarations":[{"constant":false,"id":4451,"mutability":"mutable","name":"success","nameLocation":"33154:7:2","nodeType":"VariableDeclaration","scope":4482,"src":"33149:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4450,"name":"bool","nodeType":"ElementaryTypeName","src":"33149:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4453,"mutability":"mutable","name":"result","nameLocation":"33176:6:2","nodeType":"VariableDeclaration","scope":4482,"src":"33163:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4452,"name":"bytes","nodeType":"ElementaryTypeName","src":"33163:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4467,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4458,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"33245:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33265:11:2","memberName":"transferNFT","nodeType":"MemberAccess","referencedDeclaration":5763,"src":"33245:31:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int64_$","typeString":"function IHederaTokenService.transferNFT(address,address,address,int64) returns (int64)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33277:8:2","memberName":"selector","nodeType":"MemberAccess","src":"33245:40:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4461,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"33299:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4462,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"33306:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4463,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"33314:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4464,"name":"serialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"33324:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":4456,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"33222:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33226:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"33222:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33222:115:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4454,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"33186:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33204:4:2","memberName":"call","nodeType":"MemberAccess","src":"33186:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33186:152:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"33148:190:2"},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"33348:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4469,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"33363:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4477,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"33403:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33423:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"33403:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"33363:67:2","trueExpression":{"arguments":[{"id":4472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"33384:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33393:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4473,"name":"int32","nodeType":"ElementaryTypeName","src":"33393:5:2","typeDescriptions":{}}}],"id":4475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"33392:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4470,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"33373:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33377:6:2","memberName":"decode","nodeType":"MemberAccess","src":"33373:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33373:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33348:82:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4481,"nodeType":"ExpressionStatement","src":"33348:82:2"}]},"documentation":{"id":4437,"nodeType":"StructuredDocumentation","src":"32483:516:2","text":"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param receiver The receiver of the transaction\n @param serialNumber The serial number of the NFT to transfer."},"id":4483,"implemented":true,"kind":"function","modifiers":[],"name":"transferNFT","nameLocation":"33013:11:2","nodeType":"FunctionDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"token","nameLocation":"33033:5:2","nodeType":"VariableDeclaration","scope":4483,"src":"33025:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4438,"name":"address","nodeType":"ElementaryTypeName","src":"33025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"sender","nameLocation":"33048:6:2","nodeType":"VariableDeclaration","scope":4483,"src":"33040:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4440,"name":"address","nodeType":"ElementaryTypeName","src":"33040:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4443,"mutability":"mutable","name":"receiver","nameLocation":"33064:8:2","nodeType":"VariableDeclaration","scope":4483,"src":"33056:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4442,"name":"address","nodeType":"ElementaryTypeName","src":"33056:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4445,"mutability":"mutable","name":"serialNumber","nameLocation":"33080:12:2","nodeType":"VariableDeclaration","scope":4483,"src":"33074:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4444,"name":"int64","nodeType":"ElementaryTypeName","src":"33074:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"33024:69:2"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"responseCode","nameLocation":"33120:12:2","nodeType":"VariableDeclaration","scope":4483,"src":"33116:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4447,"name":"int","nodeType":"ElementaryTypeName","src":"33116:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33115:18:2"},"scope":5343,"src":"33004:433:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"33696:256:2","statements":[{"assignments":[4492,4494],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"success","nameLocation":"33712:7:2","nodeType":"VariableDeclaration","scope":4521,"src":"33707:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4491,"name":"bool","nodeType":"ElementaryTypeName","src":"33707:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4494,"mutability":"mutable","name":"result","nameLocation":"33734:6:2","nodeType":"VariableDeclaration","scope":4521,"src":"33721:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4493,"name":"bytes","nodeType":"ElementaryTypeName","src":"33721:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4505,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4499,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"33803:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33823:10:2","memberName":"pauseToken","nodeType":"MemberAccess","referencedDeclaration":6046,"src":"33803:30:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.pauseToken(address) returns (int64)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33834:8:2","memberName":"selector","nodeType":"MemberAccess","src":"33803:39:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"33844:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4497,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"33780:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33784:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"33780:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33780:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4495,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"33744:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33762:4:2","memberName":"call","nodeType":"MemberAccess","src":"33744:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33744:107:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"33706:145:2"},{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4506,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"33862:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4507,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"33861:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4508,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"33878:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4516,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"33918:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33938:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"33918:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"33878:67:2","trueExpression":{"arguments":[{"id":4511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"33899:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33908:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4512,"name":"int32","nodeType":"ElementaryTypeName","src":"33908:5:2","typeDescriptions":{}}}],"id":4514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"33907:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4509,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"33888:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33892:6:2","memberName":"decode","nodeType":"MemberAccess","src":"33888:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33888:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33861:84:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4520,"nodeType":"ExpressionStatement","src":"33861:84:2"}]},"documentation":{"id":4484,"nodeType":"StructuredDocumentation","src":"33443:173:2","text":"Operation to pause token\n @param token The token address to be paused\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"pauseToken","nameLocation":"33630:10:2","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"token","nameLocation":"33649:5:2","nodeType":"VariableDeclaration","scope":4522,"src":"33641:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4485,"name":"address","nodeType":"ElementaryTypeName","src":"33641:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33640:15:2"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"responseCode","nameLocation":"33678:12:2","nodeType":"VariableDeclaration","scope":4522,"src":"33674:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4488,"name":"int","nodeType":"ElementaryTypeName","src":"33674:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33673:18:2"},"scope":5343,"src":"33621:331:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4560,"nodeType":"Block","src":"34217:258:2","statements":[{"assignments":[4531,4533],"declarations":[{"constant":false,"id":4531,"mutability":"mutable","name":"success","nameLocation":"34233:7:2","nodeType":"VariableDeclaration","scope":4560,"src":"34228:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4530,"name":"bool","nodeType":"ElementaryTypeName","src":"34228:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"result","nameLocation":"34255:6:2","nodeType":"VariableDeclaration","scope":4560,"src":"34242:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4532,"name":"bytes","nodeType":"ElementaryTypeName","src":"34242:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4544,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4538,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"34324:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34344:12:2","memberName":"unpauseToken","nodeType":"MemberAccess","referencedDeclaration":6054,"src":"34324:32:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.unpauseToken(address) returns (int64)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34357:8:2","memberName":"selector","nodeType":"MemberAccess","src":"34324:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4541,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"34367:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4536,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"34301:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34305:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"34301:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34301:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4534,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"34265:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34283:4:2","memberName":"call","nodeType":"MemberAccess","src":"34265:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34265:109:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"34227:147:2"},{"expression":{"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4545,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"34385:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4546,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"34384:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4547,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"34401:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4555,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"34441:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34461:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"34441:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"34401:67:2","trueExpression":{"arguments":[{"id":4550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"34422:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34431:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4551,"name":"int32","nodeType":"ElementaryTypeName","src":"34431:5:2","typeDescriptions":{}}}],"id":4553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"34430:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4548,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"34411:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34415:6:2","memberName":"decode","nodeType":"MemberAccess","src":"34411:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34411:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"34384:84:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4559,"nodeType":"ExpressionStatement","src":"34384:84:2"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"33958:177:2","text":"Operation to unpause token\n @param token The token address to be unpaused\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"unpauseToken","nameLocation":"34149:12:2","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"token","nameLocation":"34170:5:2","nodeType":"VariableDeclaration","scope":4561,"src":"34162:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4524,"name":"address","nodeType":"ElementaryTypeName","src":"34162:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34161:15:2"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"responseCode","nameLocation":"34199:12:2","nodeType":"VariableDeclaration","scope":4561,"src":"34195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4527,"name":"int","nodeType":"ElementaryTypeName","src":"34195:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34194:18:2"},"scope":5343,"src":"34140:335:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4605,"nodeType":"Block","src":"34888:279:2","statements":[{"assignments":[4574,4576],"declarations":[{"constant":false,"id":4574,"mutability":"mutable","name":"success","nameLocation":"34904:7:2","nodeType":"VariableDeclaration","scope":4605,"src":"34899:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4573,"name":"bool","nodeType":"ElementaryTypeName","src":"34899:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4576,"mutability":"mutable","name":"result","nameLocation":"34926:6:2","nodeType":"VariableDeclaration","scope":4605,"src":"34913:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4575,"name":"bytes","nodeType":"ElementaryTypeName","src":"34913:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4589,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4581,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"34995:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35015:16:2","memberName":"wipeTokenAccount","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"34995:36:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_int64_$returns$_t_int64_$","typeString":"function IHederaTokenService.wipeTokenAccount(address,address,int64) returns (int64)"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35032:8:2","memberName":"selector","nodeType":"MemberAccess","src":"34995:45:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4584,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"35042:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4585,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"35049:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4586,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"35058:6:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":4579,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"34972:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34976:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"34972:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34972:93:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4577,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"34936:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34954:4:2","memberName":"call","nodeType":"MemberAccess","src":"34936:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34936:130:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"34898:168:2"},{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4590,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"35077:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4591,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"35076:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4592,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"35093:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4600,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"35133:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35153:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"35133:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"35093:67:2","trueExpression":{"arguments":[{"id":4595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"35114:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35123:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4596,"name":"int32","nodeType":"ElementaryTypeName","src":"35123:5:2","typeDescriptions":{}}}],"id":4598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"35122:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4593,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"35103:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35107:6:2","memberName":"decode","nodeType":"MemberAccess","src":"35103:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35103:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"35076:84:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4604,"nodeType":"ExpressionStatement","src":"35076:84:2"}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"34481:290:2","text":"Operation to wipe fungible tokens from account\n @param token The token address\n @param account The account address to revoke kyc\n @param amount The number of tokens to wipe\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4606,"implemented":true,"kind":"function","modifiers":[],"name":"wipeTokenAccount","nameLocation":"34785:16:2","nodeType":"FunctionDefinition","parameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"token","nameLocation":"34810:5:2","nodeType":"VariableDeclaration","scope":4606,"src":"34802:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"34802:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"account","nameLocation":"34825:7:2","nodeType":"VariableDeclaration","scope":4606,"src":"34817:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4565,"name":"address","nodeType":"ElementaryTypeName","src":"34817:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"amount","nameLocation":"34840:6:2","nodeType":"VariableDeclaration","scope":4606,"src":"34834:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4567,"name":"int64","nodeType":"ElementaryTypeName","src":"34834:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"34801:46:2"},"returnParameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"responseCode","nameLocation":"34870:12:2","nodeType":"VariableDeclaration","scope":4606,"src":"34866:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4570,"name":"int","nodeType":"ElementaryTypeName","src":"34866:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34865:18:2"},"scope":5343,"src":"34776:391:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4651,"nodeType":"Block","src":"35622:289:2","statements":[{"assignments":[4620,4622],"declarations":[{"constant":false,"id":4620,"mutability":"mutable","name":"success","nameLocation":"35638:7:2","nodeType":"VariableDeclaration","scope":4651,"src":"35633:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4619,"name":"bool","nodeType":"ElementaryTypeName","src":"35633:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4622,"mutability":"mutable","name":"result","nameLocation":"35660:6:2","nodeType":"VariableDeclaration","scope":4651,"src":"35647:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4621,"name":"bytes","nodeType":"ElementaryTypeName","src":"35647:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4635,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4627,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"35729:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35749:19:2","memberName":"wipeTokenAccountNFT","nodeType":"MemberAccess","referencedDeclaration":6079,"src":"35729:39:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_int64_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.wipeTokenAccountNFT(address,address,int64[] memory) returns (int64)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35769:8:2","memberName":"selector","nodeType":"MemberAccess","src":"35729:48:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4630,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"35779:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4631,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"35786:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4632,"name":"serialNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"35795:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[] memory"}],"expression":{"id":4625,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"35706:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35710:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"35706:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35706:103:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4623,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"35670:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35688:4:2","memberName":"call","nodeType":"MemberAccess","src":"35670:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35670:140:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"35632:178:2"},{"expression":{"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4636,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"35821:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4637,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"35820:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4638,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"35837:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4646,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"35877:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35897:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"35877:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"35837:67:2","trueExpression":{"arguments":[{"id":4641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"35858:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35867:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4642,"name":"int32","nodeType":"ElementaryTypeName","src":"35867:5:2","typeDescriptions":{}}}],"id":4644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"35866:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4639,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"35847:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35851:6:2","memberName":"decode","nodeType":"MemberAccess","src":"35847:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35847:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"35820:84:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4650,"nodeType":"ExpressionStatement","src":"35820:84:2"}]},"documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"35173:309:2","text":"Operation to wipe non fungible tokens from account\n @param token The token address\n @param account The account address to revoke kyc\n @param  serialNumbers The serial numbers of token to wipe\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4652,"implemented":true,"kind":"function","modifiers":[],"name":"wipeTokenAccountNFT","nameLocation":"35496:19:2","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"token","nameLocation":"35524:5:2","nodeType":"VariableDeclaration","scope":4652,"src":"35516:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4608,"name":"address","nodeType":"ElementaryTypeName","src":"35516:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"account","nameLocation":"35539:7:2","nodeType":"VariableDeclaration","scope":4652,"src":"35531:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4610,"name":"address","nodeType":"ElementaryTypeName","src":"35531:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"serialNumbers","nameLocation":"35563:13:2","nodeType":"VariableDeclaration","scope":4652,"src":"35548:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":4612,"name":"int64","nodeType":"ElementaryTypeName","src":"35548:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4613,"nodeType":"ArrayTypeName","src":"35548:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"35515:62:2"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"responseCode","nameLocation":"35604:12:2","nodeType":"VariableDeclaration","scope":4652,"src":"35600:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4616,"name":"int","nodeType":"ElementaryTypeName","src":"35600:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35599:18:2"},"scope":5343,"src":"35487:424:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4690,"nodeType":"Block","src":"36159:257:2","statements":[{"assignments":[4661,4663],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"success","nameLocation":"36175:7:2","nodeType":"VariableDeclaration","scope":4690,"src":"36170:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4660,"name":"bool","nodeType":"ElementaryTypeName","src":"36170:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4663,"mutability":"mutable","name":"result","nameLocation":"36197:6:2","nodeType":"VariableDeclaration","scope":4690,"src":"36184:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4662,"name":"bytes","nodeType":"ElementaryTypeName","src":"36184:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4674,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4668,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"36266:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36286:11:2","memberName":"deleteToken","nodeType":"MemberAccess","referencedDeclaration":5899,"src":"36266:31:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$","typeString":"function IHederaTokenService.deleteToken(address) returns (int64)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36298:8:2","memberName":"selector","nodeType":"MemberAccess","src":"36266:40:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"36308:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4666,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"36243:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36247:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"36243:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36243:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4664,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"36207:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36225:4:2","memberName":"call","nodeType":"MemberAccess","src":"36207:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36207:108:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"36169:146:2"},{"expression":{"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4675,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"36326:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4676,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"36325:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4677,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"36342:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4685,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"36382:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36402:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"36382:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"36342:67:2","trueExpression":{"arguments":[{"id":4680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"36363:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36372:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4681,"name":"int32","nodeType":"ElementaryTypeName","src":"36372:5:2","typeDescriptions":{}}}],"id":4683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"36371:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4678,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"36352:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36356:6:2","memberName":"decode","nodeType":"MemberAccess","src":"36352:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36352:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"36325:84:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4689,"nodeType":"ExpressionStatement","src":"36325:84:2"}]},"documentation":{"id":4653,"nodeType":"StructuredDocumentation","src":"35917:161:2","text":"Operation to delete token\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4691,"implemented":true,"kind":"function","modifiers":[],"name":"deleteToken","nameLocation":"36092:11:2","nodeType":"FunctionDefinition","parameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"token","nameLocation":"36112:5:2","nodeType":"VariableDeclaration","scope":4691,"src":"36104:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4654,"name":"address","nodeType":"ElementaryTypeName","src":"36104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36103:15:2"},"returnParameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"responseCode","nameLocation":"36141:12:2","nodeType":"VariableDeclaration","scope":4691,"src":"36137:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4657,"name":"int","nodeType":"ElementaryTypeName","src":"36137:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36136:18:2"},"scope":5343,"src":"36083:333:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4734,"nodeType":"Block","src":"36753:267:2","statements":[{"assignments":[4704,4706],"declarations":[{"constant":false,"id":4704,"mutability":"mutable","name":"success","nameLocation":"36769:7:2","nodeType":"VariableDeclaration","scope":4734,"src":"36764:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4703,"name":"bool","nodeType":"ElementaryTypeName","src":"36764:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4706,"mutability":"mutable","name":"result","nameLocation":"36791:6:2","nodeType":"VariableDeclaration","scope":4734,"src":"36778:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4705,"name":"bytes","nodeType":"ElementaryTypeName","src":"36778:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4718,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4711,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"36860:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36880:15:2","memberName":"updateTokenKeys","nodeType":"MemberAccess","referencedDeclaration":6113,"src":"36860:35:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_array$_t_struct$_TokenKey_$5407_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.updateTokenKeys(address,struct IHederaTokenService.TokenKey memory[] memory) returns (int64)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36896:8:2","memberName":"selector","nodeType":"MemberAccess","src":"36860:44:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4714,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"36906:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4715,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"36913:4:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenKey_$5407_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenKey memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_TokenKey_$5407_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenKey memory[] memory"}],"expression":{"id":4709,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"36837:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36841:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"36837:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36837:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4707,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"36801:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36819:4:2","memberName":"call","nodeType":"MemberAccess","src":"36801:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36801:118:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"36763:156:2"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4719,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"36930:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":4720,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"36929:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4721,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"36946:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4729,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"36986:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37006:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"36986:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"36946:67:2","trueExpression":{"arguments":[{"id":4724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"36967:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36976:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4725,"name":"int32","nodeType":"ElementaryTypeName","src":"36976:5:2","typeDescriptions":{}}}],"id":4727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"36975:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4722,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"36956:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36960:6:2","memberName":"decode","nodeType":"MemberAccess","src":"36956:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36956:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"36929:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4733,"nodeType":"ExpressionStatement","src":"36929:84:2"}]},"documentation":{"id":4692,"nodeType":"StructuredDocumentation","src":"36422:201:2","text":"Operation to update token keys\n @param token The token address\n @param keys The token keys\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4735,"implemented":true,"kind":"function","modifiers":[],"name":"updateTokenKeys","nameLocation":"36637:15:2","nodeType":"FunctionDefinition","parameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"token","nameLocation":"36661:5:2","nodeType":"VariableDeclaration","scope":4735,"src":"36653:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4693,"name":"address","nodeType":"ElementaryTypeName","src":"36653:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4698,"mutability":"mutable","name":"keys","nameLocation":"36706:4:2","nodeType":"VariableDeclaration","scope":4735,"src":"36668:42:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenKey_$5407_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenKey[]"},"typeName":{"baseType":{"id":4696,"nodeType":"UserDefinedTypeName","pathNode":{"id":4695,"name":"IHederaTokenService.TokenKey","nameLocations":["36668:19:2","36688:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5407,"src":"36668:28:2"},"referencedDeclaration":5407,"src":"36668:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenKey_$5407_storage_ptr","typeString":"struct IHederaTokenService.TokenKey"}},"id":4697,"nodeType":"ArrayTypeName","src":"36668:30:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenKey_$5407_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.TokenKey[]"}},"visibility":"internal"}],"src":"36652:59:2"},"returnParameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"responseCode","nameLocation":"36740:12:2","nodeType":"VariableDeclaration","scope":4735,"src":"36734:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4700,"name":"int64","nodeType":"ElementaryTypeName","src":"36734:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"36733:20:2"},"scope":5343,"src":"36628:392:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4790,"nodeType":"Block","src":"37512:389:2","statements":[{"assignments":[4749,4751],"declarations":[{"constant":false,"id":4749,"mutability":"mutable","name":"success","nameLocation":"37528:7:2","nodeType":"VariableDeclaration","scope":4790,"src":"37523:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4748,"name":"bool","nodeType":"ElementaryTypeName","src":"37523:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"result","nameLocation":"37550:6:2","nodeType":"VariableDeclaration","scope":4790,"src":"37537:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4750,"name":"bytes","nodeType":"ElementaryTypeName","src":"37537:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4763,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4756,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"37619:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37639:11:2","memberName":"getTokenKey","nodeType":"MemberAccess","referencedDeclaration":5985,"src":"37619:31:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_int64_$_t_struct$_KeyValue_$5400_memory_ptr_$","typeString":"function IHederaTokenService.getTokenKey(address,uint256) returns (int64,struct IHederaTokenService.KeyValue memory)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37651:8:2","memberName":"selector","nodeType":"MemberAccess","src":"37619:40:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4759,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"37661:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4760,"name":"keyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"37668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4754,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"37596:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37600:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"37596:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37596:80:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4752,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"37560:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37578:4:2","memberName":"call","nodeType":"MemberAccess","src":"37560:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37560:117:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"37522:155:2"},{"assignments":[4768],"declarations":[{"constant":false,"id":4768,"mutability":"mutable","name":"defaultKeyValueInfo","nameLocation":"37723:19:2","nodeType":"VariableDeclaration","scope":4790,"src":"37687:55:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_memory_ptr","typeString":"struct IHederaTokenService.KeyValue"},"typeName":{"id":4767,"nodeType":"UserDefinedTypeName","pathNode":{"id":4766,"name":"IHederaTokenService.KeyValue","nameLocations":["37687:19:2","37707:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5400,"src":"37687:28:2"},"referencedDeclaration":5400,"src":"37687:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_storage_ptr","typeString":"struct IHederaTokenService.KeyValue"}},"visibility":"internal"}],"id":4769,"nodeType":"VariableDeclarationStatement","src":"37687:55:2"},{"expression":{"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4770,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"37753:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":4771,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"37767:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_memory_ptr","typeString":"struct IHederaTokenService.KeyValue memory"}}],"id":4772,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"37752:19:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_struct$_KeyValue_$5400_memory_ptr_$","typeString":"tuple(int64,struct IHederaTokenService.KeyValue memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4773,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"37774:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":4783,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"37845:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37865:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"37845:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":4785,"name":"defaultKeyValueInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"37874:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_memory_ptr","typeString":"struct IHederaTokenService.KeyValue memory"}}],"id":4786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"37844:50:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_KeyValue_$5400_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.KeyValue memory)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"37774:120:2","trueExpression":{"arguments":[{"id":4776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"37795:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"37804:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4777,"name":"int32","nodeType":"ElementaryTypeName","src":"37804:5:2","typeDescriptions":{}}},{"expression":{"id":4779,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"37810:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37830:8:2","memberName":"KeyValue","nodeType":"MemberAccess","referencedDeclaration":5400,"src":"37810:28:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_KeyValue_$5400_storage_ptr_$","typeString":"type(struct IHederaTokenService.KeyValue storage pointer)"}}],"id":4781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"37803:36:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_KeyValue_$5400_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.KeyValue storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_KeyValue_$5400_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.KeyValue storage pointer))"}],"expression":{"id":4774,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"37784:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37788:6:2","memberName":"decode","nodeType":"MemberAccess","src":"37784:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37784:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_KeyValue_$5400_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.KeyValue memory)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_KeyValue_$5400_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.KeyValue memory)"}},"src":"37752:142:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4789,"nodeType":"ExpressionStatement","src":"37752:142:2"}]},"documentation":{"id":4736,"nodeType":"StructuredDocumentation","src":"37026:349:2","text":"Query token KeyValue\n @param token The token address to check\n @param keyType The keyType of the desired KeyValue\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return key KeyValue info for key of type `keyType`\n @dev This function reverts if the call is not successful"},"id":4791,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenKey","nameLocation":"37389:11:2","nodeType":"FunctionDefinition","parameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"mutability":"mutable","name":"token","nameLocation":"37409:5:2","nodeType":"VariableDeclaration","scope":4791,"src":"37401:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4737,"name":"address","nodeType":"ElementaryTypeName","src":"37401:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4740,"mutability":"mutable","name":"keyType","nameLocation":"37421:7:2","nodeType":"VariableDeclaration","scope":4791,"src":"37416:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint","nodeType":"ElementaryTypeName","src":"37416:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37400:29:2"},"returnParameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"responseCode","nameLocation":"37458:12:2","nodeType":"VariableDeclaration","scope":4791,"src":"37452:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4742,"name":"int64","nodeType":"ElementaryTypeName","src":"37452:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4746,"mutability":"mutable","name":"key","nameLocation":"37508:3:2","nodeType":"VariableDeclaration","scope":4791,"src":"37472:39:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_memory_ptr","typeString":"struct IHederaTokenService.KeyValue"},"typeName":{"id":4745,"nodeType":"UserDefinedTypeName","pathNode":{"id":4744,"name":"IHederaTokenService.KeyValue","nameLocations":["37472:19:2","37492:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5400,"src":"37472:28:2"},"referencedDeclaration":5400,"src":"37472:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_storage_ptr","typeString":"struct IHederaTokenService.KeyValue"}},"visibility":"internal"}],"src":"37451:61:2"},"scope":5343,"src":"37380:521:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4836,"nodeType":"Block","src":"38326:281:2","statements":[{"assignments":[4802,4804],"declarations":[{"constant":false,"id":4802,"mutability":"mutable","name":"success","nameLocation":"38342:7:2","nodeType":"VariableDeclaration","scope":4836,"src":"38337:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4801,"name":"bool","nodeType":"ElementaryTypeName","src":"38337:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4804,"mutability":"mutable","name":"result","nameLocation":"38364:6:2","nodeType":"VariableDeclaration","scope":4836,"src":"38351:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4803,"name":"bytes","nodeType":"ElementaryTypeName","src":"38351:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4815,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4809,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"38433:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38453:7:2","memberName":"isToken","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"38433:27:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$_t_bool_$","typeString":"function IHederaTokenService.isToken(address) returns (int64,bool)"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38461:8:2","memberName":"selector","nodeType":"MemberAccess","src":"38433:36:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4812,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"38471:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4807,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"38410:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38414:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"38410:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38410:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4805,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"38374:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38392:4:2","memberName":"call","nodeType":"MemberAccess","src":"38374:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38374:104:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"38336:142:2"},{"expression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4816,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"38489:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":4817,"name":"isTokenFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"38503:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4818,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"38488:27:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_bool_$","typeString":"tuple(int64,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4819,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"38518:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":4829,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"38565:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38585:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"38565:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"hexValue":"66616c7365","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"38594:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":4832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"38564:36:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"38518:82:2","trueExpression":{"arguments":[{"id":4822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"38539:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38548:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4823,"name":"int32","nodeType":"ElementaryTypeName","src":"38548:5:2","typeDescriptions":{}}},{"id":4826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38555:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":4825,"name":"bool","nodeType":"ElementaryTypeName","src":"38555:4:2","typeDescriptions":{}}}],"id":4827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"38547:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(int32),type(bool))"}],"expression":{"id":4820,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"38528:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38532:6:2","memberName":"decode","nodeType":"MemberAccess","src":"38528:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38528:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bool_$","typeString":"tuple(int32,bool)"}},"src":"38488:112:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4835,"nodeType":"ExpressionStatement","src":"38488:112:2"}]},"documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"37908:325:2","text":"Query if valid token found for the given address\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return isTokenFlag True if valid token found for the given address\n @dev This function reverts if the call is not successful"},"id":4837,"implemented":true,"kind":"function","modifiers":[],"name":"isToken","nameLocation":"38247:7:2","nodeType":"FunctionDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"token","nameLocation":"38263:5:2","nodeType":"VariableDeclaration","scope":4837,"src":"38255:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4793,"name":"address","nodeType":"ElementaryTypeName","src":"38255:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38254:15:2"},"returnParameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"responseCode","nameLocation":"38294:12:2","nodeType":"VariableDeclaration","scope":4837,"src":"38288:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4796,"name":"int64","nodeType":"ElementaryTypeName","src":"38288:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4799,"mutability":"mutable","name":"isTokenFlag","nameLocation":"38313:11:2","nodeType":"VariableDeclaration","scope":4837,"src":"38308:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4798,"name":"bool","nodeType":"ElementaryTypeName","src":"38308:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38287:38:2"},"scope":5343,"src":"38238:369:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4883,"nodeType":"Block","src":"39070:283:2","statements":[{"assignments":[4848,4850],"declarations":[{"constant":false,"id":4848,"mutability":"mutable","name":"success","nameLocation":"39086:7:2","nodeType":"VariableDeclaration","scope":4883,"src":"39081:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4847,"name":"bool","nodeType":"ElementaryTypeName","src":"39081:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4850,"mutability":"mutable","name":"result","nameLocation":"39108:6:2","nodeType":"VariableDeclaration","scope":4883,"src":"39095:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4849,"name":"bytes","nodeType":"ElementaryTypeName","src":"39095:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4861,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4855,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"39177:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39197:12:2","memberName":"getTokenType","nodeType":"MemberAccess","referencedDeclaration":6133,"src":"39177:32:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$_t_int32_$","typeString":"function IHederaTokenService.getTokenType(address) returns (int64,int32)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39210:8:2","memberName":"selector","nodeType":"MemberAccess","src":"39177:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4858,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"39220:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4853,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"39154:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39158:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"39154:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39154:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4851,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"39118:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39136:4:2","memberName":"call","nodeType":"MemberAccess","src":"39118:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39118:109:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"39080:147:2"},{"expression":{"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4862,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"39238:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":4863,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"39252:9:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}}],"id":4864,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"39237:25:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int64_$_t_int32_$","typeString":"tuple(int64,int32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4865,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"39265:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":4875,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"39313:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39333:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"39313:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"39342:3:2","subExpression":{"hexValue":"31","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39344:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"id":4879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"39312:34:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_rational_minus_1_by_1_$","typeString":"tuple(int32,int_const -1)"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"39265:81:2","trueExpression":{"arguments":[{"id":4868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"39286:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39295:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4869,"name":"int32","nodeType":"ElementaryTypeName","src":"39295:5:2","typeDescriptions":{}}},{"id":4872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39302:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4871,"name":"int32","nodeType":"ElementaryTypeName","src":"39302:5:2","typeDescriptions":{}}}],"id":4873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"39294:14:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_int32_$_$","typeString":"tuple(type(int32),type(int32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_int32_$_$","typeString":"tuple(type(int32),type(int32))"}],"expression":{"id":4866,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"39275:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39279:6:2","memberName":"decode","nodeType":"MemberAccess","src":"39275:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39275:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_int32_$","typeString":"tuple(int32,int32)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_int32_$","typeString":"tuple(int32,int32)"}},"src":"39237:109:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4882,"nodeType":"ExpressionStatement","src":"39237:109:2"}]},"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"38613:360:2","text":"Query to return the token type for a given address\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\n @dev This function reverts if the call is not successful"},"id":4884,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenType","nameLocation":"38987:12:2","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"token","nameLocation":"39008:5:2","nodeType":"VariableDeclaration","scope":4884,"src":"39000:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4839,"name":"address","nodeType":"ElementaryTypeName","src":"39000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38999:15:2"},"returnParameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"responseCode","nameLocation":"39039:12:2","nodeType":"VariableDeclaration","scope":4884,"src":"39033:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4842,"name":"int64","nodeType":"ElementaryTypeName","src":"39033:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4845,"mutability":"mutable","name":"tokenType","nameLocation":"39059:9:2","nodeType":"VariableDeclaration","scope":4884,"src":"39053:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4844,"name":"int32","nodeType":"ElementaryTypeName","src":"39053:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"39032:37:2"},"scope":5343,"src":"38978:375:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4936,"nodeType":"Block","src":"39779:386:2","statements":[{"assignments":[4896,4898],"declarations":[{"constant":false,"id":4896,"mutability":"mutable","name":"success","nameLocation":"39795:7:2","nodeType":"VariableDeclaration","scope":4936,"src":"39790:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4895,"name":"bool","nodeType":"ElementaryTypeName","src":"39790:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4898,"mutability":"mutable","name":"result","nameLocation":"39817:6:2","nodeType":"VariableDeclaration","scope":4936,"src":"39804:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4897,"name":"bytes","nodeType":"ElementaryTypeName","src":"39804:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4909,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4903,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"39886:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39906:18:2","memberName":"getTokenExpiryInfo","nodeType":"MemberAccess","referencedDeclaration":5950,"src":"39886:38:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_int64_$_t_struct$_Expiry_$5388_memory_ptr_$","typeString":"function IHederaTokenService.getTokenExpiryInfo(address) returns (int64,struct IHederaTokenService.Expiry memory)"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39925:8:2","memberName":"selector","nodeType":"MemberAccess","src":"39886:47:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4906,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"39935:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4901,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"39863:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39867:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"39863:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39863:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4899,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"39827:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39845:4:2","memberName":"call","nodeType":"MemberAccess","src":"39827:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39827:115:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"39789:153:2"},{"assignments":[4914],"declarations":[{"constant":false,"id":4914,"mutability":"mutable","name":"defaultExpiryInfo","nameLocation":"39986:17:2","nodeType":"VariableDeclaration","scope":4936,"src":"39952:51:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry"},"typeName":{"id":4913,"nodeType":"UserDefinedTypeName","pathNode":{"id":4912,"name":"IHederaTokenService.Expiry","nameLocations":["39952:19:2","39972:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5388,"src":"39952:26:2"},"referencedDeclaration":5388,"src":"39952:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_storage_ptr","typeString":"struct IHederaTokenService.Expiry"}},"visibility":"internal"}],"id":4915,"nodeType":"VariableDeclarationStatement","src":"39952:51:2"},{"expression":{"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4916,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"40014:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4917,"name":"expiryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"40028:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry memory"}}],"id":4918,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"40013:26:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_struct$_Expiry_$5388_memory_ptr_$","typeString":"tuple(int256,struct IHederaTokenService.Expiry memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4919,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"40042:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":4929,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"40111:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40131:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"40111:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":4931,"name":"defaultExpiryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"40140:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry memory"}}],"id":4932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"40110:48:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_Expiry_$5388_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.Expiry memory)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"40042:116:2","trueExpression":{"arguments":[{"id":4922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"40063:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40072:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4923,"name":"int32","nodeType":"ElementaryTypeName","src":"40072:5:2","typeDescriptions":{}}},{"expression":{"id":4925,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"40079:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40099:6:2","memberName":"Expiry","nodeType":"MemberAccess","referencedDeclaration":5388,"src":"40079:26:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Expiry_$5388_storage_ptr_$","typeString":"type(struct IHederaTokenService.Expiry storage pointer)"}}],"id":4927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"40071:35:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_Expiry_$5388_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.Expiry storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_int32_$_$_t_type$_t_struct$_Expiry_$5388_storage_ptr_$_$","typeString":"tuple(type(int32),type(struct IHederaTokenService.Expiry storage pointer))"}],"expression":{"id":4920,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"40052:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40056:6:2","memberName":"decode","nodeType":"MemberAccess","src":"40052:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40052:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_Expiry_$5388_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.Expiry memory)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_struct$_Expiry_$5388_memory_ptr_$","typeString":"tuple(int32,struct IHederaTokenService.Expiry memory)"}},"src":"40013:145:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4935,"nodeType":"ExpressionStatement","src":"40013:145:2"}]},"documentation":{"id":4885,"nodeType":"StructuredDocumentation","src":"39359:291:2","text":"Operation to get token expiry info\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return expiryInfo The expiry info of the token\n @dev This function reverts if the call is not successful"},"id":4937,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenExpiryInfo","nameLocation":"39664:18:2","nodeType":"FunctionDefinition","parameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"token","nameLocation":"39691:5:2","nodeType":"VariableDeclaration","scope":4937,"src":"39683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4886,"name":"address","nodeType":"ElementaryTypeName","src":"39683:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39682:15:2"},"returnParameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4890,"mutability":"mutable","name":"responseCode","nameLocation":"39720:12:2","nodeType":"VariableDeclaration","scope":4937,"src":"39716:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4889,"name":"int","nodeType":"ElementaryTypeName","src":"39716:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4893,"mutability":"mutable","name":"expiryInfo","nameLocation":"39768:10:2","nodeType":"VariableDeclaration","scope":4937,"src":"39734:44:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry"},"typeName":{"id":4892,"nodeType":"UserDefinedTypeName","pathNode":{"id":4891,"name":"IHederaTokenService.Expiry","nameLocations":["39734:19:2","39754:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5388,"src":"39734:26:2"},"referencedDeclaration":5388,"src":"39734:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_storage_ptr","typeString":"struct IHederaTokenService.Expiry"}},"visibility":"internal"}],"src":"39715:64:2"},"scope":5343,"src":"39655:510:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4979,"nodeType":"Block","src":"40476:279:2","statements":[{"assignments":[4949,4951],"declarations":[{"constant":false,"id":4949,"mutability":"mutable","name":"success","nameLocation":"40492:7:2","nodeType":"VariableDeclaration","scope":4979,"src":"40487:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4948,"name":"bool","nodeType":"ElementaryTypeName","src":"40487:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"result","nameLocation":"40514:6:2","nodeType":"VariableDeclaration","scope":4979,"src":"40501:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4950,"name":"bytes","nodeType":"ElementaryTypeName","src":"40501:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4963,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4956,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"40583:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40603:21:2","memberName":"updateTokenExpiryInfo","nodeType":"MemberAccess","referencedDeclaration":6101,"src":"40583:41:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_struct$_Expiry_$5388_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.updateTokenExpiryInfo(address,struct IHederaTokenService.Expiry memory) returns (int64)"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40625:8:2","memberName":"selector","nodeType":"MemberAccess","src":"40583:50:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4959,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"40635:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4960,"name":"expiryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"40642:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry memory"}],"expression":{"id":4954,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"40560:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40564:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"40560:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40560:93:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4952,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"40524:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40542:4:2","memberName":"call","nodeType":"MemberAccess","src":"40524:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40524:130:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"40486:168:2"},{"expression":{"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4964,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"40665:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4965,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"40664:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4966,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"40681:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4974,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"40721:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40741:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"40721:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"40681:67:2","trueExpression":{"arguments":[{"id":4969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"40702:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40711:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4970,"name":"int32","nodeType":"ElementaryTypeName","src":"40711:5:2","typeDescriptions":{}}}],"id":4972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"40710:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":4967,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"40691:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40695:6:2","memberName":"decode","nodeType":"MemberAccess","src":"40691:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40691:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"40664:84:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4978,"nodeType":"ExpressionStatement","src":"40664:84:2"}]},"documentation":{"id":4938,"nodeType":"StructuredDocumentation","src":"40171:173:2","text":"Operation to update token expiry info\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":4980,"implemented":true,"kind":"function","modifiers":[],"name":"updateTokenExpiryInfo","nameLocation":"40358:21:2","nodeType":"FunctionDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4940,"mutability":"mutable","name":"token","nameLocation":"40388:5:2","nodeType":"VariableDeclaration","scope":4980,"src":"40380:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4939,"name":"address","nodeType":"ElementaryTypeName","src":"40380:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4943,"mutability":"mutable","name":"expiryInfo","nameLocation":"40429:10:2","nodeType":"VariableDeclaration","scope":4980,"src":"40395:44:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry"},"typeName":{"id":4942,"nodeType":"UserDefinedTypeName","pathNode":{"id":4941,"name":"IHederaTokenService.Expiry","nameLocations":["40395:19:2","40415:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5388,"src":"40395:26:2"},"referencedDeclaration":5388,"src":"40395:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_storage_ptr","typeString":"struct IHederaTokenService.Expiry"}},"visibility":"internal"}],"src":"40379:61:2"},"returnParameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4946,"mutability":"mutable","name":"responseCode","nameLocation":"40463:12:2","nodeType":"VariableDeclaration","scope":4980,"src":"40459:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4945,"name":"int","nodeType":"ElementaryTypeName","src":"40459:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"40458:18:2"},"scope":5343,"src":"40349:406:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5022,"nodeType":"Block","src":"41126:272:2","statements":[{"assignments":[4992,4994],"declarations":[{"constant":false,"id":4992,"mutability":"mutable","name":"success","nameLocation":"41142:7:2","nodeType":"VariableDeclaration","scope":5022,"src":"41137:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4991,"name":"bool","nodeType":"ElementaryTypeName","src":"41137:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4994,"mutability":"mutable","name":"result","nameLocation":"41164:6:2","nodeType":"VariableDeclaration","scope":5022,"src":"41151:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4993,"name":"bytes","nodeType":"ElementaryTypeName","src":"41151:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5006,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4999,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"41233:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"41253:15:2","memberName":"updateTokenInfo","nodeType":"MemberAccess","referencedDeclaration":6090,"src":"41233:35:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_struct$_HederaToken_$5426_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.updateTokenInfo(address,struct IHederaTokenService.HederaToken memory) returns (int64)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"41269:8:2","memberName":"selector","nodeType":"MemberAccess","src":"41233:44:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5002,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"41279:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5003,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"41286:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken memory"}],"expression":{"id":4997,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"41210:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"41214:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"41210:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41210:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4995,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"41174:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41192:4:2","memberName":"call","nodeType":"MemberAccess","src":"41174:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41174:123:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"41136:161:2"},{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5007,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"41308:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5008,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"41307:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5009,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"41324:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5017,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"41364:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"41384:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"41364:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"41324:67:2","trueExpression":{"arguments":[{"id":5012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"41345:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41354:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5013,"name":"int32","nodeType":"ElementaryTypeName","src":"41354:5:2","typeDescriptions":{}}}],"id":5015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"41353:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":5010,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"41334:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"41338:6:2","memberName":"decode","nodeType":"MemberAccess","src":"41334:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41334:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"41307:84:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5021,"nodeType":"ExpressionStatement","src":"41307:84:2"}]},"documentation":{"id":4981,"nodeType":"StructuredDocumentation","src":"40761:234:2","text":"Operation to update token info\n @param token The token address\n @param tokenInfo The hedera token info to update token with\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":5023,"implemented":true,"kind":"function","modifiers":[],"name":"updateTokenInfo","nameLocation":"41009:15:2","nodeType":"FunctionDefinition","parameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"token","nameLocation":"41033:5:2","nodeType":"VariableDeclaration","scope":5023,"src":"41025:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4982,"name":"address","nodeType":"ElementaryTypeName","src":"41025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4986,"mutability":"mutable","name":"tokenInfo","nameLocation":"41079:9:2","nodeType":"VariableDeclaration","scope":5023,"src":"41040:48:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":4985,"nodeType":"UserDefinedTypeName","pathNode":{"id":4984,"name":"IHederaTokenService.HederaToken","nameLocations":["41040:19:2","41060:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"41040:31:2"},"referencedDeclaration":5426,"src":"41040:31:2","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"}],"src":"41024:65:2"},"returnParameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4989,"mutability":"mutable","name":"responseCode","nameLocation":"41112:12:2","nodeType":"VariableDeclaration","scope":5023,"src":"41108:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4988,"name":"int","nodeType":"ElementaryTypeName","src":"41108:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41107:18:2"},"scope":5343,"src":"41000:398:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"41923:379:2","statements":[{"assignments":[5036,5038],"declarations":[{"constant":false,"id":5036,"mutability":"mutable","name":"success","nameLocation":"41939:7:2","nodeType":"VariableDeclaration","scope":5074,"src":"41934:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5035,"name":"bool","nodeType":"ElementaryTypeName","src":"41934:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5038,"mutability":"mutable","name":"result","nameLocation":"41961:6:2","nodeType":"VariableDeclaration","scope":5074,"src":"41948:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5037,"name":"bytes","nodeType":"ElementaryTypeName","src":"41948:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5050,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":5043,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"42030:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42050:16:2","memberName":"redirectForToken","nodeType":"MemberAccess","referencedDeclaration":6145,"src":"42030:36:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_int64_$_t_bytes_memory_ptr_$","typeString":"function IHederaTokenService.redirectForToken(address,bytes memory) returns (int64,bytes memory)"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42067:8:2","memberName":"selector","nodeType":"MemberAccess","src":"42030:45:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5046,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"42077:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5047,"name":"encodedFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"42084:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5041,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"42007:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42011:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"42007:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42007:101:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5039,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"41971:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41989:4:2","memberName":"call","nodeType":"MemberAccess","src":"41971:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41971:147:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"41933:185:2"},{"eventCall":{"arguments":[{"id":5052,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"42152:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"42161:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5051,"name":"CallResponseEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"42134:17:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bool,bytes memory)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42134:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5055,"nodeType":"EmitStatement","src":"42129:39:2"},{"expression":{"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5056,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"42179:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5057,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"42193:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5058,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"42178:24:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_bytes_memory_ptr_$","typeString":"tuple(int256,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5059,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"42205:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":5064,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"42256:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42276:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"42256:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"arguments":[{"hexValue":"","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"42291:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42285:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5066,"name":"bytes","nodeType":"ElementaryTypeName","src":"42285:5:2","typeDescriptions":{}}},"id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42285:9:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"42255:40:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bytes_memory_ptr_$","typeString":"tuple(int32,bytes memory)"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"42205:90:2","trueExpression":{"components":[{"expression":{"id":5060,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"42216:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42236:7:2","memberName":"SUCCESS","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"42216:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":5062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"42245:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"42215:37:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bytes_memory_ptr_$","typeString":"tuple(int32,bytes memory)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int32_$_t_bytes_memory_ptr_$","typeString":"tuple(int32,bytes memory)"}},"src":"42178:117:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5073,"nodeType":"ExpressionStatement","src":"42178:117:2"}]},"documentation":{"id":5024,"nodeType":"StructuredDocumentation","src":"41404:376:2","text":"Redirect for token\n @param token The token address\n @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return response The result of the call that had been encoded and sent for execution."},"functionSelector":"618dc65e","id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"redirectForToken","nameLocation":"41794:16:2","nodeType":"FunctionDefinition","parameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"token","nameLocation":"41819:5:2","nodeType":"VariableDeclaration","scope":5075,"src":"41811:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5025,"name":"address","nodeType":"ElementaryTypeName","src":"41811:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5028,"mutability":"mutable","name":"encodedFunctionSelector","nameLocation":"41839:23:2","nodeType":"VariableDeclaration","scope":5075,"src":"41826:36:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5027,"name":"bytes","nodeType":"ElementaryTypeName","src":"41826:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41810:53:2"},"returnParameters":{"id":5034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"responseCode","nameLocation":"41886:12:2","nodeType":"VariableDeclaration","scope":5075,"src":"41882:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5030,"name":"int","nodeType":"ElementaryTypeName","src":"41882:3:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5033,"mutability":"mutable","name":"response","nameLocation":"41913:8:2","nodeType":"VariableDeclaration","scope":5075,"src":"41900:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5032,"name":"bytes","nodeType":"ElementaryTypeName","src":"41900:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41881:41:2"},"scope":5343,"src":"41785:517:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5122,"nodeType":"Block","src":"42813:300:2","statements":[{"assignments":[5092,5094],"declarations":[{"constant":false,"id":5092,"mutability":"mutable","name":"success","nameLocation":"42829:7:2","nodeType":"VariableDeclaration","scope":5122,"src":"42824:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5091,"name":"bool","nodeType":"ElementaryTypeName","src":"42824:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5094,"mutability":"mutable","name":"result","nameLocation":"42851:6:2","nodeType":"VariableDeclaration","scope":5122,"src":"42838:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5093,"name":"bytes","nodeType":"ElementaryTypeName","src":"42838:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5107,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":5099,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"42920:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42940:29:2","memberName":"updateFungibleTokenCustomFees","nodeType":"MemberAccess","referencedDeclaration":6161,"src":"42920:49:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.updateFungibleTokenCustomFees(address,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.FractionalFee memory[] memory) returns (int64)"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42970:8:2","memberName":"selector","nodeType":"MemberAccess","src":"42920:58:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5102,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"42980:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5103,"name":"fixedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"42987:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"}},{"id":5104,"name":"fractionalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"42998:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee memory[] memory"}],"expression":{"id":5097,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"42897:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42901:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"42897:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42897:116:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5095,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"42861:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42879:4:2","memberName":"call","nodeType":"MemberAccess","src":"42861:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42861:153:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"42823:191:2"},{"expression":{"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5108,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"43024:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5109,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"43039:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5117,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"43079:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43099:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"43079:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"43039:67:2","trueExpression":{"arguments":[{"id":5112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"43060:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43069:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5113,"name":"int32","nodeType":"ElementaryTypeName","src":"43069:5:2","typeDescriptions":{}}}],"id":5115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"43068:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":5110,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"43049:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43053:6:2","memberName":"decode","nodeType":"MemberAccess","src":"43049:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43049:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"43024:82:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5121,"nodeType":"ExpressionStatement","src":"43024:82:2"}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"42308:299:2","text":"Update the custom fees for a fungible token\n @param token The token address\n @param fixedFees Set of fixed fees for `token`\n @param fractionalFees Set of fractional fees for `token`\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":5123,"implemented":true,"kind":"function","modifiers":[],"name":"updateFungibleTokenCustomFees","nameLocation":"42621:29:2","nodeType":"FunctionDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"token","nameLocation":"42659:5:2","nodeType":"VariableDeclaration","scope":5123,"src":"42651:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5077,"name":"address","nodeType":"ElementaryTypeName","src":"42651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5082,"mutability":"mutable","name":"fixedFees","nameLocation":"42705:9:2","nodeType":"VariableDeclaration","scope":5123,"src":"42667:47:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":5080,"nodeType":"UserDefinedTypeName","pathNode":{"id":5079,"name":"IHederaTokenService.FixedFee","nameLocations":["42667:19:2","42687:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"42667:28:2"},"referencedDeclaration":5504,"src":"42667:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":5081,"nodeType":"ArrayTypeName","src":"42667:30:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":5086,"mutability":"mutable","name":"fractionalFees","nameLocation":"42759:14:2","nodeType":"VariableDeclaration","scope":5123,"src":"42716:57:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"},"typeName":{"baseType":{"id":5084,"nodeType":"UserDefinedTypeName","pathNode":{"id":5083,"name":"IHederaTokenService.FractionalFee","nameLocations":["42716:19:2","42736:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"42716:33:2"},"referencedDeclaration":5518,"src":"42716:33:2","typeDescriptions":{"typeIdentifier":"t_struct$_FractionalFee_$5518_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee"}},"id":5085,"nodeType":"ArrayTypeName","src":"42716:35:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"}},"visibility":"internal"}],"src":"42650:124:2"},"returnParameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"responseCode","nameLocation":"42799:12:2","nodeType":"VariableDeclaration","scope":5123,"src":"42793:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5088,"name":"int64","nodeType":"ElementaryTypeName","src":"42793:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"42792:20:2"},"scope":5343,"src":"42612:501:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5170,"nodeType":"Block","src":"43618:300:2","statements":[{"assignments":[5140,5142],"declarations":[{"constant":false,"id":5140,"mutability":"mutable","name":"success","nameLocation":"43634:7:2","nodeType":"VariableDeclaration","scope":5170,"src":"43629:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5139,"name":"bool","nodeType":"ElementaryTypeName","src":"43629:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5142,"mutability":"mutable","name":"result","nameLocation":"43656:6:2","nodeType":"VariableDeclaration","scope":5170,"src":"43643:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5141,"name":"bytes","nodeType":"ElementaryTypeName","src":"43643:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5155,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":5147,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"43725:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43745:32:2","memberName":"updateNonFungibleTokenCustomFees","nodeType":"MemberAccess","referencedDeclaration":6177,"src":"43725:52:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.updateNonFungibleTokenCustomFees(address,struct IHederaTokenService.FixedFee memory[] memory,struct IHederaTokenService.RoyaltyFee memory[] memory) returns (int64)"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43778:8:2","memberName":"selector","nodeType":"MemberAccess","src":"43725:61:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5150,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"43788:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5151,"name":"fixedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"43795:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"}},{"id":5152,"name":"royaltyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"43806:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee memory[] memory"}],"expression":{"id":5145,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"43702:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43706:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"43702:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43702:116:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5143,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"43666:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43684:4:2","memberName":"call","nodeType":"MemberAccess","src":"43666:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43666:153:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"43628:191:2"},{"expression":{"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5156,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"43829:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5157,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"43844:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5165,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"43884:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43904:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"43884:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"43844:67:2","trueExpression":{"arguments":[{"id":5160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"43865:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43874:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5161,"name":"int32","nodeType":"ElementaryTypeName","src":"43874:5:2","typeDescriptions":{}}}],"id":5163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"43873:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":5158,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"43854:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43858:6:2","memberName":"decode","nodeType":"MemberAccess","src":"43854:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43854:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"43829:82:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5169,"nodeType":"ExpressionStatement","src":"43829:82:2"}]},"documentation":{"id":5124,"nodeType":"StructuredDocumentation","src":"43119:297:2","text":"Update the custom fees for a non-fungible token\n @param token The token address\n @param fixedFees Set of fixed fees for `token`\n @param royaltyFees Set of royalty fees for `token`\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":5171,"implemented":true,"kind":"function","modifiers":[],"name":"updateNonFungibleTokenCustomFees","nameLocation":"43430:32:2","nodeType":"FunctionDefinition","parameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"token","nameLocation":"43471:5:2","nodeType":"VariableDeclaration","scope":5171,"src":"43463:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5125,"name":"address","nodeType":"ElementaryTypeName","src":"43463:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5130,"mutability":"mutable","name":"fixedFees","nameLocation":"43516:9:2","nodeType":"VariableDeclaration","scope":5171,"src":"43478:47:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":5128,"nodeType":"UserDefinedTypeName","pathNode":{"id":5127,"name":"IHederaTokenService.FixedFee","nameLocations":["43478:19:2","43498:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"43478:28:2"},"referencedDeclaration":5504,"src":"43478:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":5129,"nodeType":"ArrayTypeName","src":"43478:30:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":5134,"mutability":"mutable","name":"royaltyFees","nameLocation":"43567:11:2","nodeType":"VariableDeclaration","scope":5171,"src":"43527:51:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"},"typeName":{"baseType":{"id":5132,"nodeType":"UserDefinedTypeName","pathNode":{"id":5131,"name":"IHederaTokenService.RoyaltyFee","nameLocations":["43527:19:2","43547:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":5532,"src":"43527:30:2"},"referencedDeclaration":5532,"src":"43527:30:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyFee_$5532_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee"}},"id":5133,"nodeType":"ArrayTypeName","src":"43527:32:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"}},"visibility":"internal"}],"src":"43462:117:2"},"returnParameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"responseCode","nameLocation":"43604:12:2","nodeType":"VariableDeclaration","scope":5171,"src":"43598:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5136,"name":"int64","nodeType":"ElementaryTypeName","src":"43598:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"43597:20:2"},"scope":5343,"src":"43421:497:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5211,"nodeType":"Block","src":"44317:269:2","statements":[{"assignments":[5182,5184],"declarations":[{"constant":false,"id":5182,"mutability":"mutable","name":"success","nameLocation":"44333:7:2","nodeType":"VariableDeclaration","scope":5211,"src":"44328:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5181,"name":"bool","nodeType":"ElementaryTypeName","src":"44328:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5184,"mutability":"mutable","name":"result","nameLocation":"44355:6:2","nodeType":"VariableDeclaration","scope":5211,"src":"44342:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5183,"name":"bytes","nodeType":"ElementaryTypeName","src":"44342:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5195,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":5189,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"44424:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44444:13:2","memberName":"airdropTokens","nodeType":"MemberAccess","referencedDeclaration":6187,"src":"44424:33:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.airdropTokens(struct IHederaTokenService.TokenTransferList memory[] memory) returns (int64)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44458:8:2","memberName":"selector","nodeType":"MemberAccess","src":"44424:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5192,"name":"tokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"44468:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenTransferList memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenTransferList memory[] memory"}],"expression":{"id":5187,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"44401:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44405:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"44401:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44401:82:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5185,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"44365:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44383:4:2","memberName":"call","nodeType":"MemberAccess","src":"44365:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44365:119:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"44327:157:2"},{"expression":{"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5196,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"44496:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":5197,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"44495:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5198,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"44512:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5206,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"44552:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44572:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"44552:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"44512:67:2","trueExpression":{"arguments":[{"id":5201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"44533:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44542:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5202,"name":"int32","nodeType":"ElementaryTypeName","src":"44542:5:2","typeDescriptions":{}}}],"id":5204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"44541:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":5199,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"44522:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44526:6:2","memberName":"decode","nodeType":"MemberAccess","src":"44522:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44522:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"44495:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5210,"nodeType":"ExpressionStatement","src":"44495:84:2"}]},"documentation":{"id":5172,"nodeType":"StructuredDocumentation","src":"43924:264:2","text":"@notice Airdrop one or more tokens to one or more accounts\n @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":5212,"implemented":true,"kind":"function","modifiers":[],"name":"airdropTokens","nameLocation":"44202:13:2","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"tokenTransfers","nameLocation":"44263:14:2","nodeType":"VariableDeclaration","scope":5212,"src":"44216:61:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenTransferList[]"},"typeName":{"baseType":{"id":5174,"nodeType":"UserDefinedTypeName","pathNode":{"id":5173,"name":"IHederaTokenService.TokenTransferList","nameLocations":["44216:19:2","44236:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":5375,"src":"44216:37:2"},"referencedDeclaration":5375,"src":"44216:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTransferList_$5375_storage_ptr","typeString":"struct IHederaTokenService.TokenTransferList"}},"id":5175,"nodeType":"ArrayTypeName","src":"44216:39:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.TokenTransferList[]"}},"visibility":"internal"}],"src":"44215:63:2"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"responseCode","nameLocation":"44303:12:2","nodeType":"VariableDeclaration","scope":5212,"src":"44297:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5178,"name":"int64","nodeType":"ElementaryTypeName","src":"44297:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"44296:20:2"},"scope":5343,"src":"44193:393:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5252,"nodeType":"Block","src":"44947:279:2","statements":[{"assignments":[5223,5225],"declarations":[{"constant":false,"id":5223,"mutability":"mutable","name":"success","nameLocation":"44963:7:2","nodeType":"VariableDeclaration","scope":5252,"src":"44958:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5222,"name":"bool","nodeType":"ElementaryTypeName","src":"44958:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5225,"mutability":"mutable","name":"result","nameLocation":"44985:6:2","nodeType":"VariableDeclaration","scope":5252,"src":"44972:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5224,"name":"bytes","nodeType":"ElementaryTypeName","src":"44972:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5236,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":5230,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"45054:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45074:14:2","memberName":"cancelAirdrops","nodeType":"MemberAccess","referencedDeclaration":6197,"src":"45054:34:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.cancelAirdrops(struct IHederaTokenService.PendingAirdrop memory[] memory) returns (int64)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45089:8:2","memberName":"selector","nodeType":"MemberAccess","src":"45054:43:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5233,"name":"pendingAirdrops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"45099:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.PendingAirdrop memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.PendingAirdrop memory[] memory"}],"expression":{"id":5228,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"45031:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45035:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"45031:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45031:84:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5226,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"44995:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45013:4:2","memberName":"call","nodeType":"MemberAccess","src":"44995:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44995:130:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"44957:168:2"},{"expression":{"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5237,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"45136:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":5238,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"45135:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5239,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"45152:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5247,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"45192:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45212:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"45192:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"45152:67:2","trueExpression":{"arguments":[{"id":5242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"45173:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45182:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5243,"name":"int32","nodeType":"ElementaryTypeName","src":"45182:5:2","typeDescriptions":{}}}],"id":5245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"45181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":5240,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"45162:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45166:6:2","memberName":"decode","nodeType":"MemberAccess","src":"45162:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45162:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"45135:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5251,"nodeType":"ExpressionStatement","src":"45135:84:2"}]},"documentation":{"id":5213,"nodeType":"StructuredDocumentation","src":"44592:227:2","text":"@notice Cancels pending airdrops that have not yet been claimed\n @param pendingAirdrops Array of pending airdrops to cancel\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":5253,"implemented":true,"kind":"function","modifiers":[],"name":"cancelAirdrops","nameLocation":"44833:14:2","nodeType":"FunctionDefinition","parameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"pendingAirdrops","nameLocation":"44892:15:2","nodeType":"VariableDeclaration","scope":5253,"src":"44848:59:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.PendingAirdrop[]"},"typeName":{"baseType":{"id":5215,"nodeType":"UserDefinedTypeName","pathNode":{"id":5214,"name":"IHederaTokenService.PendingAirdrop","nameLocations":["44848:19:2","44868:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":5542,"src":"44848:34:2"},"referencedDeclaration":5542,"src":"44848:34:2","typeDescriptions":{"typeIdentifier":"t_struct$_PendingAirdrop_$5542_storage_ptr","typeString":"struct IHederaTokenService.PendingAirdrop"}},"id":5216,"nodeType":"ArrayTypeName","src":"44848:36:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.PendingAirdrop[]"}},"visibility":"internal"}],"src":"44847:61:2"},"returnParameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"responseCode","nameLocation":"44933:12:2","nodeType":"VariableDeclaration","scope":5253,"src":"44927:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5219,"name":"int64","nodeType":"ElementaryTypeName","src":"44927:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"44926:20:2"},"scope":5343,"src":"44824:402:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5293,"nodeType":"Block","src":"45591:278:2","statements":[{"assignments":[5264,5266],"declarations":[{"constant":false,"id":5264,"mutability":"mutable","name":"success","nameLocation":"45607:7:2","nodeType":"VariableDeclaration","scope":5293,"src":"45602:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5263,"name":"bool","nodeType":"ElementaryTypeName","src":"45602:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5266,"mutability":"mutable","name":"result","nameLocation":"45629:6:2","nodeType":"VariableDeclaration","scope":5293,"src":"45616:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5265,"name":"bytes","nodeType":"ElementaryTypeName","src":"45616:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5277,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":5271,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"45698:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45718:13:2","memberName":"claimAirdrops","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"45698:33:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.claimAirdrops(struct IHederaTokenService.PendingAirdrop memory[] memory) returns (int64)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45732:8:2","memberName":"selector","nodeType":"MemberAccess","src":"45698:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5274,"name":"pendingAirdrops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"45742:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.PendingAirdrop memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.PendingAirdrop memory[] memory"}],"expression":{"id":5269,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"45675:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45679:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"45675:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45675:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5267,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"45639:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45657:4:2","memberName":"call","nodeType":"MemberAccess","src":"45639:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45639:129:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"45601:167:2"},{"expression":{"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5278,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"45779:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":5279,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"45778:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5280,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"45795:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5288,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"45835:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45855:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"45835:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"45795:67:2","trueExpression":{"arguments":[{"id":5283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"45816:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45825:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5284,"name":"int32","nodeType":"ElementaryTypeName","src":"45825:5:2","typeDescriptions":{}}}],"id":5286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"45824:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":5281,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"45805:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45809:6:2","memberName":"decode","nodeType":"MemberAccess","src":"45805:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45805:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"45778:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5292,"nodeType":"ExpressionStatement","src":"45778:84:2"}]},"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"45232:232:2","text":"@notice Claims pending airdrops that were sent to the calling account\n @param pendingAirdrops Array of pending airdrops to claim\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":5294,"implemented":true,"kind":"function","modifiers":[],"name":"claimAirdrops","nameLocation":"45478:13:2","nodeType":"FunctionDefinition","parameters":{"id":5259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5258,"mutability":"mutable","name":"pendingAirdrops","nameLocation":"45536:15:2","nodeType":"VariableDeclaration","scope":5294,"src":"45492:59:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.PendingAirdrop[]"},"typeName":{"baseType":{"id":5256,"nodeType":"UserDefinedTypeName","pathNode":{"id":5255,"name":"IHederaTokenService.PendingAirdrop","nameLocations":["45492:19:2","45512:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":5542,"src":"45492:34:2"},"referencedDeclaration":5542,"src":"45492:34:2","typeDescriptions":{"typeIdentifier":"t_struct$_PendingAirdrop_$5542_storage_ptr","typeString":"struct IHederaTokenService.PendingAirdrop"}},"id":5257,"nodeType":"ArrayTypeName","src":"45492:36:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.PendingAirdrop[]"}},"visibility":"internal"}],"src":"45491:61:2"},"returnParameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"responseCode","nameLocation":"45577:12:2","nodeType":"VariableDeclaration","scope":5294,"src":"45571:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5260,"name":"int64","nodeType":"ElementaryTypeName","src":"45571:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"45570:20:2"},"scope":5343,"src":"45469:400:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5341,"nodeType":"Block","src":"46434:299:2","statements":[{"assignments":[5310,5312],"declarations":[{"constant":false,"id":5310,"mutability":"mutable","name":"success","nameLocation":"46450:7:2","nodeType":"VariableDeclaration","scope":5341,"src":"46445:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5309,"name":"bool","nodeType":"ElementaryTypeName","src":"46445:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5312,"mutability":"mutable","name":"result","nameLocation":"46472:6:2","nodeType":"VariableDeclaration","scope":5341,"src":"46459:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5311,"name":"bytes","nodeType":"ElementaryTypeName","src":"46459:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5325,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":5317,"name":"IHederaTokenService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"46541:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHederaTokenService_$6223_$","typeString":"type(contract IHederaTokenService)"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46561:12:2","memberName":"rejectTokens","nodeType":"MemberAccess","referencedDeclaration":6222,"src":"46541:32:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_struct$_NftID_$5548_memory_ptr_$dyn_memory_ptr_$returns$_t_int64_$","typeString":"function IHederaTokenService.rejectTokens(address,address[] memory,struct IHederaTokenService.NftID memory[] memory) returns (int64)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46574:8:2","memberName":"selector","nodeType":"MemberAccess","src":"46541:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5320,"name":"rejectingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"46584:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5321,"name":"ftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"46602:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5322,"name":"nftIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"46615:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NftID_$5548_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.NftID memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_struct$_NftID_$5548_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.NftID memory[] memory"}],"expression":{"id":5315,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"46518:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46522:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"46518:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46518:104:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5313,"name":"precompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"46482:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"46500:4:2","memberName":"call","nodeType":"MemberAccess","src":"46482:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46482:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"46444:188:2"},{"expression":{"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5326,"name":"responseCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"46643:12:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":5327,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"46642:14:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5328,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"46659:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5336,"name":"HederaResponseCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"46699:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HederaResponseCodes_$2666_$","typeString":"type(library HederaResponseCodes)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46719:7:2","memberName":"UNKNOWN","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"46699:27:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"46659:67:2","trueExpression":{"arguments":[{"id":5331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"46680:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46689:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5332,"name":"int32","nodeType":"ElementaryTypeName","src":"46689:5:2","typeDescriptions":{}}}],"id":5334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"46688:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"expression":{"id":5329,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"46669:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46673:6:2","memberName":"decode","nodeType":"MemberAccess","src":"46669:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46669:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"46642:84:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5340,"nodeType":"ExpressionStatement","src":"46642:84:2"}]},"documentation":{"id":5295,"nodeType":"StructuredDocumentation","src":"45875:395:2","text":"@notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\n @param rejectingAddress The address rejecting the tokens\n @param ftAddresses Array of fungible token addresses to reject\n @param nftIds Array of NFT IDs to reject\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"id":5342,"implemented":true,"kind":"function","modifiers":[],"name":"rejectTokens","nameLocation":"46284:12:2","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"rejectingAddress","nameLocation":"46305:16:2","nodeType":"VariableDeclaration","scope":5342,"src":"46297:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5296,"name":"address","nodeType":"ElementaryTypeName","src":"46297:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5300,"mutability":"mutable","name":"ftAddresses","nameLocation":"46340:11:2","nodeType":"VariableDeclaration","scope":5342,"src":"46323:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5298,"name":"address","nodeType":"ElementaryTypeName","src":"46323:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5299,"nodeType":"ArrayTypeName","src":"46323:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"nftIds","nameLocation":"46388:6:2","nodeType":"VariableDeclaration","scope":5342,"src":"46353:41:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NftID_$5548_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.NftID[]"},"typeName":{"baseType":{"id":5302,"nodeType":"UserDefinedTypeName","pathNode":{"id":5301,"name":"IHederaTokenService.NftID","nameLocations":["46353:19:2","46373:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":5548,"src":"46353:25:2"},"referencedDeclaration":5548,"src":"46353:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_NftID_$5548_storage_ptr","typeString":"struct IHederaTokenService.NftID"}},"id":5303,"nodeType":"ArrayTypeName","src":"46353:27:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NftID_$5548_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.NftID[]"}},"visibility":"internal"}],"src":"46296:99:2"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"responseCode","nameLocation":"46420:12:2","nodeType":"VariableDeclaration","scope":5342,"src":"46414:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5306,"name":"int64","nodeType":"ElementaryTypeName","src":"46414:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"46413:20:2"},"scope":5343,"src":"46275:458:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5344,"src":"179:46556:2","usedErrors":[],"usedEvents":[2715]}],"src":"39:46696:2"},"id":2},"app/contracts/IHederaTokenService.sol":{"ast":{"absolutePath":"app/contracts/IHederaTokenService.sol","exportedSymbols":{"IHederaTokenService":[6223]},"id":6224,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":5345,"literals":["solidity",">=","0.4",".9","<","0.9",".0"],"nodeType":"PragmaDirective","src":"39:31:3"},{"id":5346,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"71:33:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IHederaTokenService","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6223,"linearizedBaseContracts":[6223],"name":"IHederaTokenService","nameLocation":"116:19:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IHederaTokenService.AccountAmount","documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"142:988:3","text":"Transfers cryptocurrency among two or more accounts by making the desired adjustments to their\n balances. Each transfer list can specify up to 10 adjustments. Each negative amount is withdrawn\n from the corresponding account (a sender), and each positive one is added to the corresponding\n account (a receiver). The amounts list must sum to zero. Each amount is a number of tinybars\n (there are 100,000,000 tinybars in one hbar).  If any sender account fails to have sufficient\n hbars, then the entire transaction fails, and none of those transfers occur, though the\n transaction fee is still charged. This transaction must be signed by the keys for all the sending\n accounts, and for any receiving accounts that have receiverSigRequired == true. The signatures\n are in the same order as the accounts, skipping those accounts that don't need a signature.\n @custom:version 0.3.0 previous version did not include isApproval"},"id":5354,"members":[{"constant":false,"id":5349,"mutability":"mutable","name":"accountID","nameLocation":"1269:9:3","nodeType":"VariableDeclaration","scope":5354,"src":"1261:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5348,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5351,"mutability":"mutable","name":"amount","nameLocation":"1430:6:3","nodeType":"VariableDeclaration","scope":5354,"src":"1424:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5350,"name":"int64","nodeType":"ElementaryTypeName","src":"1424:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"isApproval","nameLocation":"1619:10:3","nodeType":"VariableDeclaration","scope":5354,"src":"1614:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5352,"name":"bool","nodeType":"ElementaryTypeName","src":"1614:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AccountAmount","nameLocation":"1142:13:3","nodeType":"StructDefinition","scope":6223,"src":"1135:501:3","visibility":"public"},{"canonicalName":"IHederaTokenService.NftTransfer","documentation":{"id":5355,"nodeType":"StructuredDocumentation","src":"1642:365:3","text":"A sender account, a receiver account, and the serial number of an NFT of a Token with\n NON_FUNGIBLE_UNIQUE type. When minting NFTs the sender will be the default AccountID instance\n (0.0.0 aka 0x0) and when burning NFTs, the receiver will be the default AccountID instance.\n @custom:version 0.3.0 previous version did not include isApproval"},"id":5364,"members":[{"constant":false,"id":5357,"mutability":"mutable","name":"senderAccountID","nameLocation":"2095:15:3","nodeType":"VariableDeclaration","scope":5364,"src":"2087:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5356,"name":"address","nodeType":"ElementaryTypeName","src":"2087:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5359,"mutability":"mutable","name":"receiverAccountID","nameLocation":"2177:17:3","nodeType":"VariableDeclaration","scope":5364,"src":"2169:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5358,"name":"address","nodeType":"ElementaryTypeName","src":"2169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5361,"mutability":"mutable","name":"serialNumber","nameLocation":"2251:12:3","nodeType":"VariableDeclaration","scope":5364,"src":"2245:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5360,"name":"int64","nodeType":"ElementaryTypeName","src":"2245:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5363,"mutability":"mutable","name":"isApproval","nameLocation":"2446:10:3","nodeType":"VariableDeclaration","scope":5364,"src":"2441:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5362,"name":"bool","nodeType":"ElementaryTypeName","src":"2441:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"NftTransfer","nameLocation":"2019:11:3","nodeType":"StructDefinition","scope":6223,"src":"2012:451:3","visibility":"public"},{"canonicalName":"IHederaTokenService.TokenTransferList","id":5375,"members":[{"constant":false,"id":5366,"mutability":"mutable","name":"token","nameLocation":"2565:5:3","nodeType":"VariableDeclaration","scope":5375,"src":"2557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5365,"name":"address","nodeType":"ElementaryTypeName","src":"2557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5370,"mutability":"mutable","name":"transfers","nameLocation":"2739:9:3","nodeType":"VariableDeclaration","scope":5375,"src":"2723:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAmount_$5354_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.AccountAmount[]"},"typeName":{"baseType":{"id":5368,"nodeType":"UserDefinedTypeName","pathNode":{"id":5367,"name":"AccountAmount","nameLocations":["2723:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":5354,"src":"2723:13:3"},"referencedDeclaration":5354,"src":"2723:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAmount_$5354_storage_ptr","typeString":"struct IHederaTokenService.AccountAmount"}},"id":5369,"nodeType":"ArrayTypeName","src":"2723:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAmount_$5354_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.AccountAmount[]"}},"visibility":"internal"},{"constant":false,"id":5374,"mutability":"mutable","name":"nftTransfers","nameLocation":"2964:12:3","nodeType":"VariableDeclaration","scope":5375,"src":"2950:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NftTransfer_$5364_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.NftTransfer[]"},"typeName":{"baseType":{"id":5372,"nodeType":"UserDefinedTypeName","pathNode":{"id":5371,"name":"NftTransfer","nameLocations":["2950:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":5364,"src":"2950:11:3"},"referencedDeclaration":5364,"src":"2950:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_NftTransfer_$5364_storage_ptr","typeString":"struct IHederaTokenService.NftTransfer"}},"id":5373,"nodeType":"ArrayTypeName","src":"2950:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NftTransfer_$5364_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.NftTransfer[]"}},"visibility":"internal"}],"name":"TokenTransferList","nameLocation":"2476:17:3","nodeType":"StructDefinition","scope":6223,"src":"2469:514:3","visibility":"public"},{"canonicalName":"IHederaTokenService.TransferList","id":5380,"members":[{"constant":false,"id":5379,"mutability":"mutable","name":"transfers","nameLocation":"3188:9:3","nodeType":"VariableDeclaration","scope":5380,"src":"3172:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAmount_$5354_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.AccountAmount[]"},"typeName":{"baseType":{"id":5377,"nodeType":"UserDefinedTypeName","pathNode":{"id":5376,"name":"AccountAmount","nameLocations":["3172:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":5354,"src":"3172:13:3"},"referencedDeclaration":5354,"src":"3172:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAmount_$5354_storage_ptr","typeString":"struct IHederaTokenService.AccountAmount"}},"id":5378,"nodeType":"ArrayTypeName","src":"3172:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAmount_$5354_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.AccountAmount[]"}},"visibility":"internal"}],"name":"TransferList","nameLocation":"2996:12:3","nodeType":"StructDefinition","scope":6223,"src":"2989:215:3","visibility":"public"},{"canonicalName":"IHederaTokenService.Expiry","documentation":{"id":5381,"nodeType":"StructuredDocumentation","src":"3210:83:3","text":"Expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod"},"id":5388,"members":[{"constant":false,"id":5383,"mutability":"mutable","name":"second","nameLocation":"3521:6:3","nodeType":"VariableDeclaration","scope":5388,"src":"3515:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5382,"name":"int64","nodeType":"ElementaryTypeName","src":"3515:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5385,"mutability":"mutable","name":"autoRenewAccount","nameLocation":"3715:16:3","nodeType":"VariableDeclaration","scope":5388,"src":"3707:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5384,"name":"address","nodeType":"ElementaryTypeName","src":"3707:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5387,"mutability":"mutable","name":"autoRenewPeriod","nameLocation":"3849:15:3","nodeType":"VariableDeclaration","scope":5388,"src":"3843:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5386,"name":"int64","nodeType":"ElementaryTypeName","src":"3843:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"Expiry","nameLocation":"3305:6:3","nodeType":"StructDefinition","scope":6223,"src":"3298:573:3","visibility":"public"},{"canonicalName":"IHederaTokenService.KeyValue","documentation":{"id":5389,"nodeType":"StructuredDocumentation","src":"3877:857:3","text":"A Key can be a public key from either the Ed25519 or ECDSA(secp256k1) signature schemes, where\n in the ECDSA(secp256k1) case we require the 33-byte compressed form of the public key. We call\n these public keys <b>primitive keys</b>.\n A Key can also be the ID of a smart contract instance, which is then authorized to perform any\n precompiled contract action that requires this key to sign.\n Note that when a Key is a smart contract ID, it <i>doesn't</i> mean the contract with that ID\n will actually create a cryptographic signature. It only means that when the contract calls a\n precompiled contract, the resulting \"child transaction\" will be authorized to perform any action\n controlled by the Key.\n Exactly one of the possible values should be populated in order for the Key to be valid."},"id":5400,"members":[{"constant":false,"id":5391,"mutability":"mutable","name":"inheritAccountKey","nameLocation":"4871:17:3","nodeType":"VariableDeclaration","scope":5400,"src":"4866:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5390,"name":"bool","nodeType":"ElementaryTypeName","src":"4866:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5393,"mutability":"mutable","name":"contractId","nameLocation":"4992:10:3","nodeType":"VariableDeclaration","scope":5400,"src":"4984:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5392,"name":"address","nodeType":"ElementaryTypeName","src":"4984:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5395,"mutability":"mutable","name":"ed25519","nameLocation":"5055:7:3","nodeType":"VariableDeclaration","scope":5400,"src":"5049:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5394,"name":"bytes","nodeType":"ElementaryTypeName","src":"5049:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5397,"mutability":"mutable","name":"ECDSA_secp256k1","nameLocation":"5135:15:3","nodeType":"VariableDeclaration","scope":5400,"src":"5129:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5396,"name":"bytes","nodeType":"ElementaryTypeName","src":"5129:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5399,"mutability":"mutable","name":"delegatableContractId","nameLocation":"5705:21:3","nodeType":"VariableDeclaration","scope":5400,"src":"5697:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5398,"name":"address","nodeType":"ElementaryTypeName","src":"5697:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"KeyValue","nameLocation":"4746:8:3","nodeType":"StructDefinition","scope":6223,"src":"4739:994:3","visibility":"public"},{"canonicalName":"IHederaTokenService.TokenKey","documentation":{"id":5401,"nodeType":"StructuredDocumentation","src":"5739:83:3","text":"A list of token key types the key should be applied to and the value of the key"},"id":5407,"members":[{"constant":false,"id":5403,"mutability":"mutable","name":"keyType","nameLocation":"6241:7:3","nodeType":"VariableDeclaration","scope":5407,"src":"6236:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5402,"name":"uint","nodeType":"ElementaryTypeName","src":"6236:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"key","nameLocation":"6322:3:3","nodeType":"VariableDeclaration","scope":5407,"src":"6313:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_storage_ptr","typeString":"struct IHederaTokenService.KeyValue"},"typeName":{"id":5405,"nodeType":"UserDefinedTypeName","pathNode":{"id":5404,"name":"KeyValue","nameLocations":["6313:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5400,"src":"6313:8:3"},"referencedDeclaration":5400,"src":"6313:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_storage_ptr","typeString":"struct IHederaTokenService.KeyValue"}},"visibility":"internal"}],"name":"TokenKey","nameLocation":"5834:8:3","nodeType":"StructDefinition","scope":6223,"src":"5827:505:3","visibility":"public"},{"canonicalName":"IHederaTokenService.HederaToken","documentation":{"id":5408,"nodeType":"StructuredDocumentation","src":"6338:188:3","text":"Basic properties of a Hedera Token - name, symbol, memo, tokenSupplyType, maxSupply,\n treasury, freezeDefault. These properties are related both to Fungible and NFT token types."},"id":5426,"members":[{"constant":false,"id":5410,"mutability":"mutable","name":"name","nameLocation":"6759:4:3","nodeType":"VariableDeclaration","scope":5426,"src":"6752:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5409,"name":"string","nodeType":"ElementaryTypeName","src":"6752:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5412,"mutability":"mutable","name":"symbol","nameLocation":"6970:6:3","nodeType":"VariableDeclaration","scope":5426,"src":"6963:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5411,"name":"string","nodeType":"ElementaryTypeName","src":"6963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5414,"mutability":"mutable","name":"treasury","nameLocation":"7237:8:3","nodeType":"VariableDeclaration","scope":5426,"src":"7229:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5413,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5416,"mutability":"mutable","name":"memo","nameLocation":"7340:4:3","nodeType":"VariableDeclaration","scope":5426,"src":"7333:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5415,"name":"string","nodeType":"ElementaryTypeName","src":"7333:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5418,"mutability":"mutable","name":"tokenSupplyType","nameLocation":"7444:15:3","nodeType":"VariableDeclaration","scope":5426,"src":"7439:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5417,"name":"bool","nodeType":"ElementaryTypeName","src":"7439:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5420,"mutability":"mutable","name":"maxSupply","nameLocation":"7788:9:3","nodeType":"VariableDeclaration","scope":5426,"src":"7782:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5419,"name":"int64","nodeType":"ElementaryTypeName","src":"7782:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5422,"mutability":"mutable","name":"freezeDefault","nameLocation":"7994:13:3","nodeType":"VariableDeclaration","scope":5426,"src":"7989:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5421,"name":"bool","nodeType":"ElementaryTypeName","src":"7989:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5425,"mutability":"mutable","name":"expiry","nameLocation":"8240:6:3","nodeType":"VariableDeclaration","scope":5426,"src":"8233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_storage_ptr","typeString":"struct IHederaTokenService.Expiry"},"typeName":{"id":5424,"nodeType":"UserDefinedTypeName","pathNode":{"id":5423,"name":"Expiry","nameLocations":["8233:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":5388,"src":"8233:6:3"},"referencedDeclaration":5388,"src":"8233:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_storage_ptr","typeString":"struct IHederaTokenService.Expiry"}},"visibility":"internal"}],"name":"HederaToken","nameLocation":"6538:11:3","nodeType":"StructDefinition","scope":6223,"src":"6531:1722:3","visibility":"public"},{"canonicalName":"IHederaTokenService.TokenInfo","documentation":{"id":5427,"nodeType":"StructuredDocumentation","src":"8259:84:3","text":"Additional post creation fungible and non fungible properties of a Hedera Token."},"id":5462,"members":[{"constant":false,"id":5431,"mutability":"mutable","name":"token","nameLocation":"8434:5:3","nodeType":"VariableDeclaration","scope":5462,"src":"8422:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":5430,"nodeType":"UserDefinedTypeName","pathNode":{"id":5429,"name":"HederaToken","nameLocations":["8422:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"8422:11:3"},"referencedDeclaration":5426,"src":"8422:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"},{"constant":false,"id":5434,"mutability":"mutable","name":"totalSupply","nameLocation":"8539:11:3","nodeType":"VariableDeclaration","scope":5462,"src":"8533:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5433,"name":"int64","nodeType":"ElementaryTypeName","src":"8533:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5437,"mutability":"mutable","name":"deleted","nameLocation":"8624:7:3","nodeType":"VariableDeclaration","scope":5462,"src":"8619:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5436,"name":"bool","nodeType":"ElementaryTypeName","src":"8619:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5440,"mutability":"mutable","name":"defaultKycStatus","nameLocation":"8753:16:3","nodeType":"VariableDeclaration","scope":5462,"src":"8748:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5439,"name":"bool","nodeType":"ElementaryTypeName","src":"8748:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5443,"mutability":"mutable","name":"pauseStatus","nameLocation":"8852:11:3","nodeType":"VariableDeclaration","scope":5462,"src":"8847:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5442,"name":"bool","nodeType":"ElementaryTypeName","src":"8847:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5448,"mutability":"mutable","name":"fixedFees","nameLocation":"8950:9:3","nodeType":"VariableDeclaration","scope":5462,"src":"8939:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":5446,"nodeType":"UserDefinedTypeName","pathNode":{"id":5445,"name":"FixedFee","nameLocations":["8939:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"8939:8:3"},"referencedDeclaration":5504,"src":"8939:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":5447,"nodeType":"ArrayTypeName","src":"8939:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":5453,"mutability":"mutable","name":"fractionalFees","nameLocation":"9056:14:3","nodeType":"VariableDeclaration","scope":5462,"src":"9040:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"},"typeName":{"baseType":{"id":5451,"nodeType":"UserDefinedTypeName","pathNode":{"id":5450,"name":"FractionalFee","nameLocations":["9040:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"9040:13:3"},"referencedDeclaration":5518,"src":"9040:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_FractionalFee_$5518_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee"}},"id":5452,"nodeType":"ArrayTypeName","src":"9040:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"}},"visibility":"internal"},{"constant":false,"id":5458,"mutability":"mutable","name":"royaltyFees","nameLocation":"9161:11:3","nodeType":"VariableDeclaration","scope":5462,"src":"9148:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"},"typeName":{"baseType":{"id":5456,"nodeType":"UserDefinedTypeName","pathNode":{"id":5455,"name":"RoyaltyFee","nameLocations":["9148:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":5532,"src":"9148:10:3"},"referencedDeclaration":5532,"src":"9148:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyFee_$5532_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee"}},"id":5457,"nodeType":"ArrayTypeName","src":"9148:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"}},"visibility":"internal"},{"constant":false,"id":5461,"mutability":"mutable","name":"ledgerId","nameLocation":"9231:8:3","nodeType":"VariableDeclaration","scope":5462,"src":"9224:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5460,"name":"string","nodeType":"ElementaryTypeName","src":"9224:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"8355:9:3","nodeType":"StructDefinition","scope":6223,"src":"8348:898:3","visibility":"public"},{"canonicalName":"IHederaTokenService.FungibleTokenInfo","documentation":{"id":5463,"nodeType":"StructuredDocumentation","src":"9252:53:3","text":"Additional fungible properties of a Hedera Token."},"id":5471,"members":[{"constant":false,"id":5467,"mutability":"mutable","name":"tokenInfo","nameLocation":"9396:9:3","nodeType":"VariableDeclaration","scope":5471,"src":"9386:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_storage_ptr","typeString":"struct IHederaTokenService.TokenInfo"},"typeName":{"id":5466,"nodeType":"UserDefinedTypeName","pathNode":{"id":5465,"name":"TokenInfo","nameLocations":["9386:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":5462,"src":"9386:9:3"},"referencedDeclaration":5462,"src":"9386:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_storage_ptr","typeString":"struct IHederaTokenService.TokenInfo"}},"visibility":"internal"},{"constant":false,"id":5470,"mutability":"mutable","name":"decimals","nameLocation":"9487:8:3","nodeType":"VariableDeclaration","scope":5471,"src":"9481:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5469,"name":"int32","nodeType":"ElementaryTypeName","src":"9481:5:3","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"name":"FungibleTokenInfo","nameLocation":"9317:17:3","nodeType":"StructDefinition","scope":6223,"src":"9310:192:3","visibility":"public"},{"canonicalName":"IHederaTokenService.NonFungibleTokenInfo","documentation":{"id":5472,"nodeType":"StructuredDocumentation","src":"9508:57:3","text":"Additional non fungible properties of a Hedera Token."},"id":5492,"members":[{"constant":false,"id":5476,"mutability":"mutable","name":"tokenInfo","nameLocation":"9659:9:3","nodeType":"VariableDeclaration","scope":5492,"src":"9649:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_storage_ptr","typeString":"struct IHederaTokenService.TokenInfo"},"typeName":{"id":5475,"nodeType":"UserDefinedTypeName","pathNode":{"id":5474,"name":"TokenInfo","nameLocations":["9649:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":5462,"src":"9649:9:3"},"referencedDeclaration":5462,"src":"9649:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_storage_ptr","typeString":"struct IHederaTokenService.TokenInfo"}},"visibility":"internal"},{"constant":false,"id":5479,"mutability":"mutable","name":"serialNumber","nameLocation":"9726:12:3","nodeType":"VariableDeclaration","scope":5492,"src":"9720:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5478,"name":"int64","nodeType":"ElementaryTypeName","src":"9720:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5482,"mutability":"mutable","name":"ownerId","nameLocation":"9831:7:3","nodeType":"VariableDeclaration","scope":5492,"src":"9823:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5481,"name":"address","nodeType":"ElementaryTypeName","src":"9823:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5485,"mutability":"mutable","name":"creationTime","nameLocation":"9916:12:3","nodeType":"VariableDeclaration","scope":5492,"src":"9910:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5484,"name":"int64","nodeType":"ElementaryTypeName","src":"9910:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5488,"mutability":"mutable","name":"metadata","nameLocation":"9988:8:3","nodeType":"VariableDeclaration","scope":5492,"src":"9982:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5487,"name":"bytes","nodeType":"ElementaryTypeName","src":"9982:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5491,"mutability":"mutable","name":"spenderId","nameLocation":"10119:9:3","nodeType":"VariableDeclaration","scope":5492,"src":"10111:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5490,"name":"address","nodeType":"ElementaryTypeName","src":"10111:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"NonFungibleTokenInfo","nameLocation":"9577:20:3","nodeType":"StructDefinition","scope":6223,"src":"9570:565:3","visibility":"public"},{"canonicalName":"IHederaTokenService.FixedFee","documentation":{"id":5493,"nodeType":"StructuredDocumentation","src":"10141:316:3","text":"A fixed number of units (hbar or token) to assess as a fee during a transfer of\n units of the token to which this fixed fee is attached. The denomination of\n the fee depends on the values of tokenId, useHbarsForPayment and\n useCurrentTokenForPayment. Exactly one of the values should be set."},"id":5504,"members":[{"constant":false,"id":5495,"mutability":"mutable","name":"amount","nameLocation":"10495:6:3","nodeType":"VariableDeclaration","scope":5504,"src":"10489:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5494,"name":"int64","nodeType":"ElementaryTypeName","src":"10489:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5497,"mutability":"mutable","name":"tokenId","nameLocation":"10600:7:3","nodeType":"VariableDeclaration","scope":5504,"src":"10592:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5496,"name":"address","nodeType":"ElementaryTypeName","src":"10592:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5499,"mutability":"mutable","name":"useHbarsForPayment","nameLocation":"10689:18:3","nodeType":"VariableDeclaration","scope":5504,"src":"10684:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5498,"name":"bool","nodeType":"ElementaryTypeName","src":"10684:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5501,"mutability":"mutable","name":"useCurrentTokenForPayment","nameLocation":"10818:25:3","nodeType":"VariableDeclaration","scope":5504,"src":"10813:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5500,"name":"bool","nodeType":"ElementaryTypeName","src":"10813:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5503,"mutability":"mutable","name":"feeCollector","nameLocation":"10954:12:3","nodeType":"VariableDeclaration","scope":5504,"src":"10946:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5502,"name":"address","nodeType":"ElementaryTypeName","src":"10946:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"FixedFee","nameLocation":"10469:8:3","nodeType":"StructDefinition","scope":6223,"src":"10462:511:3","visibility":"public"},{"canonicalName":"IHederaTokenService.FractionalFee","documentation":{"id":5505,"nodeType":"StructuredDocumentation","src":"10979:292:3","text":"A fraction of the transferred units of a token to assess as a fee. The amount assessed will never\n be less than the given minimumAmount, and never greater than the given maximumAmount.  The\n denomination is always units of the token to which this fractional fee is attached."},"id":5518,"members":[{"constant":false,"id":5507,"mutability":"mutable","name":"numerator","nameLocation":"11425:9:3","nodeType":"VariableDeclaration","scope":5518,"src":"11419:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5506,"name":"int64","nodeType":"ElementaryTypeName","src":"11419:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5509,"mutability":"mutable","name":"denominator","nameLocation":"11565:11:3","nodeType":"VariableDeclaration","scope":5518,"src":"11559:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5508,"name":"int64","nodeType":"ElementaryTypeName","src":"11559:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5511,"mutability":"mutable","name":"minimumAmount","nameLocation":"11633:13:3","nodeType":"VariableDeclaration","scope":5518,"src":"11627:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5510,"name":"int64","nodeType":"ElementaryTypeName","src":"11627:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5513,"mutability":"mutable","name":"maximumAmount","nameLocation":"11729:13:3","nodeType":"VariableDeclaration","scope":5518,"src":"11723:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5512,"name":"int64","nodeType":"ElementaryTypeName","src":"11723:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5515,"mutability":"mutable","name":"netOfTransfers","nameLocation":"11757:14:3","nodeType":"VariableDeclaration","scope":5518,"src":"11752:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5514,"name":"bool","nodeType":"ElementaryTypeName","src":"11752:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5517,"mutability":"mutable","name":"feeCollector","nameLocation":"11882:12:3","nodeType":"VariableDeclaration","scope":5518,"src":"11874:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5516,"name":"address","nodeType":"ElementaryTypeName","src":"11874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"FractionalFee","nameLocation":"11283:13:3","nodeType":"StructDefinition","scope":6223,"src":"11276:625:3","visibility":"public"},{"canonicalName":"IHederaTokenService.RoyaltyFee","documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"11907:490:3","text":"A fee to assess during a transfer that changes ownership of an NFT. Defines the fraction of\n the fungible value exchanged for an NFT that the ledger should collect as a royalty. (\"Fungible\n value\" includes both ℏ and units of fungible HTS tokens.) When the NFT sender does not receive\n any fungible value, the ledger will assess the fallback fee, if present, to the new NFT owner.\n Royalty fees can only be added to tokens of type type NON_FUNGIBLE_UNIQUE."},"id":5532,"members":[{"constant":false,"id":5521,"mutability":"mutable","name":"numerator","nameLocation":"12531:9:3","nodeType":"VariableDeclaration","scope":5532,"src":"12525:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5520,"name":"int64","nodeType":"ElementaryTypeName","src":"12525:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5523,"mutability":"mutable","name":"denominator","nameLocation":"12654:11:3","nodeType":"VariableDeclaration","scope":5532,"src":"12648:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5522,"name":"int64","nodeType":"ElementaryTypeName","src":"12648:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5525,"mutability":"mutable","name":"amount","nameLocation":"13041:6:3","nodeType":"VariableDeclaration","scope":5532,"src":"13035:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5524,"name":"int64","nodeType":"ElementaryTypeName","src":"13035:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5527,"mutability":"mutable","name":"tokenId","nameLocation":"13065:7:3","nodeType":"VariableDeclaration","scope":5532,"src":"13057:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5526,"name":"address","nodeType":"ElementaryTypeName","src":"13057:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5529,"mutability":"mutable","name":"useHbarsForPayment","nameLocation":"13087:18:3","nodeType":"VariableDeclaration","scope":5532,"src":"13082:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5528,"name":"bool","nodeType":"ElementaryTypeName","src":"13082:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5531,"mutability":"mutable","name":"feeCollector","nameLocation":"13216:12:3","nodeType":"VariableDeclaration","scope":5532,"src":"13208:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5530,"name":"address","nodeType":"ElementaryTypeName","src":"13208:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"RoyaltyFee","nameLocation":"12409:10:3","nodeType":"StructDefinition","scope":6223,"src":"12402:833:3","visibility":"public"},{"canonicalName":"IHederaTokenService.PendingAirdrop","documentation":{"id":5533,"nodeType":"StructuredDocumentation","src":"13241:377:3","text":"Represents a pending airdrop of a token or NFT to a receiver\n @param sender The address of the account sending the airdrop\n @param receiver The address of the account receiving the airdrop\n @param token The address of the token being airdropped\n @param serial For NFT airdrops, the serial number of the NFT. For fungible tokens, this should be 0"},"id":5542,"members":[{"constant":false,"id":5535,"mutability":"mutable","name":"sender","nameLocation":"13663:6:3","nodeType":"VariableDeclaration","scope":5542,"src":"13655:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5534,"name":"address","nodeType":"ElementaryTypeName","src":"13655:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5537,"mutability":"mutable","name":"receiver","nameLocation":"13687:8:3","nodeType":"VariableDeclaration","scope":5542,"src":"13679:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5536,"name":"address","nodeType":"ElementaryTypeName","src":"13679:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5539,"mutability":"mutable","name":"token","nameLocation":"13713:5:3","nodeType":"VariableDeclaration","scope":5542,"src":"13705:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5538,"name":"address","nodeType":"ElementaryTypeName","src":"13705:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5541,"mutability":"mutable","name":"serial","nameLocation":"13734:6:3","nodeType":"VariableDeclaration","scope":5542,"src":"13728:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5540,"name":"int64","nodeType":"ElementaryTypeName","src":"13728:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"PendingAirdrop","nameLocation":"13630:14:3","nodeType":"StructDefinition","scope":6223,"src":"13623:124:3","visibility":"public"},{"canonicalName":"IHederaTokenService.NftID","documentation":{"id":5543,"nodeType":"StructuredDocumentation","src":"13753:210:3","text":"Represents a unique NFT by its token address and serial number\n @param nft The address of the NFT token\n @param serial The serial number that uniquely identifies this NFT within its token type"},"id":5548,"members":[{"constant":false,"id":5545,"mutability":"mutable","name":"nft","nameLocation":"13999:3:3","nodeType":"VariableDeclaration","scope":5548,"src":"13991:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5544,"name":"address","nodeType":"ElementaryTypeName","src":"13991:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5547,"mutability":"mutable","name":"serial","nameLocation":"14018:6:3","nodeType":"VariableDeclaration","scope":5548,"src":"14012:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5546,"name":"int64","nodeType":"ElementaryTypeName","src":"14012:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"NftID","nameLocation":"13975:5:3","nodeType":"StructDefinition","scope":6223,"src":"13968:63:3","visibility":"public"},{"documentation":{"id":5549,"nodeType":"StructuredDocumentation","src":"14123:316:3","text":"Performs transfers among combinations of tokens and hbars\n @param transferList the list of hbar transfers to do\n @param tokenTransfers the list of token transfers to do\n @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)"},"functionSelector":"0e71804f","id":5561,"implemented":false,"kind":"function","modifiers":[],"name":"cryptoTransfer","nameLocation":"14453:14:3","nodeType":"FunctionDefinition","parameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"transferList","nameLocation":"14488:12:3","nodeType":"VariableDeclaration","scope":5561,"src":"14468:32:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TransferList_$5380_memory_ptr","typeString":"struct IHederaTokenService.TransferList"},"typeName":{"id":5551,"nodeType":"UserDefinedTypeName","pathNode":{"id":5550,"name":"TransferList","nameLocations":["14468:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":5380,"src":"14468:12:3"},"referencedDeclaration":5380,"src":"14468:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransferList_$5380_storage_ptr","typeString":"struct IHederaTokenService.TransferList"}},"visibility":"internal"},{"constant":false,"id":5556,"mutability":"mutable","name":"tokenTransfers","nameLocation":"14529:14:3","nodeType":"VariableDeclaration","scope":5561,"src":"14502:41:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenTransferList[]"},"typeName":{"baseType":{"id":5554,"nodeType":"UserDefinedTypeName","pathNode":{"id":5553,"name":"TokenTransferList","nameLocations":["14502:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":5375,"src":"14502:17:3"},"referencedDeclaration":5375,"src":"14502:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTransferList_$5375_storage_ptr","typeString":"struct IHederaTokenService.TokenTransferList"}},"id":5555,"nodeType":"ArrayTypeName","src":"14502:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.TokenTransferList[]"}},"visibility":"internal"}],"src":"14467:77:3"},"returnParameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"responseCode","nameLocation":"14585:12:3","nodeType":"VariableDeclaration","scope":5561,"src":"14579:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5558,"name":"int64","nodeType":"ElementaryTypeName","src":"14579:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"14578:20:3"},"scope":6223,"src":"14444:155:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5562,"nodeType":"StructuredDocumentation","src":"14605:984:3","text":"Mints an amount of the token to the defined treasury account\n @param token The token for which to mint tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\n               Amount must be a positive non-zero number represented in the lowest denomination of the\n               token. The new supply must be lower than 2^63.\n @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\n                 Maximum allowed size of each metadata is 100 bytes\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\n @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty."},"functionSelector":"e0f4059a","id":5579,"implemented":false,"kind":"function","modifiers":[],"name":"mintToken","nameLocation":"15603:9:3","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"token","nameLocation":"15630:5:3","nodeType":"VariableDeclaration","scope":5579,"src":"15622:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5563,"name":"address","nodeType":"ElementaryTypeName","src":"15622:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5566,"mutability":"mutable","name":"amount","nameLocation":"15651:6:3","nodeType":"VariableDeclaration","scope":5579,"src":"15645:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5565,"name":"int64","nodeType":"ElementaryTypeName","src":"15645:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5569,"mutability":"mutable","name":"metadata","nameLocation":"15682:8:3","nodeType":"VariableDeclaration","scope":5579,"src":"15667:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":5567,"name":"bytes","nodeType":"ElementaryTypeName","src":"15667:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":5568,"nodeType":"ArrayTypeName","src":"15667:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"15612:84:3"},"returnParameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"responseCode","nameLocation":"15750:12:3","nodeType":"VariableDeclaration","scope":5579,"src":"15744:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5571,"name":"int64","nodeType":"ElementaryTypeName","src":"15744:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5574,"mutability":"mutable","name":"newTotalSupply","nameLocation":"15782:14:3","nodeType":"VariableDeclaration","scope":5579,"src":"15776:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5573,"name":"int64","nodeType":"ElementaryTypeName","src":"15776:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5577,"mutability":"mutable","name":"serialNumbers","nameLocation":"15825:13:3","nodeType":"VariableDeclaration","scope":5579,"src":"15810:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":5575,"name":"int64","nodeType":"ElementaryTypeName","src":"15810:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5576,"nodeType":"ArrayTypeName","src":"15810:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"15730:118:3"},"scope":6223,"src":"15594:255:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5580,"nodeType":"StructuredDocumentation","src":"15855:834:3","text":"Burns an amount of the token from the defined treasury account\n @param token The token for which to burn tokens. If token does not exist, transaction results in\n              INVALID_TOKEN_ID\n @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\n                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\n                account (0; balance], represented in the lowest denomination.\n @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs"},"functionSelector":"d6910d06","id":5594,"implemented":false,"kind":"function","modifiers":[],"name":"burnToken","nameLocation":"16703:9:3","nodeType":"FunctionDefinition","parameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"token","nameLocation":"16730:5:3","nodeType":"VariableDeclaration","scope":5594,"src":"16722:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5581,"name":"address","nodeType":"ElementaryTypeName","src":"16722:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5584,"mutability":"mutable","name":"amount","nameLocation":"16751:6:3","nodeType":"VariableDeclaration","scope":5594,"src":"16745:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5583,"name":"int64","nodeType":"ElementaryTypeName","src":"16745:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5587,"mutability":"mutable","name":"serialNumbers","nameLocation":"16782:13:3","nodeType":"VariableDeclaration","scope":5594,"src":"16767:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":5585,"name":"int64","nodeType":"ElementaryTypeName","src":"16767:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5586,"nodeType":"ArrayTypeName","src":"16767:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"16712:89:3"},"returnParameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"responseCode","nameLocation":"16826:12:3","nodeType":"VariableDeclaration","scope":5594,"src":"16820:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5589,"name":"int64","nodeType":"ElementaryTypeName","src":"16820:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5592,"mutability":"mutable","name":"newTotalSupply","nameLocation":"16846:14:3","nodeType":"VariableDeclaration","scope":5594,"src":"16840:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5591,"name":"int64","nodeType":"ElementaryTypeName","src":"16840:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"16819:42:3"},"scope":6223,"src":"16694:168:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5595,"nodeType":"StructuredDocumentation","src":"16868:1515:3","text":"Associates the provided account with the provided tokens. Must be signed by the provided\n  Account's key or called from the accounts contract key\n  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n  If an association between the provided account and any of the tokens already exists, the\n  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\n  If the provided account's associations count exceed the constraint of maximum token associations\n    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\n  On success, associations between the provided account and tokens are made and the account is\n    ready to interact with the tokens.\n @param account The account to be associated with the provided tokens\n @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\n               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\n               token type\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"2e63879b","id":5605,"implemented":false,"kind":"function","modifiers":[],"name":"associateTokens","nameLocation":"18397:15:3","nodeType":"FunctionDefinition","parameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"account","nameLocation":"18421:7:3","nodeType":"VariableDeclaration","scope":5605,"src":"18413:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5596,"name":"address","nodeType":"ElementaryTypeName","src":"18413:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5600,"mutability":"mutable","name":"tokens","nameLocation":"18447:6:3","nodeType":"VariableDeclaration","scope":5605,"src":"18430:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5598,"name":"address","nodeType":"ElementaryTypeName","src":"18430:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5599,"nodeType":"ArrayTypeName","src":"18430:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18412:42:3"},"returnParameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5603,"mutability":"mutable","name":"responseCode","nameLocation":"18495:12:3","nodeType":"VariableDeclaration","scope":5605,"src":"18489:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5602,"name":"int64","nodeType":"ElementaryTypeName","src":"18489:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"18488:20:3"},"scope":6223,"src":"18388:121:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5606,"nodeType":"StructuredDocumentation","src":"18515:257:3","text":"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\n @param account The account to be associated with the provided token\n @param token The token to be associated with the provided account"},"functionSelector":"49146bde","id":5615,"implemented":false,"kind":"function","modifiers":[],"name":"associateToken","nameLocation":"18786:14:3","nodeType":"FunctionDefinition","parameters":{"id":5611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"account","nameLocation":"18809:7:3","nodeType":"VariableDeclaration","scope":5615,"src":"18801:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5607,"name":"address","nodeType":"ElementaryTypeName","src":"18801:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5610,"mutability":"mutable","name":"token","nameLocation":"18826:5:3","nodeType":"VariableDeclaration","scope":5615,"src":"18818:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5609,"name":"address","nodeType":"ElementaryTypeName","src":"18818:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18800:32:3"},"returnParameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"responseCode","nameLocation":"18873:12:3","nodeType":"VariableDeclaration","scope":5615,"src":"18867:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5612,"name":"int64","nodeType":"ElementaryTypeName","src":"18867:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"18866:20:3"},"scope":6223,"src":"18777:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5616,"nodeType":"StructuredDocumentation","src":"18893:1533:3","text":"Dissociates the provided account with the provided tokens. Must be signed by the provided\n Account's key.\n If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\n If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\n If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\n If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\n If an association between the provided account and any of the tokens does not exist, the\n transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\n If a token has not been deleted and has not expired, and the user has a nonzero balance, the\n transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\n If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\n not zero.\n If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\n balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\n On success, associations between the provided account and tokens are removed.\n @param account The account to be dissociated from the provided tokens\n @param tokens The tokens to be dissociated from the provided account.\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"78b63918","id":5626,"implemented":false,"kind":"function","modifiers":[],"name":"dissociateTokens","nameLocation":"20440:16:3","nodeType":"FunctionDefinition","parameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"account","nameLocation":"20465:7:3","nodeType":"VariableDeclaration","scope":5626,"src":"20457:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5617,"name":"address","nodeType":"ElementaryTypeName","src":"20457:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5621,"mutability":"mutable","name":"tokens","nameLocation":"20491:6:3","nodeType":"VariableDeclaration","scope":5626,"src":"20474:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5619,"name":"address","nodeType":"ElementaryTypeName","src":"20474:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5620,"nodeType":"ArrayTypeName","src":"20474:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"20456:42:3"},"returnParameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"responseCode","nameLocation":"20539:12:3","nodeType":"VariableDeclaration","scope":5626,"src":"20533:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5623,"name":"int64","nodeType":"ElementaryTypeName","src":"20533:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"20532:20:3"},"scope":6223,"src":"20431:122:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5627,"nodeType":"StructuredDocumentation","src":"20559:259:3","text":"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\n @param account The account to be associated with the provided token\n @param token The token to be associated with the provided account"},"functionSelector":"099794e8","id":5636,"implemented":false,"kind":"function","modifiers":[],"name":"dissociateToken","nameLocation":"20832:15:3","nodeType":"FunctionDefinition","parameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"account","nameLocation":"20856:7:3","nodeType":"VariableDeclaration","scope":5636,"src":"20848:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5628,"name":"address","nodeType":"ElementaryTypeName","src":"20848:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5631,"mutability":"mutable","name":"token","nameLocation":"20873:5:3","nodeType":"VariableDeclaration","scope":5636,"src":"20865:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5630,"name":"address","nodeType":"ElementaryTypeName","src":"20865:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20847:32:3"},"returnParameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"responseCode","nameLocation":"20920:12:3","nodeType":"VariableDeclaration","scope":5636,"src":"20914:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5633,"name":"int64","nodeType":"ElementaryTypeName","src":"20914:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"20913:20:3"},"scope":6223,"src":"20823:111:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5637,"nodeType":"StructuredDocumentation","src":"20940:564:3","text":"Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"},"functionSelector":"dbc619eb","id":5651,"implemented":false,"kind":"function","modifiers":[],"name":"createFungibleToken","nameLocation":"21518:19:3","nodeType":"FunctionDefinition","parameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"token","nameLocation":"21566:5:3","nodeType":"VariableDeclaration","scope":5651,"src":"21547:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":5639,"nodeType":"UserDefinedTypeName","pathNode":{"id":5638,"name":"HederaToken","nameLocations":["21547:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"21547:11:3"},"referencedDeclaration":5426,"src":"21547:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"},{"constant":false,"id":5642,"mutability":"mutable","name":"initialTotalSupply","nameLocation":"21587:18:3","nodeType":"VariableDeclaration","scope":5651,"src":"21581:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5641,"name":"int64","nodeType":"ElementaryTypeName","src":"21581:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5644,"mutability":"mutable","name":"decimals","nameLocation":"21621:8:3","nodeType":"VariableDeclaration","scope":5651,"src":"21615:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5643,"name":"int32","nodeType":"ElementaryTypeName","src":"21615:5:3","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"21537:98:3"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5647,"mutability":"mutable","name":"responseCode","nameLocation":"21668:12:3","nodeType":"VariableDeclaration","scope":5651,"src":"21662:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5646,"name":"int64","nodeType":"ElementaryTypeName","src":"21662:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5649,"mutability":"mutable","name":"tokenAddress","nameLocation":"21690:12:3","nodeType":"VariableDeclaration","scope":5651,"src":"21682:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5648,"name":"address","nodeType":"ElementaryTypeName","src":"21682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21661:42:3"},"scope":6223,"src":"21509:195:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"21710:707:3","text":"Creates a Fungible Token with the specified properties\n @param token the basic properties of the token being created\n @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\n initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\n @param decimals the number of decimal places a token is divisible by.\n @param fixedFees list of fixed fees to apply to the token\n @param fractionalFees list of fractional fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"},"functionSelector":"8276a279","id":5674,"implemented":false,"kind":"function","modifiers":[],"name":"createFungibleTokenWithCustomFees","nameLocation":"22431:33:3","nodeType":"FunctionDefinition","parameters":{"id":5668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"token","nameLocation":"22493:5:3","nodeType":"VariableDeclaration","scope":5674,"src":"22474:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":5654,"nodeType":"UserDefinedTypeName","pathNode":{"id":5653,"name":"HederaToken","nameLocations":["22474:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"22474:11:3"},"referencedDeclaration":5426,"src":"22474:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"},{"constant":false,"id":5657,"mutability":"mutable","name":"initialTotalSupply","nameLocation":"22514:18:3","nodeType":"VariableDeclaration","scope":5674,"src":"22508:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5656,"name":"int64","nodeType":"ElementaryTypeName","src":"22508:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5659,"mutability":"mutable","name":"decimals","nameLocation":"22548:8:3","nodeType":"VariableDeclaration","scope":5674,"src":"22542:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5658,"name":"int32","nodeType":"ElementaryTypeName","src":"22542:5:3","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":5663,"mutability":"mutable","name":"fixedFees","nameLocation":"22584:9:3","nodeType":"VariableDeclaration","scope":5674,"src":"22566:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":5661,"nodeType":"UserDefinedTypeName","pathNode":{"id":5660,"name":"FixedFee","nameLocations":["22566:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"22566:8:3"},"referencedDeclaration":5504,"src":"22566:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":5662,"nodeType":"ArrayTypeName","src":"22566:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":5667,"mutability":"mutable","name":"fractionalFees","nameLocation":"22626:14:3","nodeType":"VariableDeclaration","scope":5674,"src":"22603:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"},"typeName":{"baseType":{"id":5665,"nodeType":"UserDefinedTypeName","pathNode":{"id":5664,"name":"FractionalFee","nameLocations":["22603:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"22603:13:3"},"referencedDeclaration":5518,"src":"22603:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_FractionalFee_$5518_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee"}},"id":5666,"nodeType":"ArrayTypeName","src":"22603:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"}},"visibility":"internal"}],"src":"22464:182:3"},"returnParameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"responseCode","nameLocation":"22679:12:3","nodeType":"VariableDeclaration","scope":5674,"src":"22673:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5669,"name":"int64","nodeType":"ElementaryTypeName","src":"22673:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5672,"mutability":"mutable","name":"tokenAddress","nameLocation":"22701:12:3","nodeType":"VariableDeclaration","scope":5674,"src":"22693:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5671,"name":"address","nodeType":"ElementaryTypeName","src":"22693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22672:42:3"},"scope":6223,"src":"22422:293:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":5675,"nodeType":"StructuredDocumentation","src":"22721:289:3","text":"Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"},"functionSelector":"e41e7b7b","id":5685,"implemented":false,"kind":"function","modifiers":[],"name":"createNonFungibleToken","nameLocation":"23024:22:3","nodeType":"FunctionDefinition","parameters":{"id":5679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5678,"mutability":"mutable","name":"token","nameLocation":"23066:5:3","nodeType":"VariableDeclaration","scope":5685,"src":"23047:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":5677,"nodeType":"UserDefinedTypeName","pathNode":{"id":5676,"name":"HederaToken","nameLocations":["23047:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"23047:11:3"},"referencedDeclaration":5426,"src":"23047:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"}],"src":"23046:26:3"},"returnParameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"responseCode","nameLocation":"23129:12:3","nodeType":"VariableDeclaration","scope":5685,"src":"23123:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5680,"name":"int64","nodeType":"ElementaryTypeName","src":"23123:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5683,"mutability":"mutable","name":"tokenAddress","nameLocation":"23151:12:3","nodeType":"VariableDeclaration","scope":5685,"src":"23143:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5682,"name":"address","nodeType":"ElementaryTypeName","src":"23143:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23122:42:3"},"scope":6223,"src":"23015:150:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":5686,"nodeType":"StructuredDocumentation","src":"23171:425:3","text":"Creates an Non Fungible Unique Token with the specified properties\n @param token the basic properties of the token being created\n @param fixedFees list of fixed fees to apply to the token\n @param royaltyFees list of royalty fees to apply to the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenAddress the created token's address"},"functionSelector":"f6f1ca36","id":5704,"implemented":false,"kind":"function","modifiers":[],"name":"createNonFungibleTokenWithCustomFees","nameLocation":"23610:36:3","nodeType":"FunctionDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"token","nameLocation":"23675:5:3","nodeType":"VariableDeclaration","scope":5704,"src":"23656:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":5688,"nodeType":"UserDefinedTypeName","pathNode":{"id":5687,"name":"HederaToken","nameLocations":["23656:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"23656:11:3"},"referencedDeclaration":5426,"src":"23656:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"},{"constant":false,"id":5693,"mutability":"mutable","name":"fixedFees","nameLocation":"23708:9:3","nodeType":"VariableDeclaration","scope":5704,"src":"23690:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":5691,"nodeType":"UserDefinedTypeName","pathNode":{"id":5690,"name":"FixedFee","nameLocations":["23690:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"23690:8:3"},"referencedDeclaration":5504,"src":"23690:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":5692,"nodeType":"ArrayTypeName","src":"23690:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":5697,"mutability":"mutable","name":"royaltyFees","nameLocation":"23747:11:3","nodeType":"VariableDeclaration","scope":5704,"src":"23727:31:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"},"typeName":{"baseType":{"id":5695,"nodeType":"UserDefinedTypeName","pathNode":{"id":5694,"name":"RoyaltyFee","nameLocations":["23727:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":5532,"src":"23727:10:3"},"referencedDeclaration":5532,"src":"23727:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyFee_$5532_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee"}},"id":5696,"nodeType":"ArrayTypeName","src":"23727:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"}},"visibility":"internal"}],"src":"23646:118:3"},"returnParameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"mutability":"mutable","name":"responseCode","nameLocation":"23797:12:3","nodeType":"VariableDeclaration","scope":5704,"src":"23791:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5699,"name":"int64","nodeType":"ElementaryTypeName","src":"23791:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"tokenAddress","nameLocation":"23819:12:3","nodeType":"VariableDeclaration","scope":5704,"src":"23811:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5701,"name":"address","nodeType":"ElementaryTypeName","src":"23811:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23790:42:3"},"scope":6223,"src":"23601:232:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"23925:230:3","text":"Initiates a Fungible Token Transfer\n @param token The ID of the token as a solidity address\n @param accountId account to do a transfer to/from\n @param amount The amount from the accountId at the same index"},"functionSelector":"82bba493","id":5718,"implemented":false,"kind":"function","modifiers":[],"name":"transferTokens","nameLocation":"24169:14:3","nodeType":"FunctionDefinition","parameters":{"id":5714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"token","nameLocation":"24201:5:3","nodeType":"VariableDeclaration","scope":5718,"src":"24193:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5706,"name":"address","nodeType":"ElementaryTypeName","src":"24193:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5710,"mutability":"mutable","name":"accountId","nameLocation":"24233:9:3","nodeType":"VariableDeclaration","scope":5718,"src":"24216:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5708,"name":"address","nodeType":"ElementaryTypeName","src":"24216:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5709,"nodeType":"ArrayTypeName","src":"24216:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5713,"mutability":"mutable","name":"amount","nameLocation":"24267:6:3","nodeType":"VariableDeclaration","scope":5718,"src":"24252:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":5711,"name":"int64","nodeType":"ElementaryTypeName","src":"24252:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5712,"nodeType":"ArrayTypeName","src":"24252:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"24183:96:3"},"returnParameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"responseCode","nameLocation":"24304:12:3","nodeType":"VariableDeclaration","scope":5718,"src":"24298:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5715,"name":"int64","nodeType":"ElementaryTypeName","src":"24298:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"24297:20:3"},"scope":6223,"src":"24160:158:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5719,"nodeType":"StructuredDocumentation","src":"24324:320:3","text":"Initiates a Non-Fungable Token Transfer\n @param token The ID of the token as a solidity address\n @param sender the sender of an nft\n @param receiver the receiver of the nft sent by the same index at sender\n @param serialNumber the serial number of the nft sent by the same index at sender"},"functionSelector":"2c4ba191","id":5735,"implemented":false,"kind":"function","modifiers":[],"name":"transferNFTs","nameLocation":"24658:12:3","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"mutability":"mutable","name":"token","nameLocation":"24688:5:3","nodeType":"VariableDeclaration","scope":5735,"src":"24680:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5720,"name":"address","nodeType":"ElementaryTypeName","src":"24680:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5724,"mutability":"mutable","name":"sender","nameLocation":"24720:6:3","nodeType":"VariableDeclaration","scope":5735,"src":"24703:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5722,"name":"address","nodeType":"ElementaryTypeName","src":"24703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5723,"nodeType":"ArrayTypeName","src":"24703:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5727,"mutability":"mutable","name":"receiver","nameLocation":"24753:8:3","nodeType":"VariableDeclaration","scope":5735,"src":"24736:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5725,"name":"address","nodeType":"ElementaryTypeName","src":"24736:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5726,"nodeType":"ArrayTypeName","src":"24736:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5730,"mutability":"mutable","name":"serialNumber","nameLocation":"24786:12:3","nodeType":"VariableDeclaration","scope":5735,"src":"24771:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":5728,"name":"int64","nodeType":"ElementaryTypeName","src":"24771:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5729,"nodeType":"ArrayTypeName","src":"24771:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"24670:134:3"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"responseCode","nameLocation":"24829:12:3","nodeType":"VariableDeclaration","scope":5735,"src":"24823:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5732,"name":"int64","nodeType":"ElementaryTypeName","src":"24823:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"24822:20:3"},"scope":6223,"src":"24649:194:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"24849:540:3","text":"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param recipient The receiver of the transaction\n @param amount Non-negative value to send. a negative value will result in a failure."},"functionSelector":"eca36917","id":5749,"implemented":false,"kind":"function","modifiers":[],"name":"transferToken","nameLocation":"25403:13:3","nodeType":"FunctionDefinition","parameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"token","nameLocation":"25434:5:3","nodeType":"VariableDeclaration","scope":5749,"src":"25426:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5737,"name":"address","nodeType":"ElementaryTypeName","src":"25426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5740,"mutability":"mutable","name":"sender","nameLocation":"25457:6:3","nodeType":"VariableDeclaration","scope":5749,"src":"25449:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5739,"name":"address","nodeType":"ElementaryTypeName","src":"25449:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5742,"mutability":"mutable","name":"recipient","nameLocation":"25481:9:3","nodeType":"VariableDeclaration","scope":5749,"src":"25473:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5741,"name":"address","nodeType":"ElementaryTypeName","src":"25473:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5744,"mutability":"mutable","name":"amount","nameLocation":"25506:6:3","nodeType":"VariableDeclaration","scope":5749,"src":"25500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5743,"name":"int64","nodeType":"ElementaryTypeName","src":"25500:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"25416:102:3"},"returnParameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"responseCode","nameLocation":"25543:12:3","nodeType":"VariableDeclaration","scope":5749,"src":"25537:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5746,"name":"int64","nodeType":"ElementaryTypeName","src":"25537:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"25536:20:3"},"scope":6223,"src":"25394:163:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5750,"nodeType":"StructuredDocumentation","src":"25563:517:3","text":"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\n where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\n (positive amount) or receiving (negative amount)\n @param token The token to transfer to/from\n @param sender The sender for the transaction\n @param recipient The receiver of the transaction\n @param serialNumber The serial number of the NFT to transfer."},"functionSelector":"5cfc9011","id":5763,"implemented":false,"kind":"function","modifiers":[],"name":"transferNFT","nameLocation":"26094:11:3","nodeType":"FunctionDefinition","parameters":{"id":5759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"token","nameLocation":"26123:5:3","nodeType":"VariableDeclaration","scope":5763,"src":"26115:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5751,"name":"address","nodeType":"ElementaryTypeName","src":"26115:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5754,"mutability":"mutable","name":"sender","nameLocation":"26146:6:3","nodeType":"VariableDeclaration","scope":5763,"src":"26138:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5753,"name":"address","nodeType":"ElementaryTypeName","src":"26138:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5756,"mutability":"mutable","name":"recipient","nameLocation":"26170:9:3","nodeType":"VariableDeclaration","scope":5763,"src":"26162:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5755,"name":"address","nodeType":"ElementaryTypeName","src":"26162:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5758,"mutability":"mutable","name":"serialNumber","nameLocation":"26195:12:3","nodeType":"VariableDeclaration","scope":5763,"src":"26189:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5757,"name":"int64","nodeType":"ElementaryTypeName","src":"26189:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"26105:108:3"},"returnParameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"responseCode","nameLocation":"26238:12:3","nodeType":"VariableDeclaration","scope":5763,"src":"26232:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5760,"name":"int64","nodeType":"ElementaryTypeName","src":"26232:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"26231:20:3"},"scope":6223,"src":"26085:167:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"26258:497:3","text":"Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\n again it overwrites the current allowance with value.\n Only Applicable to Fungible Tokens\n @param token The hedera token address to approve\n @param spender the account address authorized to spend\n @param amount the amount of tokens authorized to spend.\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"e1f21c67","id":5775,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"26769:7:3","nodeType":"FunctionDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"token","nameLocation":"26794:5:3","nodeType":"VariableDeclaration","scope":5775,"src":"26786:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5765,"name":"address","nodeType":"ElementaryTypeName","src":"26786:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5768,"mutability":"mutable","name":"spender","nameLocation":"26817:7:3","nodeType":"VariableDeclaration","scope":5775,"src":"26809:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5767,"name":"address","nodeType":"ElementaryTypeName","src":"26809:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5770,"mutability":"mutable","name":"amount","nameLocation":"26842:6:3","nodeType":"VariableDeclaration","scope":5775,"src":"26834:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint256","nodeType":"ElementaryTypeName","src":"26834:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26776:78:3"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"responseCode","nameLocation":"26879:12:3","nodeType":"VariableDeclaration","scope":5775,"src":"26873:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5772,"name":"int64","nodeType":"ElementaryTypeName","src":"26873:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"26872:20:3"},"scope":6223,"src":"26760:133:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5776,"nodeType":"StructuredDocumentation","src":"27047:475:3","text":"Only applicable to fungible tokens\n @param token The address of the fungible Hedera token to transfer\n @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\n @param to The account address of the receiver of the `amount` tokens\n @param amount The amount of tokens to transfer from `from` to `to`\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"15dacbea","id":5789,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"27536:12:3","nodeType":"FunctionDefinition","parameters":{"id":5785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5778,"mutability":"mutable","name":"token","nameLocation":"27557:5:3","nodeType":"VariableDeclaration","scope":5789,"src":"27549:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5777,"name":"address","nodeType":"ElementaryTypeName","src":"27549:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5780,"mutability":"mutable","name":"from","nameLocation":"27572:4:3","nodeType":"VariableDeclaration","scope":5789,"src":"27564:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5779,"name":"address","nodeType":"ElementaryTypeName","src":"27564:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5782,"mutability":"mutable","name":"to","nameLocation":"27586:2:3","nodeType":"VariableDeclaration","scope":5789,"src":"27578:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5781,"name":"address","nodeType":"ElementaryTypeName","src":"27578:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5784,"mutability":"mutable","name":"amount","nameLocation":"27598:6:3","nodeType":"VariableDeclaration","scope":5789,"src":"27590:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5783,"name":"uint256","nodeType":"ElementaryTypeName","src":"27590:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27548:57:3"},"returnParameters":{"id":5788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5787,"mutability":"mutable","name":"responseCode","nameLocation":"27630:12:3","nodeType":"VariableDeclaration","scope":5789,"src":"27624:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5786,"name":"int64","nodeType":"ElementaryTypeName","src":"27624:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"27623:20:3"},"scope":6223,"src":"27527:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5790,"nodeType":"StructuredDocumentation","src":"27650:483:3","text":"Returns the amount which spender is still allowed to withdraw from owner.\n Only Applicable to Fungible Tokens\n @param token The Hedera token address to check the allowance of\n @param owner the owner of the tokens to be spent\n @param spender the spender of the tokens\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return allowance The amount which spender is still allowed to withdraw from owner."},"functionSelector":"927da105","id":5803,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"28147:9:3","nodeType":"FunctionDefinition","parameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"token","nameLocation":"28174:5:3","nodeType":"VariableDeclaration","scope":5803,"src":"28166:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5791,"name":"address","nodeType":"ElementaryTypeName","src":"28166:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5794,"mutability":"mutable","name":"owner","nameLocation":"28197:5:3","nodeType":"VariableDeclaration","scope":5803,"src":"28189:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5793,"name":"address","nodeType":"ElementaryTypeName","src":"28189:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5796,"mutability":"mutable","name":"spender","nameLocation":"28220:7:3","nodeType":"VariableDeclaration","scope":5803,"src":"28212:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5795,"name":"address","nodeType":"ElementaryTypeName","src":"28212:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28156:77:3"},"returnParameters":{"id":5802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5799,"mutability":"mutable","name":"responseCode","nameLocation":"28258:12:3","nodeType":"VariableDeclaration","scope":5803,"src":"28252:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5798,"name":"int64","nodeType":"ElementaryTypeName","src":"28252:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5801,"mutability":"mutable","name":"allowance","nameLocation":"28280:9:3","nodeType":"VariableDeclaration","scope":5803,"src":"28272:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5800,"name":"uint256","nodeType":"ElementaryTypeName","src":"28272:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28251:39:3"},"scope":6223,"src":"28138:153:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5804,"nodeType":"StructuredDocumentation","src":"28297:454:3","text":"Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\n @param serialNumber The NFT serial number  to approve\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"7336aaf0","id":5815,"implemented":false,"kind":"function","modifiers":[],"name":"approveNFT","nameLocation":"28765:10:3","nodeType":"FunctionDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"token","nameLocation":"28793:5:3","nodeType":"VariableDeclaration","scope":5815,"src":"28785:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5805,"name":"address","nodeType":"ElementaryTypeName","src":"28785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5808,"mutability":"mutable","name":"approved","nameLocation":"28816:8:3","nodeType":"VariableDeclaration","scope":5815,"src":"28808:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5807,"name":"address","nodeType":"ElementaryTypeName","src":"28808:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5810,"mutability":"mutable","name":"serialNumber","nameLocation":"28842:12:3","nodeType":"VariableDeclaration","scope":5815,"src":"28834:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"28834:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28775:85:3"},"returnParameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"responseCode","nameLocation":"28885:12:3","nodeType":"VariableDeclaration","scope":5815,"src":"28879:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5812,"name":"int64","nodeType":"ElementaryTypeName","src":"28879:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"28878:20:3"},"scope":6223,"src":"28756:143:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5816,"nodeType":"StructuredDocumentation","src":"28905:515:3","text":"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\n Only applicable to NFT tokens\n @param token The address of the non-fungible Hedera token to transfer\n @param from The account address of the owner of `serialNumber` of `token`\n @param to The account address of the receiver of `serialNumber`\n @param serialNumber The NFT serial number to transfer\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"9b23d3d9","id":5829,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromNFT","nameLocation":"29434:15:3","nodeType":"FunctionDefinition","parameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"token","nameLocation":"29458:5:3","nodeType":"VariableDeclaration","scope":5829,"src":"29450:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5817,"name":"address","nodeType":"ElementaryTypeName","src":"29450:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5820,"mutability":"mutable","name":"from","nameLocation":"29473:4:3","nodeType":"VariableDeclaration","scope":5829,"src":"29465:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5819,"name":"address","nodeType":"ElementaryTypeName","src":"29465:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5822,"mutability":"mutable","name":"to","nameLocation":"29487:2:3","nodeType":"VariableDeclaration","scope":5829,"src":"29479:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5821,"name":"address","nodeType":"ElementaryTypeName","src":"29479:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5824,"mutability":"mutable","name":"serialNumber","nameLocation":"29499:12:3","nodeType":"VariableDeclaration","scope":5829,"src":"29491:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5823,"name":"uint256","nodeType":"ElementaryTypeName","src":"29491:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29449:63:3"},"returnParameters":{"id":5828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5827,"mutability":"mutable","name":"responseCode","nameLocation":"29537:12:3","nodeType":"VariableDeclaration","scope":5829,"src":"29531:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5826,"name":"int64","nodeType":"ElementaryTypeName","src":"29531:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"29530:20:3"},"scope":6223,"src":"29425:126:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"29557:410:3","text":"Get the approved address for a single NFT\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to check approval\n @param serialNumber The NFT to find the approved address for\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved The approved address for this NFT, or the zero address if there is none"},"functionSelector":"098f2366","id":5841,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"29981:11:3","nodeType":"FunctionDefinition","parameters":{"id":5835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"token","nameLocation":"30001:5:3","nodeType":"VariableDeclaration","scope":5841,"src":"29993:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5831,"name":"address","nodeType":"ElementaryTypeName","src":"29993:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5834,"mutability":"mutable","name":"serialNumber","nameLocation":"30016:12:3","nodeType":"VariableDeclaration","scope":5841,"src":"30008:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5833,"name":"uint256","nodeType":"ElementaryTypeName","src":"30008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29992:37:3"},"returnParameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"responseCode","nameLocation":"30070:12:3","nodeType":"VariableDeclaration","scope":5841,"src":"30064:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5836,"name":"int64","nodeType":"ElementaryTypeName","src":"30064:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5839,"mutability":"mutable","name":"approved","nameLocation":"30092:8:3","nodeType":"VariableDeclaration","scope":5841,"src":"30084:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5838,"name":"address","nodeType":"ElementaryTypeName","src":"30084:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30063:38:3"},"scope":6223,"src":"29972:130:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5842,"nodeType":"StructuredDocumentation","src":"30108:420:3","text":"Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @param token The Hedera NFT token address to approve\n @param operator Address to add to the set of authorized operators\n @param approved True if the operator is approved, false to revoke approval\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"367605ca","id":5853,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"30542:17:3","nodeType":"FunctionDefinition","parameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"token","nameLocation":"30577:5:3","nodeType":"VariableDeclaration","scope":5853,"src":"30569:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5843,"name":"address","nodeType":"ElementaryTypeName","src":"30569:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5846,"mutability":"mutable","name":"operator","nameLocation":"30600:8:3","nodeType":"VariableDeclaration","scope":5853,"src":"30592:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5845,"name":"address","nodeType":"ElementaryTypeName","src":"30592:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5848,"mutability":"mutable","name":"approved","nameLocation":"30623:8:3","nodeType":"VariableDeclaration","scope":5853,"src":"30618:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5847,"name":"bool","nodeType":"ElementaryTypeName","src":"30618:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30559:78:3"},"returnParameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"responseCode","nameLocation":"30662:12:3","nodeType":"VariableDeclaration","scope":5853,"src":"30656:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5850,"name":"int64","nodeType":"ElementaryTypeName","src":"30656:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30655:20:3"},"scope":6223,"src":"30533:143:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5854,"nodeType":"StructuredDocumentation","src":"30682:479:3","text":"Query if an address is an authorized operator for another address\n Only Applicable to NFT Tokens\n @param token The Hedera NFT token address to approve\n @param owner The address that owns the NFTs\n @param operator The address that acts on behalf of the owner\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return approved True if `operator` is an approved operator for `owner`, false otherwise"},"functionSelector":"f49f40db","id":5867,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"31175:16:3","nodeType":"FunctionDefinition","parameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"token","nameLocation":"31209:5:3","nodeType":"VariableDeclaration","scope":5867,"src":"31201:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5855,"name":"address","nodeType":"ElementaryTypeName","src":"31201:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5858,"mutability":"mutable","name":"owner","nameLocation":"31232:5:3","nodeType":"VariableDeclaration","scope":5867,"src":"31224:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5857,"name":"address","nodeType":"ElementaryTypeName","src":"31224:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5860,"mutability":"mutable","name":"operator","nameLocation":"31255:8:3","nodeType":"VariableDeclaration","scope":5867,"src":"31247:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5859,"name":"address","nodeType":"ElementaryTypeName","src":"31247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31191:78:3"},"returnParameters":{"id":5866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"responseCode","nameLocation":"31294:12:3","nodeType":"VariableDeclaration","scope":5867,"src":"31288:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5862,"name":"int64","nodeType":"ElementaryTypeName","src":"31288:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5865,"mutability":"mutable","name":"approved","nameLocation":"31313:8:3","nodeType":"VariableDeclaration","scope":5867,"src":"31308:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5864,"name":"bool","nodeType":"ElementaryTypeName","src":"31308:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31287:35:3"},"scope":6223,"src":"31166:157:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5868,"nodeType":"StructuredDocumentation","src":"31329:309:3","text":"Query if token account is frozen\n @param token The token address to check\n @param account The account address associated with the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return frozen True if `account` is frozen for `token`"},"functionSelector":"46de0fb1","id":5879,"implemented":false,"kind":"function","modifiers":[],"name":"isFrozen","nameLocation":"31652:8:3","nodeType":"FunctionDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5870,"mutability":"mutable","name":"token","nameLocation":"31669:5:3","nodeType":"VariableDeclaration","scope":5879,"src":"31661:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5869,"name":"address","nodeType":"ElementaryTypeName","src":"31661:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5872,"mutability":"mutable","name":"account","nameLocation":"31684:7:3","nodeType":"VariableDeclaration","scope":5879,"src":"31676:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5871,"name":"address","nodeType":"ElementaryTypeName","src":"31676:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31660:32:3"},"returnParameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"responseCode","nameLocation":"31733:12:3","nodeType":"VariableDeclaration","scope":5879,"src":"31727:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5874,"name":"int64","nodeType":"ElementaryTypeName","src":"31727:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5877,"mutability":"mutable","name":"frozen","nameLocation":"31752:6:3","nodeType":"VariableDeclaration","scope":5879,"src":"31747:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5876,"name":"bool","nodeType":"ElementaryTypeName","src":"31747:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31726:33:3"},"scope":6223,"src":"31643:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5880,"nodeType":"StructuredDocumentation","src":"31766:325:3","text":"Query if token account has kyc granted\n @param token The token address to check\n @param account The account address associated with the token\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return kycGranted True if `account` has kyc granted for `token`"},"functionSelector":"f2c31ff4","id":5891,"implemented":false,"kind":"function","modifiers":[],"name":"isKyc","nameLocation":"32105:5:3","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"token","nameLocation":"32119:5:3","nodeType":"VariableDeclaration","scope":5891,"src":"32111:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5881,"name":"address","nodeType":"ElementaryTypeName","src":"32111:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5884,"mutability":"mutable","name":"account","nameLocation":"32134:7:3","nodeType":"VariableDeclaration","scope":5891,"src":"32126:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5883,"name":"address","nodeType":"ElementaryTypeName","src":"32126:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"32110:32:3"},"returnParameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"responseCode","nameLocation":"32183:12:3","nodeType":"VariableDeclaration","scope":5891,"src":"32177:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5886,"name":"int64","nodeType":"ElementaryTypeName","src":"32177:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5889,"mutability":"mutable","name":"kycGranted","nameLocation":"32202:10:3","nodeType":"VariableDeclaration","scope":5891,"src":"32197:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5888,"name":"bool","nodeType":"ElementaryTypeName","src":"32197:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32176:37:3"},"scope":6223,"src":"32096:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"32220:175:3","text":"Operation to delete token\n @param token The token address to be deleted\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"f069f712","id":5899,"implemented":false,"kind":"function","modifiers":[],"name":"deleteToken","nameLocation":"32409:11:3","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"token","nameLocation":"32429:5:3","nodeType":"VariableDeclaration","scope":5899,"src":"32421:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5893,"name":"address","nodeType":"ElementaryTypeName","src":"32421:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"32420:15:3"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"responseCode","nameLocation":"32460:12:3","nodeType":"VariableDeclaration","scope":5899,"src":"32454:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5896,"name":"int64","nodeType":"ElementaryTypeName","src":"32454:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"32453:20:3"},"scope":6223,"src":"32400:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5900,"nodeType":"StructuredDocumentation","src":"32480:350:3","text":"Query token custom fees\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return fixedFees Set of fixed fees for `token`\n @return fractionalFees Set of fractional fees for `token`\n @return royaltyFees Set of royalty fees for `token`"},"functionSelector":"ae7611a0","id":5919,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenCustomFees","nameLocation":"32844:18:3","nodeType":"FunctionDefinition","parameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"token","nameLocation":"32871:5:3","nodeType":"VariableDeclaration","scope":5919,"src":"32863:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5901,"name":"address","nodeType":"ElementaryTypeName","src":"32863:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"32862:15:3"},"returnParameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"responseCode","nameLocation":"32918:12:3","nodeType":"VariableDeclaration","scope":5919,"src":"32912:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5904,"name":"int64","nodeType":"ElementaryTypeName","src":"32912:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5909,"mutability":"mutable","name":"fixedFees","nameLocation":"32950:9:3","nodeType":"VariableDeclaration","scope":5919,"src":"32932:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":5907,"nodeType":"UserDefinedTypeName","pathNode":{"id":5906,"name":"FixedFee","nameLocations":["32932:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"32932:8:3"},"referencedDeclaration":5504,"src":"32932:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":5908,"nodeType":"ArrayTypeName","src":"32932:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":5913,"mutability":"mutable","name":"fractionalFees","nameLocation":"32984:14:3","nodeType":"VariableDeclaration","scope":5919,"src":"32961:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"},"typeName":{"baseType":{"id":5911,"nodeType":"UserDefinedTypeName","pathNode":{"id":5910,"name":"FractionalFee","nameLocations":["32961:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"32961:13:3"},"referencedDeclaration":5518,"src":"32961:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_FractionalFee_$5518_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee"}},"id":5912,"nodeType":"ArrayTypeName","src":"32961:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"}},"visibility":"internal"},{"constant":false,"id":5917,"mutability":"mutable","name":"royaltyFees","nameLocation":"33020:11:3","nodeType":"VariableDeclaration","scope":5919,"src":"33000:31:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"},"typeName":{"baseType":{"id":5915,"nodeType":"UserDefinedTypeName","pathNode":{"id":5914,"name":"RoyaltyFee","nameLocations":["33000:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":5532,"src":"33000:10:3"},"referencedDeclaration":5532,"src":"33000:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyFee_$5532_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee"}},"id":5916,"nodeType":"ArrayTypeName","src":"33000:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"}},"visibility":"internal"}],"src":"32911:121:3"},"scope":6223,"src":"32835:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"33039:263:3","text":"Query token default freeze status\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return defaultFreezeStatus True if `token` default freeze status is frozen."},"functionSelector":"a7daa18d","id":5929,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenDefaultFreezeStatus","nameLocation":"33316:27:3","nodeType":"FunctionDefinition","parameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"token","nameLocation":"33352:5:3","nodeType":"VariableDeclaration","scope":5929,"src":"33344:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5921,"name":"address","nodeType":"ElementaryTypeName","src":"33344:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33343:15:3"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"responseCode","nameLocation":"33399:12:3","nodeType":"VariableDeclaration","scope":5929,"src":"33393:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5924,"name":"int64","nodeType":"ElementaryTypeName","src":"33393:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5927,"mutability":"mutable","name":"defaultFreezeStatus","nameLocation":"33418:19:3","nodeType":"VariableDeclaration","scope":5929,"src":"33413:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5926,"name":"bool","nodeType":"ElementaryTypeName","src":"33413:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33392:46:3"},"scope":6223,"src":"33307:132:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"33445:285:3","text":"Query token default kyc status\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked."},"functionSelector":"335e04c1","id":5939,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenDefaultKycStatus","nameLocation":"33744:24:3","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"token","nameLocation":"33777:5:3","nodeType":"VariableDeclaration","scope":5939,"src":"33769:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5931,"name":"address","nodeType":"ElementaryTypeName","src":"33769:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33768:15:3"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"responseCode","nameLocation":"33824:12:3","nodeType":"VariableDeclaration","scope":5939,"src":"33818:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5934,"name":"int64","nodeType":"ElementaryTypeName","src":"33818:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5937,"mutability":"mutable","name":"defaultKycStatus","nameLocation":"33843:16:3","nodeType":"VariableDeclaration","scope":5939,"src":"33838:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5936,"name":"bool","nodeType":"ElementaryTypeName","src":"33838:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33817:43:3"},"scope":6223,"src":"33735:126:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5940,"nodeType":"StructuredDocumentation","src":"33867:215:3","text":"Query token expiry info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return expiry Expiry info for `token`"},"functionSelector":"d614cdb8","id":5950,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenExpiryInfo","nameLocation":"34096:18:3","nodeType":"FunctionDefinition","parameters":{"id":5943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5942,"mutability":"mutable","name":"token","nameLocation":"34123:5:3","nodeType":"VariableDeclaration","scope":5950,"src":"34115:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5941,"name":"address","nodeType":"ElementaryTypeName","src":"34115:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34114:15:3"},"returnParameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"responseCode","nameLocation":"34170:12:3","nodeType":"VariableDeclaration","scope":5950,"src":"34164:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5944,"name":"int64","nodeType":"ElementaryTypeName","src":"34164:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5948,"mutability":"mutable","name":"expiry","nameLocation":"34198:6:3","nodeType":"VariableDeclaration","scope":5950,"src":"34184:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry"},"typeName":{"id":5947,"nodeType":"UserDefinedTypeName","pathNode":{"id":5946,"name":"Expiry","nameLocations":["34184:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":5388,"src":"34184:6:3"},"referencedDeclaration":5388,"src":"34184:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_storage_ptr","typeString":"struct IHederaTokenService.Expiry"}},"visibility":"internal"}],"src":"34163:42:3"},"scope":6223,"src":"34087:119:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"34212:239:3","text":"Query fungible token info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return fungibleTokenInfo FungibleTokenInfo info for `token`"},"functionSelector":"3f28a19b","id":5961,"implemented":false,"kind":"function","modifiers":[],"name":"getFungibleTokenInfo","nameLocation":"34465:20:3","nodeType":"FunctionDefinition","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"token","nameLocation":"34494:5:3","nodeType":"VariableDeclaration","scope":5961,"src":"34486:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5952,"name":"address","nodeType":"ElementaryTypeName","src":"34486:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34485:15:3"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"responseCode","nameLocation":"34541:12:3","nodeType":"VariableDeclaration","scope":5961,"src":"34535:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5955,"name":"int64","nodeType":"ElementaryTypeName","src":"34535:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5959,"mutability":"mutable","name":"fungibleTokenInfo","nameLocation":"34580:17:3","nodeType":"VariableDeclaration","scope":5961,"src":"34555:42:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTokenInfo_$5471_memory_ptr","typeString":"struct IHederaTokenService.FungibleTokenInfo"},"typeName":{"id":5958,"nodeType":"UserDefinedTypeName","pathNode":{"id":5957,"name":"FungibleTokenInfo","nameLocations":["34555:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":5471,"src":"34555:17:3"},"referencedDeclaration":5471,"src":"34555:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTokenInfo_$5471_storage_ptr","typeString":"struct IHederaTokenService.FungibleTokenInfo"}},"visibility":"internal"}],"src":"34534:64:3"},"scope":6223,"src":"34456:143:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5962,"nodeType":"StructuredDocumentation","src":"34605:214:3","text":"Query token info\n @param token The token address to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenInfo TokenInfo info for `token`"},"functionSelector":"1f69565f","id":5972,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"34833:12:3","nodeType":"FunctionDefinition","parameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"token","nameLocation":"34854:5:3","nodeType":"VariableDeclaration","scope":5972,"src":"34846:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5963,"name":"address","nodeType":"ElementaryTypeName","src":"34846:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34845:15:3"},"returnParameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"responseCode","nameLocation":"34901:12:3","nodeType":"VariableDeclaration","scope":5972,"src":"34895:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5966,"name":"int64","nodeType":"ElementaryTypeName","src":"34895:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5970,"mutability":"mutable","name":"tokenInfo","nameLocation":"34932:9:3","nodeType":"VariableDeclaration","scope":5972,"src":"34915:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_memory_ptr","typeString":"struct IHederaTokenService.TokenInfo"},"typeName":{"id":5969,"nodeType":"UserDefinedTypeName","pathNode":{"id":5968,"name":"TokenInfo","nameLocations":["34915:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":5462,"src":"34915:9:3"},"referencedDeclaration":5462,"src":"34915:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$5462_storage_ptr","typeString":"struct IHederaTokenService.TokenInfo"}},"visibility":"internal"}],"src":"34894:48:3"},"scope":6223,"src":"34824:119:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5973,"nodeType":"StructuredDocumentation","src":"34949:284:3","text":"Query token KeyValue\n @param token The token address to check\n @param keyType The keyType of the desired KeyValue\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return key KeyValue info for key of type `keyType`"},"functionSelector":"3c4dd32e","id":5985,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenKey","nameLocation":"35247:11:3","nodeType":"FunctionDefinition","parameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5975,"mutability":"mutable","name":"token","nameLocation":"35267:5:3","nodeType":"VariableDeclaration","scope":5985,"src":"35259:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5974,"name":"address","nodeType":"ElementaryTypeName","src":"35259:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5977,"mutability":"mutable","name":"keyType","nameLocation":"35279:7:3","nodeType":"VariableDeclaration","scope":5985,"src":"35274:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5976,"name":"uint","nodeType":"ElementaryTypeName","src":"35274:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35258:29:3"},"returnParameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"responseCode","nameLocation":"35328:12:3","nodeType":"VariableDeclaration","scope":5985,"src":"35322:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5979,"name":"int64","nodeType":"ElementaryTypeName","src":"35322:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5983,"mutability":"mutable","name":"key","nameLocation":"35358:3:3","nodeType":"VariableDeclaration","scope":5985,"src":"35342:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_memory_ptr","typeString":"struct IHederaTokenService.KeyValue"},"typeName":{"id":5982,"nodeType":"UserDefinedTypeName","pathNode":{"id":5981,"name":"KeyValue","nameLocations":["35342:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5400,"src":"35342:8:3"},"referencedDeclaration":5400,"src":"35342:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_KeyValue_$5400_storage_ptr","typeString":"struct IHederaTokenService.KeyValue"}},"visibility":"internal"}],"src":"35321:41:3"},"scope":6223,"src":"35238:125:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5986,"nodeType":"StructuredDocumentation","src":"35369:322:3","text":"Query non fungible token info\n @param token The token address to check\n @param serialNumber The NFT serialNumber to check\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`"},"functionSelector":"287e1da8","id":5998,"implemented":false,"kind":"function","modifiers":[],"name":"getNonFungibleTokenInfo","nameLocation":"35705:23:3","nodeType":"FunctionDefinition","parameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"token","nameLocation":"35737:5:3","nodeType":"VariableDeclaration","scope":5998,"src":"35729:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5987,"name":"address","nodeType":"ElementaryTypeName","src":"35729:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5990,"mutability":"mutable","name":"serialNumber","nameLocation":"35750:12:3","nodeType":"VariableDeclaration","scope":5998,"src":"35744:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5989,"name":"int64","nodeType":"ElementaryTypeName","src":"35744:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"35728:35:3"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"responseCode","nameLocation":"35804:12:3","nodeType":"VariableDeclaration","scope":5998,"src":"35798:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5992,"name":"int64","nodeType":"ElementaryTypeName","src":"35798:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":5996,"mutability":"mutable","name":"nonFungibleTokenInfo","nameLocation":"35846:20:3","nodeType":"VariableDeclaration","scope":5998,"src":"35818:48:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NonFungibleTokenInfo_$5492_memory_ptr","typeString":"struct IHederaTokenService.NonFungibleTokenInfo"},"typeName":{"id":5995,"nodeType":"UserDefinedTypeName","pathNode":{"id":5994,"name":"NonFungibleTokenInfo","nameLocations":["35818:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":5492,"src":"35818:20:3"},"referencedDeclaration":5492,"src":"35818:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_NonFungibleTokenInfo_$5492_storage_ptr","typeString":"struct IHederaTokenService.NonFungibleTokenInfo"}},"visibility":"internal"}],"src":"35797:70:3"},"scope":6223,"src":"35696:172:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5999,"nodeType":"StructuredDocumentation","src":"35874:225:3","text":"Operation to freeze token account\n @param token The token address\n @param account The account address to be frozen\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"5b8f8584","id":6008,"implemented":false,"kind":"function","modifiers":[],"name":"freezeToken","nameLocation":"36113:11:3","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"token","nameLocation":"36133:5:3","nodeType":"VariableDeclaration","scope":6008,"src":"36125:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6000,"name":"address","nodeType":"ElementaryTypeName","src":"36125:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6003,"mutability":"mutable","name":"account","nameLocation":"36148:7:3","nodeType":"VariableDeclaration","scope":6008,"src":"36140:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6002,"name":"address","nodeType":"ElementaryTypeName","src":"36140:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36124:32:3"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"responseCode","nameLocation":"36197:12:3","nodeType":"VariableDeclaration","scope":6008,"src":"36191:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6005,"name":"int64","nodeType":"ElementaryTypeName","src":"36191:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"36190:20:3"},"scope":6223,"src":"36104:107:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6009,"nodeType":"StructuredDocumentation","src":"36217:229:3","text":"Operation to unfreeze token account\n @param token The token address\n @param account The account address to be unfrozen\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"52f91387","id":6018,"implemented":false,"kind":"function","modifiers":[],"name":"unfreezeToken","nameLocation":"36460:13:3","nodeType":"FunctionDefinition","parameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"token","nameLocation":"36482:5:3","nodeType":"VariableDeclaration","scope":6018,"src":"36474:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6010,"name":"address","nodeType":"ElementaryTypeName","src":"36474:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6013,"mutability":"mutable","name":"account","nameLocation":"36497:7:3","nodeType":"VariableDeclaration","scope":6018,"src":"36489:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6012,"name":"address","nodeType":"ElementaryTypeName","src":"36489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36473:32:3"},"returnParameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"responseCode","nameLocation":"36546:12:3","nodeType":"VariableDeclaration","scope":6018,"src":"36540:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6015,"name":"int64","nodeType":"ElementaryTypeName","src":"36540:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"36539:20:3"},"scope":6223,"src":"36451:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6019,"nodeType":"StructuredDocumentation","src":"36566:231:3","text":"Operation to grant kyc to token account\n @param token The token address\n @param account The account address to grant kyc\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"8f8d7f99","id":6028,"implemented":false,"kind":"function","modifiers":[],"name":"grantTokenKyc","nameLocation":"36811:13:3","nodeType":"FunctionDefinition","parameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"token","nameLocation":"36833:5:3","nodeType":"VariableDeclaration","scope":6028,"src":"36825:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6020,"name":"address","nodeType":"ElementaryTypeName","src":"36825:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6023,"mutability":"mutable","name":"account","nameLocation":"36848:7:3","nodeType":"VariableDeclaration","scope":6028,"src":"36840:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6022,"name":"address","nodeType":"ElementaryTypeName","src":"36840:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36824:32:3"},"returnParameters":{"id":6027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6026,"mutability":"mutable","name":"responseCode","nameLocation":"36897:12:3","nodeType":"VariableDeclaration","scope":6028,"src":"36891:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6025,"name":"int64","nodeType":"ElementaryTypeName","src":"36891:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"36890:20:3"},"scope":6223,"src":"36802:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6029,"nodeType":"StructuredDocumentation","src":"36917:233:3","text":"Operation to revoke kyc to token account\n @param token The token address\n @param account The account address to revoke kyc\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"af99c633","id":6038,"implemented":false,"kind":"function","modifiers":[],"name":"revokeTokenKyc","nameLocation":"37164:14:3","nodeType":"FunctionDefinition","parameters":{"id":6034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"token","nameLocation":"37187:5:3","nodeType":"VariableDeclaration","scope":6038,"src":"37179:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6030,"name":"address","nodeType":"ElementaryTypeName","src":"37179:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6033,"mutability":"mutable","name":"account","nameLocation":"37202:7:3","nodeType":"VariableDeclaration","scope":6038,"src":"37194:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6032,"name":"address","nodeType":"ElementaryTypeName","src":"37194:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37178:32:3"},"returnParameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6036,"mutability":"mutable","name":"responseCode","nameLocation":"37251:12:3","nodeType":"VariableDeclaration","scope":6038,"src":"37245:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6035,"name":"int64","nodeType":"ElementaryTypeName","src":"37245:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"37244:20:3"},"scope":6223,"src":"37155:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6039,"nodeType":"StructuredDocumentation","src":"37271:173:3","text":"Operation to pause token\n @param token The token address to be paused\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"7c41ad2c","id":6046,"implemented":false,"kind":"function","modifiers":[],"name":"pauseToken","nameLocation":"37458:10:3","nodeType":"FunctionDefinition","parameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6041,"mutability":"mutable","name":"token","nameLocation":"37477:5:3","nodeType":"VariableDeclaration","scope":6046,"src":"37469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6040,"name":"address","nodeType":"ElementaryTypeName","src":"37469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37468:15:3"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"responseCode","nameLocation":"37508:12:3","nodeType":"VariableDeclaration","scope":6046,"src":"37502:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6043,"name":"int64","nodeType":"ElementaryTypeName","src":"37502:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"37501:20:3"},"scope":6223,"src":"37449:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6047,"nodeType":"StructuredDocumentation","src":"37528:177:3","text":"Operation to unpause token\n @param token The token address to be unpaused\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"3b3bff0f","id":6054,"implemented":false,"kind":"function","modifiers":[],"name":"unpauseToken","nameLocation":"37719:12:3","nodeType":"FunctionDefinition","parameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"token","nameLocation":"37740:5:3","nodeType":"VariableDeclaration","scope":6054,"src":"37732:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6048,"name":"address","nodeType":"ElementaryTypeName","src":"37732:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37731:15:3"},"returnParameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"responseCode","nameLocation":"37771:12:3","nodeType":"VariableDeclaration","scope":6054,"src":"37765:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6051,"name":"int64","nodeType":"ElementaryTypeName","src":"37765:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"37764:20:3"},"scope":6223,"src":"37710:75:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6055,"nodeType":"StructuredDocumentation","src":"37791:290:3","text":"Operation to wipe fungible tokens from account\n @param token The token address\n @param account The account address to revoke kyc\n @param amount The number of tokens to wipe\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"efef57f9","id":6066,"implemented":false,"kind":"function","modifiers":[],"name":"wipeTokenAccount","nameLocation":"38095:16:3","nodeType":"FunctionDefinition","parameters":{"id":6062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"token","nameLocation":"38129:5:3","nodeType":"VariableDeclaration","scope":6066,"src":"38121:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6056,"name":"address","nodeType":"ElementaryTypeName","src":"38121:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6059,"mutability":"mutable","name":"account","nameLocation":"38152:7:3","nodeType":"VariableDeclaration","scope":6066,"src":"38144:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6058,"name":"address","nodeType":"ElementaryTypeName","src":"38144:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6061,"mutability":"mutable","name":"amount","nameLocation":"38175:6:3","nodeType":"VariableDeclaration","scope":6066,"src":"38169:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6060,"name":"int64","nodeType":"ElementaryTypeName","src":"38169:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"38111:76:3"},"returnParameters":{"id":6065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6064,"mutability":"mutable","name":"responseCode","nameLocation":"38212:12:3","nodeType":"VariableDeclaration","scope":6066,"src":"38206:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6063,"name":"int64","nodeType":"ElementaryTypeName","src":"38206:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"38205:20:3"},"scope":6223,"src":"38086:140:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6067,"nodeType":"StructuredDocumentation","src":"38232:309:3","text":"Operation to wipe non fungible tokens from account\n @param token The token address\n @param account The account address to revoke kyc\n @param  serialNumbers The serial numbers of token to wipe\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"f7f38e26","id":6079,"implemented":false,"kind":"function","modifiers":[],"name":"wipeTokenAccountNFT","nameLocation":"38555:19:3","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6069,"mutability":"mutable","name":"token","nameLocation":"38592:5:3","nodeType":"VariableDeclaration","scope":6079,"src":"38584:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6068,"name":"address","nodeType":"ElementaryTypeName","src":"38584:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6071,"mutability":"mutable","name":"account","nameLocation":"38615:7:3","nodeType":"VariableDeclaration","scope":6079,"src":"38607:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6070,"name":"address","nodeType":"ElementaryTypeName","src":"38607:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6074,"mutability":"mutable","name":"serialNumbers","nameLocation":"38647:13:3","nodeType":"VariableDeclaration","scope":6079,"src":"38632:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_memory_ptr","typeString":"int64[]"},"typeName":{"baseType":{"id":6072,"name":"int64","nodeType":"ElementaryTypeName","src":"38632:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6073,"nodeType":"ArrayTypeName","src":"38632:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_int64_$dyn_storage_ptr","typeString":"int64[]"}},"visibility":"internal"}],"src":"38574:92:3"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"responseCode","nameLocation":"38691:12:3","nodeType":"VariableDeclaration","scope":6079,"src":"38685:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6076,"name":"int64","nodeType":"ElementaryTypeName","src":"38685:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"38684:20:3"},"scope":6223,"src":"38546:159:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"38711:234:3","text":"Operation to update token info\n @param token The token address\n @param tokenInfo The hedera token info to update token with\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"c76282ac","id":6090,"implemented":false,"kind":"function","modifiers":[],"name":"updateTokenInfo","nameLocation":"38959:15:3","nodeType":"FunctionDefinition","parameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"token","nameLocation":"38983:5:3","nodeType":"VariableDeclaration","scope":6090,"src":"38975:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6081,"name":"address","nodeType":"ElementaryTypeName","src":"38975:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6085,"mutability":"mutable","name":"tokenInfo","nameLocation":"39009:9:3","nodeType":"VariableDeclaration","scope":6090,"src":"38990:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_memory_ptr","typeString":"struct IHederaTokenService.HederaToken"},"typeName":{"id":6084,"nodeType":"UserDefinedTypeName","pathNode":{"id":6083,"name":"HederaToken","nameLocations":["38990:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":5426,"src":"38990:11:3"},"referencedDeclaration":5426,"src":"38990:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_HederaToken_$5426_storage_ptr","typeString":"struct IHederaTokenService.HederaToken"}},"visibility":"internal"}],"src":"38974:45:3"},"returnParameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"responseCode","nameLocation":"39060:12:3","nodeType":"VariableDeclaration","scope":6090,"src":"39054:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6087,"name":"int64","nodeType":"ElementaryTypeName","src":"39054:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"39053:20:3"},"scope":6223,"src":"38950:124:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6091,"nodeType":"StructuredDocumentation","src":"39080:228:3","text":"Operation to update token expiry info\n @param token The token address\n @param expiryInfo The hedera token expiry info\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"d27be6cd","id":6101,"implemented":false,"kind":"function","modifiers":[],"name":"updateTokenExpiryInfo","nameLocation":"39322:21:3","nodeType":"FunctionDefinition","parameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"token","nameLocation":"39352:5:3","nodeType":"VariableDeclaration","scope":6101,"src":"39344:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6092,"name":"address","nodeType":"ElementaryTypeName","src":"39344:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6096,"mutability":"mutable","name":"expiryInfo","nameLocation":"39373:10:3","nodeType":"VariableDeclaration","scope":6101,"src":"39359:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_memory_ptr","typeString":"struct IHederaTokenService.Expiry"},"typeName":{"id":6095,"nodeType":"UserDefinedTypeName","pathNode":{"id":6094,"name":"Expiry","nameLocations":["39359:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":5388,"src":"39359:6:3"},"referencedDeclaration":5388,"src":"39359:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Expiry_$5388_storage_ptr","typeString":"struct IHederaTokenService.Expiry"}},"visibility":"internal"}],"src":"39343:41:3"},"returnParameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"responseCode","nameLocation":"39425:12:3","nodeType":"VariableDeclaration","scope":6101,"src":"39419:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6098,"name":"int64","nodeType":"ElementaryTypeName","src":"39419:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"39418:20:3"},"scope":6223,"src":"39313:126:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6102,"nodeType":"StructuredDocumentation","src":"39445:208:3","text":"Operation to update token expiry info\n @param token The token address\n @param keys The token keys\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"6fc3cbaf","id":6113,"implemented":false,"kind":"function","modifiers":[],"name":"updateTokenKeys","nameLocation":"39667:15:3","nodeType":"FunctionDefinition","parameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6104,"mutability":"mutable","name":"token","nameLocation":"39691:5:3","nodeType":"VariableDeclaration","scope":6113,"src":"39683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6103,"name":"address","nodeType":"ElementaryTypeName","src":"39683:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6108,"mutability":"mutable","name":"keys","nameLocation":"39716:4:3","nodeType":"VariableDeclaration","scope":6113,"src":"39698:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenKey_$5407_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenKey[]"},"typeName":{"baseType":{"id":6106,"nodeType":"UserDefinedTypeName","pathNode":{"id":6105,"name":"TokenKey","nameLocations":["39698:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5407,"src":"39698:8:3"},"referencedDeclaration":5407,"src":"39698:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenKey_$5407_storage_ptr","typeString":"struct IHederaTokenService.TokenKey"}},"id":6107,"nodeType":"ArrayTypeName","src":"39698:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenKey_$5407_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.TokenKey[]"}},"visibility":"internal"}],"src":"39682:39:3"},"returnParameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6111,"mutability":"mutable","name":"responseCode","nameLocation":"39762:12:3","nodeType":"VariableDeclaration","scope":6113,"src":"39756:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6110,"name":"int64","nodeType":"ElementaryTypeName","src":"39756:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"39755:20:3"},"scope":6223,"src":"39658:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6114,"nodeType":"StructuredDocumentation","src":"39782:256:3","text":"Query if valid token found for the given address\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return isToken True if valid token found for the given address"},"functionSelector":"19f37361","id":6123,"implemented":false,"kind":"function","modifiers":[],"name":"isToken","nameLocation":"40052:7:3","nodeType":"FunctionDefinition","parameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"token","nameLocation":"40068:5:3","nodeType":"VariableDeclaration","scope":6123,"src":"40060:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6115,"name":"address","nodeType":"ElementaryTypeName","src":"40060:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40059:15:3"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6119,"mutability":"mutable","name":"responseCode","nameLocation":"40115:12:3","nodeType":"VariableDeclaration","scope":6123,"src":"40109:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6118,"name":"int64","nodeType":"ElementaryTypeName","src":"40109:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6121,"mutability":"mutable","name":"isToken","nameLocation":"40134:7:3","nodeType":"VariableDeclaration","scope":6123,"src":"40129:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6120,"name":"bool","nodeType":"ElementaryTypeName","src":"40129:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"40108:34:3"},"scope":6223,"src":"40043:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6124,"nodeType":"StructuredDocumentation","src":"40149:295:3","text":"Query to return the token type for a given address\n @param token The token address\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"},"functionSelector":"93272baf","id":6133,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenType","nameLocation":"40458:12:3","nodeType":"FunctionDefinition","parameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"token","nameLocation":"40479:5:3","nodeType":"VariableDeclaration","scope":6133,"src":"40471:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6125,"name":"address","nodeType":"ElementaryTypeName","src":"40471:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40470:15:3"},"returnParameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"responseCode","nameLocation":"40526:12:3","nodeType":"VariableDeclaration","scope":6133,"src":"40520:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6128,"name":"int64","nodeType":"ElementaryTypeName","src":"40520:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6131,"mutability":"mutable","name":"tokenType","nameLocation":"40546:9:3","nodeType":"VariableDeclaration","scope":6133,"src":"40540:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6130,"name":"int32","nodeType":"ElementaryTypeName","src":"40540:5:3","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"40519:37:3"},"scope":6223,"src":"40449:108:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6134,"nodeType":"StructuredDocumentation","src":"40563:388:3","text":"Initiates a Redirect For Token\n @param token The token address\n @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\n @return responseCode The response code for the status of the request. SUCCESS is 22.\n @return response The result of the call that had been encoded and sent for execution."},"functionSelector":"618dc65e","id":6145,"implemented":false,"kind":"function","modifiers":[],"name":"redirectForToken","nameLocation":"40965:16:3","nodeType":"FunctionDefinition","parameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"token","nameLocation":"40990:5:3","nodeType":"VariableDeclaration","scope":6145,"src":"40982:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6135,"name":"address","nodeType":"ElementaryTypeName","src":"40982:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6138,"mutability":"mutable","name":"encodedFunctionSelector","nameLocation":"41010:23:3","nodeType":"VariableDeclaration","scope":6145,"src":"40997:36:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6137,"name":"bytes","nodeType":"ElementaryTypeName","src":"40997:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40981:53:3"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"responseCode","nameLocation":"41059:12:3","nodeType":"VariableDeclaration","scope":6145,"src":"41053:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6140,"name":"int64","nodeType":"ElementaryTypeName","src":"41053:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6143,"mutability":"mutable","name":"response","nameLocation":"41086:8:3","nodeType":"VariableDeclaration","scope":6145,"src":"41073:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6142,"name":"bytes","nodeType":"ElementaryTypeName","src":"41073:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41052:43:3"},"scope":6223,"src":"40956:140:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6146,"nodeType":"StructuredDocumentation","src":"41102:299:3","text":"Update the custom fees for a fungible token\n @param token The token address\n @param fixedFees Set of fixed fees for `token`\n @param fractionalFees Set of fractional fees for `token`\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"d5f60c47","id":6161,"implemented":false,"kind":"function","modifiers":[],"name":"updateFungibleTokenCustomFees","nameLocation":"41415:29:3","nodeType":"FunctionDefinition","parameters":{"id":6157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6148,"mutability":"mutable","name":"token","nameLocation":"41453:5:3","nodeType":"VariableDeclaration","scope":6161,"src":"41445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6147,"name":"address","nodeType":"ElementaryTypeName","src":"41445:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6152,"mutability":"mutable","name":"fixedFees","nameLocation":"41499:9:3","nodeType":"VariableDeclaration","scope":6161,"src":"41461:47:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":6150,"nodeType":"UserDefinedTypeName","pathNode":{"id":6149,"name":"IHederaTokenService.FixedFee","nameLocations":["41461:19:3","41481:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"41461:28:3"},"referencedDeclaration":5504,"src":"41461:28:3","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":6151,"nodeType":"ArrayTypeName","src":"41461:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":6156,"mutability":"mutable","name":"fractionalFees","nameLocation":"41553:14:3","nodeType":"VariableDeclaration","scope":6161,"src":"41510:57:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"},"typeName":{"baseType":{"id":6154,"nodeType":"UserDefinedTypeName","pathNode":{"id":6153,"name":"IHederaTokenService.FractionalFee","nameLocations":["41510:19:3","41530:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":5518,"src":"41510:33:3"},"referencedDeclaration":5518,"src":"41510:33:3","typeDescriptions":{"typeIdentifier":"t_struct$_FractionalFee_$5518_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee"}},"id":6155,"nodeType":"ArrayTypeName","src":"41510:35:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FractionalFee_$5518_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FractionalFee[]"}},"visibility":"internal"}],"src":"41444:124:3"},"returnParameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"responseCode","nameLocation":"41593:12:3","nodeType":"VariableDeclaration","scope":6161,"src":"41587:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6158,"name":"int64","nodeType":"ElementaryTypeName","src":"41587:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"41586:20:3"},"scope":6223,"src":"41406:201:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6162,"nodeType":"StructuredDocumentation","src":"41613:297:3","text":"Update the custom fees for a non-fungible token\n @param token The token address\n @param fixedFees Set of fixed fees for `token`\n @param royaltyFees Set of royalty fees for `token`\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"30727a29","id":6177,"implemented":false,"kind":"function","modifiers":[],"name":"updateNonFungibleTokenCustomFees","nameLocation":"41924:32:3","nodeType":"FunctionDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6164,"mutability":"mutable","name":"token","nameLocation":"41965:5:3","nodeType":"VariableDeclaration","scope":6177,"src":"41957:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6163,"name":"address","nodeType":"ElementaryTypeName","src":"41957:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6168,"mutability":"mutable","name":"fixedFees","nameLocation":"42010:9:3","nodeType":"VariableDeclaration","scope":6177,"src":"41972:47:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.FixedFee[]"},"typeName":{"baseType":{"id":6166,"nodeType":"UserDefinedTypeName","pathNode":{"id":6165,"name":"IHederaTokenService.FixedFee","nameLocations":["41972:19:3","41992:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5504,"src":"41972:28:3"},"referencedDeclaration":5504,"src":"41972:28:3","typeDescriptions":{"typeIdentifier":"t_struct$_FixedFee_$5504_storage_ptr","typeString":"struct IHederaTokenService.FixedFee"}},"id":6167,"nodeType":"ArrayTypeName","src":"41972:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FixedFee_$5504_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.FixedFee[]"}},"visibility":"internal"},{"constant":false,"id":6172,"mutability":"mutable","name":"royaltyFees","nameLocation":"42061:11:3","nodeType":"VariableDeclaration","scope":6177,"src":"42021:51:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"},"typeName":{"baseType":{"id":6170,"nodeType":"UserDefinedTypeName","pathNode":{"id":6169,"name":"IHederaTokenService.RoyaltyFee","nameLocations":["42021:19:3","42041:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":5532,"src":"42021:30:3"},"referencedDeclaration":5532,"src":"42021:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyFee_$5532_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee"}},"id":6171,"nodeType":"ArrayTypeName","src":"42021:32:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RoyaltyFee_$5532_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.RoyaltyFee[]"}},"visibility":"internal"}],"src":"41956:117:3"},"returnParameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"responseCode","nameLocation":"42098:12:3","nodeType":"VariableDeclaration","scope":6177,"src":"42092:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6174,"name":"int64","nodeType":"ElementaryTypeName","src":"42092:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"42091:20:3"},"scope":6223,"src":"41915:197:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6178,"nodeType":"StructuredDocumentation","src":"42118:889:3","text":"@notice Airdrop one or more tokens to one or more accounts\n @notice Recipients will receive tokens in one of these ways:\n @notice     - Immediately if already associated with the token\n @notice     - Immediately with auto-association if they have available slots\n @notice     - As a pending airdrop requiring claim if they have \"receiver signature required\" \n @notice     - As a pending airdrop requiring claim if they have no available auto-association slots\n @notice Immediate airdrops are irreversible, pending airdrops can be canceled\n @notice All transfer fees and auto-renewal rent costs are charged to the transaction submitter\n @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"2f348119","id":6187,"implemented":false,"kind":"function","modifiers":[],"name":"airdropTokens","nameLocation":"43021:13:3","nodeType":"FunctionDefinition","parameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"tokenTransfers","nameLocation":"43062:14:3","nodeType":"VariableDeclaration","scope":6187,"src":"43035:41:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.TokenTransferList[]"},"typeName":{"baseType":{"id":6180,"nodeType":"UserDefinedTypeName","pathNode":{"id":6179,"name":"TokenTransferList","nameLocations":["43035:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":5375,"src":"43035:17:3"},"referencedDeclaration":5375,"src":"43035:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTransferList_$5375_storage_ptr","typeString":"struct IHederaTokenService.TokenTransferList"}},"id":6181,"nodeType":"ArrayTypeName","src":"43035:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTransferList_$5375_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.TokenTransferList[]"}},"visibility":"internal"}],"src":"43034:43:3"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"responseCode","nameLocation":"43102:12:3","nodeType":"VariableDeclaration","scope":6187,"src":"43096:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6184,"name":"int64","nodeType":"ElementaryTypeName","src":"43096:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"43095:20:3"},"scope":6223,"src":"43012:104:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6188,"nodeType":"StructuredDocumentation","src":"43122:227:3","text":"@notice Cancels pending airdrops that have not yet been claimed\n @param pendingAirdrops Array of pending airdrops to cancel\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"012ebcaf","id":6197,"implemented":false,"kind":"function","modifiers":[],"name":"cancelAirdrops","nameLocation":"43363:14:3","nodeType":"FunctionDefinition","parameters":{"id":6193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6192,"mutability":"mutable","name":"pendingAirdrops","nameLocation":"43402:15:3","nodeType":"VariableDeclaration","scope":6197,"src":"43378:39:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.PendingAirdrop[]"},"typeName":{"baseType":{"id":6190,"nodeType":"UserDefinedTypeName","pathNode":{"id":6189,"name":"PendingAirdrop","nameLocations":["43378:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":5542,"src":"43378:14:3"},"referencedDeclaration":5542,"src":"43378:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_PendingAirdrop_$5542_storage_ptr","typeString":"struct IHederaTokenService.PendingAirdrop"}},"id":6191,"nodeType":"ArrayTypeName","src":"43378:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.PendingAirdrop[]"}},"visibility":"internal"}],"src":"43377:41:3"},"returnParameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6195,"mutability":"mutable","name":"responseCode","nameLocation":"43443:12:3","nodeType":"VariableDeclaration","scope":6197,"src":"43437:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6194,"name":"int64","nodeType":"ElementaryTypeName","src":"43437:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"43436:20:3"},"scope":6223,"src":"43354:103:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6198,"nodeType":"StructuredDocumentation","src":"43463:232:3","text":"@notice Claims pending airdrops that were sent to the calling account\n @param pendingAirdrops Array of pending airdrops to claim\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"05961641","id":6207,"implemented":false,"kind":"function","modifiers":[],"name":"claimAirdrops","nameLocation":"43709:13:3","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"pendingAirdrops","nameLocation":"43747:15:3","nodeType":"VariableDeclaration","scope":6207,"src":"43723:39:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.PendingAirdrop[]"},"typeName":{"baseType":{"id":6200,"nodeType":"UserDefinedTypeName","pathNode":{"id":6199,"name":"PendingAirdrop","nameLocations":["43723:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":5542,"src":"43723:14:3"},"referencedDeclaration":5542,"src":"43723:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_PendingAirdrop_$5542_storage_ptr","typeString":"struct IHederaTokenService.PendingAirdrop"}},"id":6201,"nodeType":"ArrayTypeName","src":"43723:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PendingAirdrop_$5542_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.PendingAirdrop[]"}},"visibility":"internal"}],"src":"43722:41:3"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"responseCode","nameLocation":"43788:12:3","nodeType":"VariableDeclaration","scope":6207,"src":"43782:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6204,"name":"int64","nodeType":"ElementaryTypeName","src":"43782:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"43781:20:3"},"scope":6223,"src":"43700:102:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6208,"nodeType":"StructuredDocumentation","src":"43808:788:3","text":"@notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\n @notice This transfer does not charge any custom fees or royalties defined for the tokens\n @notice For fungible tokens, the requesting account's balance will become 0 and the treasury balance will increase by that amount\n @notice For non-fungible tokens, the requesting account will no longer hold the rejected serial numbers and they will be transferred to the treasury\n @param rejectingAddress The address rejecting the tokens\n @param ftAddresses Array of fungible token addresses to reject\n @param nftIDs Array of NFT IDs to reject\n @return responseCode The response code for the status of the request. SUCCESS is 22."},"functionSelector":"ebd595e0","id":6222,"implemented":false,"kind":"function","modifiers":[],"name":"rejectTokens","nameLocation":"44610:12:3","nodeType":"FunctionDefinition","parameters":{"id":6218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"rejectingAddress","nameLocation":"44631:16:3","nodeType":"VariableDeclaration","scope":6222,"src":"44623:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6209,"name":"address","nodeType":"ElementaryTypeName","src":"44623:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6213,"mutability":"mutable","name":"ftAddresses","nameLocation":"44666:11:3","nodeType":"VariableDeclaration","scope":6222,"src":"44649:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6211,"name":"address","nodeType":"ElementaryTypeName","src":"44649:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6212,"nodeType":"ArrayTypeName","src":"44649:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6217,"mutability":"mutable","name":"nftIDs","nameLocation":"44694:6:3","nodeType":"VariableDeclaration","scope":6222,"src":"44679:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NftID_$5548_memory_ptr_$dyn_memory_ptr","typeString":"struct IHederaTokenService.NftID[]"},"typeName":{"baseType":{"id":6215,"nodeType":"UserDefinedTypeName","pathNode":{"id":6214,"name":"NftID","nameLocations":["44679:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":5548,"src":"44679:5:3"},"referencedDeclaration":5548,"src":"44679:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_NftID_$5548_storage_ptr","typeString":"struct IHederaTokenService.NftID"}},"id":6216,"nodeType":"ArrayTypeName","src":"44679:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NftID_$5548_storage_$dyn_storage_ptr","typeString":"struct IHederaTokenService.NftID[]"}},"visibility":"internal"}],"src":"44622:79:3"},"returnParameters":{"id":6221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6220,"mutability":"mutable","name":"responseCode","nameLocation":"44726:12:3","nodeType":"VariableDeclaration","scope":6222,"src":"44720:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6219,"name":"int64","nodeType":"ElementaryTypeName","src":"44720:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"44719:20:3"},"scope":6223,"src":"44601:139:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6224,"src":"106:44636:3","usedErrors":[],"usedEvents":[]}],"src":"39:44703:3"},"id":3}},"contracts":{"app/contracts/DepositMinter.sol":{"DepositMinter":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"tokenType","type":"string"},{"internalType":"uint256","name":"required","type":"uint256"},{"internalType":"uint256","name":"current","type":"uint256"}],"name":"InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"string","name":"tokenType","type":"string"},{"internalType":"uint256","name":"required","type":"uint256"},{"internalType":"uint256","name":"provided","type":"uint256"}],"name":"InsufficientDeposit","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[{"internalType":"int256","name":"responseCode","type":"int256"}],"name":"MintFailed","type":"error"},{"inputs":[],"name":"OnlyAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"TokenNotAssociated","type":"error"},{"inputs":[{"internalType":"string","name":"tokenType","type":"string"}],"name":"TokenNotSet","type":"error"},{"inputs":[{"internalType":"string","name":"tokenType","type":"string"}],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"allowance","type":"uint256"}],"name":"AllowanceCheck","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"responseCode","type":"int256"}],"name":"AssociationResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"BalanceCheck","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"","type":"bool"},{"indexed":false,"internalType":"bytes","name":"","type":"bytes"}],"name":"CallResponseEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"operation","type":"string"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"int256","name":"responseCode","type":"int256"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"HTSOperationResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"lynxAmount","type":"uint256"}],"name":"LynxMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"tokenType","type":"string"},{"indexed":false,"internalType":"address","name":"previousToken","type":"address"},{"indexed":false,"internalType":"address","name":"newToken","type":"address"}],"name":"TokenAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sauceAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"clxyAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"hbarAmount","type":"uint256"}],"name":"TokensDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"step","type":"string"},{"indexed":false,"internalType":"bool","name":"passed","type":"bool"},{"indexed":false,"internalType":"string","name":"details","type":"string"}],"name":"ValidationStep","type":"event"},{"inputs":[],"name":"CLXY_DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLXY_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HBAR_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LYNX_DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SAUCE_DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SAUCE_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokenAddresses","type":"address[]"}],"name":"associateTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"lynxAmount","type":"uint256"}],"name":"calculateRequiredDeposits","outputs":[{"internalType":"uint256","name":"sauceRequired","type":"uint256"},{"internalType":"uint256","name":"clxyRequired","type":"uint256"},{"internalType":"uint256","name":"hbarRequired","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"checkAllAssociations","outputs":[{"internalType":"bool","name":"contractSauceAssociated","type":"bool"},{"internalType":"bool","name":"contractClxyAssociated","type":"bool"},{"internalType":"bool","name":"contractLynxAssociated","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clxyToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdrawHbar","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getHbarBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lynxToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"lynxAmount","type":"uint256"},{"internalType":"uint256","name":"sauceAmount","type":"uint256"},{"internalType":"uint256","name":"clxyAmount","type":"uint256"}],"name":"mintWithDeposits","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes","name":"encodedFunctionSelector","type":"bytes"}],"name":"redirectForToken","outputs":[{"internalType":"int256","name":"responseCode","type":"int256"},{"internalType":"bytes","name":"response","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sauceToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_clxyToken","type":"address"}],"name":"setClxyToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_lynxToken","type":"address"}],"name":"setLynxToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sauceToken","type":"address"}],"name":"setSauceToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"testHTSOperations","outputs":[{"internalType":"bool","name":"isAssociated","type":"bool"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"bool","name":"isValidToken","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"testHTSPrecompile","outputs":[{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"address","name":"precompileAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"transferAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"serialNumber","type":"uint256"}],"name":"transferFromNFT","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"Enhanced token minter that accepts SAUCE/CLXY deposits and mints proportional LYNX tokens Using official Hedera inheritance pattern - inherits from HederaTokenService","kind":"dev","methods":{"associateTokens(address[])":{"details":"Associate contract with multiple tokens using inherited HTS functions"},"calculateRequiredDeposits(uint256)":{"details":"Calculate required deposits for a given LYNX amount (accounting for decimals)"},"checkAllAssociations()":{"details":"Check all associations using inherited HTS functions"},"emergencyWithdrawHbar(uint256)":{"details":"Emergency withdrawal (admin only)"},"getHbarBalance()":{"details":"Get contract's HBAR balance"},"mintWithDeposits(uint256,uint256,uint256)":{"details":"Mint LYNX tokens by depositing SAUCE, CLXY, and HBAR"},"redirectForToken(address,bytes)":{"params":{"encodedFunctionSelector":"The function selector from the ERC20 interface + the bytes input for the function called","token":"The token address"},"returns":{"response":"The result of the call that had been encoded and sent for execution.","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"setLynxToken(address)":{"details":"Set token addresses (admin only) - automatically associates with contract"},"testHTSOperations(address,address)":{"details":"Test HTS operations directly using inheritance pattern"},"testHTSPrecompile()":{"details":"Test if HTS precompile is properly initialized"},"transferAdmin(address)":{"details":"Transfer admin rights"},"transferFrom(address,address,address,uint256)":{"params":{"amount":"The amount of tokens to transfer from `from` to `to`","from":"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens","to":"The account address of the receiver of the `amount` tokens","token":"The address of the fungible Hedera token to transfer"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"transferFromNFT(address,address,address,uint256)":{"params":{"from":"The account address of the owner of `serialNumber` of `token`","serialNumber":"The NFT serial number to transfer","to":"The account address of the receiver of `serialNumber`","token":"The address of the non-fungible Hedera token to transfer"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}}},"title":"DepositMinter","version":1},"evm":{"bytecode":{"functionDebugData":{"@_165":{"entryPoint":null,"id":165,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2732 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D6BE540 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB94FAB4E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE860FF74 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE860FF74 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xEF037593 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xEF1643E4 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB94FAB4E EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xD65DB297 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xDE97B29F EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D6BE540 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x8F9F8B01 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x96CD51D7 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x97236479 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x9B23D3D9 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xA1D4DA15 EQ PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EA4A9FD GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x5EA4A9FD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x618DC65E EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x724302A7 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x7BD82C69 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x87BFF26B EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15DACBEA EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x169B78A2 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x2AC2555F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x3ED4D3BC EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x4924190C EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x52EB2A44 EQ PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x171 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x7 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP3 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x233 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x6 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED0 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0xC9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0xDA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x167 SWAP1 PUSH4 0xAED65F5 PUSH1 0xE1 SHL SWAP1 PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x59C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x5AD JUMPI PUSH1 0x15 PUSH2 0x5C1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5DA DUP4 DUP4 DUP4 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x5E4 DUP3 DUP3 PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x5ED DUP4 PUSH2 0x114C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE AND SWAP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 PUSH2 0x64F ADDRESS DUP5 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x68F DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1F8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH32 0x267ECC93910A877E2CA3059A02E04C683DC5687C1C8426FA61D6054E39EE022E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x709 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x167 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x618DC65E PUSH1 0xE0 SHL DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x743 SWAP3 SWAP2 SWAP1 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH32 0x4AF4780E06FE8CB9DF64B0794FA6F01399AF979175BB988E35E0E57E594567BC DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F9 SWAP3 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH2 0x81D JUMPI PUSH1 0x15 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x821 JUMP JUMPDEST PUSH1 0x16 DUP2 JUMPDEST PUSH1 0x3 SWAP2 SWAP1 SWAP2 SIGNEXTEND SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x84F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP4 POP PUSH2 0x867 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP3 POP PUSH2 0x87F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1558 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xF8CCB027DFCD135E000E9D45E6CC2D662578A8825D4C45B5E32E0ADF67E79EC6 SWAP2 ADD PUSH2 0x709 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x973 DUP9 PUSH2 0x159B JUMP JUMPDEST SWAP2 POP PUSH1 0x7 SIGNEXTEND SWAP2 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP3 EQ DUP1 ISZERO PUSH2 0x98A JUMPI POP DUP1 JUMPDEST SWAP3 POP DUP3 ISZERO PUSH2 0x99F JUMPI PUSH1 0x1 SWAP6 POP PUSH1 0x0 SWAP5 POP PUSH1 0x0 SWAP4 POP JUMPDEST POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x9BA PUSH1 0x8 PUSH1 0xA PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x9C6 PUSH1 0x6 PUSH1 0xA PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x9D1 PUSH1 0x5 DUP8 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F3 PUSH1 0x8 PUSH1 0xA PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x9FF PUSH1 0x6 PUSH1 0xA PUSH2 0x2164 JUMP JUMPDEST PUSH2 0xA0A PUSH1 0x2 DUP8 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0xA1E SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2B PUSH1 0xA DUP6 PUSH2 0x2173 JUMP JUMPDEST SWAP3 SWAP5 SWAP2 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE AND SWAP1 ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 PUSH2 0xA90 ADDRESS DUP5 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0xAD0 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST POP POP JUMPDEST PUSH32 0x267ECC93910A877E2CA3059A02E04C683DC5687C1C8426FA61D6054E39EE022E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x709 SWAP3 SWAP2 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x167 SWAP1 PUSH4 0x9B23D3D9 PUSH1 0xE0 SHL SWAP1 PUSH1 0xA4 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 PUSH2 0xBEE ADDRESS DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xBD4 JUMPI PUSH2 0xBD4 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x12AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0xC11 JUMPI PUSH2 0xC11 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0xC54 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0x2234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xC91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE AND SWAP1 ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 PUSH2 0xCF8 ADDRESS DUP5 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0xD38 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD48 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST POP POP JUMPDEST PUSH32 0x267ECC93910A877E2CA3059A02E04C683DC5687C1C8426FA61D6054E39EE022E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x709 SWAP3 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420484241522062616C616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH4 0x64D2AC41 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64D2AC41 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x64D2AC41 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8F9F8B01 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x8F9F8B01 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x2342 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP6 LT ISZERO PUSH2 0xF90 JUMPI DUP3 DUP6 PUSH1 0x40 MLOAD PUSH4 0xD5871B23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP3 SWAP2 SWAP1 PUSH2 0x2370 JUMP JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xFB5 JUMPI DUP2 DUP5 PUSH1 0x40 MLOAD PUSH4 0xD5871B23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP3 SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH4 0xD5871B23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x242120A9 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6CC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x101F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1049 DUP2 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1059 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12DFDDB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x109D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x10C7 DUP2 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x1100 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12DFDDB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLVALUE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 PUSH32 0x651B66D4C82E3FEDC9C57C6FF8A4CF8C81B8D1CD432D7297773C6EDBF6CFB36A SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE DUP2 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1162 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1194 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x1B7B JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS DUP4 PUSH2 0x11C0 DUP2 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x242A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x78501781 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1215 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER DUP8 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x123F DUP2 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x1278 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12DFDDB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x465927A4840D7C7D6AA087BB368FE25BED2F96A7DE450603903E0331DEC0DBB5 SWAP1 PUSH1 0x20 ADD PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x248A35EF PUSH1 0xE1 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH2 0x167 SWAP2 PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x134D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x135E JUMPI PUSH1 0x15 PUSH2 0x1372 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1372 SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x13A5 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT SWAP1 DUP2 PUSH2 0x13B6 JUMPI DUP4 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x13BF DUP5 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1F JUMPDEST DUP3 ISZERO PUSH2 0x144C JUMPI PUSH2 0x13F8 PUSH1 0xA DUP5 PUSH2 0x2499 JUMP JUMPDEST PUSH2 0x1403 SWAP1 PUSH1 0x30 PUSH2 0x24AD JUMP JUMPDEST PUSH1 0xF8 SHL DUP3 DUP3 PUSH2 0x1411 DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1445 PUSH1 0xA DUP5 PUSH2 0x21A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x13E7 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x148C JUMPI PUSH1 0x2D PUSH1 0xF8 SHL DUP3 DUP3 PUSH2 0x1462 DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x1474 JUMPI PUSH2 0x1474 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST PUSH1 0x0 PUSH2 0x1499 DUP3 PUSH1 0x1F PUSH2 0x24D7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B1 JUMPI PUSH2 0x14B1 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14DB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x154D JUMPI DUP4 DUP2 PUSH2 0x14F7 DUP6 PUSH1 0x1 PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x1501 SWAP2 SWAP1 PUSH2 0x24AD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1511 JUMPI PUSH2 0x1511 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x152E JUMPI PUSH2 0x152E PUSH2 0x221E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 ADD PUSH2 0x14E1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1570 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x157C DUP5 PUSH2 0x159B JUMP JUMPDEST SWAP2 POP PUSH1 0x7 SIGNEXTEND SWAP2 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP3 EQ DUP1 ISZERO PUSH2 0x1593 JUMPI POP DUP1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x19F37361 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH2 0x167 SWAP2 PUSH2 0x15F5 SWAP2 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x164A JUMPI PUSH1 0x15 PUSH1 0x0 PUSH2 0x165E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x165E SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH1 0x3 SWAP2 SWAP1 SWAP2 SIGNEXTEND SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x7 DUP3 SWAP1 SIGNEXTEND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x167 SWAP1 PUSH4 0xECA36917 PUSH1 0xE0 SHL SWAP1 PUSH1 0xA4 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 NOT DUP3 ADD PUSH2 0x16E5 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x53554343455353 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD PUSH2 0x171D JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x24A72B20A624A22FAA2920A729A0A1AA24A7A7 PUSH1 0x69 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 NOT DUP3 ADD PUSH2 0x175F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH32 0x50415945525F4143434F554E545F4E4F545F464F554E44000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 NOT DUP3 ADD PUSH2 0x1798 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH20 0x1253959053125117D393D11157D050D0D3D55395 PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 NOT DUP3 ADD PUSH2 0x17D0 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x1514905394D050D51253D397D1561412549151 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 NOT DUP3 ADD PUSH2 0x1812 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x494E56414C49445F5452414E53414354494F4E5F535441525400000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x5 NOT DUP3 ADD PUSH2 0x1854 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x494E56414C49445F5452414E53414354494F4E5F4455524154494F4E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x6 NOT DUP3 ADD PUSH2 0x188A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x494E56414C49445F5349474E4154555245 PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 NOT DUP3 ADD PUSH2 0x18BC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x4D454D4F5F544F4F5F4C4F4E47 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x8 NOT DUP3 ADD PUSH2 0x18F4 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x494E53554646494349454E545F54585F464545 PUSH1 0x68 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x9 NOT DUP3 ADD PUSH2 0x1936 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x494E53554646494349454E545F50415945525F42414C414E4345000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xA NOT DUP3 ADD PUSH2 0x1970 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x222AA82624A1A0AA22AFAA2920A729A0A1AA24A7A7 PUSH1 0x59 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xB NOT DUP3 ADD PUSH2 0x1999 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x42555359 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xC NOT DUP3 ADD PUSH2 0x19CB JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x1393D517D4D5541413D4951151 PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xD NOT DUP3 ADD PUSH2 0x19FF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x1253959053125117D192531157D251 PUSH1 0x8A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xE NOT DUP3 ADD PUSH2 0x1A36 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x1253959053125117D050D0D3D5539517D251 PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xF NOT DUP3 ADD PUSH2 0x1A6E JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x1253959053125117D0D3D395149050D517D251 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x10 NOT DUP3 ADD PUSH2 0x1AA9 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH22 0x1253959053125117D514905394D050D51253D397D251 PUSH1 0x52 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x11 NOT DUP3 ADD PUSH2 0x1ADF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x149150D152541517D393D517D193D55391 PUSH1 0x7A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x12 NOT DUP3 ADD PUSH2 0x1B14 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x149150D3D49117D393D517D193D55391 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x13 NOT DUP3 ADD PUSH2 0x1B4C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x1253959053125117D4D3D3125112551657D251 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1B55 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B65 SWAP2 SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x167 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE0F4059A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1BEA SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C27 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1C4F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x15 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C63 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x3 SWAP3 SWAP1 SWAP3 SIGNEXTEND SWAP11 SWAP1 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB4 DUP6 PUSH2 0x1C79 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CC2 PUSH1 0x20 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CD0 PUSH1 0x40 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D27 DUP3 PUSH2 0x1C79 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D6D JUMPI PUSH2 0x1D6D PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D91 DUP4 PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1DD5 PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x1DE7 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1D44 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1DFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E36 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E1E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E57 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1593 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA0 DUP4 PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAE PUSH1 0x20 DUP5 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1F33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F57 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D27 DUP3 PUSH2 0x1F61 JUMP JUMPDEST PUSH32 0x4C594E5820746F6B656E206173736F63696174696F6E206661696C65643A2000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1FC6 DUP2 PUSH1 0x1F DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D27 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x200A PUSH1 0x60 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x98B29CB PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1593 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1593 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x20B9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x209F JUMPI PUSH2 0x209F PUSH2 0x2068 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x20AC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2083 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20D0 JUMPI POP PUSH1 0x1 PUSH2 0x215E JUMP JUMPDEST DUP2 PUSH2 0x20DD JUMPI POP PUSH1 0x0 PUSH2 0x215E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x20F3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x20FD JUMPI PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x215E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x210E JUMPI PUSH2 0x210E PUSH2 0x2068 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x215E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x213C JUMPI POP DUP2 DUP2 EXP PUSH2 0x215E JUMP JUMPDEST PUSH2 0x2146 DUP4 DUP4 PUSH2 0x207E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x215A JUMPI PUSH2 0x215A PUSH2 0x2068 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D27 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x20C1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x215E JUMPI PUSH2 0x215E PUSH2 0x2068 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21AF JUMPI PUSH2 0x21AF PUSH2 0x218A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH32 0x534155434520746F6B656E206173736F63696174696F6E206661696C65643A20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x21EC DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x200A PUSH1 0x60 DUP4 ADD PUSH1 0x5 DUP2 MSTORE PUSH5 0x5341554345 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x546F6B656E206173736F63696174696F6E206661696C65643A20000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x226C DUP2 PUSH1 0x1A DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1A ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x434C585920746F6B656E206173736F63696174696F6E206661696C65643A2000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1FC6 DUP2 PUSH1 0x1F DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x200A PUSH1 0x60 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x434C5859 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x215E PUSH1 0x20 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x98B29CB PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x215E PUSH1 0x20 DUP4 ADD PUSH1 0x5 DUP2 MSTORE PUSH5 0x5341554345 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x215E PUSH1 0x20 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x434C5859 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2395 PUSH1 0x60 DUP4 ADD PUSH1 0x5 DUP2 MSTORE PUSH5 0x5341554345 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2395 PUSH1 0x60 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x434C5859 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xA0 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x3A3930B739B332B92A37B5B2B7 PUSH1 0x99 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2420 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x36B4B73A2A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2420 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x2492 JUMPI PUSH2 0x2492 PUSH2 0x2068 JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24A8 JUMPI PUSH2 0x24A8 PUSH2 0x218A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215E PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x24CF JUMPI PUSH2 0x24CF PUSH2 0x2068 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215E PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2506 DUP4 PUSH2 0x1F61 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x251B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH14 0x554E4B4E4F574E5F4552524F525F PUSH1 0x90 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x254F DUP2 PUSH1 0xE DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0xE ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE PUSH1 0x20 DUP6 PUSH1 0x7 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP PUSH1 0x80 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP PUSH1 0x20 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25CB JUMPI PUSH1 0x7F NOT DUP9 DUP8 SUB ADD DUP5 MSTORE PUSH2 0x25B9 DUP7 DUP4 MLOAD PUSH2 0x1E3F JUMP JUMPDEST SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x259D JUMP JUMPDEST POP SWAP4 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x260A DUP5 PUSH2 0x1F61 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 PUSH2 0x2619 DUP2 DUP7 ADD PUSH2 0x25DA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x264A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x265C JUMPI PUSH2 0x265C PUSH2 0x1D2E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x266D DUP5 DUP4 ADD PUSH2 0x1D44 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x2687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x26AC JUMPI PUSH2 0x269D DUP6 PUSH2 0x25DA JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x268C JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID 0xCA DIV 0x26 SWAP11 0xAF 0xA6 0xB8 SWAP13 0xED PUSH7 0x31D9643F3D6136 PUSH14 0xD8E5ABF65031BAE59D640E2AB64F 0xE8 0xE9 0x2E LOG3 PC SIGNEXTEND 0xC 0xA9 0x22 0xD0 0xBA 0x2E 0xAB JUMP DUP1 PUSH11 0x32481C0B7FB44CE303C6E8 0xEE 0xD6 0xAD LOG3 JUMP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xA5 0x1F 0xD5 POP BASEFEE 0xE3 0x4C PUSH7 0xFFC9E33A5B3D15 SLT 0xB4 0xB6 SWAP10 OR SWAP8 LOG1 DUP14 PUSH17 0x7A5D13DB42041364736F6C634300081800 CALLER ","sourceMap":"339:15281:0:-:0;;;2478:49;;;;;;;;;-1:-1:-1;2502:5:0;:18;;-1:-1:-1;;;;;;2502:18:0;2510:10;2502:18;;;339:15281;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLXY_DECIMALS_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@CLXY_RATIO_20":{"entryPoint":null,"id":20,"parameterSlots":0,"returnSlots":0},"@HBAR_RATIO_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@LYNX_DECIMALS_32":{"entryPoint":null,"id":32,"parameterSlots":0,"returnSlots":0},"@SAUCE_DECIMALS_26":{"entryPoint":null,"id":26,"parameterSlots":0,"returnSlots":0},"@SAUCE_RATIO_17":{"entryPoint":null,"id":17,"parameterSlots":0,"returnSlots":0},"@_239":{"entryPoint":null,"id":239,"parameterSlots":0,"returnSlots":0},"@_checkTokenAssociation_579":{"entryPoint":5464,"id":579,"parameterSlots":1,"returnSlots":1},"@_getHTSErrorMessage_1158":{"entryPoint":5815,"id":1158,"parameterSlots":1,"returnSlots":1},"@_int64ToString_1279":{"entryPoint":4990,"id":1279,"parameterSlots":1,"returnSlots":1},"@_mintAndTransfer_950":{"entryPoint":4428,"id":950,"parameterSlots":1,"returnSlots":0},"@_processDeposits_849":{"entryPoint":4100,"id":849,"parameterSlots":2,"returnSlots":0},"@_validateMintInputs_751":{"entryPoint":3682,"id":751,"parameterSlots":3,"returnSlots":0},"@admin_14":{"entryPoint":null,"id":14,"parameterSlots":0,"returnSlots":0},"@associateToken_2965":{"entryPoint":4778,"id":2965,"parameterSlots":2,"returnSlots":1},"@associateTokens_517":{"entryPoint":2950,"id":517,"parameterSlots":2,"returnSlots":0},"@calculateRequiredDeposits_628":{"entryPoint":2474,"id":628,"parameterSlots":1,"returnSlots":3},"@checkAllAssociations_546":{"entryPoint":2099,"id":546,"parameterSlots":0,"returnSlots":3},"@clxyToken_12":{"entryPoint":null,"id":12,"parameterSlots":0,"returnSlots":0},"@emergencyWithdrawHbar_991":{"entryPoint":3497,"id":991,"parameterSlots":1,"returnSlots":0},"@getHbarBalance_963":{"entryPoint":null,"id":963,"parameterSlots":0,"returnSlots":1},"@isToken_4837":{"entryPoint":5531,"id":4837,"parameterSlots":1,"returnSlots":2},"@lynxToken_8":{"entryPoint":null,"id":8,"parameterSlots":0,"returnSlots":0},"@mintToken_2827":{"entryPoint":7035,"id":2827,"parameterSlots":3,"returnSlots":3},"@mintWithDeposits_654":{"entryPoint":1487,"id":654,"parameterSlots":3,"returnSlots":0},"@redirectForToken_5075":{"entryPoint":1813,"id":5075,"parameterSlots":2,"returnSlots":2},"@sauceToken_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":0},"@setClxyToken_426":{"entryPoint":3227,"id":426,"parameterSlots":1,"returnSlots":0},"@setLynxToken_302":{"entryPoint":1522,"id":302,"parameterSlots":1,"returnSlots":0},"@setSauceToken_364":{"entryPoint":2611,"id":364,"parameterSlots":1,"returnSlots":0},"@testHTSOperations_235":{"entryPoint":2401,"id":235,"parameterSlots":2,"returnSlots":4},"@testHTSPrecompile_185":{"entryPoint":null,"id":185,"parameterSlots":0,"returnSlots":2},"@transferAdmin_458":{"entryPoint":2182,"id":458,"parameterSlots":1,"returnSlots":0},"@transferFromNFT_3691":{"entryPoint":2881,"id":3691,"parameterSlots":4,"returnSlots":1},"@transferFrom_3644":{"entryPoint":1243,"id":3644,"parameterSlots":4,"returnSlots":1},"@transferToken_4436":{"entryPoint":5743,"id":4436,"parameterSlots":4,"returnSlots":1},"abi_decode_address":{"entryPoint":7289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_int32_fromMemory":{"entryPoint":8033,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_int64_fromMemory":{"entryPoint":9690,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7812,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_addresst_uint256":{"entryPoint":7317,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":7541,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":7888,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_int32_fromMemory":{"entryPoint":8051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int32t_bool_fromMemory":{"entryPoint":9450,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_int32t_int64t_array$_t_int64_$dyn_memory_ptr_fromMemory":{"entryPoint":9708,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":7863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":7392,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory":{"entryPoint":9026,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_bytes":{"entryPoint":7743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_49eb":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4b03":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c6f0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_05b8c81e4d50af98fb5fa519b925050c6ae01b6abdbde399cd313d795f1a13f1_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_68495250fdc0ee8e53fcde04a36e34fbf1ec8715429481eca8f59ec65fc8e2c4_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8628,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_6f5cad8325c7c3f966939257287b21f13d866689bb45fe6acb014032f9156b49_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_7eb3639e548d99e2b5f171e605acad2de5f51ddc896d16b083d0dc5d115a0fe2_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8756,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_a71107265ed46d55753f901c0ef2ce1bd8a60e72b08794a34eebec38ec384993_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8233,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_int256__to_t_address_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_int64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_address_t_int64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9564,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool_t_bool__to_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8269,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_bool__to_t_bool_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256_t_bytes_memory_ptr__to_t_int256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7787,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_061735ab87dcc0fdde52a9a6072648c11c6fde3e234a87ae62c265e0bd92bb6e_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8917,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed":{"entryPoint":8166,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8953,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed":{"entryPoint":8697,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9072,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e4591e7aa5942b9a7e03764658fae7c504c791f64b8470252259d3c5547c83a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b_t_address_t_address_t_int256_t_string_memory_ptr__to_t_string_memory_ptr_t_address_t_address_t_int256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9161,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8990,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed":{"entryPoint":8881,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9125,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ec78d9c22c08bb9f0ecd5d95571ae83e3f22219c5a9278c3270691d50abfd91b_t_address_t_address_t_int256_t_string_memory_ptr__to_t_string_memory_ptr_t_address_t_address_t_int256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9258,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7492,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9389,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8608,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":8318,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":8548,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":8385,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8563,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9431,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7707,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":9408,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":9369,"id":null,"parameterSlots":2,"returnSlots":1},"negate_t_int256":{"entryPoint":9341,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8296,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8586,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8734,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7470,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:23880:4","nodeType":"YulBlock","src":"0:23880:4","statements":[{"nativeSrc":"6:3:4","nodeType":"YulBlock","src":"6:3:4","statements":[]},{"body":{"nativeSrc":"63:124:4","nodeType":"YulBlock","src":"63:124:4","statements":[{"nativeSrc":"73:29:4","nodeType":"YulAssignment","src":"73:29:4","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:4","nodeType":"YulIdentifier","src":"95:6:4"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:4","nodeType":"YulIdentifier","src":"82:12:4"},"nativeSrc":"82:20:4","nodeType":"YulFunctionCall","src":"82:20:4"},"variableNames":[{"name":"value","nativeSrc":"73:5:4","nodeType":"YulIdentifier","src":"73:5:4"}]},{"body":{"nativeSrc":"165:16:4","nodeType":"YulBlock","src":"165:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:4","nodeType":"YulLiteral","src":"174:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:4","nodeType":"YulLiteral","src":"177:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:4","nodeType":"YulIdentifier","src":"167:6:4"},"nativeSrc":"167:12:4","nodeType":"YulFunctionCall","src":"167:12:4"},"nativeSrc":"167:12:4","nodeType":"YulExpressionStatement","src":"167:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:4","nodeType":"YulIdentifier","src":"124:5:4"},{"arguments":[{"name":"value","nativeSrc":"135:5:4","nodeType":"YulIdentifier","src":"135:5:4"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:4","nodeType":"YulLiteral","src":"150:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:4","nodeType":"YulLiteral","src":"155:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:4","nodeType":"YulIdentifier","src":"146:3:4"},"nativeSrc":"146:11:4","nodeType":"YulFunctionCall","src":"146:11:4"},{"kind":"number","nativeSrc":"159:1:4","nodeType":"YulLiteral","src":"159:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:4","nodeType":"YulIdentifier","src":"142:3:4"},"nativeSrc":"142:19:4","nodeType":"YulFunctionCall","src":"142:19:4"}],"functionName":{"name":"and","nativeSrc":"131:3:4","nodeType":"YulIdentifier","src":"131:3:4"},"nativeSrc":"131:31:4","nodeType":"YulFunctionCall","src":"131:31:4"}],"functionName":{"name":"eq","nativeSrc":"121:2:4","nodeType":"YulIdentifier","src":"121:2:4"},"nativeSrc":"121:42:4","nodeType":"YulFunctionCall","src":"121:42:4"}],"functionName":{"name":"iszero","nativeSrc":"114:6:4","nodeType":"YulIdentifier","src":"114:6:4"},"nativeSrc":"114:50:4","nodeType":"YulFunctionCall","src":"114:50:4"},"nativeSrc":"111:70:4","nodeType":"YulIf","src":"111:70:4"}]},"name":"abi_decode_address","nativeSrc":"14:173:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:4","nodeType":"YulTypedName","src":"42:6:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:4","nodeType":"YulTypedName","src":"53:5:4","type":""}],"src":"14:173:4"},{"body":{"nativeSrc":"313:282:4","nodeType":"YulBlock","src":"313:282:4","statements":[{"body":{"nativeSrc":"360:16:4","nodeType":"YulBlock","src":"360:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"369:1:4","nodeType":"YulLiteral","src":"369:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"372:1:4","nodeType":"YulLiteral","src":"372:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"362:6:4","nodeType":"YulIdentifier","src":"362:6:4"},"nativeSrc":"362:12:4","nodeType":"YulFunctionCall","src":"362:12:4"},"nativeSrc":"362:12:4","nodeType":"YulExpressionStatement","src":"362:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"334:7:4","nodeType":"YulIdentifier","src":"334:7:4"},{"name":"headStart","nativeSrc":"343:9:4","nodeType":"YulIdentifier","src":"343:9:4"}],"functionName":{"name":"sub","nativeSrc":"330:3:4","nodeType":"YulIdentifier","src":"330:3:4"},"nativeSrc":"330:23:4","nodeType":"YulFunctionCall","src":"330:23:4"},{"kind":"number","nativeSrc":"355:3:4","nodeType":"YulLiteral","src":"355:3:4","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"326:3:4","nodeType":"YulIdentifier","src":"326:3:4"},"nativeSrc":"326:33:4","nodeType":"YulFunctionCall","src":"326:33:4"},"nativeSrc":"323:53:4","nodeType":"YulIf","src":"323:53:4"},{"nativeSrc":"385:39:4","nodeType":"YulAssignment","src":"385:39:4","value":{"arguments":[{"name":"headStart","nativeSrc":"414:9:4","nodeType":"YulIdentifier","src":"414:9:4"}],"functionName":{"name":"abi_decode_address","nativeSrc":"395:18:4","nodeType":"YulIdentifier","src":"395:18:4"},"nativeSrc":"395:29:4","nodeType":"YulFunctionCall","src":"395:29:4"},"variableNames":[{"name":"value0","nativeSrc":"385:6:4","nodeType":"YulIdentifier","src":"385:6:4"}]},{"nativeSrc":"433:48:4","nodeType":"YulAssignment","src":"433:48:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"466:9:4","nodeType":"YulIdentifier","src":"466:9:4"},{"kind":"number","nativeSrc":"477:2:4","nodeType":"YulLiteral","src":"477:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"462:3:4","nodeType":"YulIdentifier","src":"462:3:4"},"nativeSrc":"462:18:4","nodeType":"YulFunctionCall","src":"462:18:4"}],"functionName":{"name":"abi_decode_address","nativeSrc":"443:18:4","nodeType":"YulIdentifier","src":"443:18:4"},"nativeSrc":"443:38:4","nodeType":"YulFunctionCall","src":"443:38:4"},"variableNames":[{"name":"value1","nativeSrc":"433:6:4","nodeType":"YulIdentifier","src":"433:6:4"}]},{"nativeSrc":"490:48:4","nodeType":"YulAssignment","src":"490:48:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"523:9:4","nodeType":"YulIdentifier","src":"523:9:4"},{"kind":"number","nativeSrc":"534:2:4","nodeType":"YulLiteral","src":"534:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"519:3:4","nodeType":"YulIdentifier","src":"519:3:4"},"nativeSrc":"519:18:4","nodeType":"YulFunctionCall","src":"519:18:4"}],"functionName":{"name":"abi_decode_address","nativeSrc":"500:18:4","nodeType":"YulIdentifier","src":"500:18:4"},"nativeSrc":"500:38:4","nodeType":"YulFunctionCall","src":"500:38:4"},"variableNames":[{"name":"value2","nativeSrc":"490:6:4","nodeType":"YulIdentifier","src":"490:6:4"}]},{"nativeSrc":"547:42:4","nodeType":"YulAssignment","src":"547:42:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"574:9:4","nodeType":"YulIdentifier","src":"574:9:4"},{"kind":"number","nativeSrc":"585:2:4","nodeType":"YulLiteral","src":"585:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"570:3:4","nodeType":"YulIdentifier","src":"570:3:4"},"nativeSrc":"570:18:4","nodeType":"YulFunctionCall","src":"570:18:4"}],"functionName":{"name":"calldataload","nativeSrc":"557:12:4","nodeType":"YulIdentifier","src":"557:12:4"},"nativeSrc":"557:32:4","nodeType":"YulFunctionCall","src":"557:32:4"},"variableNames":[{"name":"value3","nativeSrc":"547:6:4","nodeType":"YulIdentifier","src":"547:6:4"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256","nativeSrc":"192:403:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"255:9:4","nodeType":"YulTypedName","src":"255:9:4","type":""},{"name":"dataEnd","nativeSrc":"266:7:4","nodeType":"YulTypedName","src":"266:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"278:6:4","nodeType":"YulTypedName","src":"278:6:4","type":""},{"name":"value1","nativeSrc":"286:6:4","nodeType":"YulTypedName","src":"286:6:4","type":""},{"name":"value2","nativeSrc":"294:6:4","nodeType":"YulTypedName","src":"294:6:4","type":""},{"name":"value3","nativeSrc":"302:6:4","nodeType":"YulTypedName","src":"302:6:4","type":""}],"src":"192:403:4"},{"body":{"nativeSrc":"697:91:4","nodeType":"YulBlock","src":"697:91:4","statements":[{"nativeSrc":"707:26:4","nodeType":"YulAssignment","src":"707:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"719:9:4","nodeType":"YulIdentifier","src":"719:9:4"},{"kind":"number","nativeSrc":"730:2:4","nodeType":"YulLiteral","src":"730:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"715:3:4","nodeType":"YulIdentifier","src":"715:3:4"},"nativeSrc":"715:18:4","nodeType":"YulFunctionCall","src":"715:18:4"},"variableNames":[{"name":"tail","nativeSrc":"707:4:4","nodeType":"YulIdentifier","src":"707:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"749:9:4","nodeType":"YulIdentifier","src":"749:9:4"},{"arguments":[{"kind":"number","nativeSrc":"771:1:4","nodeType":"YulLiteral","src":"771:1:4","type":"","value":"7"},{"name":"value0","nativeSrc":"774:6:4","nodeType":"YulIdentifier","src":"774:6:4"}],"functionName":{"name":"signextend","nativeSrc":"760:10:4","nodeType":"YulIdentifier","src":"760:10:4"},"nativeSrc":"760:21:4","nodeType":"YulFunctionCall","src":"760:21:4"}],"functionName":{"name":"mstore","nativeSrc":"742:6:4","nodeType":"YulIdentifier","src":"742:6:4"},"nativeSrc":"742:40:4","nodeType":"YulFunctionCall","src":"742:40:4"},"nativeSrc":"742:40:4","nodeType":"YulExpressionStatement","src":"742:40:4"}]},"name":"abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed","nativeSrc":"600:188:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"666:9:4","nodeType":"YulTypedName","src":"666:9:4","type":""},{"name":"value0","nativeSrc":"677:6:4","nodeType":"YulTypedName","src":"677:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"688:4:4","nodeType":"YulTypedName","src":"688:4:4","type":""}],"src":"600:188:4"},{"body":{"nativeSrc":"916:161:4","nodeType":"YulBlock","src":"916:161:4","statements":[{"nativeSrc":"926:26:4","nodeType":"YulAssignment","src":"926:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"938:9:4","nodeType":"YulIdentifier","src":"938:9:4"},{"kind":"number","nativeSrc":"949:2:4","nodeType":"YulLiteral","src":"949:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"934:3:4","nodeType":"YulIdentifier","src":"934:3:4"},"nativeSrc":"934:18:4","nodeType":"YulFunctionCall","src":"934:18:4"},"variableNames":[{"name":"tail","nativeSrc":"926:4:4","nodeType":"YulIdentifier","src":"926:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"968:9:4","nodeType":"YulIdentifier","src":"968:9:4"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"993:6:4","nodeType":"YulIdentifier","src":"993:6:4"}],"functionName":{"name":"iszero","nativeSrc":"986:6:4","nodeType":"YulIdentifier","src":"986:6:4"},"nativeSrc":"986:14:4","nodeType":"YulFunctionCall","src":"986:14:4"}],"functionName":{"name":"iszero","nativeSrc":"979:6:4","nodeType":"YulIdentifier","src":"979:6:4"},"nativeSrc":"979:22:4","nodeType":"YulFunctionCall","src":"979:22:4"}],"functionName":{"name":"mstore","nativeSrc":"961:6:4","nodeType":"YulIdentifier","src":"961:6:4"},"nativeSrc":"961:41:4","nodeType":"YulFunctionCall","src":"961:41:4"},"nativeSrc":"961:41:4","nodeType":"YulExpressionStatement","src":"961:41:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1022:9:4","nodeType":"YulIdentifier","src":"1022:9:4"},{"kind":"number","nativeSrc":"1033:2:4","nodeType":"YulLiteral","src":"1033:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1018:3:4","nodeType":"YulIdentifier","src":"1018:3:4"},"nativeSrc":"1018:18:4","nodeType":"YulFunctionCall","src":"1018:18:4"},{"arguments":[{"name":"value1","nativeSrc":"1042:6:4","nodeType":"YulIdentifier","src":"1042:6:4"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1058:3:4","nodeType":"YulLiteral","src":"1058:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"1063:1:4","nodeType":"YulLiteral","src":"1063:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1054:3:4","nodeType":"YulIdentifier","src":"1054:3:4"},"nativeSrc":"1054:11:4","nodeType":"YulFunctionCall","src":"1054:11:4"},{"kind":"number","nativeSrc":"1067:1:4","nodeType":"YulLiteral","src":"1067:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1050:3:4","nodeType":"YulIdentifier","src":"1050:3:4"},"nativeSrc":"1050:19:4","nodeType":"YulFunctionCall","src":"1050:19:4"}],"functionName":{"name":"and","nativeSrc":"1038:3:4","nodeType":"YulIdentifier","src":"1038:3:4"},"nativeSrc":"1038:32:4","nodeType":"YulFunctionCall","src":"1038:32:4"}],"functionName":{"name":"mstore","nativeSrc":"1011:6:4","nodeType":"YulIdentifier","src":"1011:6:4"},"nativeSrc":"1011:60:4","nodeType":"YulFunctionCall","src":"1011:60:4"},"nativeSrc":"1011:60:4","nodeType":"YulExpressionStatement","src":"1011:60:4"}]},"name":"abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed","nativeSrc":"793:284:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"877:9:4","nodeType":"YulTypedName","src":"877:9:4","type":""},{"name":"value1","nativeSrc":"888:6:4","nodeType":"YulTypedName","src":"888:6:4","type":""},{"name":"value0","nativeSrc":"896:6:4","nodeType":"YulTypedName","src":"896:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"907:4:4","nodeType":"YulTypedName","src":"907:4:4","type":""}],"src":"793:284:4"},{"body":{"nativeSrc":"1183:102:4","nodeType":"YulBlock","src":"1183:102:4","statements":[{"nativeSrc":"1193:26:4","nodeType":"YulAssignment","src":"1193:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"1205:9:4","nodeType":"YulIdentifier","src":"1205:9:4"},{"kind":"number","nativeSrc":"1216:2:4","nodeType":"YulLiteral","src":"1216:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1201:3:4","nodeType":"YulIdentifier","src":"1201:3:4"},"nativeSrc":"1201:18:4","nodeType":"YulFunctionCall","src":"1201:18:4"},"variableNames":[{"name":"tail","nativeSrc":"1193:4:4","nodeType":"YulIdentifier","src":"1193:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1235:9:4","nodeType":"YulIdentifier","src":"1235:9:4"},{"arguments":[{"name":"value0","nativeSrc":"1250:6:4","nodeType":"YulIdentifier","src":"1250:6:4"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1266:3:4","nodeType":"YulLiteral","src":"1266:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"1271:1:4","nodeType":"YulLiteral","src":"1271:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1262:3:4","nodeType":"YulIdentifier","src":"1262:3:4"},"nativeSrc":"1262:11:4","nodeType":"YulFunctionCall","src":"1262:11:4"},{"kind":"number","nativeSrc":"1275:1:4","nodeType":"YulLiteral","src":"1275:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1258:3:4","nodeType":"YulIdentifier","src":"1258:3:4"},"nativeSrc":"1258:19:4","nodeType":"YulFunctionCall","src":"1258:19:4"}],"functionName":{"name":"and","nativeSrc":"1246:3:4","nodeType":"YulIdentifier","src":"1246:3:4"},"nativeSrc":"1246:32:4","nodeType":"YulFunctionCall","src":"1246:32:4"}],"functionName":{"name":"mstore","nativeSrc":"1228:6:4","nodeType":"YulIdentifier","src":"1228:6:4"},"nativeSrc":"1228:51:4","nodeType":"YulFunctionCall","src":"1228:51:4"},"nativeSrc":"1228:51:4","nodeType":"YulExpressionStatement","src":"1228:51:4"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1082:203:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1152:9:4","nodeType":"YulTypedName","src":"1152:9:4","type":""},{"name":"value0","nativeSrc":"1163:6:4","nodeType":"YulTypedName","src":"1163:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1174:4:4","nodeType":"YulTypedName","src":"1174:4:4","type":""}],"src":"1082:203:4"},{"body":{"nativeSrc":"1394:212:4","nodeType":"YulBlock","src":"1394:212:4","statements":[{"body":{"nativeSrc":"1440:16:4","nodeType":"YulBlock","src":"1440:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1449:1:4","nodeType":"YulLiteral","src":"1449:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1452:1:4","nodeType":"YulLiteral","src":"1452:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1442:6:4","nodeType":"YulIdentifier","src":"1442:6:4"},"nativeSrc":"1442:12:4","nodeType":"YulFunctionCall","src":"1442:12:4"},"nativeSrc":"1442:12:4","nodeType":"YulExpressionStatement","src":"1442:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1415:7:4","nodeType":"YulIdentifier","src":"1415:7:4"},{"name":"headStart","nativeSrc":"1424:9:4","nodeType":"YulIdentifier","src":"1424:9:4"}],"functionName":{"name":"sub","nativeSrc":"1411:3:4","nodeType":"YulIdentifier","src":"1411:3:4"},"nativeSrc":"1411:23:4","nodeType":"YulFunctionCall","src":"1411:23:4"},{"kind":"number","nativeSrc":"1436:2:4","nodeType":"YulLiteral","src":"1436:2:4","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1407:3:4","nodeType":"YulIdentifier","src":"1407:3:4"},"nativeSrc":"1407:32:4","nodeType":"YulFunctionCall","src":"1407:32:4"},"nativeSrc":"1404:52:4","nodeType":"YulIf","src":"1404:52:4"},{"nativeSrc":"1465:33:4","nodeType":"YulAssignment","src":"1465:33:4","value":{"arguments":[{"name":"headStart","nativeSrc":"1488:9:4","nodeType":"YulIdentifier","src":"1488:9:4"}],"functionName":{"name":"calldataload","nativeSrc":"1475:12:4","nodeType":"YulIdentifier","src":"1475:12:4"},"nativeSrc":"1475:23:4","nodeType":"YulFunctionCall","src":"1475:23:4"},"variableNames":[{"name":"value0","nativeSrc":"1465:6:4","nodeType":"YulIdentifier","src":"1465:6:4"}]},{"nativeSrc":"1507:42:4","nodeType":"YulAssignment","src":"1507:42:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1534:9:4","nodeType":"YulIdentifier","src":"1534:9:4"},{"kind":"number","nativeSrc":"1545:2:4","nodeType":"YulLiteral","src":"1545:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1530:3:4","nodeType":"YulIdentifier","src":"1530:3:4"},"nativeSrc":"1530:18:4","nodeType":"YulFunctionCall","src":"1530:18:4"}],"functionName":{"name":"calldataload","nativeSrc":"1517:12:4","nodeType":"YulIdentifier","src":"1517:12:4"},"nativeSrc":"1517:32:4","nodeType":"YulFunctionCall","src":"1517:32:4"},"variableNames":[{"name":"value1","nativeSrc":"1507:6:4","nodeType":"YulIdentifier","src":"1507:6:4"}]},{"nativeSrc":"1558:42:4","nodeType":"YulAssignment","src":"1558:42:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1585:9:4","nodeType":"YulIdentifier","src":"1585:9:4"},{"kind":"number","nativeSrc":"1596:2:4","nodeType":"YulLiteral","src":"1596:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1581:3:4","nodeType":"YulIdentifier","src":"1581:3:4"},"nativeSrc":"1581:18:4","nodeType":"YulFunctionCall","src":"1581:18:4"}],"functionName":{"name":"calldataload","nativeSrc":"1568:12:4","nodeType":"YulIdentifier","src":"1568:12:4"},"nativeSrc":"1568:32:4","nodeType":"YulFunctionCall","src":"1568:32:4"},"variableNames":[{"name":"value2","nativeSrc":"1558:6:4","nodeType":"YulIdentifier","src":"1558:6:4"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nativeSrc":"1290:316:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1344:9:4","nodeType":"YulTypedName","src":"1344:9:4","type":""},{"name":"dataEnd","nativeSrc":"1355:7:4","nodeType":"YulTypedName","src":"1355:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1367:6:4","nodeType":"YulTypedName","src":"1367:6:4","type":""},{"name":"value1","nativeSrc":"1375:6:4","nodeType":"YulTypedName","src":"1375:6:4","type":""},{"name":"value2","nativeSrc":"1383:6:4","nodeType":"YulTypedName","src":"1383:6:4","type":""}],"src":"1290:316:4"},{"body":{"nativeSrc":"1712:76:4","nodeType":"YulBlock","src":"1712:76:4","statements":[{"nativeSrc":"1722:26:4","nodeType":"YulAssignment","src":"1722:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"1734:9:4","nodeType":"YulIdentifier","src":"1734:9:4"},{"kind":"number","nativeSrc":"1745:2:4","nodeType":"YulLiteral","src":"1745:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1730:3:4","nodeType":"YulIdentifier","src":"1730:3:4"},"nativeSrc":"1730:18:4","nodeType":"YulFunctionCall","src":"1730:18:4"},"variableNames":[{"name":"tail","nativeSrc":"1722:4:4","nodeType":"YulIdentifier","src":"1722:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1764:9:4","nodeType":"YulIdentifier","src":"1764:9:4"},{"name":"value0","nativeSrc":"1775:6:4","nodeType":"YulIdentifier","src":"1775:6:4"}],"functionName":{"name":"mstore","nativeSrc":"1757:6:4","nodeType":"YulIdentifier","src":"1757:6:4"},"nativeSrc":"1757:25:4","nodeType":"YulFunctionCall","src":"1757:25:4"},"nativeSrc":"1757:25:4","nodeType":"YulExpressionStatement","src":"1757:25:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1611:177:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1681:9:4","nodeType":"YulTypedName","src":"1681:9:4","type":""},{"name":"value0","nativeSrc":"1692:6:4","nodeType":"YulTypedName","src":"1692:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1703:4:4","nodeType":"YulTypedName","src":"1703:4:4","type":""}],"src":"1611:177:4"},{"body":{"nativeSrc":"1863:116:4","nodeType":"YulBlock","src":"1863:116:4","statements":[{"body":{"nativeSrc":"1909:16:4","nodeType":"YulBlock","src":"1909:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1918:1:4","nodeType":"YulLiteral","src":"1918:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1921:1:4","nodeType":"YulLiteral","src":"1921:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1911:6:4","nodeType":"YulIdentifier","src":"1911:6:4"},"nativeSrc":"1911:12:4","nodeType":"YulFunctionCall","src":"1911:12:4"},"nativeSrc":"1911:12:4","nodeType":"YulExpressionStatement","src":"1911:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1884:7:4","nodeType":"YulIdentifier","src":"1884:7:4"},{"name":"headStart","nativeSrc":"1893:9:4","nodeType":"YulIdentifier","src":"1893:9:4"}],"functionName":{"name":"sub","nativeSrc":"1880:3:4","nodeType":"YulIdentifier","src":"1880:3:4"},"nativeSrc":"1880:23:4","nodeType":"YulFunctionCall","src":"1880:23:4"},{"kind":"number","nativeSrc":"1905:2:4","nodeType":"YulLiteral","src":"1905:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1876:3:4","nodeType":"YulIdentifier","src":"1876:3:4"},"nativeSrc":"1876:32:4","nodeType":"YulFunctionCall","src":"1876:32:4"},"nativeSrc":"1873:52:4","nodeType":"YulIf","src":"1873:52:4"},{"nativeSrc":"1934:39:4","nodeType":"YulAssignment","src":"1934:39:4","value":{"arguments":[{"name":"headStart","nativeSrc":"1963:9:4","nodeType":"YulIdentifier","src":"1963:9:4"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1944:18:4","nodeType":"YulIdentifier","src":"1944:18:4"},"nativeSrc":"1944:29:4","nodeType":"YulFunctionCall","src":"1944:29:4"},"variableNames":[{"name":"value0","nativeSrc":"1934:6:4","nodeType":"YulIdentifier","src":"1934:6:4"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1793:186:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1829:9:4","nodeType":"YulTypedName","src":"1829:9:4","type":""},{"name":"dataEnd","nativeSrc":"1840:7:4","nodeType":"YulTypedName","src":"1840:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1852:6:4","nodeType":"YulTypedName","src":"1852:6:4","type":""}],"src":"1793:186:4"},{"body":{"nativeSrc":"2081:87:4","nodeType":"YulBlock","src":"2081:87:4","statements":[{"nativeSrc":"2091:26:4","nodeType":"YulAssignment","src":"2091:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"2103:9:4","nodeType":"YulIdentifier","src":"2103:9:4"},{"kind":"number","nativeSrc":"2114:2:4","nodeType":"YulLiteral","src":"2114:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2099:3:4","nodeType":"YulIdentifier","src":"2099:3:4"},"nativeSrc":"2099:18:4","nodeType":"YulFunctionCall","src":"2099:18:4"},"variableNames":[{"name":"tail","nativeSrc":"2091:4:4","nodeType":"YulIdentifier","src":"2091:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2133:9:4","nodeType":"YulIdentifier","src":"2133:9:4"},{"arguments":[{"name":"value0","nativeSrc":"2148:6:4","nodeType":"YulIdentifier","src":"2148:6:4"},{"kind":"number","nativeSrc":"2156:4:4","nodeType":"YulLiteral","src":"2156:4:4","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2144:3:4","nodeType":"YulIdentifier","src":"2144:3:4"},"nativeSrc":"2144:17:4","nodeType":"YulFunctionCall","src":"2144:17:4"}],"functionName":{"name":"mstore","nativeSrc":"2126:6:4","nodeType":"YulIdentifier","src":"2126:6:4"},"nativeSrc":"2126:36:4","nodeType":"YulFunctionCall","src":"2126:36:4"},"nativeSrc":"2126:36:4","nodeType":"YulExpressionStatement","src":"2126:36:4"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1984:184:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2050:9:4","nodeType":"YulTypedName","src":"2050:9:4","type":""},{"name":"value0","nativeSrc":"2061:6:4","nodeType":"YulTypedName","src":"2061:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2072:4:4","nodeType":"YulTypedName","src":"2072:4:4","type":""}],"src":"1984:184:4"},{"body":{"nativeSrc":"2205:95:4","nodeType":"YulBlock","src":"2205:95:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2222:1:4","nodeType":"YulLiteral","src":"2222:1:4","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2229:3:4","nodeType":"YulLiteral","src":"2229:3:4","type":"","value":"224"},{"kind":"number","nativeSrc":"2234:10:4","nodeType":"YulLiteral","src":"2234:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2225:3:4","nodeType":"YulIdentifier","src":"2225:3:4"},"nativeSrc":"2225:20:4","nodeType":"YulFunctionCall","src":"2225:20:4"}],"functionName":{"name":"mstore","nativeSrc":"2215:6:4","nodeType":"YulIdentifier","src":"2215:6:4"},"nativeSrc":"2215:31:4","nodeType":"YulFunctionCall","src":"2215:31:4"},"nativeSrc":"2215:31:4","nodeType":"YulExpressionStatement","src":"2215:31:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2262:1:4","nodeType":"YulLiteral","src":"2262:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"2265:4:4","nodeType":"YulLiteral","src":"2265:4:4","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2255:6:4","nodeType":"YulIdentifier","src":"2255:6:4"},"nativeSrc":"2255:15:4","nodeType":"YulFunctionCall","src":"2255:15:4"},"nativeSrc":"2255:15:4","nodeType":"YulExpressionStatement","src":"2255:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2286:1:4","nodeType":"YulLiteral","src":"2286:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"2289:4:4","nodeType":"YulLiteral","src":"2289:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2279:6:4","nodeType":"YulIdentifier","src":"2279:6:4"},"nativeSrc":"2279:15:4","nodeType":"YulFunctionCall","src":"2279:15:4"},"nativeSrc":"2279:15:4","nodeType":"YulExpressionStatement","src":"2279:15:4"}]},"name":"panic_error_0x41","nativeSrc":"2173:127:4","nodeType":"YulFunctionDefinition","src":"2173:127:4"},{"body":{"nativeSrc":"2350:230:4","nodeType":"YulBlock","src":"2350:230:4","statements":[{"nativeSrc":"2360:19:4","nodeType":"YulAssignment","src":"2360:19:4","value":{"arguments":[{"kind":"number","nativeSrc":"2376:2:4","nodeType":"YulLiteral","src":"2376:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2370:5:4","nodeType":"YulIdentifier","src":"2370:5:4"},"nativeSrc":"2370:9:4","nodeType":"YulFunctionCall","src":"2370:9:4"},"variableNames":[{"name":"memPtr","nativeSrc":"2360:6:4","nodeType":"YulIdentifier","src":"2360:6:4"}]},{"nativeSrc":"2388:58:4","nodeType":"YulVariableDeclaration","src":"2388:58:4","value":{"arguments":[{"name":"memPtr","nativeSrc":"2410:6:4","nodeType":"YulIdentifier","src":"2410:6:4"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"2426:4:4","nodeType":"YulIdentifier","src":"2426:4:4"},{"kind":"number","nativeSrc":"2432:2:4","nodeType":"YulLiteral","src":"2432:2:4","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2422:3:4","nodeType":"YulIdentifier","src":"2422:3:4"},"nativeSrc":"2422:13:4","nodeType":"YulFunctionCall","src":"2422:13:4"},{"arguments":[{"kind":"number","nativeSrc":"2441:2:4","nodeType":"YulLiteral","src":"2441:2:4","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2437:3:4","nodeType":"YulIdentifier","src":"2437:3:4"},"nativeSrc":"2437:7:4","nodeType":"YulFunctionCall","src":"2437:7:4"}],"functionName":{"name":"and","nativeSrc":"2418:3:4","nodeType":"YulIdentifier","src":"2418:3:4"},"nativeSrc":"2418:27:4","nodeType":"YulFunctionCall","src":"2418:27:4"}],"functionName":{"name":"add","nativeSrc":"2406:3:4","nodeType":"YulIdentifier","src":"2406:3:4"},"nativeSrc":"2406:40:4","nodeType":"YulFunctionCall","src":"2406:40:4"},"variables":[{"name":"newFreePtr","nativeSrc":"2392:10:4","nodeType":"YulTypedName","src":"2392:10:4","type":""}]},{"body":{"nativeSrc":"2521:22:4","nodeType":"YulBlock","src":"2521:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2523:16:4","nodeType":"YulIdentifier","src":"2523:16:4"},"nativeSrc":"2523:18:4","nodeType":"YulFunctionCall","src":"2523:18:4"},"nativeSrc":"2523:18:4","nodeType":"YulExpressionStatement","src":"2523:18:4"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2464:10:4","nodeType":"YulIdentifier","src":"2464:10:4"},{"kind":"number","nativeSrc":"2476:18:4","nodeType":"YulLiteral","src":"2476:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2461:2:4","nodeType":"YulIdentifier","src":"2461:2:4"},"nativeSrc":"2461:34:4","nodeType":"YulFunctionCall","src":"2461:34:4"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2500:10:4","nodeType":"YulIdentifier","src":"2500:10:4"},{"name":"memPtr","nativeSrc":"2512:6:4","nodeType":"YulIdentifier","src":"2512:6:4"}],"functionName":{"name":"lt","nativeSrc":"2497:2:4","nodeType":"YulIdentifier","src":"2497:2:4"},"nativeSrc":"2497:22:4","nodeType":"YulFunctionCall","src":"2497:22:4"}],"functionName":{"name":"or","nativeSrc":"2458:2:4","nodeType":"YulIdentifier","src":"2458:2:4"},"nativeSrc":"2458:62:4","nodeType":"YulFunctionCall","src":"2458:62:4"},"nativeSrc":"2455:88:4","nodeType":"YulIf","src":"2455:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2559:2:4","nodeType":"YulLiteral","src":"2559:2:4","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2563:10:4","nodeType":"YulIdentifier","src":"2563:10:4"}],"functionName":{"name":"mstore","nativeSrc":"2552:6:4","nodeType":"YulIdentifier","src":"2552:6:4"},"nativeSrc":"2552:22:4","nodeType":"YulFunctionCall","src":"2552:22:4"},"nativeSrc":"2552:22:4","nodeType":"YulExpressionStatement","src":"2552:22:4"}]},"name":"allocate_memory","nativeSrc":"2305:275:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2330:4:4","nodeType":"YulTypedName","src":"2330:4:4","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2339:6:4","nodeType":"YulTypedName","src":"2339:6:4","type":""}],"src":"2305:275:4"},{"body":{"nativeSrc":"2681:741:4","nodeType":"YulBlock","src":"2681:741:4","statements":[{"body":{"nativeSrc":"2727:16:4","nodeType":"YulBlock","src":"2727:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2736:1:4","nodeType":"YulLiteral","src":"2736:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"2739:1:4","nodeType":"YulLiteral","src":"2739:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2729:6:4","nodeType":"YulIdentifier","src":"2729:6:4"},"nativeSrc":"2729:12:4","nodeType":"YulFunctionCall","src":"2729:12:4"},"nativeSrc":"2729:12:4","nodeType":"YulExpressionStatement","src":"2729:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2702:7:4","nodeType":"YulIdentifier","src":"2702:7:4"},{"name":"headStart","nativeSrc":"2711:9:4","nodeType":"YulIdentifier","src":"2711:9:4"}],"functionName":{"name":"sub","nativeSrc":"2698:3:4","nodeType":"YulIdentifier","src":"2698:3:4"},"nativeSrc":"2698:23:4","nodeType":"YulFunctionCall","src":"2698:23:4"},{"kind":"number","nativeSrc":"2723:2:4","nodeType":"YulLiteral","src":"2723:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2694:3:4","nodeType":"YulIdentifier","src":"2694:3:4"},"nativeSrc":"2694:32:4","nodeType":"YulFunctionCall","src":"2694:32:4"},"nativeSrc":"2691:52:4","nodeType":"YulIf","src":"2691:52:4"},{"nativeSrc":"2752:39:4","nodeType":"YulAssignment","src":"2752:39:4","value":{"arguments":[{"name":"headStart","nativeSrc":"2781:9:4","nodeType":"YulIdentifier","src":"2781:9:4"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2762:18:4","nodeType":"YulIdentifier","src":"2762:18:4"},"nativeSrc":"2762:29:4","nodeType":"YulFunctionCall","src":"2762:29:4"},"variableNames":[{"name":"value0","nativeSrc":"2752:6:4","nodeType":"YulIdentifier","src":"2752:6:4"}]},{"nativeSrc":"2800:12:4","nodeType":"YulVariableDeclaration","src":"2800:12:4","value":{"kind":"number","nativeSrc":"2810:2:4","nodeType":"YulLiteral","src":"2810:2:4","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"2804:2:4","nodeType":"YulTypedName","src":"2804:2:4","type":""}]},{"nativeSrc":"2821:46:4","nodeType":"YulVariableDeclaration","src":"2821:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2852:9:4","nodeType":"YulIdentifier","src":"2852:9:4"},{"name":"_1","nativeSrc":"2863:2:4","nodeType":"YulIdentifier","src":"2863:2:4"}],"functionName":{"name":"add","nativeSrc":"2848:3:4","nodeType":"YulIdentifier","src":"2848:3:4"},"nativeSrc":"2848:18:4","nodeType":"YulFunctionCall","src":"2848:18:4"}],"functionName":{"name":"calldataload","nativeSrc":"2835:12:4","nodeType":"YulIdentifier","src":"2835:12:4"},"nativeSrc":"2835:32:4","nodeType":"YulFunctionCall","src":"2835:32:4"},"variables":[{"name":"offset","nativeSrc":"2825:6:4","nodeType":"YulTypedName","src":"2825:6:4","type":""}]},{"nativeSrc":"2876:28:4","nodeType":"YulVariableDeclaration","src":"2876:28:4","value":{"kind":"number","nativeSrc":"2886:18:4","nodeType":"YulLiteral","src":"2886:18:4","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"2880:2:4","nodeType":"YulTypedName","src":"2880:2:4","type":""}]},{"body":{"nativeSrc":"2931:16:4","nodeType":"YulBlock","src":"2931:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2940:1:4","nodeType":"YulLiteral","src":"2940:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"2943:1:4","nodeType":"YulLiteral","src":"2943:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2933:6:4","nodeType":"YulIdentifier","src":"2933:6:4"},"nativeSrc":"2933:12:4","nodeType":"YulFunctionCall","src":"2933:12:4"},"nativeSrc":"2933:12:4","nodeType":"YulExpressionStatement","src":"2933:12:4"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2919:6:4","nodeType":"YulIdentifier","src":"2919:6:4"},{"name":"_2","nativeSrc":"2927:2:4","nodeType":"YulIdentifier","src":"2927:2:4"}],"functionName":{"name":"gt","nativeSrc":"2916:2:4","nodeType":"YulIdentifier","src":"2916:2:4"},"nativeSrc":"2916:14:4","nodeType":"YulFunctionCall","src":"2916:14:4"},"nativeSrc":"2913:34:4","nodeType":"YulIf","src":"2913:34:4"},{"nativeSrc":"2956:32:4","nodeType":"YulVariableDeclaration","src":"2956:32:4","value":{"arguments":[{"name":"headStart","nativeSrc":"2970:9:4","nodeType":"YulIdentifier","src":"2970:9:4"},{"name":"offset","nativeSrc":"2981:6:4","nodeType":"YulIdentifier","src":"2981:6:4"}],"functionName":{"name":"add","nativeSrc":"2966:3:4","nodeType":"YulIdentifier","src":"2966:3:4"},"nativeSrc":"2966:22:4","nodeType":"YulFunctionCall","src":"2966:22:4"},"variables":[{"name":"_3","nativeSrc":"2960:2:4","nodeType":"YulTypedName","src":"2960:2:4","type":""}]},{"body":{"nativeSrc":"3036:16:4","nodeType":"YulBlock","src":"3036:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3045:1:4","nodeType":"YulLiteral","src":"3045:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"3048:1:4","nodeType":"YulLiteral","src":"3048:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3038:6:4","nodeType":"YulIdentifier","src":"3038:6:4"},"nativeSrc":"3038:12:4","nodeType":"YulFunctionCall","src":"3038:12:4"},"nativeSrc":"3038:12:4","nodeType":"YulExpressionStatement","src":"3038:12:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"3015:2:4","nodeType":"YulIdentifier","src":"3015:2:4"},{"kind":"number","nativeSrc":"3019:4:4","nodeType":"YulLiteral","src":"3019:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3011:3:4","nodeType":"YulIdentifier","src":"3011:3:4"},"nativeSrc":"3011:13:4","nodeType":"YulFunctionCall","src":"3011:13:4"},{"name":"dataEnd","nativeSrc":"3026:7:4","nodeType":"YulIdentifier","src":"3026:7:4"}],"functionName":{"name":"slt","nativeSrc":"3007:3:4","nodeType":"YulIdentifier","src":"3007:3:4"},"nativeSrc":"3007:27:4","nodeType":"YulFunctionCall","src":"3007:27:4"}],"functionName":{"name":"iszero","nativeSrc":"3000:6:4","nodeType":"YulIdentifier","src":"3000:6:4"},"nativeSrc":"3000:35:4","nodeType":"YulFunctionCall","src":"3000:35:4"},"nativeSrc":"2997:55:4","nodeType":"YulIf","src":"2997:55:4"},{"nativeSrc":"3061:26:4","nodeType":"YulVariableDeclaration","src":"3061:26:4","value":{"arguments":[{"name":"_3","nativeSrc":"3084:2:4","nodeType":"YulIdentifier","src":"3084:2:4"}],"functionName":{"name":"calldataload","nativeSrc":"3071:12:4","nodeType":"YulIdentifier","src":"3071:12:4"},"nativeSrc":"3071:16:4","nodeType":"YulFunctionCall","src":"3071:16:4"},"variables":[{"name":"_4","nativeSrc":"3065:2:4","nodeType":"YulTypedName","src":"3065:2:4","type":""}]},{"body":{"nativeSrc":"3110:22:4","nodeType":"YulBlock","src":"3110:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3112:16:4","nodeType":"YulIdentifier","src":"3112:16:4"},"nativeSrc":"3112:18:4","nodeType":"YulFunctionCall","src":"3112:18:4"},"nativeSrc":"3112:18:4","nodeType":"YulExpressionStatement","src":"3112:18:4"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"3102:2:4","nodeType":"YulIdentifier","src":"3102:2:4"},{"name":"_2","nativeSrc":"3106:2:4","nodeType":"YulIdentifier","src":"3106:2:4"}],"functionName":{"name":"gt","nativeSrc":"3099:2:4","nodeType":"YulIdentifier","src":"3099:2:4"},"nativeSrc":"3099:10:4","nodeType":"YulFunctionCall","src":"3099:10:4"},"nativeSrc":"3096:36:4","nodeType":"YulIf","src":"3096:36:4"},{"nativeSrc":"3141:66:4","nodeType":"YulVariableDeclaration","src":"3141:66:4","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"3182:2:4","nodeType":"YulIdentifier","src":"3182:2:4"},{"kind":"number","nativeSrc":"3186:4:4","nodeType":"YulLiteral","src":"3186:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3178:3:4","nodeType":"YulIdentifier","src":"3178:3:4"},"nativeSrc":"3178:13:4","nodeType":"YulFunctionCall","src":"3178:13:4"},{"arguments":[{"kind":"number","nativeSrc":"3197:2:4","nodeType":"YulLiteral","src":"3197:2:4","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3193:3:4","nodeType":"YulIdentifier","src":"3193:3:4"},"nativeSrc":"3193:7:4","nodeType":"YulFunctionCall","src":"3193:7:4"}],"functionName":{"name":"and","nativeSrc":"3174:3:4","nodeType":"YulIdentifier","src":"3174:3:4"},"nativeSrc":"3174:27:4","nodeType":"YulFunctionCall","src":"3174:27:4"},{"name":"_1","nativeSrc":"3203:2:4","nodeType":"YulIdentifier","src":"3203:2:4"}],"functionName":{"name":"add","nativeSrc":"3170:3:4","nodeType":"YulIdentifier","src":"3170:3:4"},"nativeSrc":"3170:36:4","nodeType":"YulFunctionCall","src":"3170:36:4"}],"functionName":{"name":"allocate_memory","nativeSrc":"3154:15:4","nodeType":"YulIdentifier","src":"3154:15:4"},"nativeSrc":"3154:53:4","nodeType":"YulFunctionCall","src":"3154:53:4"},"variables":[{"name":"array","nativeSrc":"3145:5:4","nodeType":"YulTypedName","src":"3145:5:4","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"3223:5:4","nodeType":"YulIdentifier","src":"3223:5:4"},{"name":"_4","nativeSrc":"3230:2:4","nodeType":"YulIdentifier","src":"3230:2:4"}],"functionName":{"name":"mstore","nativeSrc":"3216:6:4","nodeType":"YulIdentifier","src":"3216:6:4"},"nativeSrc":"3216:17:4","nodeType":"YulFunctionCall","src":"3216:17:4"},"nativeSrc":"3216:17:4","nodeType":"YulExpressionStatement","src":"3216:17:4"},{"body":{"nativeSrc":"3279:16:4","nodeType":"YulBlock","src":"3279:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3288:1:4","nodeType":"YulLiteral","src":"3288:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"3291:1:4","nodeType":"YulLiteral","src":"3291:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3281:6:4","nodeType":"YulIdentifier","src":"3281:6:4"},"nativeSrc":"3281:12:4","nodeType":"YulFunctionCall","src":"3281:12:4"},"nativeSrc":"3281:12:4","nodeType":"YulExpressionStatement","src":"3281:12:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"3256:2:4","nodeType":"YulIdentifier","src":"3256:2:4"},{"name":"_4","nativeSrc":"3260:2:4","nodeType":"YulIdentifier","src":"3260:2:4"}],"functionName":{"name":"add","nativeSrc":"3252:3:4","nodeType":"YulIdentifier","src":"3252:3:4"},"nativeSrc":"3252:11:4","nodeType":"YulFunctionCall","src":"3252:11:4"},{"name":"_1","nativeSrc":"3265:2:4","nodeType":"YulIdentifier","src":"3265:2:4"}],"functionName":{"name":"add","nativeSrc":"3248:3:4","nodeType":"YulIdentifier","src":"3248:3:4"},"nativeSrc":"3248:20:4","nodeType":"YulFunctionCall","src":"3248:20:4"},{"name":"dataEnd","nativeSrc":"3270:7:4","nodeType":"YulIdentifier","src":"3270:7:4"}],"functionName":{"name":"gt","nativeSrc":"3245:2:4","nodeType":"YulIdentifier","src":"3245:2:4"},"nativeSrc":"3245:33:4","nodeType":"YulFunctionCall","src":"3245:33:4"},"nativeSrc":"3242:53:4","nodeType":"YulIf","src":"3242:53:4"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"3321:5:4","nodeType":"YulIdentifier","src":"3321:5:4"},{"name":"_1","nativeSrc":"3328:2:4","nodeType":"YulIdentifier","src":"3328:2:4"}],"functionName":{"name":"add","nativeSrc":"3317:3:4","nodeType":"YulIdentifier","src":"3317:3:4"},"nativeSrc":"3317:14:4","nodeType":"YulFunctionCall","src":"3317:14:4"},{"arguments":[{"name":"_3","nativeSrc":"3337:2:4","nodeType":"YulIdentifier","src":"3337:2:4"},{"name":"_1","nativeSrc":"3341:2:4","nodeType":"YulIdentifier","src":"3341:2:4"}],"functionName":{"name":"add","nativeSrc":"3333:3:4","nodeType":"YulIdentifier","src":"3333:3:4"},"nativeSrc":"3333:11:4","nodeType":"YulFunctionCall","src":"3333:11:4"},{"name":"_4","nativeSrc":"3346:2:4","nodeType":"YulIdentifier","src":"3346:2:4"}],"functionName":{"name":"calldatacopy","nativeSrc":"3304:12:4","nodeType":"YulIdentifier","src":"3304:12:4"},"nativeSrc":"3304:45:4","nodeType":"YulFunctionCall","src":"3304:45:4"},"nativeSrc":"3304:45:4","nodeType":"YulExpressionStatement","src":"3304:45:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"3373:5:4","nodeType":"YulIdentifier","src":"3373:5:4"},{"name":"_4","nativeSrc":"3380:2:4","nodeType":"YulIdentifier","src":"3380:2:4"}],"functionName":{"name":"add","nativeSrc":"3369:3:4","nodeType":"YulIdentifier","src":"3369:3:4"},"nativeSrc":"3369:14:4","nodeType":"YulFunctionCall","src":"3369:14:4"},{"name":"_1","nativeSrc":"3385:2:4","nodeType":"YulIdentifier","src":"3385:2:4"}],"functionName":{"name":"add","nativeSrc":"3365:3:4","nodeType":"YulIdentifier","src":"3365:3:4"},"nativeSrc":"3365:23:4","nodeType":"YulFunctionCall","src":"3365:23:4"},{"kind":"number","nativeSrc":"3390:1:4","nodeType":"YulLiteral","src":"3390:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3358:6:4","nodeType":"YulIdentifier","src":"3358:6:4"},"nativeSrc":"3358:34:4","nodeType":"YulFunctionCall","src":"3358:34:4"},"nativeSrc":"3358:34:4","nodeType":"YulExpressionStatement","src":"3358:34:4"},{"nativeSrc":"3401:15:4","nodeType":"YulAssignment","src":"3401:15:4","value":{"name":"array","nativeSrc":"3411:5:4","nodeType":"YulIdentifier","src":"3411:5:4"},"variableNames":[{"name":"value1","nativeSrc":"3401:6:4","nodeType":"YulIdentifier","src":"3401:6:4"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"2585:837:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2639:9:4","nodeType":"YulTypedName","src":"2639:9:4","type":""},{"name":"dataEnd","nativeSrc":"2650:7:4","nodeType":"YulTypedName","src":"2650:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2662:6:4","nodeType":"YulTypedName","src":"2662:6:4","type":""},{"name":"value1","nativeSrc":"2670:6:4","nodeType":"YulTypedName","src":"2670:6:4","type":""}],"src":"2585:837:4"},{"body":{"nativeSrc":"3493:184:4","nodeType":"YulBlock","src":"3493:184:4","statements":[{"nativeSrc":"3503:10:4","nodeType":"YulVariableDeclaration","src":"3503:10:4","value":{"kind":"number","nativeSrc":"3512:1:4","nodeType":"YulLiteral","src":"3512:1:4","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3507:1:4","nodeType":"YulTypedName","src":"3507:1:4","type":""}]},{"body":{"nativeSrc":"3572:63:4","nodeType":"YulBlock","src":"3572:63:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3597:3:4","nodeType":"YulIdentifier","src":"3597:3:4"},{"name":"i","nativeSrc":"3602:1:4","nodeType":"YulIdentifier","src":"3602:1:4"}],"functionName":{"name":"add","nativeSrc":"3593:3:4","nodeType":"YulIdentifier","src":"3593:3:4"},"nativeSrc":"3593:11:4","nodeType":"YulFunctionCall","src":"3593:11:4"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3616:3:4","nodeType":"YulIdentifier","src":"3616:3:4"},{"name":"i","nativeSrc":"3621:1:4","nodeType":"YulIdentifier","src":"3621:1:4"}],"functionName":{"name":"add","nativeSrc":"3612:3:4","nodeType":"YulIdentifier","src":"3612:3:4"},"nativeSrc":"3612:11:4","nodeType":"YulFunctionCall","src":"3612:11:4"}],"functionName":{"name":"mload","nativeSrc":"3606:5:4","nodeType":"YulIdentifier","src":"3606:5:4"},"nativeSrc":"3606:18:4","nodeType":"YulFunctionCall","src":"3606:18:4"}],"functionName":{"name":"mstore","nativeSrc":"3586:6:4","nodeType":"YulIdentifier","src":"3586:6:4"},"nativeSrc":"3586:39:4","nodeType":"YulFunctionCall","src":"3586:39:4"},"nativeSrc":"3586:39:4","nodeType":"YulExpressionStatement","src":"3586:39:4"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3533:1:4","nodeType":"YulIdentifier","src":"3533:1:4"},{"name":"length","nativeSrc":"3536:6:4","nodeType":"YulIdentifier","src":"3536:6:4"}],"functionName":{"name":"lt","nativeSrc":"3530:2:4","nodeType":"YulIdentifier","src":"3530:2:4"},"nativeSrc":"3530:13:4","nodeType":"YulFunctionCall","src":"3530:13:4"},"nativeSrc":"3522:113:4","nodeType":"YulForLoop","post":{"nativeSrc":"3544:19:4","nodeType":"YulBlock","src":"3544:19:4","statements":[{"nativeSrc":"3546:15:4","nodeType":"YulAssignment","src":"3546:15:4","value":{"arguments":[{"name":"i","nativeSrc":"3555:1:4","nodeType":"YulIdentifier","src":"3555:1:4"},{"kind":"number","nativeSrc":"3558:2:4","nodeType":"YulLiteral","src":"3558:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3551:3:4","nodeType":"YulIdentifier","src":"3551:3:4"},"nativeSrc":"3551:10:4","nodeType":"YulFunctionCall","src":"3551:10:4"},"variableNames":[{"name":"i","nativeSrc":"3546:1:4","nodeType":"YulIdentifier","src":"3546:1:4"}]}]},"pre":{"nativeSrc":"3526:3:4","nodeType":"YulBlock","src":"3526:3:4","statements":[]},"src":"3522:113:4"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3655:3:4","nodeType":"YulIdentifier","src":"3655:3:4"},{"name":"length","nativeSrc":"3660:6:4","nodeType":"YulIdentifier","src":"3660:6:4"}],"functionName":{"name":"add","nativeSrc":"3651:3:4","nodeType":"YulIdentifier","src":"3651:3:4"},"nativeSrc":"3651:16:4","nodeType":"YulFunctionCall","src":"3651:16:4"},{"kind":"number","nativeSrc":"3669:1:4","nodeType":"YulLiteral","src":"3669:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3644:6:4","nodeType":"YulIdentifier","src":"3644:6:4"},"nativeSrc":"3644:27:4","nodeType":"YulFunctionCall","src":"3644:27:4"},"nativeSrc":"3644:27:4","nodeType":"YulExpressionStatement","src":"3644:27:4"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3427:250:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3471:3:4","nodeType":"YulTypedName","src":"3471:3:4","type":""},{"name":"dst","nativeSrc":"3476:3:4","nodeType":"YulTypedName","src":"3476:3:4","type":""},{"name":"length","nativeSrc":"3481:6:4","nodeType":"YulTypedName","src":"3481:6:4","type":""}],"src":"3427:250:4"},{"body":{"nativeSrc":"3731:221:4","nodeType":"YulBlock","src":"3731:221:4","statements":[{"nativeSrc":"3741:26:4","nodeType":"YulVariableDeclaration","src":"3741:26:4","value":{"arguments":[{"name":"value","nativeSrc":"3761:5:4","nodeType":"YulIdentifier","src":"3761:5:4"}],"functionName":{"name":"mload","nativeSrc":"3755:5:4","nodeType":"YulIdentifier","src":"3755:5:4"},"nativeSrc":"3755:12:4","nodeType":"YulFunctionCall","src":"3755:12:4"},"variables":[{"name":"length","nativeSrc":"3745:6:4","nodeType":"YulTypedName","src":"3745:6:4","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3783:3:4","nodeType":"YulIdentifier","src":"3783:3:4"},{"name":"length","nativeSrc":"3788:6:4","nodeType":"YulIdentifier","src":"3788:6:4"}],"functionName":{"name":"mstore","nativeSrc":"3776:6:4","nodeType":"YulIdentifier","src":"3776:6:4"},"nativeSrc":"3776:19:4","nodeType":"YulFunctionCall","src":"3776:19:4"},"nativeSrc":"3776:19:4","nodeType":"YulExpressionStatement","src":"3776:19:4"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3843:5:4","nodeType":"YulIdentifier","src":"3843:5:4"},{"kind":"number","nativeSrc":"3850:4:4","nodeType":"YulLiteral","src":"3850:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3839:3:4","nodeType":"YulIdentifier","src":"3839:3:4"},"nativeSrc":"3839:16:4","nodeType":"YulFunctionCall","src":"3839:16:4"},{"arguments":[{"name":"pos","nativeSrc":"3861:3:4","nodeType":"YulIdentifier","src":"3861:3:4"},{"kind":"number","nativeSrc":"3866:4:4","nodeType":"YulLiteral","src":"3866:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3857:3:4","nodeType":"YulIdentifier","src":"3857:3:4"},"nativeSrc":"3857:14:4","nodeType":"YulFunctionCall","src":"3857:14:4"},{"name":"length","nativeSrc":"3873:6:4","nodeType":"YulIdentifier","src":"3873:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3804:34:4","nodeType":"YulIdentifier","src":"3804:34:4"},"nativeSrc":"3804:76:4","nodeType":"YulFunctionCall","src":"3804:76:4"},"nativeSrc":"3804:76:4","nodeType":"YulExpressionStatement","src":"3804:76:4"},{"nativeSrc":"3889:57:4","nodeType":"YulAssignment","src":"3889:57:4","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"3904:3:4","nodeType":"YulIdentifier","src":"3904:3:4"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3917:6:4","nodeType":"YulIdentifier","src":"3917:6:4"},{"kind":"number","nativeSrc":"3925:2:4","nodeType":"YulLiteral","src":"3925:2:4","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3913:3:4","nodeType":"YulIdentifier","src":"3913:3:4"},"nativeSrc":"3913:15:4","nodeType":"YulFunctionCall","src":"3913:15:4"},{"arguments":[{"kind":"number","nativeSrc":"3934:2:4","nodeType":"YulLiteral","src":"3934:2:4","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3930:3:4","nodeType":"YulIdentifier","src":"3930:3:4"},"nativeSrc":"3930:7:4","nodeType":"YulFunctionCall","src":"3930:7:4"}],"functionName":{"name":"and","nativeSrc":"3909:3:4","nodeType":"YulIdentifier","src":"3909:3:4"},"nativeSrc":"3909:29:4","nodeType":"YulFunctionCall","src":"3909:29:4"}],"functionName":{"name":"add","nativeSrc":"3900:3:4","nodeType":"YulIdentifier","src":"3900:3:4"},"nativeSrc":"3900:39:4","nodeType":"YulFunctionCall","src":"3900:39:4"},{"kind":"number","nativeSrc":"3941:4:4","nodeType":"YulLiteral","src":"3941:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3896:3:4","nodeType":"YulIdentifier","src":"3896:3:4"},"nativeSrc":"3896:50:4","nodeType":"YulFunctionCall","src":"3896:50:4"},"variableNames":[{"name":"end","nativeSrc":"3889:3:4","nodeType":"YulIdentifier","src":"3889:3:4"}]}]},"name":"abi_encode_bytes","nativeSrc":"3682:270:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3708:5:4","nodeType":"YulTypedName","src":"3708:5:4","type":""},{"name":"pos","nativeSrc":"3715:3:4","nodeType":"YulTypedName","src":"3715:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3723:3:4","nodeType":"YulTypedName","src":"3723:3:4","type":""}],"src":"3682:270:4"},{"body":{"nativeSrc":"4102:141:4","nodeType":"YulBlock","src":"4102:141:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4119:9:4","nodeType":"YulIdentifier","src":"4119:9:4"},{"name":"value0","nativeSrc":"4130:6:4","nodeType":"YulIdentifier","src":"4130:6:4"}],"functionName":{"name":"mstore","nativeSrc":"4112:6:4","nodeType":"YulIdentifier","src":"4112:6:4"},"nativeSrc":"4112:25:4","nodeType":"YulFunctionCall","src":"4112:25:4"},"nativeSrc":"4112:25:4","nodeType":"YulExpressionStatement","src":"4112:25:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4157:9:4","nodeType":"YulIdentifier","src":"4157:9:4"},{"kind":"number","nativeSrc":"4168:2:4","nodeType":"YulLiteral","src":"4168:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4153:3:4","nodeType":"YulIdentifier","src":"4153:3:4"},"nativeSrc":"4153:18:4","nodeType":"YulFunctionCall","src":"4153:18:4"},{"kind":"number","nativeSrc":"4173:2:4","nodeType":"YulLiteral","src":"4173:2:4","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"4146:6:4","nodeType":"YulIdentifier","src":"4146:6:4"},"nativeSrc":"4146:30:4","nodeType":"YulFunctionCall","src":"4146:30:4"},"nativeSrc":"4146:30:4","nodeType":"YulExpressionStatement","src":"4146:30:4"},{"nativeSrc":"4185:52:4","nodeType":"YulAssignment","src":"4185:52:4","value":{"arguments":[{"name":"value1","nativeSrc":"4210:6:4","nodeType":"YulIdentifier","src":"4210:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"4222:9:4","nodeType":"YulIdentifier","src":"4222:9:4"},{"kind":"number","nativeSrc":"4233:2:4","nodeType":"YulLiteral","src":"4233:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4218:3:4","nodeType":"YulIdentifier","src":"4218:3:4"},"nativeSrc":"4218:18:4","nodeType":"YulFunctionCall","src":"4218:18:4"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"4193:16:4","nodeType":"YulIdentifier","src":"4193:16:4"},"nativeSrc":"4193:44:4","nodeType":"YulFunctionCall","src":"4193:44:4"},"variableNames":[{"name":"tail","nativeSrc":"4185:4:4","nodeType":"YulIdentifier","src":"4185:4:4"}]}]},"name":"abi_encode_tuple_t_int256_t_bytes_memory_ptr__to_t_int256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"3957:286:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4063:9:4","nodeType":"YulTypedName","src":"4063:9:4","type":""},{"name":"value1","nativeSrc":"4074:6:4","nodeType":"YulTypedName","src":"4074:6:4","type":""},{"name":"value0","nativeSrc":"4082:6:4","nodeType":"YulTypedName","src":"4082:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4093:4:4","nodeType":"YulTypedName","src":"4093:4:4","type":""}],"src":"3957:286:4"},{"body":{"nativeSrc":"4387:210:4","nodeType":"YulBlock","src":"4387:210:4","statements":[{"nativeSrc":"4397:26:4","nodeType":"YulAssignment","src":"4397:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"4409:9:4","nodeType":"YulIdentifier","src":"4409:9:4"},{"kind":"number","nativeSrc":"4420:2:4","nodeType":"YulLiteral","src":"4420:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4405:3:4","nodeType":"YulIdentifier","src":"4405:3:4"},"nativeSrc":"4405:18:4","nodeType":"YulFunctionCall","src":"4405:18:4"},"variableNames":[{"name":"tail","nativeSrc":"4397:4:4","nodeType":"YulIdentifier","src":"4397:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4439:9:4","nodeType":"YulIdentifier","src":"4439:9:4"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4464:6:4","nodeType":"YulIdentifier","src":"4464:6:4"}],"functionName":{"name":"iszero","nativeSrc":"4457:6:4","nodeType":"YulIdentifier","src":"4457:6:4"},"nativeSrc":"4457:14:4","nodeType":"YulFunctionCall","src":"4457:14:4"}],"functionName":{"name":"iszero","nativeSrc":"4450:6:4","nodeType":"YulIdentifier","src":"4450:6:4"},"nativeSrc":"4450:22:4","nodeType":"YulFunctionCall","src":"4450:22:4"}],"functionName":{"name":"mstore","nativeSrc":"4432:6:4","nodeType":"YulIdentifier","src":"4432:6:4"},"nativeSrc":"4432:41:4","nodeType":"YulFunctionCall","src":"4432:41:4"},"nativeSrc":"4432:41:4","nodeType":"YulExpressionStatement","src":"4432:41:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4493:9:4","nodeType":"YulIdentifier","src":"4493:9:4"},{"kind":"number","nativeSrc":"4504:2:4","nodeType":"YulLiteral","src":"4504:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4489:3:4","nodeType":"YulIdentifier","src":"4489:3:4"},"nativeSrc":"4489:18:4","nodeType":"YulFunctionCall","src":"4489:18:4"},{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"4523:6:4","nodeType":"YulIdentifier","src":"4523:6:4"}],"functionName":{"name":"iszero","nativeSrc":"4516:6:4","nodeType":"YulIdentifier","src":"4516:6:4"},"nativeSrc":"4516:14:4","nodeType":"YulFunctionCall","src":"4516:14:4"}],"functionName":{"name":"iszero","nativeSrc":"4509:6:4","nodeType":"YulIdentifier","src":"4509:6:4"},"nativeSrc":"4509:22:4","nodeType":"YulFunctionCall","src":"4509:22:4"}],"functionName":{"name":"mstore","nativeSrc":"4482:6:4","nodeType":"YulIdentifier","src":"4482:6:4"},"nativeSrc":"4482:50:4","nodeType":"YulFunctionCall","src":"4482:50:4"},"nativeSrc":"4482:50:4","nodeType":"YulExpressionStatement","src":"4482:50:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4552:9:4","nodeType":"YulIdentifier","src":"4552:9:4"},{"kind":"number","nativeSrc":"4563:2:4","nodeType":"YulLiteral","src":"4563:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4548:3:4","nodeType":"YulIdentifier","src":"4548:3:4"},"nativeSrc":"4548:18:4","nodeType":"YulFunctionCall","src":"4548:18:4"},{"arguments":[{"arguments":[{"name":"value2","nativeSrc":"4582:6:4","nodeType":"YulIdentifier","src":"4582:6:4"}],"functionName":{"name":"iszero","nativeSrc":"4575:6:4","nodeType":"YulIdentifier","src":"4575:6:4"},"nativeSrc":"4575:14:4","nodeType":"YulFunctionCall","src":"4575:14:4"}],"functionName":{"name":"iszero","nativeSrc":"4568:6:4","nodeType":"YulIdentifier","src":"4568:6:4"},"nativeSrc":"4568:22:4","nodeType":"YulFunctionCall","src":"4568:22:4"}],"functionName":{"name":"mstore","nativeSrc":"4541:6:4","nodeType":"YulIdentifier","src":"4541:6:4"},"nativeSrc":"4541:50:4","nodeType":"YulFunctionCall","src":"4541:50:4"},"nativeSrc":"4541:50:4","nodeType":"YulExpressionStatement","src":"4541:50:4"}]},"name":"abi_encode_tuple_t_bool_t_bool_t_bool__to_t_bool_t_bool_t_bool__fromStack_reversed","nativeSrc":"4248:349:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4340:9:4","nodeType":"YulTypedName","src":"4340:9:4","type":""},{"name":"value2","nativeSrc":"4351:6:4","nodeType":"YulTypedName","src":"4351:6:4","type":""},{"name":"value1","nativeSrc":"4359:6:4","nodeType":"YulTypedName","src":"4359:6:4","type":""},{"name":"value0","nativeSrc":"4367:6:4","nodeType":"YulTypedName","src":"4367:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4378:4:4","nodeType":"YulTypedName","src":"4378:4:4","type":""}],"src":"4248:349:4"},{"body":{"nativeSrc":"4689:173:4","nodeType":"YulBlock","src":"4689:173:4","statements":[{"body":{"nativeSrc":"4735:16:4","nodeType":"YulBlock","src":"4735:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4744:1:4","nodeType":"YulLiteral","src":"4744:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"4747:1:4","nodeType":"YulLiteral","src":"4747:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4737:6:4","nodeType":"YulIdentifier","src":"4737:6:4"},"nativeSrc":"4737:12:4","nodeType":"YulFunctionCall","src":"4737:12:4"},"nativeSrc":"4737:12:4","nodeType":"YulExpressionStatement","src":"4737:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4710:7:4","nodeType":"YulIdentifier","src":"4710:7:4"},{"name":"headStart","nativeSrc":"4719:9:4","nodeType":"YulIdentifier","src":"4719:9:4"}],"functionName":{"name":"sub","nativeSrc":"4706:3:4","nodeType":"YulIdentifier","src":"4706:3:4"},"nativeSrc":"4706:23:4","nodeType":"YulFunctionCall","src":"4706:23:4"},{"kind":"number","nativeSrc":"4731:2:4","nodeType":"YulLiteral","src":"4731:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4702:3:4","nodeType":"YulIdentifier","src":"4702:3:4"},"nativeSrc":"4702:32:4","nodeType":"YulFunctionCall","src":"4702:32:4"},"nativeSrc":"4699:52:4","nodeType":"YulIf","src":"4699:52:4"},{"nativeSrc":"4760:39:4","nodeType":"YulAssignment","src":"4760:39:4","value":{"arguments":[{"name":"headStart","nativeSrc":"4789:9:4","nodeType":"YulIdentifier","src":"4789:9:4"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4770:18:4","nodeType":"YulIdentifier","src":"4770:18:4"},"nativeSrc":"4770:29:4","nodeType":"YulFunctionCall","src":"4770:29:4"},"variableNames":[{"name":"value0","nativeSrc":"4760:6:4","nodeType":"YulIdentifier","src":"4760:6:4"}]},{"nativeSrc":"4808:48:4","nodeType":"YulAssignment","src":"4808:48:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:4","nodeType":"YulIdentifier","src":"4841:9:4"},{"kind":"number","nativeSrc":"4852:2:4","nodeType":"YulLiteral","src":"4852:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4837:3:4","nodeType":"YulIdentifier","src":"4837:3:4"},"nativeSrc":"4837:18:4","nodeType":"YulFunctionCall","src":"4837:18:4"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4818:18:4","nodeType":"YulIdentifier","src":"4818:18:4"},"nativeSrc":"4818:38:4","nodeType":"YulFunctionCall","src":"4818:38:4"},"variableNames":[{"name":"value1","nativeSrc":"4808:6:4","nodeType":"YulIdentifier","src":"4808:6:4"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"4602:260:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4647:9:4","nodeType":"YulTypedName","src":"4647:9:4","type":""},{"name":"dataEnd","nativeSrc":"4658:7:4","nodeType":"YulTypedName","src":"4658:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4670:6:4","nodeType":"YulTypedName","src":"4670:6:4","type":""},{"name":"value1","nativeSrc":"4678:6:4","nodeType":"YulTypedName","src":"4678:6:4","type":""}],"src":"4602:260:4"},{"body":{"nativeSrc":"5040:238:4","nodeType":"YulBlock","src":"5040:238:4","statements":[{"nativeSrc":"5050:27:4","nodeType":"YulAssignment","src":"5050:27:4","value":{"arguments":[{"name":"headStart","nativeSrc":"5062:9:4","nodeType":"YulIdentifier","src":"5062:9:4"},{"kind":"number","nativeSrc":"5073:3:4","nodeType":"YulLiteral","src":"5073:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5058:3:4","nodeType":"YulIdentifier","src":"5058:3:4"},"nativeSrc":"5058:19:4","nodeType":"YulFunctionCall","src":"5058:19:4"},"variableNames":[{"name":"tail","nativeSrc":"5050:4:4","nodeType":"YulIdentifier","src":"5050:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5093:9:4","nodeType":"YulIdentifier","src":"5093:9:4"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5118:6:4","nodeType":"YulIdentifier","src":"5118:6:4"}],"functionName":{"name":"iszero","nativeSrc":"5111:6:4","nodeType":"YulIdentifier","src":"5111:6:4"},"nativeSrc":"5111:14:4","nodeType":"YulFunctionCall","src":"5111:14:4"}],"functionName":{"name":"iszero","nativeSrc":"5104:6:4","nodeType":"YulIdentifier","src":"5104:6:4"},"nativeSrc":"5104:22:4","nodeType":"YulFunctionCall","src":"5104:22:4"}],"functionName":{"name":"mstore","nativeSrc":"5086:6:4","nodeType":"YulIdentifier","src":"5086:6:4"},"nativeSrc":"5086:41:4","nodeType":"YulFunctionCall","src":"5086:41:4"},"nativeSrc":"5086:41:4","nodeType":"YulExpressionStatement","src":"5086:41:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5147:9:4","nodeType":"YulIdentifier","src":"5147:9:4"},{"kind":"number","nativeSrc":"5158:2:4","nodeType":"YulLiteral","src":"5158:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5143:3:4","nodeType":"YulIdentifier","src":"5143:3:4"},"nativeSrc":"5143:18:4","nodeType":"YulFunctionCall","src":"5143:18:4"},{"name":"value1","nativeSrc":"5163:6:4","nodeType":"YulIdentifier","src":"5163:6:4"}],"functionName":{"name":"mstore","nativeSrc":"5136:6:4","nodeType":"YulIdentifier","src":"5136:6:4"},"nativeSrc":"5136:34:4","nodeType":"YulFunctionCall","src":"5136:34:4"},"nativeSrc":"5136:34:4","nodeType":"YulExpressionStatement","src":"5136:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5190:9:4","nodeType":"YulIdentifier","src":"5190:9:4"},{"kind":"number","nativeSrc":"5201:2:4","nodeType":"YulLiteral","src":"5201:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5186:3:4","nodeType":"YulIdentifier","src":"5186:3:4"},"nativeSrc":"5186:18:4","nodeType":"YulFunctionCall","src":"5186:18:4"},{"name":"value2","nativeSrc":"5206:6:4","nodeType":"YulIdentifier","src":"5206:6:4"}],"functionName":{"name":"mstore","nativeSrc":"5179:6:4","nodeType":"YulIdentifier","src":"5179:6:4"},"nativeSrc":"5179:34:4","nodeType":"YulFunctionCall","src":"5179:34:4"},"nativeSrc":"5179:34:4","nodeType":"YulExpressionStatement","src":"5179:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5233:9:4","nodeType":"YulIdentifier","src":"5233:9:4"},{"kind":"number","nativeSrc":"5244:2:4","nodeType":"YulLiteral","src":"5244:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5229:3:4","nodeType":"YulIdentifier","src":"5229:3:4"},"nativeSrc":"5229:18:4","nodeType":"YulFunctionCall","src":"5229:18:4"},{"arguments":[{"arguments":[{"name":"value3","nativeSrc":"5263:6:4","nodeType":"YulIdentifier","src":"5263:6:4"}],"functionName":{"name":"iszero","nativeSrc":"5256:6:4","nodeType":"YulIdentifier","src":"5256:6:4"},"nativeSrc":"5256:14:4","nodeType":"YulFunctionCall","src":"5256:14:4"}],"functionName":{"name":"iszero","nativeSrc":"5249:6:4","nodeType":"YulIdentifier","src":"5249:6:4"},"nativeSrc":"5249:22:4","nodeType":"YulFunctionCall","src":"5249:22:4"}],"functionName":{"name":"mstore","nativeSrc":"5222:6:4","nodeType":"YulIdentifier","src":"5222:6:4"},"nativeSrc":"5222:50:4","nodeType":"YulFunctionCall","src":"5222:50:4"},"nativeSrc":"5222:50:4","nodeType":"YulExpressionStatement","src":"5222:50:4"}]},"name":"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_bool__to_t_bool_t_uint256_t_uint256_t_bool__fromStack_reversed","nativeSrc":"4867:411:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4985:9:4","nodeType":"YulTypedName","src":"4985:9:4","type":""},{"name":"value3","nativeSrc":"4996:6:4","nodeType":"YulTypedName","src":"4996:6:4","type":""},{"name":"value2","nativeSrc":"5004:6:4","nodeType":"YulTypedName","src":"5004:6:4","type":""},{"name":"value1","nativeSrc":"5012:6:4","nodeType":"YulTypedName","src":"5012:6:4","type":""},{"name":"value0","nativeSrc":"5020:6:4","nodeType":"YulTypedName","src":"5020:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5031:4:4","nodeType":"YulTypedName","src":"5031:4:4","type":""}],"src":"4867:411:4"},{"body":{"nativeSrc":"5353:110:4","nodeType":"YulBlock","src":"5353:110:4","statements":[{"body":{"nativeSrc":"5399:16:4","nodeType":"YulBlock","src":"5399:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5408:1:4","nodeType":"YulLiteral","src":"5408:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"5411:1:4","nodeType":"YulLiteral","src":"5411:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5401:6:4","nodeType":"YulIdentifier","src":"5401:6:4"},"nativeSrc":"5401:12:4","nodeType":"YulFunctionCall","src":"5401:12:4"},"nativeSrc":"5401:12:4","nodeType":"YulExpressionStatement","src":"5401:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5374:7:4","nodeType":"YulIdentifier","src":"5374:7:4"},{"name":"headStart","nativeSrc":"5383:9:4","nodeType":"YulIdentifier","src":"5383:9:4"}],"functionName":{"name":"sub","nativeSrc":"5370:3:4","nodeType":"YulIdentifier","src":"5370:3:4"},"nativeSrc":"5370:23:4","nodeType":"YulFunctionCall","src":"5370:23:4"},{"kind":"number","nativeSrc":"5395:2:4","nodeType":"YulLiteral","src":"5395:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5366:3:4","nodeType":"YulIdentifier","src":"5366:3:4"},"nativeSrc":"5366:32:4","nodeType":"YulFunctionCall","src":"5366:32:4"},"nativeSrc":"5363:52:4","nodeType":"YulIf","src":"5363:52:4"},{"nativeSrc":"5424:33:4","nodeType":"YulAssignment","src":"5424:33:4","value":{"arguments":[{"name":"headStart","nativeSrc":"5447:9:4","nodeType":"YulIdentifier","src":"5447:9:4"}],"functionName":{"name":"calldataload","nativeSrc":"5434:12:4","nodeType":"YulIdentifier","src":"5434:12:4"},"nativeSrc":"5434:23:4","nodeType":"YulFunctionCall","src":"5434:23:4"},"variableNames":[{"name":"value0","nativeSrc":"5424:6:4","nodeType":"YulIdentifier","src":"5424:6:4"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5283:180:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5319:9:4","nodeType":"YulTypedName","src":"5319:9:4","type":""},{"name":"dataEnd","nativeSrc":"5330:7:4","nodeType":"YulTypedName","src":"5330:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5342:6:4","nodeType":"YulTypedName","src":"5342:6:4","type":""}],"src":"5283:180:4"},{"body":{"nativeSrc":"5625:162:4","nodeType":"YulBlock","src":"5625:162:4","statements":[{"nativeSrc":"5635:26:4","nodeType":"YulAssignment","src":"5635:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"5647:9:4","nodeType":"YulIdentifier","src":"5647:9:4"},{"kind":"number","nativeSrc":"5658:2:4","nodeType":"YulLiteral","src":"5658:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5643:3:4","nodeType":"YulIdentifier","src":"5643:3:4"},"nativeSrc":"5643:18:4","nodeType":"YulFunctionCall","src":"5643:18:4"},"variableNames":[{"name":"tail","nativeSrc":"5635:4:4","nodeType":"YulIdentifier","src":"5635:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5677:9:4","nodeType":"YulIdentifier","src":"5677:9:4"},{"name":"value0","nativeSrc":"5688:6:4","nodeType":"YulIdentifier","src":"5688:6:4"}],"functionName":{"name":"mstore","nativeSrc":"5670:6:4","nodeType":"YulIdentifier","src":"5670:6:4"},"nativeSrc":"5670:25:4","nodeType":"YulFunctionCall","src":"5670:25:4"},"nativeSrc":"5670:25:4","nodeType":"YulExpressionStatement","src":"5670:25:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5715:9:4","nodeType":"YulIdentifier","src":"5715:9:4"},{"kind":"number","nativeSrc":"5726:2:4","nodeType":"YulLiteral","src":"5726:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5711:3:4","nodeType":"YulIdentifier","src":"5711:3:4"},"nativeSrc":"5711:18:4","nodeType":"YulFunctionCall","src":"5711:18:4"},{"name":"value1","nativeSrc":"5731:6:4","nodeType":"YulIdentifier","src":"5731:6:4"}],"functionName":{"name":"mstore","nativeSrc":"5704:6:4","nodeType":"YulIdentifier","src":"5704:6:4"},"nativeSrc":"5704:34:4","nodeType":"YulFunctionCall","src":"5704:34:4"},"nativeSrc":"5704:34:4","nodeType":"YulExpressionStatement","src":"5704:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5758:9:4","nodeType":"YulIdentifier","src":"5758:9:4"},{"kind":"number","nativeSrc":"5769:2:4","nodeType":"YulLiteral","src":"5769:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5754:3:4","nodeType":"YulIdentifier","src":"5754:3:4"},"nativeSrc":"5754:18:4","nodeType":"YulFunctionCall","src":"5754:18:4"},{"name":"value2","nativeSrc":"5774:6:4","nodeType":"YulIdentifier","src":"5774:6:4"}],"functionName":{"name":"mstore","nativeSrc":"5747:6:4","nodeType":"YulIdentifier","src":"5747:6:4"},"nativeSrc":"5747:34:4","nodeType":"YulFunctionCall","src":"5747:34:4"},"nativeSrc":"5747:34:4","nodeType":"YulExpressionStatement","src":"5747:34:4"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5468:319:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5578:9:4","nodeType":"YulTypedName","src":"5578:9:4","type":""},{"name":"value2","nativeSrc":"5589:6:4","nodeType":"YulTypedName","src":"5589:6:4","type":""},{"name":"value1","nativeSrc":"5597:6:4","nodeType":"YulTypedName","src":"5597:6:4","type":""},{"name":"value0","nativeSrc":"5605:6:4","nodeType":"YulTypedName","src":"5605:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5616:4:4","nodeType":"YulTypedName","src":"5616:4:4","type":""}],"src":"5468:319:4"},{"body":{"nativeSrc":"5897:510:4","nodeType":"YulBlock","src":"5897:510:4","statements":[{"body":{"nativeSrc":"5943:16:4","nodeType":"YulBlock","src":"5943:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5952:1:4","nodeType":"YulLiteral","src":"5952:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"5955:1:4","nodeType":"YulLiteral","src":"5955:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5945:6:4","nodeType":"YulIdentifier","src":"5945:6:4"},"nativeSrc":"5945:12:4","nodeType":"YulFunctionCall","src":"5945:12:4"},"nativeSrc":"5945:12:4","nodeType":"YulExpressionStatement","src":"5945:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5918:7:4","nodeType":"YulIdentifier","src":"5918:7:4"},{"name":"headStart","nativeSrc":"5927:9:4","nodeType":"YulIdentifier","src":"5927:9:4"}],"functionName":{"name":"sub","nativeSrc":"5914:3:4","nodeType":"YulIdentifier","src":"5914:3:4"},"nativeSrc":"5914:23:4","nodeType":"YulFunctionCall","src":"5914:23:4"},{"kind":"number","nativeSrc":"5939:2:4","nodeType":"YulLiteral","src":"5939:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5910:3:4","nodeType":"YulIdentifier","src":"5910:3:4"},"nativeSrc":"5910:32:4","nodeType":"YulFunctionCall","src":"5910:32:4"},"nativeSrc":"5907:52:4","nodeType":"YulIf","src":"5907:52:4"},{"nativeSrc":"5968:37:4","nodeType":"YulVariableDeclaration","src":"5968:37:4","value":{"arguments":[{"name":"headStart","nativeSrc":"5995:9:4","nodeType":"YulIdentifier","src":"5995:9:4"}],"functionName":{"name":"calldataload","nativeSrc":"5982:12:4","nodeType":"YulIdentifier","src":"5982:12:4"},"nativeSrc":"5982:23:4","nodeType":"YulFunctionCall","src":"5982:23:4"},"variables":[{"name":"offset","nativeSrc":"5972:6:4","nodeType":"YulTypedName","src":"5972:6:4","type":""}]},{"nativeSrc":"6014:28:4","nodeType":"YulVariableDeclaration","src":"6014:28:4","value":{"kind":"number","nativeSrc":"6024:18:4","nodeType":"YulLiteral","src":"6024:18:4","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"6018:2:4","nodeType":"YulTypedName","src":"6018:2:4","type":""}]},{"body":{"nativeSrc":"6069:16:4","nodeType":"YulBlock","src":"6069:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6078:1:4","nodeType":"YulLiteral","src":"6078:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"6081:1:4","nodeType":"YulLiteral","src":"6081:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6071:6:4","nodeType":"YulIdentifier","src":"6071:6:4"},"nativeSrc":"6071:12:4","nodeType":"YulFunctionCall","src":"6071:12:4"},"nativeSrc":"6071:12:4","nodeType":"YulExpressionStatement","src":"6071:12:4"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6057:6:4","nodeType":"YulIdentifier","src":"6057:6:4"},{"name":"_1","nativeSrc":"6065:2:4","nodeType":"YulIdentifier","src":"6065:2:4"}],"functionName":{"name":"gt","nativeSrc":"6054:2:4","nodeType":"YulIdentifier","src":"6054:2:4"},"nativeSrc":"6054:14:4","nodeType":"YulFunctionCall","src":"6054:14:4"},"nativeSrc":"6051:34:4","nodeType":"YulIf","src":"6051:34:4"},{"nativeSrc":"6094:32:4","nodeType":"YulVariableDeclaration","src":"6094:32:4","value":{"arguments":[{"name":"headStart","nativeSrc":"6108:9:4","nodeType":"YulIdentifier","src":"6108:9:4"},{"name":"offset","nativeSrc":"6119:6:4","nodeType":"YulIdentifier","src":"6119:6:4"}],"functionName":{"name":"add","nativeSrc":"6104:3:4","nodeType":"YulIdentifier","src":"6104:3:4"},"nativeSrc":"6104:22:4","nodeType":"YulFunctionCall","src":"6104:22:4"},"variables":[{"name":"_2","nativeSrc":"6098:2:4","nodeType":"YulTypedName","src":"6098:2:4","type":""}]},{"body":{"nativeSrc":"6174:16:4","nodeType":"YulBlock","src":"6174:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6183:1:4","nodeType":"YulLiteral","src":"6183:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"6186:1:4","nodeType":"YulLiteral","src":"6186:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6176:6:4","nodeType":"YulIdentifier","src":"6176:6:4"},"nativeSrc":"6176:12:4","nodeType":"YulFunctionCall","src":"6176:12:4"},"nativeSrc":"6176:12:4","nodeType":"YulExpressionStatement","src":"6176:12:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"6153:2:4","nodeType":"YulIdentifier","src":"6153:2:4"},{"kind":"number","nativeSrc":"6157:4:4","nodeType":"YulLiteral","src":"6157:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6149:3:4","nodeType":"YulIdentifier","src":"6149:3:4"},"nativeSrc":"6149:13:4","nodeType":"YulFunctionCall","src":"6149:13:4"},{"name":"dataEnd","nativeSrc":"6164:7:4","nodeType":"YulIdentifier","src":"6164:7:4"}],"functionName":{"name":"slt","nativeSrc":"6145:3:4","nodeType":"YulIdentifier","src":"6145:3:4"},"nativeSrc":"6145:27:4","nodeType":"YulFunctionCall","src":"6145:27:4"}],"functionName":{"name":"iszero","nativeSrc":"6138:6:4","nodeType":"YulIdentifier","src":"6138:6:4"},"nativeSrc":"6138:35:4","nodeType":"YulFunctionCall","src":"6138:35:4"},"nativeSrc":"6135:55:4","nodeType":"YulIf","src":"6135:55:4"},{"nativeSrc":"6199:30:4","nodeType":"YulVariableDeclaration","src":"6199:30:4","value":{"arguments":[{"name":"_2","nativeSrc":"6226:2:4","nodeType":"YulIdentifier","src":"6226:2:4"}],"functionName":{"name":"calldataload","nativeSrc":"6213:12:4","nodeType":"YulIdentifier","src":"6213:12:4"},"nativeSrc":"6213:16:4","nodeType":"YulFunctionCall","src":"6213:16:4"},"variables":[{"name":"length","nativeSrc":"6203:6:4","nodeType":"YulTypedName","src":"6203:6:4","type":""}]},{"body":{"nativeSrc":"6256:16:4","nodeType":"YulBlock","src":"6256:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6265:1:4","nodeType":"YulLiteral","src":"6265:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"6268:1:4","nodeType":"YulLiteral","src":"6268:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6258:6:4","nodeType":"YulIdentifier","src":"6258:6:4"},"nativeSrc":"6258:12:4","nodeType":"YulFunctionCall","src":"6258:12:4"},"nativeSrc":"6258:12:4","nodeType":"YulExpressionStatement","src":"6258:12:4"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6244:6:4","nodeType":"YulIdentifier","src":"6244:6:4"},{"name":"_1","nativeSrc":"6252:2:4","nodeType":"YulIdentifier","src":"6252:2:4"}],"functionName":{"name":"gt","nativeSrc":"6241:2:4","nodeType":"YulIdentifier","src":"6241:2:4"},"nativeSrc":"6241:14:4","nodeType":"YulFunctionCall","src":"6241:14:4"},"nativeSrc":"6238:34:4","nodeType":"YulIf","src":"6238:34:4"},{"body":{"nativeSrc":"6330:16:4","nodeType":"YulBlock","src":"6330:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6339:1:4","nodeType":"YulLiteral","src":"6339:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"6342:1:4","nodeType":"YulLiteral","src":"6342:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6332:6:4","nodeType":"YulIdentifier","src":"6332:6:4"},"nativeSrc":"6332:12:4","nodeType":"YulFunctionCall","src":"6332:12:4"},"nativeSrc":"6332:12:4","nodeType":"YulExpressionStatement","src":"6332:12:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"6295:2:4","nodeType":"YulIdentifier","src":"6295:2:4"},{"arguments":[{"kind":"number","nativeSrc":"6303:1:4","nodeType":"YulLiteral","src":"6303:1:4","type":"","value":"5"},{"name":"length","nativeSrc":"6306:6:4","nodeType":"YulIdentifier","src":"6306:6:4"}],"functionName":{"name":"shl","nativeSrc":"6299:3:4","nodeType":"YulIdentifier","src":"6299:3:4"},"nativeSrc":"6299:14:4","nodeType":"YulFunctionCall","src":"6299:14:4"}],"functionName":{"name":"add","nativeSrc":"6291:3:4","nodeType":"YulIdentifier","src":"6291:3:4"},"nativeSrc":"6291:23:4","nodeType":"YulFunctionCall","src":"6291:23:4"},{"kind":"number","nativeSrc":"6316:2:4","nodeType":"YulLiteral","src":"6316:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6287:3:4","nodeType":"YulIdentifier","src":"6287:3:4"},"nativeSrc":"6287:32:4","nodeType":"YulFunctionCall","src":"6287:32:4"},{"name":"dataEnd","nativeSrc":"6321:7:4","nodeType":"YulIdentifier","src":"6321:7:4"}],"functionName":{"name":"gt","nativeSrc":"6284:2:4","nodeType":"YulIdentifier","src":"6284:2:4"},"nativeSrc":"6284:45:4","nodeType":"YulFunctionCall","src":"6284:45:4"},"nativeSrc":"6281:65:4","nodeType":"YulIf","src":"6281:65:4"},{"nativeSrc":"6355:21:4","nodeType":"YulAssignment","src":"6355:21:4","value":{"arguments":[{"name":"_2","nativeSrc":"6369:2:4","nodeType":"YulIdentifier","src":"6369:2:4"},{"kind":"number","nativeSrc":"6373:2:4","nodeType":"YulLiteral","src":"6373:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6365:3:4","nodeType":"YulIdentifier","src":"6365:3:4"},"nativeSrc":"6365:11:4","nodeType":"YulFunctionCall","src":"6365:11:4"},"variableNames":[{"name":"value0","nativeSrc":"6355:6:4","nodeType":"YulIdentifier","src":"6355:6:4"}]},{"nativeSrc":"6385:16:4","nodeType":"YulAssignment","src":"6385:16:4","value":{"name":"length","nativeSrc":"6395:6:4","nodeType":"YulIdentifier","src":"6395:6:4"},"variableNames":[{"name":"value1","nativeSrc":"6385:6:4","nodeType":"YulIdentifier","src":"6385:6:4"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"5792:615:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5855:9:4","nodeType":"YulTypedName","src":"5855:9:4","type":""},{"name":"dataEnd","nativeSrc":"5866:7:4","nodeType":"YulTypedName","src":"5866:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5878:6:4","nodeType":"YulTypedName","src":"5878:6:4","type":""},{"name":"value1","nativeSrc":"5886:6:4","nodeType":"YulTypedName","src":"5886:6:4","type":""}],"src":"5792:615:4"},{"body":{"nativeSrc":"6597:271:4","nodeType":"YulBlock","src":"6597:271:4","statements":[{"nativeSrc":"6607:27:4","nodeType":"YulAssignment","src":"6607:27:4","value":{"arguments":[{"name":"headStart","nativeSrc":"6619:9:4","nodeType":"YulIdentifier","src":"6619:9:4"},{"kind":"number","nativeSrc":"6630:3:4","nodeType":"YulLiteral","src":"6630:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6615:3:4","nodeType":"YulIdentifier","src":"6615:3:4"},"nativeSrc":"6615:19:4","nodeType":"YulFunctionCall","src":"6615:19:4"},"variableNames":[{"name":"tail","nativeSrc":"6607:4:4","nodeType":"YulIdentifier","src":"6607:4:4"}]},{"nativeSrc":"6643:29:4","nodeType":"YulVariableDeclaration","src":"6643:29:4","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6661:3:4","nodeType":"YulLiteral","src":"6661:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"6666:1:4","nodeType":"YulLiteral","src":"6666:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6657:3:4","nodeType":"YulIdentifier","src":"6657:3:4"},"nativeSrc":"6657:11:4","nodeType":"YulFunctionCall","src":"6657:11:4"},{"kind":"number","nativeSrc":"6670:1:4","nodeType":"YulLiteral","src":"6670:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6653:3:4","nodeType":"YulIdentifier","src":"6653:3:4"},"nativeSrc":"6653:19:4","nodeType":"YulFunctionCall","src":"6653:19:4"},"variables":[{"name":"_1","nativeSrc":"6647:2:4","nodeType":"YulTypedName","src":"6647:2:4","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6688:9:4","nodeType":"YulIdentifier","src":"6688:9:4"},{"arguments":[{"name":"value0","nativeSrc":"6703:6:4","nodeType":"YulIdentifier","src":"6703:6:4"},{"name":"_1","nativeSrc":"6711:2:4","nodeType":"YulIdentifier","src":"6711:2:4"}],"functionName":{"name":"and","nativeSrc":"6699:3:4","nodeType":"YulIdentifier","src":"6699:3:4"},"nativeSrc":"6699:15:4","nodeType":"YulFunctionCall","src":"6699:15:4"}],"functionName":{"name":"mstore","nativeSrc":"6681:6:4","nodeType":"YulIdentifier","src":"6681:6:4"},"nativeSrc":"6681:34:4","nodeType":"YulFunctionCall","src":"6681:34:4"},"nativeSrc":"6681:34:4","nodeType":"YulExpressionStatement","src":"6681:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6735:9:4","nodeType":"YulIdentifier","src":"6735:9:4"},{"kind":"number","nativeSrc":"6746:2:4","nodeType":"YulLiteral","src":"6746:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6731:3:4","nodeType":"YulIdentifier","src":"6731:3:4"},"nativeSrc":"6731:18:4","nodeType":"YulFunctionCall","src":"6731:18:4"},{"arguments":[{"name":"value1","nativeSrc":"6755:6:4","nodeType":"YulIdentifier","src":"6755:6:4"},{"name":"_1","nativeSrc":"6763:2:4","nodeType":"YulIdentifier","src":"6763:2:4"}],"functionName":{"name":"and","nativeSrc":"6751:3:4","nodeType":"YulIdentifier","src":"6751:3:4"},"nativeSrc":"6751:15:4","nodeType":"YulFunctionCall","src":"6751:15:4"}],"functionName":{"name":"mstore","nativeSrc":"6724:6:4","nodeType":"YulIdentifier","src":"6724:6:4"},"nativeSrc":"6724:43:4","nodeType":"YulFunctionCall","src":"6724:43:4"},"nativeSrc":"6724:43:4","nodeType":"YulExpressionStatement","src":"6724:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6787:9:4","nodeType":"YulIdentifier","src":"6787:9:4"},{"kind":"number","nativeSrc":"6798:2:4","nodeType":"YulLiteral","src":"6798:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6783:3:4","nodeType":"YulIdentifier","src":"6783:3:4"},"nativeSrc":"6783:18:4","nodeType":"YulFunctionCall","src":"6783:18:4"},{"arguments":[{"name":"value2","nativeSrc":"6807:6:4","nodeType":"YulIdentifier","src":"6807:6:4"},{"name":"_1","nativeSrc":"6815:2:4","nodeType":"YulIdentifier","src":"6815:2:4"}],"functionName":{"name":"and","nativeSrc":"6803:3:4","nodeType":"YulIdentifier","src":"6803:3:4"},"nativeSrc":"6803:15:4","nodeType":"YulFunctionCall","src":"6803:15:4"}],"functionName":{"name":"mstore","nativeSrc":"6776:6:4","nodeType":"YulIdentifier","src":"6776:6:4"},"nativeSrc":"6776:43:4","nodeType":"YulFunctionCall","src":"6776:43:4"},"nativeSrc":"6776:43:4","nodeType":"YulExpressionStatement","src":"6776:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6839:9:4","nodeType":"YulIdentifier","src":"6839:9:4"},{"kind":"number","nativeSrc":"6850:2:4","nodeType":"YulLiteral","src":"6850:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6835:3:4","nodeType":"YulIdentifier","src":"6835:3:4"},"nativeSrc":"6835:18:4","nodeType":"YulFunctionCall","src":"6835:18:4"},{"name":"value3","nativeSrc":"6855:6:4","nodeType":"YulIdentifier","src":"6855:6:4"}],"functionName":{"name":"mstore","nativeSrc":"6828:6:4","nodeType":"YulIdentifier","src":"6828:6:4"},"nativeSrc":"6828:34:4","nodeType":"YulFunctionCall","src":"6828:34:4"},"nativeSrc":"6828:34:4","nodeType":"YulExpressionStatement","src":"6828:34:4"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"6412:456:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6542:9:4","nodeType":"YulTypedName","src":"6542:9:4","type":""},{"name":"value3","nativeSrc":"6553:6:4","nodeType":"YulTypedName","src":"6553:6:4","type":""},{"name":"value2","nativeSrc":"6561:6:4","nodeType":"YulTypedName","src":"6561:6:4","type":""},{"name":"value1","nativeSrc":"6569:6:4","nodeType":"YulTypedName","src":"6569:6:4","type":""},{"name":"value0","nativeSrc":"6577:6:4","nodeType":"YulTypedName","src":"6577:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6588:4:4","nodeType":"YulTypedName","src":"6588:4:4","type":""}],"src":"6412:456:4"},{"body":{"nativeSrc":"7010:150:4","nodeType":"YulBlock","src":"7010:150:4","statements":[{"nativeSrc":"7020:27:4","nodeType":"YulVariableDeclaration","src":"7020:27:4","value":{"arguments":[{"name":"value0","nativeSrc":"7040:6:4","nodeType":"YulIdentifier","src":"7040:6:4"}],"functionName":{"name":"mload","nativeSrc":"7034:5:4","nodeType":"YulIdentifier","src":"7034:5:4"},"nativeSrc":"7034:13:4","nodeType":"YulFunctionCall","src":"7034:13:4"},"variables":[{"name":"length","nativeSrc":"7024:6:4","nodeType":"YulTypedName","src":"7024:6:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"7095:6:4","nodeType":"YulIdentifier","src":"7095:6:4"},{"kind":"number","nativeSrc":"7103:4:4","nodeType":"YulLiteral","src":"7103:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7091:3:4","nodeType":"YulIdentifier","src":"7091:3:4"},"nativeSrc":"7091:17:4","nodeType":"YulFunctionCall","src":"7091:17:4"},{"name":"pos","nativeSrc":"7110:3:4","nodeType":"YulIdentifier","src":"7110:3:4"},{"name":"length","nativeSrc":"7115:6:4","nodeType":"YulIdentifier","src":"7115:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7056:34:4","nodeType":"YulIdentifier","src":"7056:34:4"},"nativeSrc":"7056:66:4","nodeType":"YulFunctionCall","src":"7056:66:4"},"nativeSrc":"7056:66:4","nodeType":"YulExpressionStatement","src":"7056:66:4"},{"nativeSrc":"7131:23:4","nodeType":"YulAssignment","src":"7131:23:4","value":{"arguments":[{"name":"pos","nativeSrc":"7142:3:4","nodeType":"YulIdentifier","src":"7142:3:4"},{"name":"length","nativeSrc":"7147:6:4","nodeType":"YulIdentifier","src":"7147:6:4"}],"functionName":{"name":"add","nativeSrc":"7138:3:4","nodeType":"YulIdentifier","src":"7138:3:4"},"nativeSrc":"7138:16:4","nodeType":"YulFunctionCall","src":"7138:16:4"},"variableNames":[{"name":"end","nativeSrc":"7131:3:4","nodeType":"YulIdentifier","src":"7131:3:4"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"6873:287:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6986:3:4","nodeType":"YulTypedName","src":"6986:3:4","type":""},{"name":"value0","nativeSrc":"6991:6:4","nodeType":"YulTypedName","src":"6991:6:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7002:3:4","nodeType":"YulTypedName","src":"7002:3:4","type":""}],"src":"6873:287:4"},{"body":{"nativeSrc":"7223:106:4","nodeType":"YulBlock","src":"7223:106:4","statements":[{"nativeSrc":"7233:22:4","nodeType":"YulAssignment","src":"7233:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"7248:6:4","nodeType":"YulIdentifier","src":"7248:6:4"}],"functionName":{"name":"mload","nativeSrc":"7242:5:4","nodeType":"YulIdentifier","src":"7242:5:4"},"nativeSrc":"7242:13:4","nodeType":"YulFunctionCall","src":"7242:13:4"},"variableNames":[{"name":"value","nativeSrc":"7233:5:4","nodeType":"YulIdentifier","src":"7233:5:4"}]},{"body":{"nativeSrc":"7307:16:4","nodeType":"YulBlock","src":"7307:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7316:1:4","nodeType":"YulLiteral","src":"7316:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"7319:1:4","nodeType":"YulLiteral","src":"7319:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7309:6:4","nodeType":"YulIdentifier","src":"7309:6:4"},"nativeSrc":"7309:12:4","nodeType":"YulFunctionCall","src":"7309:12:4"},"nativeSrc":"7309:12:4","nodeType":"YulExpressionStatement","src":"7309:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7277:5:4","nodeType":"YulIdentifier","src":"7277:5:4"},{"arguments":[{"kind":"number","nativeSrc":"7295:1:4","nodeType":"YulLiteral","src":"7295:1:4","type":"","value":"3"},{"name":"value","nativeSrc":"7298:5:4","nodeType":"YulIdentifier","src":"7298:5:4"}],"functionName":{"name":"signextend","nativeSrc":"7284:10:4","nodeType":"YulIdentifier","src":"7284:10:4"},"nativeSrc":"7284:20:4","nodeType":"YulFunctionCall","src":"7284:20:4"}],"functionName":{"name":"eq","nativeSrc":"7274:2:4","nodeType":"YulIdentifier","src":"7274:2:4"},"nativeSrc":"7274:31:4","nodeType":"YulFunctionCall","src":"7274:31:4"}],"functionName":{"name":"iszero","nativeSrc":"7267:6:4","nodeType":"YulIdentifier","src":"7267:6:4"},"nativeSrc":"7267:39:4","nodeType":"YulFunctionCall","src":"7267:39:4"},"nativeSrc":"7264:59:4","nodeType":"YulIf","src":"7264:59:4"}]},"name":"abi_decode_int32_fromMemory","nativeSrc":"7165:164:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7202:6:4","nodeType":"YulTypedName","src":"7202:6:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7213:5:4","nodeType":"YulTypedName","src":"7213:5:4","type":""}],"src":"7165:164:4"},{"body":{"nativeSrc":"7413:125:4","nodeType":"YulBlock","src":"7413:125:4","statements":[{"body":{"nativeSrc":"7459:16:4","nodeType":"YulBlock","src":"7459:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7468:1:4","nodeType":"YulLiteral","src":"7468:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"7471:1:4","nodeType":"YulLiteral","src":"7471:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7461:6:4","nodeType":"YulIdentifier","src":"7461:6:4"},"nativeSrc":"7461:12:4","nodeType":"YulFunctionCall","src":"7461:12:4"},"nativeSrc":"7461:12:4","nodeType":"YulExpressionStatement","src":"7461:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7434:7:4","nodeType":"YulIdentifier","src":"7434:7:4"},{"name":"headStart","nativeSrc":"7443:9:4","nodeType":"YulIdentifier","src":"7443:9:4"}],"functionName":{"name":"sub","nativeSrc":"7430:3:4","nodeType":"YulIdentifier","src":"7430:3:4"},"nativeSrc":"7430:23:4","nodeType":"YulFunctionCall","src":"7430:23:4"},{"kind":"number","nativeSrc":"7455:2:4","nodeType":"YulLiteral","src":"7455:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7426:3:4","nodeType":"YulIdentifier","src":"7426:3:4"},"nativeSrc":"7426:32:4","nodeType":"YulFunctionCall","src":"7426:32:4"},"nativeSrc":"7423:52:4","nodeType":"YulIf","src":"7423:52:4"},{"nativeSrc":"7484:48:4","nodeType":"YulAssignment","src":"7484:48:4","value":{"arguments":[{"name":"headStart","nativeSrc":"7522:9:4","nodeType":"YulIdentifier","src":"7522:9:4"}],"functionName":{"name":"abi_decode_int32_fromMemory","nativeSrc":"7494:27:4","nodeType":"YulIdentifier","src":"7494:27:4"},"nativeSrc":"7494:38:4","nodeType":"YulFunctionCall","src":"7494:38:4"},"variableNames":[{"name":"value0","nativeSrc":"7484:6:4","nodeType":"YulIdentifier","src":"7484:6:4"}]}]},"name":"abi_decode_tuple_t_int32_fromMemory","nativeSrc":"7334:204:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7379:9:4","nodeType":"YulTypedName","src":"7379:9:4","type":""},{"name":"dataEnd","nativeSrc":"7390:7:4","nodeType":"YulTypedName","src":"7390:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7402:6:4","nodeType":"YulTypedName","src":"7402:6:4","type":""}],"src":"7334:204:4"},{"body":{"nativeSrc":"7670:145:4","nodeType":"YulBlock","src":"7670:145:4","statements":[{"nativeSrc":"7680:26:4","nodeType":"YulAssignment","src":"7680:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"7692:9:4","nodeType":"YulIdentifier","src":"7692:9:4"},{"kind":"number","nativeSrc":"7703:2:4","nodeType":"YulLiteral","src":"7703:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7688:3:4","nodeType":"YulIdentifier","src":"7688:3:4"},"nativeSrc":"7688:18:4","nodeType":"YulFunctionCall","src":"7688:18:4"},"variableNames":[{"name":"tail","nativeSrc":"7680:4:4","nodeType":"YulIdentifier","src":"7680:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7722:9:4","nodeType":"YulIdentifier","src":"7722:9:4"},{"arguments":[{"name":"value0","nativeSrc":"7737:6:4","nodeType":"YulIdentifier","src":"7737:6:4"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7753:3:4","nodeType":"YulLiteral","src":"7753:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"7758:1:4","nodeType":"YulLiteral","src":"7758:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7749:3:4","nodeType":"YulIdentifier","src":"7749:3:4"},"nativeSrc":"7749:11:4","nodeType":"YulFunctionCall","src":"7749:11:4"},{"kind":"number","nativeSrc":"7762:1:4","nodeType":"YulLiteral","src":"7762:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7745:3:4","nodeType":"YulIdentifier","src":"7745:3:4"},"nativeSrc":"7745:19:4","nodeType":"YulFunctionCall","src":"7745:19:4"}],"functionName":{"name":"and","nativeSrc":"7733:3:4","nodeType":"YulIdentifier","src":"7733:3:4"},"nativeSrc":"7733:32:4","nodeType":"YulFunctionCall","src":"7733:32:4"}],"functionName":{"name":"mstore","nativeSrc":"7715:6:4","nodeType":"YulIdentifier","src":"7715:6:4"},"nativeSrc":"7715:51:4","nodeType":"YulFunctionCall","src":"7715:51:4"},"nativeSrc":"7715:51:4","nodeType":"YulExpressionStatement","src":"7715:51:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7786:9:4","nodeType":"YulIdentifier","src":"7786:9:4"},{"kind":"number","nativeSrc":"7797:2:4","nodeType":"YulLiteral","src":"7797:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7782:3:4","nodeType":"YulIdentifier","src":"7782:3:4"},"nativeSrc":"7782:18:4","nodeType":"YulFunctionCall","src":"7782:18:4"},{"name":"value1","nativeSrc":"7802:6:4","nodeType":"YulIdentifier","src":"7802:6:4"}],"functionName":{"name":"mstore","nativeSrc":"7775:6:4","nodeType":"YulIdentifier","src":"7775:6:4"},"nativeSrc":"7775:34:4","nodeType":"YulFunctionCall","src":"7775:34:4"},"nativeSrc":"7775:34:4","nodeType":"YulExpressionStatement","src":"7775:34:4"}]},"name":"abi_encode_tuple_t_address_t_int256__to_t_address_t_int256__fromStack_reversed","nativeSrc":"7543:272:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7631:9:4","nodeType":"YulTypedName","src":"7631:9:4","type":""},{"name":"value1","nativeSrc":"7642:6:4","nodeType":"YulTypedName","src":"7642:6:4","type":""},{"name":"value0","nativeSrc":"7650:6:4","nodeType":"YulTypedName","src":"7650:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7661:4:4","nodeType":"YulTypedName","src":"7661:4:4","type":""}],"src":"7543:272:4"},{"body":{"nativeSrc":"8060:223:4","nodeType":"YulBlock","src":"8060:223:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8077:3:4","nodeType":"YulIdentifier","src":"8077:3:4"},{"hexValue":"4c594e5820746f6b656e206173736f63696174696f6e206661696c65643a20","kind":"string","nativeSrc":"8082:33:4","nodeType":"YulLiteral","src":"8082:33:4","type":"","value":"LYNX token association failed: "}],"functionName":{"name":"mstore","nativeSrc":"8070:6:4","nodeType":"YulIdentifier","src":"8070:6:4"},"nativeSrc":"8070:46:4","nodeType":"YulFunctionCall","src":"8070:46:4"},"nativeSrc":"8070:46:4","nodeType":"YulExpressionStatement","src":"8070:46:4"},{"nativeSrc":"8125:27:4","nodeType":"YulVariableDeclaration","src":"8125:27:4","value":{"arguments":[{"name":"value0","nativeSrc":"8145:6:4","nodeType":"YulIdentifier","src":"8145:6:4"}],"functionName":{"name":"mload","nativeSrc":"8139:5:4","nodeType":"YulIdentifier","src":"8139:5:4"},"nativeSrc":"8139:13:4","nodeType":"YulFunctionCall","src":"8139:13:4"},"variables":[{"name":"length","nativeSrc":"8129:6:4","nodeType":"YulTypedName","src":"8129:6:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"8200:6:4","nodeType":"YulIdentifier","src":"8200:6:4"},{"kind":"number","nativeSrc":"8208:4:4","nodeType":"YulLiteral","src":"8208:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8196:3:4","nodeType":"YulIdentifier","src":"8196:3:4"},"nativeSrc":"8196:17:4","nodeType":"YulFunctionCall","src":"8196:17:4"},{"arguments":[{"name":"pos","nativeSrc":"8219:3:4","nodeType":"YulIdentifier","src":"8219:3:4"},{"kind":"number","nativeSrc":"8224:2:4","nodeType":"YulLiteral","src":"8224:2:4","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"8215:3:4","nodeType":"YulIdentifier","src":"8215:3:4"},"nativeSrc":"8215:12:4","nodeType":"YulFunctionCall","src":"8215:12:4"},{"name":"length","nativeSrc":"8229:6:4","nodeType":"YulIdentifier","src":"8229:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8161:34:4","nodeType":"YulIdentifier","src":"8161:34:4"},"nativeSrc":"8161:75:4","nodeType":"YulFunctionCall","src":"8161:75:4"},"nativeSrc":"8161:75:4","nodeType":"YulExpressionStatement","src":"8161:75:4"},{"nativeSrc":"8245:32:4","nodeType":"YulAssignment","src":"8245:32:4","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"8260:3:4","nodeType":"YulIdentifier","src":"8260:3:4"},{"name":"length","nativeSrc":"8265:6:4","nodeType":"YulIdentifier","src":"8265:6:4"}],"functionName":{"name":"add","nativeSrc":"8256:3:4","nodeType":"YulIdentifier","src":"8256:3:4"},"nativeSrc":"8256:16:4","nodeType":"YulFunctionCall","src":"8256:16:4"},{"kind":"number","nativeSrc":"8274:2:4","nodeType":"YulLiteral","src":"8274:2:4","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"8252:3:4","nodeType":"YulIdentifier","src":"8252:3:4"},"nativeSrc":"8252:25:4","nodeType":"YulFunctionCall","src":"8252:25:4"},"variableNames":[{"name":"end","nativeSrc":"8245:3:4","nodeType":"YulIdentifier","src":"8245:3:4"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_05b8c81e4d50af98fb5fa519b925050c6ae01b6abdbde399cd313d795f1a13f1_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"7820:463:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8036:3:4","nodeType":"YulTypedName","src":"8036:3:4","type":""},{"name":"value0","nativeSrc":"8041:6:4","nodeType":"YulTypedName","src":"8041:6:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8052:3:4","nodeType":"YulTypedName","src":"8052:3:4","type":""}],"src":"7820:463:4"},{"body":{"nativeSrc":"8409:98:4","nodeType":"YulBlock","src":"8409:98:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8426:9:4","nodeType":"YulIdentifier","src":"8426:9:4"},{"kind":"number","nativeSrc":"8437:2:4","nodeType":"YulLiteral","src":"8437:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8419:6:4","nodeType":"YulIdentifier","src":"8419:6:4"},"nativeSrc":"8419:21:4","nodeType":"YulFunctionCall","src":"8419:21:4"},"nativeSrc":"8419:21:4","nodeType":"YulExpressionStatement","src":"8419:21:4"},{"nativeSrc":"8449:52:4","nodeType":"YulAssignment","src":"8449:52:4","value":{"arguments":[{"name":"value0","nativeSrc":"8474:6:4","nodeType":"YulIdentifier","src":"8474:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"8486:9:4","nodeType":"YulIdentifier","src":"8486:9:4"},{"kind":"number","nativeSrc":"8497:2:4","nodeType":"YulLiteral","src":"8497:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8482:3:4","nodeType":"YulIdentifier","src":"8482:3:4"},"nativeSrc":"8482:18:4","nodeType":"YulFunctionCall","src":"8482:18:4"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"8457:16:4","nodeType":"YulIdentifier","src":"8457:16:4"},"nativeSrc":"8457:44:4","nodeType":"YulFunctionCall","src":"8457:44:4"},"variableNames":[{"name":"tail","nativeSrc":"8449:4:4","nodeType":"YulIdentifier","src":"8449:4:4"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8288:219:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8378:9:4","nodeType":"YulTypedName","src":"8378:9:4","type":""},{"name":"value0","nativeSrc":"8389:6:4","nodeType":"YulTypedName","src":"8389:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8400:4:4","nodeType":"YulTypedName","src":"8400:4:4","type":""}],"src":"8288:219:4"},{"body":{"nativeSrc":"8567:97:4","nodeType":"YulBlock","src":"8567:97:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8584:3:4","nodeType":"YulIdentifier","src":"8584:3:4"},{"kind":"number","nativeSrc":"8589:1:4","nodeType":"YulLiteral","src":"8589:1:4","type":"","value":"4"}],"functionName":{"name":"mstore","nativeSrc":"8577:6:4","nodeType":"YulIdentifier","src":"8577:6:4"},"nativeSrc":"8577:14:4","nodeType":"YulFunctionCall","src":"8577:14:4"},"nativeSrc":"8577:14:4","nodeType":"YulExpressionStatement","src":"8577:14:4"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"8611:3:4","nodeType":"YulIdentifier","src":"8611:3:4"},{"kind":"number","nativeSrc":"8616:4:4","nodeType":"YulLiteral","src":"8616:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8607:3:4","nodeType":"YulIdentifier","src":"8607:3:4"},"nativeSrc":"8607:14:4","nodeType":"YulFunctionCall","src":"8607:14:4"},{"hexValue":"4c594e58","kind":"string","nativeSrc":"8623:6:4","nodeType":"YulLiteral","src":"8623:6:4","type":"","value":"LYNX"}],"functionName":{"name":"mstore","nativeSrc":"8600:6:4","nodeType":"YulIdentifier","src":"8600:6:4"},"nativeSrc":"8600:30:4","nodeType":"YulFunctionCall","src":"8600:30:4"},"nativeSrc":"8600:30:4","nodeType":"YulExpressionStatement","src":"8600:30:4"},{"nativeSrc":"8639:19:4","nodeType":"YulAssignment","src":"8639:19:4","value":{"arguments":[{"name":"pos","nativeSrc":"8650:3:4","nodeType":"YulIdentifier","src":"8650:3:4"},{"kind":"number","nativeSrc":"8655:2:4","nodeType":"YulLiteral","src":"8655:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8646:3:4","nodeType":"YulIdentifier","src":"8646:3:4"},"nativeSrc":"8646:12:4","nodeType":"YulFunctionCall","src":"8646:12:4"},"variableNames":[{"name":"end","nativeSrc":"8639:3:4","nodeType":"YulIdentifier","src":"8639:3:4"}]}]},"name":"abi_encode_stringliteral_49eb","nativeSrc":"8512:152:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8551:3:4","nodeType":"YulTypedName","src":"8551:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8559:3:4","nodeType":"YulTypedName","src":"8559:3:4","type":""}],"src":"8512:152:4"},{"body":{"nativeSrc":"8899:245:4","nodeType":"YulBlock","src":"8899:245:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8916:9:4","nodeType":"YulIdentifier","src":"8916:9:4"},{"kind":"number","nativeSrc":"8927:2:4","nodeType":"YulLiteral","src":"8927:2:4","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"8909:6:4","nodeType":"YulIdentifier","src":"8909:6:4"},"nativeSrc":"8909:21:4","nodeType":"YulFunctionCall","src":"8909:21:4"},"nativeSrc":"8909:21:4","nodeType":"YulExpressionStatement","src":"8909:21:4"},{"nativeSrc":"8939:57:4","nodeType":"YulAssignment","src":"8939:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8981:9:4","nodeType":"YulIdentifier","src":"8981:9:4"},{"kind":"number","nativeSrc":"8992:2:4","nodeType":"YulLiteral","src":"8992:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8977:3:4","nodeType":"YulIdentifier","src":"8977:3:4"},"nativeSrc":"8977:18:4","nodeType":"YulFunctionCall","src":"8977:18:4"}],"functionName":{"name":"abi_encode_stringliteral_49eb","nativeSrc":"8947:29:4","nodeType":"YulIdentifier","src":"8947:29:4"},"nativeSrc":"8947:49:4","nodeType":"YulFunctionCall","src":"8947:49:4"},"variableNames":[{"name":"tail","nativeSrc":"8939:4:4","nodeType":"YulIdentifier","src":"8939:4:4"}]},{"nativeSrc":"9005:29:4","nodeType":"YulVariableDeclaration","src":"9005:29:4","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9023:3:4","nodeType":"YulLiteral","src":"9023:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"9028:1:4","nodeType":"YulLiteral","src":"9028:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9019:3:4","nodeType":"YulIdentifier","src":"9019:3:4"},"nativeSrc":"9019:11:4","nodeType":"YulFunctionCall","src":"9019:11:4"},{"kind":"number","nativeSrc":"9032:1:4","nodeType":"YulLiteral","src":"9032:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9015:3:4","nodeType":"YulIdentifier","src":"9015:3:4"},"nativeSrc":"9015:19:4","nodeType":"YulFunctionCall","src":"9015:19:4"},"variables":[{"name":"_1","nativeSrc":"9009:2:4","nodeType":"YulTypedName","src":"9009:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9054:9:4","nodeType":"YulIdentifier","src":"9054:9:4"},{"kind":"number","nativeSrc":"9065:2:4","nodeType":"YulLiteral","src":"9065:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9050:3:4","nodeType":"YulIdentifier","src":"9050:3:4"},"nativeSrc":"9050:18:4","nodeType":"YulFunctionCall","src":"9050:18:4"},{"arguments":[{"name":"value0","nativeSrc":"9074:6:4","nodeType":"YulIdentifier","src":"9074:6:4"},{"name":"_1","nativeSrc":"9082:2:4","nodeType":"YulIdentifier","src":"9082:2:4"}],"functionName":{"name":"and","nativeSrc":"9070:3:4","nodeType":"YulIdentifier","src":"9070:3:4"},"nativeSrc":"9070:15:4","nodeType":"YulFunctionCall","src":"9070:15:4"}],"functionName":{"name":"mstore","nativeSrc":"9043:6:4","nodeType":"YulIdentifier","src":"9043:6:4"},"nativeSrc":"9043:43:4","nodeType":"YulFunctionCall","src":"9043:43:4"},"nativeSrc":"9043:43:4","nodeType":"YulExpressionStatement","src":"9043:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9106:9:4","nodeType":"YulIdentifier","src":"9106:9:4"},{"kind":"number","nativeSrc":"9117:2:4","nodeType":"YulLiteral","src":"9117:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9102:3:4","nodeType":"YulIdentifier","src":"9102:3:4"},"nativeSrc":"9102:18:4","nodeType":"YulFunctionCall","src":"9102:18:4"},{"arguments":[{"name":"value1","nativeSrc":"9126:6:4","nodeType":"YulIdentifier","src":"9126:6:4"},{"name":"_1","nativeSrc":"9134:2:4","nodeType":"YulIdentifier","src":"9134:2:4"}],"functionName":{"name":"and","nativeSrc":"9122:3:4","nodeType":"YulIdentifier","src":"9122:3:4"},"nativeSrc":"9122:15:4","nodeType":"YulFunctionCall","src":"9122:15:4"}],"functionName":{"name":"mstore","nativeSrc":"9095:6:4","nodeType":"YulIdentifier","src":"9095:6:4"},"nativeSrc":"9095:43:4","nodeType":"YulFunctionCall","src":"9095:43:4"},"nativeSrc":"9095:43:4","nodeType":"YulExpressionStatement","src":"9095:43:4"}]},"name":"abi_encode_tuple_t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nativeSrc":"8669:475:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8860:9:4","nodeType":"YulTypedName","src":"8860:9:4","type":""},{"name":"value1","nativeSrc":"8871:6:4","nodeType":"YulTypedName","src":"8871:6:4","type":""},{"name":"value0","nativeSrc":"8879:6:4","nodeType":"YulTypedName","src":"8879:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8890:4:4","nodeType":"YulTypedName","src":"8890:4:4","type":""}],"src":"8669:475:4"},{"body":{"nativeSrc":"9296:167:4","nodeType":"YulBlock","src":"9296:167:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9313:9:4","nodeType":"YulIdentifier","src":"9313:9:4"},{"arguments":[{"name":"value0","nativeSrc":"9328:6:4","nodeType":"YulIdentifier","src":"9328:6:4"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9344:3:4","nodeType":"YulLiteral","src":"9344:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"9349:1:4","nodeType":"YulLiteral","src":"9349:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9340:3:4","nodeType":"YulIdentifier","src":"9340:3:4"},"nativeSrc":"9340:11:4","nodeType":"YulFunctionCall","src":"9340:11:4"},{"kind":"number","nativeSrc":"9353:1:4","nodeType":"YulLiteral","src":"9353:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9336:3:4","nodeType":"YulIdentifier","src":"9336:3:4"},"nativeSrc":"9336:19:4","nodeType":"YulFunctionCall","src":"9336:19:4"}],"functionName":{"name":"and","nativeSrc":"9324:3:4","nodeType":"YulIdentifier","src":"9324:3:4"},"nativeSrc":"9324:32:4","nodeType":"YulFunctionCall","src":"9324:32:4"}],"functionName":{"name":"mstore","nativeSrc":"9306:6:4","nodeType":"YulIdentifier","src":"9306:6:4"},"nativeSrc":"9306:51:4","nodeType":"YulFunctionCall","src":"9306:51:4"},"nativeSrc":"9306:51:4","nodeType":"YulExpressionStatement","src":"9306:51:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9377:9:4","nodeType":"YulIdentifier","src":"9377:9:4"},{"kind":"number","nativeSrc":"9388:2:4","nodeType":"YulLiteral","src":"9388:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9373:3:4","nodeType":"YulIdentifier","src":"9373:3:4"},"nativeSrc":"9373:18:4","nodeType":"YulFunctionCall","src":"9373:18:4"},{"kind":"number","nativeSrc":"9393:2:4","nodeType":"YulLiteral","src":"9393:2:4","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"9366:6:4","nodeType":"YulIdentifier","src":"9366:6:4"},"nativeSrc":"9366:30:4","nodeType":"YulFunctionCall","src":"9366:30:4"},"nativeSrc":"9366:30:4","nodeType":"YulExpressionStatement","src":"9366:30:4"},{"nativeSrc":"9405:52:4","nodeType":"YulAssignment","src":"9405:52:4","value":{"arguments":[{"name":"value1","nativeSrc":"9430:6:4","nodeType":"YulIdentifier","src":"9430:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"9442:9:4","nodeType":"YulIdentifier","src":"9442:9:4"},{"kind":"number","nativeSrc":"9453:2:4","nodeType":"YulLiteral","src":"9453:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9438:3:4","nodeType":"YulIdentifier","src":"9438:3:4"},"nativeSrc":"9438:18:4","nodeType":"YulFunctionCall","src":"9438:18:4"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"9413:16:4","nodeType":"YulIdentifier","src":"9413:16:4"},"nativeSrc":"9413:44:4","nodeType":"YulFunctionCall","src":"9413:44:4"},"variableNames":[{"name":"tail","nativeSrc":"9405:4:4","nodeType":"YulIdentifier","src":"9405:4:4"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"9149:314:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9257:9:4","nodeType":"YulTypedName","src":"9257:9:4","type":""},{"name":"value1","nativeSrc":"9268:6:4","nodeType":"YulTypedName","src":"9268:6:4","type":""},{"name":"value0","nativeSrc":"9276:6:4","nodeType":"YulTypedName","src":"9276:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9287:4:4","nodeType":"YulTypedName","src":"9287:4:4","type":""}],"src":"9149:314:4"},{"body":{"nativeSrc":"9609:157:4","nodeType":"YulBlock","src":"9609:157:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9626:9:4","nodeType":"YulIdentifier","src":"9626:9:4"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"9651:6:4","nodeType":"YulIdentifier","src":"9651:6:4"}],"functionName":{"name":"iszero","nativeSrc":"9644:6:4","nodeType":"YulIdentifier","src":"9644:6:4"},"nativeSrc":"9644:14:4","nodeType":"YulFunctionCall","src":"9644:14:4"}],"functionName":{"name":"iszero","nativeSrc":"9637:6:4","nodeType":"YulIdentifier","src":"9637:6:4"},"nativeSrc":"9637:22:4","nodeType":"YulFunctionCall","src":"9637:22:4"}],"functionName":{"name":"mstore","nativeSrc":"9619:6:4","nodeType":"YulIdentifier","src":"9619:6:4"},"nativeSrc":"9619:41:4","nodeType":"YulFunctionCall","src":"9619:41:4"},"nativeSrc":"9619:41:4","nodeType":"YulExpressionStatement","src":"9619:41:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9680:9:4","nodeType":"YulIdentifier","src":"9680:9:4"},{"kind":"number","nativeSrc":"9691:2:4","nodeType":"YulLiteral","src":"9691:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9676:3:4","nodeType":"YulIdentifier","src":"9676:3:4"},"nativeSrc":"9676:18:4","nodeType":"YulFunctionCall","src":"9676:18:4"},{"kind":"number","nativeSrc":"9696:2:4","nodeType":"YulLiteral","src":"9696:2:4","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"9669:6:4","nodeType":"YulIdentifier","src":"9669:6:4"},"nativeSrc":"9669:30:4","nodeType":"YulFunctionCall","src":"9669:30:4"},"nativeSrc":"9669:30:4","nodeType":"YulExpressionStatement","src":"9669:30:4"},{"nativeSrc":"9708:52:4","nodeType":"YulAssignment","src":"9708:52:4","value":{"arguments":[{"name":"value1","nativeSrc":"9733:6:4","nodeType":"YulIdentifier","src":"9733:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"9745:9:4","nodeType":"YulIdentifier","src":"9745:9:4"},{"kind":"number","nativeSrc":"9756:2:4","nodeType":"YulLiteral","src":"9756:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9741:3:4","nodeType":"YulIdentifier","src":"9741:3:4"},"nativeSrc":"9741:18:4","nodeType":"YulFunctionCall","src":"9741:18:4"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"9716:16:4","nodeType":"YulIdentifier","src":"9716:16:4"},"nativeSrc":"9716:44:4","nodeType":"YulFunctionCall","src":"9716:44:4"},"variableNames":[{"name":"tail","nativeSrc":"9708:4:4","nodeType":"YulIdentifier","src":"9708:4:4"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"9468:298:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9570:9:4","nodeType":"YulTypedName","src":"9570:9:4","type":""},{"name":"value1","nativeSrc":"9581:6:4","nodeType":"YulTypedName","src":"9581:6:4","type":""},{"name":"value0","nativeSrc":"9589:6:4","nodeType":"YulTypedName","src":"9589:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9600:4:4","nodeType":"YulTypedName","src":"9600:4:4","type":""}],"src":"9468:298:4"},{"body":{"nativeSrc":"9945:181:4","nodeType":"YulBlock","src":"9945:181:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9962:9:4","nodeType":"YulIdentifier","src":"9962:9:4"},{"kind":"number","nativeSrc":"9973:2:4","nodeType":"YulLiteral","src":"9973:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9955:6:4","nodeType":"YulIdentifier","src":"9955:6:4"},"nativeSrc":"9955:21:4","nodeType":"YulFunctionCall","src":"9955:21:4"},"nativeSrc":"9955:21:4","nodeType":"YulExpressionStatement","src":"9955:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9996:9:4","nodeType":"YulIdentifier","src":"9996:9:4"},{"kind":"number","nativeSrc":"10007:2:4","nodeType":"YulLiteral","src":"10007:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9992:3:4","nodeType":"YulIdentifier","src":"9992:3:4"},"nativeSrc":"9992:18:4","nodeType":"YulFunctionCall","src":"9992:18:4"},{"kind":"number","nativeSrc":"10012:2:4","nodeType":"YulLiteral","src":"10012:2:4","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"9985:6:4","nodeType":"YulIdentifier","src":"9985:6:4"},"nativeSrc":"9985:30:4","nodeType":"YulFunctionCall","src":"9985:30:4"},"nativeSrc":"9985:30:4","nodeType":"YulExpressionStatement","src":"9985:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10035:9:4","nodeType":"YulIdentifier","src":"10035:9:4"},{"kind":"number","nativeSrc":"10046:2:4","nodeType":"YulLiteral","src":"10046:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10031:3:4","nodeType":"YulIdentifier","src":"10031:3:4"},"nativeSrc":"10031:18:4","nodeType":"YulFunctionCall","src":"10031:18:4"},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","kind":"string","nativeSrc":"10051:33:4","nodeType":"YulLiteral","src":"10051:33:4","type":"","value":"Cannot transfer to zero address"}],"functionName":{"name":"mstore","nativeSrc":"10024:6:4","nodeType":"YulIdentifier","src":"10024:6:4"},"nativeSrc":"10024:61:4","nodeType":"YulFunctionCall","src":"10024:61:4"},"nativeSrc":"10024:61:4","nodeType":"YulExpressionStatement","src":"10024:61:4"},{"nativeSrc":"10094:26:4","nodeType":"YulAssignment","src":"10094:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"10106:9:4","nodeType":"YulIdentifier","src":"10106:9:4"},{"kind":"number","nativeSrc":"10117:2:4","nodeType":"YulLiteral","src":"10117:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10102:3:4","nodeType":"YulIdentifier","src":"10102:3:4"},"nativeSrc":"10102:18:4","nodeType":"YulFunctionCall","src":"10102:18:4"},"variableNames":[{"name":"tail","nativeSrc":"10094:4:4","nodeType":"YulIdentifier","src":"10094:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9771:355:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9922:9:4","nodeType":"YulTypedName","src":"9922:9:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9936:4:4","nodeType":"YulTypedName","src":"9936:4:4","type":""}],"src":"9771:355:4"},{"body":{"nativeSrc":"10260:175:4","nodeType":"YulBlock","src":"10260:175:4","statements":[{"nativeSrc":"10270:26:4","nodeType":"YulAssignment","src":"10270:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"10282:9:4","nodeType":"YulIdentifier","src":"10282:9:4"},{"kind":"number","nativeSrc":"10293:2:4","nodeType":"YulLiteral","src":"10293:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10278:3:4","nodeType":"YulIdentifier","src":"10278:3:4"},"nativeSrc":"10278:18:4","nodeType":"YulFunctionCall","src":"10278:18:4"},"variableNames":[{"name":"tail","nativeSrc":"10270:4:4","nodeType":"YulIdentifier","src":"10270:4:4"}]},{"nativeSrc":"10305:29:4","nodeType":"YulVariableDeclaration","src":"10305:29:4","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10323:3:4","nodeType":"YulLiteral","src":"10323:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"10328:1:4","nodeType":"YulLiteral","src":"10328:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10319:3:4","nodeType":"YulIdentifier","src":"10319:3:4"},"nativeSrc":"10319:11:4","nodeType":"YulFunctionCall","src":"10319:11:4"},{"kind":"number","nativeSrc":"10332:1:4","nodeType":"YulLiteral","src":"10332:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10315:3:4","nodeType":"YulIdentifier","src":"10315:3:4"},"nativeSrc":"10315:19:4","nodeType":"YulFunctionCall","src":"10315:19:4"},"variables":[{"name":"_1","nativeSrc":"10309:2:4","nodeType":"YulTypedName","src":"10309:2:4","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10350:9:4","nodeType":"YulIdentifier","src":"10350:9:4"},{"arguments":[{"name":"value0","nativeSrc":"10365:6:4","nodeType":"YulIdentifier","src":"10365:6:4"},{"name":"_1","nativeSrc":"10373:2:4","nodeType":"YulIdentifier","src":"10373:2:4"}],"functionName":{"name":"and","nativeSrc":"10361:3:4","nodeType":"YulIdentifier","src":"10361:3:4"},"nativeSrc":"10361:15:4","nodeType":"YulFunctionCall","src":"10361:15:4"}],"functionName":{"name":"mstore","nativeSrc":"10343:6:4","nodeType":"YulIdentifier","src":"10343:6:4"},"nativeSrc":"10343:34:4","nodeType":"YulFunctionCall","src":"10343:34:4"},"nativeSrc":"10343:34:4","nodeType":"YulExpressionStatement","src":"10343:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10397:9:4","nodeType":"YulIdentifier","src":"10397:9:4"},{"kind":"number","nativeSrc":"10408:2:4","nodeType":"YulLiteral","src":"10408:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10393:3:4","nodeType":"YulIdentifier","src":"10393:3:4"},"nativeSrc":"10393:18:4","nodeType":"YulFunctionCall","src":"10393:18:4"},{"arguments":[{"name":"value1","nativeSrc":"10417:6:4","nodeType":"YulIdentifier","src":"10417:6:4"},{"name":"_1","nativeSrc":"10425:2:4","nodeType":"YulIdentifier","src":"10425:2:4"}],"functionName":{"name":"and","nativeSrc":"10413:3:4","nodeType":"YulIdentifier","src":"10413:3:4"},"nativeSrc":"10413:15:4","nodeType":"YulFunctionCall","src":"10413:15:4"}],"functionName":{"name":"mstore","nativeSrc":"10386:6:4","nodeType":"YulIdentifier","src":"10386:6:4"},"nativeSrc":"10386:43:4","nodeType":"YulFunctionCall","src":"10386:43:4"},"nativeSrc":"10386:43:4","nodeType":"YulExpressionStatement","src":"10386:43:4"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"10131:304:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10221:9:4","nodeType":"YulTypedName","src":"10221:9:4","type":""},{"name":"value1","nativeSrc":"10232:6:4","nodeType":"YulTypedName","src":"10232:6:4","type":""},{"name":"value0","nativeSrc":"10240:6:4","nodeType":"YulTypedName","src":"10240:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10251:4:4","nodeType":"YulTypedName","src":"10251:4:4","type":""}],"src":"10131:304:4"},{"body":{"nativeSrc":"10472:95:4","nodeType":"YulBlock","src":"10472:95:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10489:1:4","nodeType":"YulLiteral","src":"10489:1:4","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10496:3:4","nodeType":"YulLiteral","src":"10496:3:4","type":"","value":"224"},{"kind":"number","nativeSrc":"10501:10:4","nodeType":"YulLiteral","src":"10501:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10492:3:4","nodeType":"YulIdentifier","src":"10492:3:4"},"nativeSrc":"10492:20:4","nodeType":"YulFunctionCall","src":"10492:20:4"}],"functionName":{"name":"mstore","nativeSrc":"10482:6:4","nodeType":"YulIdentifier","src":"10482:6:4"},"nativeSrc":"10482:31:4","nodeType":"YulFunctionCall","src":"10482:31:4"},"nativeSrc":"10482:31:4","nodeType":"YulExpressionStatement","src":"10482:31:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10529:1:4","nodeType":"YulLiteral","src":"10529:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"10532:4:4","nodeType":"YulLiteral","src":"10532:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10522:6:4","nodeType":"YulIdentifier","src":"10522:6:4"},"nativeSrc":"10522:15:4","nodeType":"YulFunctionCall","src":"10522:15:4"},"nativeSrc":"10522:15:4","nodeType":"YulExpressionStatement","src":"10522:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10553:1:4","nodeType":"YulLiteral","src":"10553:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"10556:4:4","nodeType":"YulLiteral","src":"10556:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10546:6:4","nodeType":"YulIdentifier","src":"10546:6:4"},"nativeSrc":"10546:15:4","nodeType":"YulFunctionCall","src":"10546:15:4"},"nativeSrc":"10546:15:4","nodeType":"YulExpressionStatement","src":"10546:15:4"}]},"name":"panic_error_0x11","nativeSrc":"10440:127:4","nodeType":"YulFunctionDefinition","src":"10440:127:4"},{"body":{"nativeSrc":"10636:352:4","nodeType":"YulBlock","src":"10636:352:4","statements":[{"nativeSrc":"10646:16:4","nodeType":"YulVariableDeclaration","src":"10646:16:4","value":{"kind":"number","nativeSrc":"10661:1:4","nodeType":"YulLiteral","src":"10661:1:4","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"10650:7:4","nodeType":"YulTypedName","src":"10650:7:4","type":""}]},{"nativeSrc":"10671:10:4","nodeType":"YulAssignment","src":"10671:10:4","value":{"kind":"number","nativeSrc":"10680:1:4","nodeType":"YulLiteral","src":"10680:1:4","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"10671:5:4","nodeType":"YulIdentifier","src":"10671:5:4"}]},{"nativeSrc":"10690:13:4","nodeType":"YulAssignment","src":"10690:13:4","value":{"name":"_base","nativeSrc":"10698:5:4","nodeType":"YulIdentifier","src":"10698:5:4"},"variableNames":[{"name":"base","nativeSrc":"10690:4:4","nodeType":"YulIdentifier","src":"10690:4:4"}]},{"body":{"nativeSrc":"10754:228:4","nodeType":"YulBlock","src":"10754:228:4","statements":[{"body":{"nativeSrc":"10799:22:4","nodeType":"YulBlock","src":"10799:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10801:16:4","nodeType":"YulIdentifier","src":"10801:16:4"},"nativeSrc":"10801:18:4","nodeType":"YulFunctionCall","src":"10801:18:4"},"nativeSrc":"10801:18:4","nodeType":"YulExpressionStatement","src":"10801:18:4"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"10774:4:4","nodeType":"YulIdentifier","src":"10774:4:4"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10788:1:4","nodeType":"YulLiteral","src":"10788:1:4","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"10784:3:4","nodeType":"YulIdentifier","src":"10784:3:4"},"nativeSrc":"10784:6:4","nodeType":"YulFunctionCall","src":"10784:6:4"},{"name":"base","nativeSrc":"10792:4:4","nodeType":"YulIdentifier","src":"10792:4:4"}],"functionName":{"name":"div","nativeSrc":"10780:3:4","nodeType":"YulIdentifier","src":"10780:3:4"},"nativeSrc":"10780:17:4","nodeType":"YulFunctionCall","src":"10780:17:4"}],"functionName":{"name":"gt","nativeSrc":"10771:2:4","nodeType":"YulIdentifier","src":"10771:2:4"},"nativeSrc":"10771:27:4","nodeType":"YulFunctionCall","src":"10771:27:4"},"nativeSrc":"10768:53:4","nodeType":"YulIf","src":"10768:53:4"},{"body":{"nativeSrc":"10860:29:4","nodeType":"YulBlock","src":"10860:29:4","statements":[{"nativeSrc":"10862:25:4","nodeType":"YulAssignment","src":"10862:25:4","value":{"arguments":[{"name":"power","nativeSrc":"10875:5:4","nodeType":"YulIdentifier","src":"10875:5:4"},{"name":"base","nativeSrc":"10882:4:4","nodeType":"YulIdentifier","src":"10882:4:4"}],"functionName":{"name":"mul","nativeSrc":"10871:3:4","nodeType":"YulIdentifier","src":"10871:3:4"},"nativeSrc":"10871:16:4","nodeType":"YulFunctionCall","src":"10871:16:4"},"variableNames":[{"name":"power","nativeSrc":"10862:5:4","nodeType":"YulIdentifier","src":"10862:5:4"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"10841:8:4","nodeType":"YulIdentifier","src":"10841:8:4"},{"name":"power_1","nativeSrc":"10851:7:4","nodeType":"YulIdentifier","src":"10851:7:4"}],"functionName":{"name":"and","nativeSrc":"10837:3:4","nodeType":"YulIdentifier","src":"10837:3:4"},"nativeSrc":"10837:22:4","nodeType":"YulFunctionCall","src":"10837:22:4"},"nativeSrc":"10834:55:4","nodeType":"YulIf","src":"10834:55:4"},{"nativeSrc":"10902:23:4","nodeType":"YulAssignment","src":"10902:23:4","value":{"arguments":[{"name":"base","nativeSrc":"10914:4:4","nodeType":"YulIdentifier","src":"10914:4:4"},{"name":"base","nativeSrc":"10920:4:4","nodeType":"YulIdentifier","src":"10920:4:4"}],"functionName":{"name":"mul","nativeSrc":"10910:3:4","nodeType":"YulIdentifier","src":"10910:3:4"},"nativeSrc":"10910:15:4","nodeType":"YulFunctionCall","src":"10910:15:4"},"variableNames":[{"name":"base","nativeSrc":"10902:4:4","nodeType":"YulIdentifier","src":"10902:4:4"}]},{"nativeSrc":"10938:34:4","nodeType":"YulAssignment","src":"10938:34:4","value":{"arguments":[{"name":"power_1","nativeSrc":"10954:7:4","nodeType":"YulIdentifier","src":"10954:7:4"},{"name":"exponent","nativeSrc":"10963:8:4","nodeType":"YulIdentifier","src":"10963:8:4"}],"functionName":{"name":"shr","nativeSrc":"10950:3:4","nodeType":"YulIdentifier","src":"10950:3:4"},"nativeSrc":"10950:22:4","nodeType":"YulFunctionCall","src":"10950:22:4"},"variableNames":[{"name":"exponent","nativeSrc":"10938:8:4","nodeType":"YulIdentifier","src":"10938:8:4"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"10723:8:4","nodeType":"YulIdentifier","src":"10723:8:4"},{"name":"power_1","nativeSrc":"10733:7:4","nodeType":"YulIdentifier","src":"10733:7:4"}],"functionName":{"name":"gt","nativeSrc":"10720:2:4","nodeType":"YulIdentifier","src":"10720:2:4"},"nativeSrc":"10720:21:4","nodeType":"YulFunctionCall","src":"10720:21:4"},"nativeSrc":"10712:270:4","nodeType":"YulForLoop","post":{"nativeSrc":"10742:3:4","nodeType":"YulBlock","src":"10742:3:4","statements":[]},"pre":{"nativeSrc":"10716:3:4","nodeType":"YulBlock","src":"10716:3:4","statements":[]},"src":"10712:270:4"}]},"name":"checked_exp_helper","nativeSrc":"10572:416:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"10600:5:4","nodeType":"YulTypedName","src":"10600:5:4","type":""},{"name":"exponent","nativeSrc":"10607:8:4","nodeType":"YulTypedName","src":"10607:8:4","type":""}],"returnVariables":[{"name":"power","nativeSrc":"10620:5:4","nodeType":"YulTypedName","src":"10620:5:4","type":""},{"name":"base","nativeSrc":"10627:4:4","nodeType":"YulTypedName","src":"10627:4:4","type":""}],"src":"10572:416:4"},{"body":{"nativeSrc":"11052:747:4","nodeType":"YulBlock","src":"11052:747:4","statements":[{"body":{"nativeSrc":"11090:52:4","nodeType":"YulBlock","src":"11090:52:4","statements":[{"nativeSrc":"11104:10:4","nodeType":"YulAssignment","src":"11104:10:4","value":{"kind":"number","nativeSrc":"11113:1:4","nodeType":"YulLiteral","src":"11113:1:4","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"11104:5:4","nodeType":"YulIdentifier","src":"11104:5:4"}]},{"nativeSrc":"11127:5:4","nodeType":"YulLeave","src":"11127:5:4"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"11072:8:4","nodeType":"YulIdentifier","src":"11072:8:4"}],"functionName":{"name":"iszero","nativeSrc":"11065:6:4","nodeType":"YulIdentifier","src":"11065:6:4"},"nativeSrc":"11065:16:4","nodeType":"YulFunctionCall","src":"11065:16:4"},"nativeSrc":"11062:80:4","nodeType":"YulIf","src":"11062:80:4"},{"body":{"nativeSrc":"11175:52:4","nodeType":"YulBlock","src":"11175:52:4","statements":[{"nativeSrc":"11189:10:4","nodeType":"YulAssignment","src":"11189:10:4","value":{"kind":"number","nativeSrc":"11198:1:4","nodeType":"YulLiteral","src":"11198:1:4","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"11189:5:4","nodeType":"YulIdentifier","src":"11189:5:4"}]},{"nativeSrc":"11212:5:4","nodeType":"YulLeave","src":"11212:5:4"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"11161:4:4","nodeType":"YulIdentifier","src":"11161:4:4"}],"functionName":{"name":"iszero","nativeSrc":"11154:6:4","nodeType":"YulIdentifier","src":"11154:6:4"},"nativeSrc":"11154:12:4","nodeType":"YulFunctionCall","src":"11154:12:4"},"nativeSrc":"11151:76:4","nodeType":"YulIf","src":"11151:76:4"},{"cases":[{"body":{"nativeSrc":"11263:52:4","nodeType":"YulBlock","src":"11263:52:4","statements":[{"nativeSrc":"11277:10:4","nodeType":"YulAssignment","src":"11277:10:4","value":{"kind":"number","nativeSrc":"11286:1:4","nodeType":"YulLiteral","src":"11286:1:4","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"11277:5:4","nodeType":"YulIdentifier","src":"11277:5:4"}]},{"nativeSrc":"11300:5:4","nodeType":"YulLeave","src":"11300:5:4"}]},"nativeSrc":"11256:59:4","nodeType":"YulCase","src":"11256:59:4","value":{"kind":"number","nativeSrc":"11261:1:4","nodeType":"YulLiteral","src":"11261:1:4","type":"","value":"1"}},{"body":{"nativeSrc":"11331:123:4","nodeType":"YulBlock","src":"11331:123:4","statements":[{"body":{"nativeSrc":"11366:22:4","nodeType":"YulBlock","src":"11366:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11368:16:4","nodeType":"YulIdentifier","src":"11368:16:4"},"nativeSrc":"11368:18:4","nodeType":"YulFunctionCall","src":"11368:18:4"},"nativeSrc":"11368:18:4","nodeType":"YulExpressionStatement","src":"11368:18:4"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"11351:8:4","nodeType":"YulIdentifier","src":"11351:8:4"},{"kind":"number","nativeSrc":"11361:3:4","nodeType":"YulLiteral","src":"11361:3:4","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"11348:2:4","nodeType":"YulIdentifier","src":"11348:2:4"},"nativeSrc":"11348:17:4","nodeType":"YulFunctionCall","src":"11348:17:4"},"nativeSrc":"11345:43:4","nodeType":"YulIf","src":"11345:43:4"},{"nativeSrc":"11401:25:4","nodeType":"YulAssignment","src":"11401:25:4","value":{"arguments":[{"name":"exponent","nativeSrc":"11414:8:4","nodeType":"YulIdentifier","src":"11414:8:4"},{"kind":"number","nativeSrc":"11424:1:4","nodeType":"YulLiteral","src":"11424:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11410:3:4","nodeType":"YulIdentifier","src":"11410:3:4"},"nativeSrc":"11410:16:4","nodeType":"YulFunctionCall","src":"11410:16:4"},"variableNames":[{"name":"power","nativeSrc":"11401:5:4","nodeType":"YulIdentifier","src":"11401:5:4"}]},{"nativeSrc":"11439:5:4","nodeType":"YulLeave","src":"11439:5:4"}]},"nativeSrc":"11324:130:4","nodeType":"YulCase","src":"11324:130:4","value":{"kind":"number","nativeSrc":"11329:1:4","nodeType":"YulLiteral","src":"11329:1:4","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"11243:4:4","nodeType":"YulIdentifier","src":"11243:4:4"},"nativeSrc":"11236:218:4","nodeType":"YulSwitch","src":"11236:218:4"},{"body":{"nativeSrc":"11552:70:4","nodeType":"YulBlock","src":"11552:70:4","statements":[{"nativeSrc":"11566:28:4","nodeType":"YulAssignment","src":"11566:28:4","value":{"arguments":[{"name":"base","nativeSrc":"11579:4:4","nodeType":"YulIdentifier","src":"11579:4:4"},{"name":"exponent","nativeSrc":"11585:8:4","nodeType":"YulIdentifier","src":"11585:8:4"}],"functionName":{"name":"exp","nativeSrc":"11575:3:4","nodeType":"YulIdentifier","src":"11575:3:4"},"nativeSrc":"11575:19:4","nodeType":"YulFunctionCall","src":"11575:19:4"},"variableNames":[{"name":"power","nativeSrc":"11566:5:4","nodeType":"YulIdentifier","src":"11566:5:4"}]},{"nativeSrc":"11607:5:4","nodeType":"YulLeave","src":"11607:5:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"11476:4:4","nodeType":"YulIdentifier","src":"11476:4:4"},{"kind":"number","nativeSrc":"11482:2:4","nodeType":"YulLiteral","src":"11482:2:4","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"11473:2:4","nodeType":"YulIdentifier","src":"11473:2:4"},"nativeSrc":"11473:12:4","nodeType":"YulFunctionCall","src":"11473:12:4"},{"arguments":[{"name":"exponent","nativeSrc":"11490:8:4","nodeType":"YulIdentifier","src":"11490:8:4"},{"kind":"number","nativeSrc":"11500:2:4","nodeType":"YulLiteral","src":"11500:2:4","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"11487:2:4","nodeType":"YulIdentifier","src":"11487:2:4"},"nativeSrc":"11487:16:4","nodeType":"YulFunctionCall","src":"11487:16:4"}],"functionName":{"name":"and","nativeSrc":"11469:3:4","nodeType":"YulIdentifier","src":"11469:3:4"},"nativeSrc":"11469:35:4","nodeType":"YulFunctionCall","src":"11469:35:4"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"11513:4:4","nodeType":"YulIdentifier","src":"11513:4:4"},{"kind":"number","nativeSrc":"11519:3:4","nodeType":"YulLiteral","src":"11519:3:4","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"11510:2:4","nodeType":"YulIdentifier","src":"11510:2:4"},"nativeSrc":"11510:13:4","nodeType":"YulFunctionCall","src":"11510:13:4"},{"arguments":[{"name":"exponent","nativeSrc":"11528:8:4","nodeType":"YulIdentifier","src":"11528:8:4"},{"kind":"number","nativeSrc":"11538:2:4","nodeType":"YulLiteral","src":"11538:2:4","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11525:2:4","nodeType":"YulIdentifier","src":"11525:2:4"},"nativeSrc":"11525:16:4","nodeType":"YulFunctionCall","src":"11525:16:4"}],"functionName":{"name":"and","nativeSrc":"11506:3:4","nodeType":"YulIdentifier","src":"11506:3:4"},"nativeSrc":"11506:36:4","nodeType":"YulFunctionCall","src":"11506:36:4"}],"functionName":{"name":"or","nativeSrc":"11466:2:4","nodeType":"YulIdentifier","src":"11466:2:4"},"nativeSrc":"11466:77:4","nodeType":"YulFunctionCall","src":"11466:77:4"},"nativeSrc":"11463:159:4","nodeType":"YulIf","src":"11463:159:4"},{"nativeSrc":"11631:57:4","nodeType":"YulVariableDeclaration","src":"11631:57:4","value":{"arguments":[{"name":"base","nativeSrc":"11673:4:4","nodeType":"YulIdentifier","src":"11673:4:4"},{"name":"exponent","nativeSrc":"11679:8:4","nodeType":"YulIdentifier","src":"11679:8:4"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"11654:18:4","nodeType":"YulIdentifier","src":"11654:18:4"},"nativeSrc":"11654:34:4","nodeType":"YulFunctionCall","src":"11654:34:4"},"variables":[{"name":"power_1","nativeSrc":"11635:7:4","nodeType":"YulTypedName","src":"11635:7:4","type":""},{"name":"base_1","nativeSrc":"11644:6:4","nodeType":"YulTypedName","src":"11644:6:4","type":""}]},{"body":{"nativeSrc":"11733:22:4","nodeType":"YulBlock","src":"11733:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11735:16:4","nodeType":"YulIdentifier","src":"11735:16:4"},"nativeSrc":"11735:18:4","nodeType":"YulFunctionCall","src":"11735:18:4"},"nativeSrc":"11735:18:4","nodeType":"YulExpressionStatement","src":"11735:18:4"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"11703:7:4","nodeType":"YulIdentifier","src":"11703:7:4"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11720:1:4","nodeType":"YulLiteral","src":"11720:1:4","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"11716:3:4","nodeType":"YulIdentifier","src":"11716:3:4"},"nativeSrc":"11716:6:4","nodeType":"YulFunctionCall","src":"11716:6:4"},{"name":"base_1","nativeSrc":"11724:6:4","nodeType":"YulIdentifier","src":"11724:6:4"}],"functionName":{"name":"div","nativeSrc":"11712:3:4","nodeType":"YulIdentifier","src":"11712:3:4"},"nativeSrc":"11712:19:4","nodeType":"YulFunctionCall","src":"11712:19:4"}],"functionName":{"name":"gt","nativeSrc":"11700:2:4","nodeType":"YulIdentifier","src":"11700:2:4"},"nativeSrc":"11700:32:4","nodeType":"YulFunctionCall","src":"11700:32:4"},"nativeSrc":"11697:58:4","nodeType":"YulIf","src":"11697:58:4"},{"nativeSrc":"11764:29:4","nodeType":"YulAssignment","src":"11764:29:4","value":{"arguments":[{"name":"power_1","nativeSrc":"11777:7:4","nodeType":"YulIdentifier","src":"11777:7:4"},{"name":"base_1","nativeSrc":"11786:6:4","nodeType":"YulIdentifier","src":"11786:6:4"}],"functionName":{"name":"mul","nativeSrc":"11773:3:4","nodeType":"YulIdentifier","src":"11773:3:4"},"nativeSrc":"11773:20:4","nodeType":"YulFunctionCall","src":"11773:20:4"},"variableNames":[{"name":"power","nativeSrc":"11764:5:4","nodeType":"YulIdentifier","src":"11764:5:4"}]}]},"name":"checked_exp_unsigned","nativeSrc":"10993:806:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"11023:4:4","nodeType":"YulTypedName","src":"11023:4:4","type":""},{"name":"exponent","nativeSrc":"11029:8:4","nodeType":"YulTypedName","src":"11029:8:4","type":""}],"returnVariables":[{"name":"power","nativeSrc":"11042:5:4","nodeType":"YulTypedName","src":"11042:5:4","type":""}],"src":"10993:806:4"},{"body":{"nativeSrc":"11872:72:4","nodeType":"YulBlock","src":"11872:72:4","statements":[{"nativeSrc":"11882:56:4","nodeType":"YulAssignment","src":"11882:56:4","value":{"arguments":[{"name":"base","nativeSrc":"11912:4:4","nodeType":"YulIdentifier","src":"11912:4:4"},{"arguments":[{"name":"exponent","nativeSrc":"11922:8:4","nodeType":"YulIdentifier","src":"11922:8:4"},{"kind":"number","nativeSrc":"11932:4:4","nodeType":"YulLiteral","src":"11932:4:4","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"11918:3:4","nodeType":"YulIdentifier","src":"11918:3:4"},"nativeSrc":"11918:19:4","nodeType":"YulFunctionCall","src":"11918:19:4"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"11891:20:4","nodeType":"YulIdentifier","src":"11891:20:4"},"nativeSrc":"11891:47:4","nodeType":"YulFunctionCall","src":"11891:47:4"},"variableNames":[{"name":"power","nativeSrc":"11882:5:4","nodeType":"YulIdentifier","src":"11882:5:4"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"11804:140:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"11843:4:4","nodeType":"YulTypedName","src":"11843:4:4","type":""},{"name":"exponent","nativeSrc":"11849:8:4","nodeType":"YulTypedName","src":"11849:8:4","type":""}],"returnVariables":[{"name":"power","nativeSrc":"11862:5:4","nodeType":"YulTypedName","src":"11862:5:4","type":""}],"src":"11804:140:4"},{"body":{"nativeSrc":"12001:116:4","nodeType":"YulBlock","src":"12001:116:4","statements":[{"nativeSrc":"12011:20:4","nodeType":"YulAssignment","src":"12011:20:4","value":{"arguments":[{"name":"x","nativeSrc":"12026:1:4","nodeType":"YulIdentifier","src":"12026:1:4"},{"name":"y","nativeSrc":"12029:1:4","nodeType":"YulIdentifier","src":"12029:1:4"}],"functionName":{"name":"mul","nativeSrc":"12022:3:4","nodeType":"YulIdentifier","src":"12022:3:4"},"nativeSrc":"12022:9:4","nodeType":"YulFunctionCall","src":"12022:9:4"},"variableNames":[{"name":"product","nativeSrc":"12011:7:4","nodeType":"YulIdentifier","src":"12011:7:4"}]},{"body":{"nativeSrc":"12089:22:4","nodeType":"YulBlock","src":"12089:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12091:16:4","nodeType":"YulIdentifier","src":"12091:16:4"},"nativeSrc":"12091:18:4","nodeType":"YulFunctionCall","src":"12091:18:4"},"nativeSrc":"12091:18:4","nodeType":"YulExpressionStatement","src":"12091:18:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"12060:1:4","nodeType":"YulIdentifier","src":"12060:1:4"}],"functionName":{"name":"iszero","nativeSrc":"12053:6:4","nodeType":"YulIdentifier","src":"12053:6:4"},"nativeSrc":"12053:9:4","nodeType":"YulFunctionCall","src":"12053:9:4"},{"arguments":[{"name":"y","nativeSrc":"12067:1:4","nodeType":"YulIdentifier","src":"12067:1:4"},{"arguments":[{"name":"product","nativeSrc":"12074:7:4","nodeType":"YulIdentifier","src":"12074:7:4"},{"name":"x","nativeSrc":"12083:1:4","nodeType":"YulIdentifier","src":"12083:1:4"}],"functionName":{"name":"div","nativeSrc":"12070:3:4","nodeType":"YulIdentifier","src":"12070:3:4"},"nativeSrc":"12070:15:4","nodeType":"YulFunctionCall","src":"12070:15:4"}],"functionName":{"name":"eq","nativeSrc":"12064:2:4","nodeType":"YulIdentifier","src":"12064:2:4"},"nativeSrc":"12064:22:4","nodeType":"YulFunctionCall","src":"12064:22:4"}],"functionName":{"name":"or","nativeSrc":"12050:2:4","nodeType":"YulIdentifier","src":"12050:2:4"},"nativeSrc":"12050:37:4","nodeType":"YulFunctionCall","src":"12050:37:4"}],"functionName":{"name":"iszero","nativeSrc":"12043:6:4","nodeType":"YulIdentifier","src":"12043:6:4"},"nativeSrc":"12043:45:4","nodeType":"YulFunctionCall","src":"12043:45:4"},"nativeSrc":"12040:71:4","nodeType":"YulIf","src":"12040:71:4"}]},"name":"checked_mul_t_uint256","nativeSrc":"11949:168:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11980:1:4","nodeType":"YulTypedName","src":"11980:1:4","type":""},{"name":"y","nativeSrc":"11983:1:4","nodeType":"YulTypedName","src":"11983:1:4","type":""}],"returnVariables":[{"name":"product","nativeSrc":"11989:7:4","nodeType":"YulTypedName","src":"11989:7:4","type":""}],"src":"11949:168:4"},{"body":{"nativeSrc":"12154:95:4","nodeType":"YulBlock","src":"12154:95:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12171:1:4","nodeType":"YulLiteral","src":"12171:1:4","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"12178:3:4","nodeType":"YulLiteral","src":"12178:3:4","type":"","value":"224"},{"kind":"number","nativeSrc":"12183:10:4","nodeType":"YulLiteral","src":"12183:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"12174:3:4","nodeType":"YulIdentifier","src":"12174:3:4"},"nativeSrc":"12174:20:4","nodeType":"YulFunctionCall","src":"12174:20:4"}],"functionName":{"name":"mstore","nativeSrc":"12164:6:4","nodeType":"YulIdentifier","src":"12164:6:4"},"nativeSrc":"12164:31:4","nodeType":"YulFunctionCall","src":"12164:31:4"},"nativeSrc":"12164:31:4","nodeType":"YulExpressionStatement","src":"12164:31:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12211:1:4","nodeType":"YulLiteral","src":"12211:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"12214:4:4","nodeType":"YulLiteral","src":"12214:4:4","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"12204:6:4","nodeType":"YulIdentifier","src":"12204:6:4"},"nativeSrc":"12204:15:4","nodeType":"YulFunctionCall","src":"12204:15:4"},"nativeSrc":"12204:15:4","nodeType":"YulExpressionStatement","src":"12204:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12235:1:4","nodeType":"YulLiteral","src":"12235:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"12238:4:4","nodeType":"YulLiteral","src":"12238:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12228:6:4","nodeType":"YulIdentifier","src":"12228:6:4"},"nativeSrc":"12228:15:4","nodeType":"YulFunctionCall","src":"12228:15:4"},"nativeSrc":"12228:15:4","nodeType":"YulExpressionStatement","src":"12228:15:4"}]},"name":"panic_error_0x12","nativeSrc":"12122:127:4","nodeType":"YulFunctionDefinition","src":"12122:127:4"},{"body":{"nativeSrc":"12300:74:4","nodeType":"YulBlock","src":"12300:74:4","statements":[{"body":{"nativeSrc":"12323:22:4","nodeType":"YulBlock","src":"12323:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"12325:16:4","nodeType":"YulIdentifier","src":"12325:16:4"},"nativeSrc":"12325:18:4","nodeType":"YulFunctionCall","src":"12325:18:4"},"nativeSrc":"12325:18:4","nodeType":"YulExpressionStatement","src":"12325:18:4"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"12320:1:4","nodeType":"YulIdentifier","src":"12320:1:4"}],"functionName":{"name":"iszero","nativeSrc":"12313:6:4","nodeType":"YulIdentifier","src":"12313:6:4"},"nativeSrc":"12313:9:4","nodeType":"YulFunctionCall","src":"12313:9:4"},"nativeSrc":"12310:35:4","nodeType":"YulIf","src":"12310:35:4"},{"nativeSrc":"12354:14:4","nodeType":"YulAssignment","src":"12354:14:4","value":{"arguments":[{"name":"x","nativeSrc":"12363:1:4","nodeType":"YulIdentifier","src":"12363:1:4"},{"name":"y","nativeSrc":"12366:1:4","nodeType":"YulIdentifier","src":"12366:1:4"}],"functionName":{"name":"div","nativeSrc":"12359:3:4","nodeType":"YulIdentifier","src":"12359:3:4"},"nativeSrc":"12359:9:4","nodeType":"YulFunctionCall","src":"12359:9:4"},"variableNames":[{"name":"r","nativeSrc":"12354:1:4","nodeType":"YulIdentifier","src":"12354:1:4"}]}]},"name":"checked_div_t_uint256","nativeSrc":"12254:120:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12285:1:4","nodeType":"YulTypedName","src":"12285:1:4","type":""},{"name":"y","nativeSrc":"12288:1:4","nodeType":"YulTypedName","src":"12288:1:4","type":""}],"returnVariables":[{"name":"r","nativeSrc":"12294:1:4","nodeType":"YulTypedName","src":"12294:1:4","type":""}],"src":"12254:120:4"},{"body":{"nativeSrc":"12619:222:4","nodeType":"YulBlock","src":"12619:222:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12636:3:4","nodeType":"YulIdentifier","src":"12636:3:4"},{"hexValue":"534155434520746f6b656e206173736f63696174696f6e206661696c65643a20","kind":"string","nativeSrc":"12641:34:4","nodeType":"YulLiteral","src":"12641:34:4","type":"","value":"SAUCE token association failed: "}],"functionName":{"name":"mstore","nativeSrc":"12629:6:4","nodeType":"YulIdentifier","src":"12629:6:4"},"nativeSrc":"12629:47:4","nodeType":"YulFunctionCall","src":"12629:47:4"},"nativeSrc":"12629:47:4","nodeType":"YulExpressionStatement","src":"12629:47:4"},{"nativeSrc":"12685:27:4","nodeType":"YulVariableDeclaration","src":"12685:27:4","value":{"arguments":[{"name":"value0","nativeSrc":"12705:6:4","nodeType":"YulIdentifier","src":"12705:6:4"}],"functionName":{"name":"mload","nativeSrc":"12699:5:4","nodeType":"YulIdentifier","src":"12699:5:4"},"nativeSrc":"12699:13:4","nodeType":"YulFunctionCall","src":"12699:13:4"},"variables":[{"name":"length","nativeSrc":"12689:6:4","nodeType":"YulTypedName","src":"12689:6:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"12760:6:4","nodeType":"YulIdentifier","src":"12760:6:4"},{"kind":"number","nativeSrc":"12768:2:4","nodeType":"YulLiteral","src":"12768:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12756:3:4","nodeType":"YulIdentifier","src":"12756:3:4"},"nativeSrc":"12756:15:4","nodeType":"YulFunctionCall","src":"12756:15:4"},{"arguments":[{"name":"pos","nativeSrc":"12777:3:4","nodeType":"YulIdentifier","src":"12777:3:4"},{"kind":"number","nativeSrc":"12782:2:4","nodeType":"YulLiteral","src":"12782:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12773:3:4","nodeType":"YulIdentifier","src":"12773:3:4"},"nativeSrc":"12773:12:4","nodeType":"YulFunctionCall","src":"12773:12:4"},{"name":"length","nativeSrc":"12787:6:4","nodeType":"YulIdentifier","src":"12787:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"12721:34:4","nodeType":"YulIdentifier","src":"12721:34:4"},"nativeSrc":"12721:73:4","nodeType":"YulFunctionCall","src":"12721:73:4"},"nativeSrc":"12721:73:4","nodeType":"YulExpressionStatement","src":"12721:73:4"},{"nativeSrc":"12803:32:4","nodeType":"YulAssignment","src":"12803:32:4","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"12818:3:4","nodeType":"YulIdentifier","src":"12818:3:4"},{"name":"length","nativeSrc":"12823:6:4","nodeType":"YulIdentifier","src":"12823:6:4"}],"functionName":{"name":"add","nativeSrc":"12814:3:4","nodeType":"YulIdentifier","src":"12814:3:4"},"nativeSrc":"12814:16:4","nodeType":"YulFunctionCall","src":"12814:16:4"},{"kind":"number","nativeSrc":"12832:2:4","nodeType":"YulLiteral","src":"12832:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12810:3:4","nodeType":"YulIdentifier","src":"12810:3:4"},"nativeSrc":"12810:25:4","nodeType":"YulFunctionCall","src":"12810:25:4"},"variableNames":[{"name":"end","nativeSrc":"12803:3:4","nodeType":"YulIdentifier","src":"12803:3:4"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_68495250fdc0ee8e53fcde04a36e34fbf1ec8715429481eca8f59ec65fc8e2c4_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"12379:462:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12595:3:4","nodeType":"YulTypedName","src":"12595:3:4","type":""},{"name":"value0","nativeSrc":"12600:6:4","nodeType":"YulTypedName","src":"12600:6:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12611:3:4","nodeType":"YulTypedName","src":"12611:3:4","type":""}],"src":"12379:462:4"},{"body":{"nativeSrc":"12901:98:4","nodeType":"YulBlock","src":"12901:98:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12918:3:4","nodeType":"YulIdentifier","src":"12918:3:4"},{"kind":"number","nativeSrc":"12923:1:4","nodeType":"YulLiteral","src":"12923:1:4","type":"","value":"5"}],"functionName":{"name":"mstore","nativeSrc":"12911:6:4","nodeType":"YulIdentifier","src":"12911:6:4"},"nativeSrc":"12911:14:4","nodeType":"YulFunctionCall","src":"12911:14:4"},"nativeSrc":"12911:14:4","nodeType":"YulExpressionStatement","src":"12911:14:4"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"12945:3:4","nodeType":"YulIdentifier","src":"12945:3:4"},{"kind":"number","nativeSrc":"12950:4:4","nodeType":"YulLiteral","src":"12950:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12941:3:4","nodeType":"YulIdentifier","src":"12941:3:4"},"nativeSrc":"12941:14:4","nodeType":"YulFunctionCall","src":"12941:14:4"},{"hexValue":"5341554345","kind":"string","nativeSrc":"12957:7:4","nodeType":"YulLiteral","src":"12957:7:4","type":"","value":"SAUCE"}],"functionName":{"name":"mstore","nativeSrc":"12934:6:4","nodeType":"YulIdentifier","src":"12934:6:4"},"nativeSrc":"12934:31:4","nodeType":"YulFunctionCall","src":"12934:31:4"},"nativeSrc":"12934:31:4","nodeType":"YulExpressionStatement","src":"12934:31:4"},{"nativeSrc":"12974:19:4","nodeType":"YulAssignment","src":"12974:19:4","value":{"arguments":[{"name":"pos","nativeSrc":"12985:3:4","nodeType":"YulIdentifier","src":"12985:3:4"},{"kind":"number","nativeSrc":"12990:2:4","nodeType":"YulLiteral","src":"12990:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12981:3:4","nodeType":"YulIdentifier","src":"12981:3:4"},"nativeSrc":"12981:12:4","nodeType":"YulFunctionCall","src":"12981:12:4"},"variableNames":[{"name":"end","nativeSrc":"12974:3:4","nodeType":"YulIdentifier","src":"12974:3:4"}]}]},"name":"abi_encode_stringliteral_4b03","nativeSrc":"12846:153:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12885:3:4","nodeType":"YulTypedName","src":"12885:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12893:3:4","nodeType":"YulTypedName","src":"12893:3:4","type":""}],"src":"12846:153:4"},{"body":{"nativeSrc":"13234:245:4","nodeType":"YulBlock","src":"13234:245:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13251:9:4","nodeType":"YulIdentifier","src":"13251:9:4"},{"kind":"number","nativeSrc":"13262:2:4","nodeType":"YulLiteral","src":"13262:2:4","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"13244:6:4","nodeType":"YulIdentifier","src":"13244:6:4"},"nativeSrc":"13244:21:4","nodeType":"YulFunctionCall","src":"13244:21:4"},"nativeSrc":"13244:21:4","nodeType":"YulExpressionStatement","src":"13244:21:4"},{"nativeSrc":"13274:57:4","nodeType":"YulAssignment","src":"13274:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13316:9:4","nodeType":"YulIdentifier","src":"13316:9:4"},{"kind":"number","nativeSrc":"13327:2:4","nodeType":"YulLiteral","src":"13327:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13312:3:4","nodeType":"YulIdentifier","src":"13312:3:4"},"nativeSrc":"13312:18:4","nodeType":"YulFunctionCall","src":"13312:18:4"}],"functionName":{"name":"abi_encode_stringliteral_4b03","nativeSrc":"13282:29:4","nodeType":"YulIdentifier","src":"13282:29:4"},"nativeSrc":"13282:49:4","nodeType":"YulFunctionCall","src":"13282:49:4"},"variableNames":[{"name":"tail","nativeSrc":"13274:4:4","nodeType":"YulIdentifier","src":"13274:4:4"}]},{"nativeSrc":"13340:29:4","nodeType":"YulVariableDeclaration","src":"13340:29:4","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13358:3:4","nodeType":"YulLiteral","src":"13358:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"13363:1:4","nodeType":"YulLiteral","src":"13363:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13354:3:4","nodeType":"YulIdentifier","src":"13354:3:4"},"nativeSrc":"13354:11:4","nodeType":"YulFunctionCall","src":"13354:11:4"},{"kind":"number","nativeSrc":"13367:1:4","nodeType":"YulLiteral","src":"13367:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13350:3:4","nodeType":"YulIdentifier","src":"13350:3:4"},"nativeSrc":"13350:19:4","nodeType":"YulFunctionCall","src":"13350:19:4"},"variables":[{"name":"_1","nativeSrc":"13344:2:4","nodeType":"YulTypedName","src":"13344:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13389:9:4","nodeType":"YulIdentifier","src":"13389:9:4"},{"kind":"number","nativeSrc":"13400:2:4","nodeType":"YulLiteral","src":"13400:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13385:3:4","nodeType":"YulIdentifier","src":"13385:3:4"},"nativeSrc":"13385:18:4","nodeType":"YulFunctionCall","src":"13385:18:4"},{"arguments":[{"name":"value0","nativeSrc":"13409:6:4","nodeType":"YulIdentifier","src":"13409:6:4"},{"name":"_1","nativeSrc":"13417:2:4","nodeType":"YulIdentifier","src":"13417:2:4"}],"functionName":{"name":"and","nativeSrc":"13405:3:4","nodeType":"YulIdentifier","src":"13405:3:4"},"nativeSrc":"13405:15:4","nodeType":"YulFunctionCall","src":"13405:15:4"}],"functionName":{"name":"mstore","nativeSrc":"13378:6:4","nodeType":"YulIdentifier","src":"13378:6:4"},"nativeSrc":"13378:43:4","nodeType":"YulFunctionCall","src":"13378:43:4"},"nativeSrc":"13378:43:4","nodeType":"YulExpressionStatement","src":"13378:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13441:9:4","nodeType":"YulIdentifier","src":"13441:9:4"},{"kind":"number","nativeSrc":"13452:2:4","nodeType":"YulLiteral","src":"13452:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13437:3:4","nodeType":"YulIdentifier","src":"13437:3:4"},"nativeSrc":"13437:18:4","nodeType":"YulFunctionCall","src":"13437:18:4"},{"arguments":[{"name":"value1","nativeSrc":"13461:6:4","nodeType":"YulIdentifier","src":"13461:6:4"},{"name":"_1","nativeSrc":"13469:2:4","nodeType":"YulIdentifier","src":"13469:2:4"}],"functionName":{"name":"and","nativeSrc":"13457:3:4","nodeType":"YulIdentifier","src":"13457:3:4"},"nativeSrc":"13457:15:4","nodeType":"YulFunctionCall","src":"13457:15:4"}],"functionName":{"name":"mstore","nativeSrc":"13430:6:4","nodeType":"YulIdentifier","src":"13430:6:4"},"nativeSrc":"13430:43:4","nodeType":"YulFunctionCall","src":"13430:43:4"},"nativeSrc":"13430:43:4","nodeType":"YulExpressionStatement","src":"13430:43:4"}]},"name":"abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nativeSrc":"13004:475:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13195:9:4","nodeType":"YulTypedName","src":"13195:9:4","type":""},{"name":"value1","nativeSrc":"13206:6:4","nodeType":"YulTypedName","src":"13206:6:4","type":""},{"name":"value0","nativeSrc":"13214:6:4","nodeType":"YulTypedName","src":"13214:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13225:4:4","nodeType":"YulTypedName","src":"13225:4:4","type":""}],"src":"13004:475:4"},{"body":{"nativeSrc":"13516:95:4","nodeType":"YulBlock","src":"13516:95:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13533:1:4","nodeType":"YulLiteral","src":"13533:1:4","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13540:3:4","nodeType":"YulLiteral","src":"13540:3:4","type":"","value":"224"},{"kind":"number","nativeSrc":"13545:10:4","nodeType":"YulLiteral","src":"13545:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13536:3:4","nodeType":"YulIdentifier","src":"13536:3:4"},"nativeSrc":"13536:20:4","nodeType":"YulFunctionCall","src":"13536:20:4"}],"functionName":{"name":"mstore","nativeSrc":"13526:6:4","nodeType":"YulIdentifier","src":"13526:6:4"},"nativeSrc":"13526:31:4","nodeType":"YulFunctionCall","src":"13526:31:4"},"nativeSrc":"13526:31:4","nodeType":"YulExpressionStatement","src":"13526:31:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13573:1:4","nodeType":"YulLiteral","src":"13573:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"13576:4:4","nodeType":"YulLiteral","src":"13576:4:4","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"13566:6:4","nodeType":"YulIdentifier","src":"13566:6:4"},"nativeSrc":"13566:15:4","nodeType":"YulFunctionCall","src":"13566:15:4"},"nativeSrc":"13566:15:4","nodeType":"YulExpressionStatement","src":"13566:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13597:1:4","nodeType":"YulLiteral","src":"13597:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"13600:4:4","nodeType":"YulLiteral","src":"13600:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13590:6:4","nodeType":"YulIdentifier","src":"13590:6:4"},"nativeSrc":"13590:15:4","nodeType":"YulFunctionCall","src":"13590:15:4"},"nativeSrc":"13590:15:4","nodeType":"YulExpressionStatement","src":"13590:15:4"}]},"name":"panic_error_0x32","nativeSrc":"13484:127:4","nodeType":"YulFunctionDefinition","src":"13484:127:4"},{"body":{"nativeSrc":"13856:218:4","nodeType":"YulBlock","src":"13856:218:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13873:3:4","nodeType":"YulIdentifier","src":"13873:3:4"},{"hexValue":"546f6b656e206173736f63696174696f6e206661696c65643a20","kind":"string","nativeSrc":"13878:28:4","nodeType":"YulLiteral","src":"13878:28:4","type":"","value":"Token association failed: "}],"functionName":{"name":"mstore","nativeSrc":"13866:6:4","nodeType":"YulIdentifier","src":"13866:6:4"},"nativeSrc":"13866:41:4","nodeType":"YulFunctionCall","src":"13866:41:4"},"nativeSrc":"13866:41:4","nodeType":"YulExpressionStatement","src":"13866:41:4"},{"nativeSrc":"13916:27:4","nodeType":"YulVariableDeclaration","src":"13916:27:4","value":{"arguments":[{"name":"value0","nativeSrc":"13936:6:4","nodeType":"YulIdentifier","src":"13936:6:4"}],"functionName":{"name":"mload","nativeSrc":"13930:5:4","nodeType":"YulIdentifier","src":"13930:5:4"},"nativeSrc":"13930:13:4","nodeType":"YulFunctionCall","src":"13930:13:4"},"variables":[{"name":"length","nativeSrc":"13920:6:4","nodeType":"YulTypedName","src":"13920:6:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"13991:6:4","nodeType":"YulIdentifier","src":"13991:6:4"},{"kind":"number","nativeSrc":"13999:4:4","nodeType":"YulLiteral","src":"13999:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13987:3:4","nodeType":"YulIdentifier","src":"13987:3:4"},"nativeSrc":"13987:17:4","nodeType":"YulFunctionCall","src":"13987:17:4"},{"arguments":[{"name":"pos","nativeSrc":"14010:3:4","nodeType":"YulIdentifier","src":"14010:3:4"},{"kind":"number","nativeSrc":"14015:2:4","nodeType":"YulLiteral","src":"14015:2:4","type":"","value":"26"}],"functionName":{"name":"add","nativeSrc":"14006:3:4","nodeType":"YulIdentifier","src":"14006:3:4"},"nativeSrc":"14006:12:4","nodeType":"YulFunctionCall","src":"14006:12:4"},{"name":"length","nativeSrc":"14020:6:4","nodeType":"YulIdentifier","src":"14020:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"13952:34:4","nodeType":"YulIdentifier","src":"13952:34:4"},"nativeSrc":"13952:75:4","nodeType":"YulFunctionCall","src":"13952:75:4"},"nativeSrc":"13952:75:4","nodeType":"YulExpressionStatement","src":"13952:75:4"},{"nativeSrc":"14036:32:4","nodeType":"YulAssignment","src":"14036:32:4","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"14051:3:4","nodeType":"YulIdentifier","src":"14051:3:4"},{"name":"length","nativeSrc":"14056:6:4","nodeType":"YulIdentifier","src":"14056:6:4"}],"functionName":{"name":"add","nativeSrc":"14047:3:4","nodeType":"YulIdentifier","src":"14047:3:4"},"nativeSrc":"14047:16:4","nodeType":"YulFunctionCall","src":"14047:16:4"},{"kind":"number","nativeSrc":"14065:2:4","nodeType":"YulLiteral","src":"14065:2:4","type":"","value":"26"}],"functionName":{"name":"add","nativeSrc":"14043:3:4","nodeType":"YulIdentifier","src":"14043:3:4"},"nativeSrc":"14043:25:4","nodeType":"YulFunctionCall","src":"14043:25:4"},"variableNames":[{"name":"end","nativeSrc":"14036:3:4","nodeType":"YulIdentifier","src":"14036:3:4"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_7eb3639e548d99e2b5f171e605acad2de5f51ddc896d16b083d0dc5d115a0fe2_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"13616:458:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13832:3:4","nodeType":"YulTypedName","src":"13832:3:4","type":""},{"name":"value0","nativeSrc":"13837:6:4","nodeType":"YulTypedName","src":"13837:6:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13848:3:4","nodeType":"YulTypedName","src":"13848:3:4","type":""}],"src":"13616:458:4"},{"body":{"nativeSrc":"14319:223:4","nodeType":"YulBlock","src":"14319:223:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14336:3:4","nodeType":"YulIdentifier","src":"14336:3:4"},{"hexValue":"434c585920746f6b656e206173736f63696174696f6e206661696c65643a20","kind":"string","nativeSrc":"14341:33:4","nodeType":"YulLiteral","src":"14341:33:4","type":"","value":"CLXY token association failed: "}],"functionName":{"name":"mstore","nativeSrc":"14329:6:4","nodeType":"YulIdentifier","src":"14329:6:4"},"nativeSrc":"14329:46:4","nodeType":"YulFunctionCall","src":"14329:46:4"},"nativeSrc":"14329:46:4","nodeType":"YulExpressionStatement","src":"14329:46:4"},{"nativeSrc":"14384:27:4","nodeType":"YulVariableDeclaration","src":"14384:27:4","value":{"arguments":[{"name":"value0","nativeSrc":"14404:6:4","nodeType":"YulIdentifier","src":"14404:6:4"}],"functionName":{"name":"mload","nativeSrc":"14398:5:4","nodeType":"YulIdentifier","src":"14398:5:4"},"nativeSrc":"14398:13:4","nodeType":"YulFunctionCall","src":"14398:13:4"},"variables":[{"name":"length","nativeSrc":"14388:6:4","nodeType":"YulTypedName","src":"14388:6:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"14459:6:4","nodeType":"YulIdentifier","src":"14459:6:4"},{"kind":"number","nativeSrc":"14467:4:4","nodeType":"YulLiteral","src":"14467:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14455:3:4","nodeType":"YulIdentifier","src":"14455:3:4"},"nativeSrc":"14455:17:4","nodeType":"YulFunctionCall","src":"14455:17:4"},{"arguments":[{"name":"pos","nativeSrc":"14478:3:4","nodeType":"YulIdentifier","src":"14478:3:4"},{"kind":"number","nativeSrc":"14483:2:4","nodeType":"YulLiteral","src":"14483:2:4","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14474:3:4","nodeType":"YulIdentifier","src":"14474:3:4"},"nativeSrc":"14474:12:4","nodeType":"YulFunctionCall","src":"14474:12:4"},{"name":"length","nativeSrc":"14488:6:4","nodeType":"YulIdentifier","src":"14488:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"14420:34:4","nodeType":"YulIdentifier","src":"14420:34:4"},"nativeSrc":"14420:75:4","nodeType":"YulFunctionCall","src":"14420:75:4"},"nativeSrc":"14420:75:4","nodeType":"YulExpressionStatement","src":"14420:75:4"},{"nativeSrc":"14504:32:4","nodeType":"YulAssignment","src":"14504:32:4","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"14519:3:4","nodeType":"YulIdentifier","src":"14519:3:4"},{"name":"length","nativeSrc":"14524:6:4","nodeType":"YulIdentifier","src":"14524:6:4"}],"functionName":{"name":"add","nativeSrc":"14515:3:4","nodeType":"YulIdentifier","src":"14515:3:4"},"nativeSrc":"14515:16:4","nodeType":"YulFunctionCall","src":"14515:16:4"},{"kind":"number","nativeSrc":"14533:2:4","nodeType":"YulLiteral","src":"14533:2:4","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14511:3:4","nodeType":"YulIdentifier","src":"14511:3:4"},"nativeSrc":"14511:25:4","nodeType":"YulFunctionCall","src":"14511:25:4"},"variableNames":[{"name":"end","nativeSrc":"14504:3:4","nodeType":"YulIdentifier","src":"14504:3:4"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_a71107265ed46d55753f901c0ef2ce1bd8a60e72b08794a34eebec38ec384993_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"14079:463:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14295:3:4","nodeType":"YulTypedName","src":"14295:3:4","type":""},{"name":"value0","nativeSrc":"14300:6:4","nodeType":"YulTypedName","src":"14300:6:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14311:3:4","nodeType":"YulTypedName","src":"14311:3:4","type":""}],"src":"14079:463:4"},{"body":{"nativeSrc":"14602:97:4","nodeType":"YulBlock","src":"14602:97:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14619:3:4","nodeType":"YulIdentifier","src":"14619:3:4"},{"kind":"number","nativeSrc":"14624:1:4","nodeType":"YulLiteral","src":"14624:1:4","type":"","value":"4"}],"functionName":{"name":"mstore","nativeSrc":"14612:6:4","nodeType":"YulIdentifier","src":"14612:6:4"},"nativeSrc":"14612:14:4","nodeType":"YulFunctionCall","src":"14612:14:4"},"nativeSrc":"14612:14:4","nodeType":"YulExpressionStatement","src":"14612:14:4"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"14646:3:4","nodeType":"YulIdentifier","src":"14646:3:4"},{"kind":"number","nativeSrc":"14651:4:4","nodeType":"YulLiteral","src":"14651:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14642:3:4","nodeType":"YulIdentifier","src":"14642:3:4"},"nativeSrc":"14642:14:4","nodeType":"YulFunctionCall","src":"14642:14:4"},{"hexValue":"434c5859","kind":"string","nativeSrc":"14658:6:4","nodeType":"YulLiteral","src":"14658:6:4","type":"","value":"CLXY"}],"functionName":{"name":"mstore","nativeSrc":"14635:6:4","nodeType":"YulIdentifier","src":"14635:6:4"},"nativeSrc":"14635:30:4","nodeType":"YulFunctionCall","src":"14635:30:4"},"nativeSrc":"14635:30:4","nodeType":"YulExpressionStatement","src":"14635:30:4"},{"nativeSrc":"14674:19:4","nodeType":"YulAssignment","src":"14674:19:4","value":{"arguments":[{"name":"pos","nativeSrc":"14685:3:4","nodeType":"YulIdentifier","src":"14685:3:4"},{"kind":"number","nativeSrc":"14690:2:4","nodeType":"YulLiteral","src":"14690:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14681:3:4","nodeType":"YulIdentifier","src":"14681:3:4"},"nativeSrc":"14681:12:4","nodeType":"YulFunctionCall","src":"14681:12:4"},"variableNames":[{"name":"end","nativeSrc":"14674:3:4","nodeType":"YulIdentifier","src":"14674:3:4"}]}]},"name":"abi_encode_stringliteral_c6f0","nativeSrc":"14547:152:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14586:3:4","nodeType":"YulTypedName","src":"14586:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14594:3:4","nodeType":"YulTypedName","src":"14594:3:4","type":""}],"src":"14547:152:4"},{"body":{"nativeSrc":"14934:245:4","nodeType":"YulBlock","src":"14934:245:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14951:9:4","nodeType":"YulIdentifier","src":"14951:9:4"},{"kind":"number","nativeSrc":"14962:2:4","nodeType":"YulLiteral","src":"14962:2:4","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"14944:6:4","nodeType":"YulIdentifier","src":"14944:6:4"},"nativeSrc":"14944:21:4","nodeType":"YulFunctionCall","src":"14944:21:4"},"nativeSrc":"14944:21:4","nodeType":"YulExpressionStatement","src":"14944:21:4"},{"nativeSrc":"14974:57:4","nodeType":"YulAssignment","src":"14974:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15016:9:4","nodeType":"YulIdentifier","src":"15016:9:4"},{"kind":"number","nativeSrc":"15027:2:4","nodeType":"YulLiteral","src":"15027:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15012:3:4","nodeType":"YulIdentifier","src":"15012:3:4"},"nativeSrc":"15012:18:4","nodeType":"YulFunctionCall","src":"15012:18:4"}],"functionName":{"name":"abi_encode_stringliteral_c6f0","nativeSrc":"14982:29:4","nodeType":"YulIdentifier","src":"14982:29:4"},"nativeSrc":"14982:49:4","nodeType":"YulFunctionCall","src":"14982:49:4"},"variableNames":[{"name":"tail","nativeSrc":"14974:4:4","nodeType":"YulIdentifier","src":"14974:4:4"}]},{"nativeSrc":"15040:29:4","nodeType":"YulVariableDeclaration","src":"15040:29:4","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15058:3:4","nodeType":"YulLiteral","src":"15058:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"15063:1:4","nodeType":"YulLiteral","src":"15063:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"15054:3:4","nodeType":"YulIdentifier","src":"15054:3:4"},"nativeSrc":"15054:11:4","nodeType":"YulFunctionCall","src":"15054:11:4"},{"kind":"number","nativeSrc":"15067:1:4","nodeType":"YulLiteral","src":"15067:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"15050:3:4","nodeType":"YulIdentifier","src":"15050:3:4"},"nativeSrc":"15050:19:4","nodeType":"YulFunctionCall","src":"15050:19:4"},"variables":[{"name":"_1","nativeSrc":"15044:2:4","nodeType":"YulTypedName","src":"15044:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15089:9:4","nodeType":"YulIdentifier","src":"15089:9:4"},{"kind":"number","nativeSrc":"15100:2:4","nodeType":"YulLiteral","src":"15100:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15085:3:4","nodeType":"YulIdentifier","src":"15085:3:4"},"nativeSrc":"15085:18:4","nodeType":"YulFunctionCall","src":"15085:18:4"},{"arguments":[{"name":"value0","nativeSrc":"15109:6:4","nodeType":"YulIdentifier","src":"15109:6:4"},{"name":"_1","nativeSrc":"15117:2:4","nodeType":"YulIdentifier","src":"15117:2:4"}],"functionName":{"name":"and","nativeSrc":"15105:3:4","nodeType":"YulIdentifier","src":"15105:3:4"},"nativeSrc":"15105:15:4","nodeType":"YulFunctionCall","src":"15105:15:4"}],"functionName":{"name":"mstore","nativeSrc":"15078:6:4","nodeType":"YulIdentifier","src":"15078:6:4"},"nativeSrc":"15078:43:4","nodeType":"YulFunctionCall","src":"15078:43:4"},"nativeSrc":"15078:43:4","nodeType":"YulExpressionStatement","src":"15078:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15141:9:4","nodeType":"YulIdentifier","src":"15141:9:4"},{"kind":"number","nativeSrc":"15152:2:4","nodeType":"YulLiteral","src":"15152:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15137:3:4","nodeType":"YulIdentifier","src":"15137:3:4"},"nativeSrc":"15137:18:4","nodeType":"YulFunctionCall","src":"15137:18:4"},{"arguments":[{"name":"value1","nativeSrc":"15161:6:4","nodeType":"YulIdentifier","src":"15161:6:4"},{"name":"_1","nativeSrc":"15169:2:4","nodeType":"YulIdentifier","src":"15169:2:4"}],"functionName":{"name":"and","nativeSrc":"15157:3:4","nodeType":"YulIdentifier","src":"15157:3:4"},"nativeSrc":"15157:15:4","nodeType":"YulFunctionCall","src":"15157:15:4"}],"functionName":{"name":"mstore","nativeSrc":"15130:6:4","nodeType":"YulIdentifier","src":"15130:6:4"},"nativeSrc":"15130:43:4","nodeType":"YulFunctionCall","src":"15130:43:4"},"nativeSrc":"15130:43:4","nodeType":"YulExpressionStatement","src":"15130:43:4"}]},"name":"abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nativeSrc":"14704:475:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14895:9:4","nodeType":"YulTypedName","src":"14895:9:4","type":""},{"name":"value1","nativeSrc":"14906:6:4","nodeType":"YulTypedName","src":"14906:6:4","type":""},{"name":"value0","nativeSrc":"14914:6:4","nodeType":"YulTypedName","src":"14914:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14925:4:4","nodeType":"YulTypedName","src":"14925:4:4","type":""}],"src":"14704:475:4"},{"body":{"nativeSrc":"15358:175:4","nodeType":"YulBlock","src":"15358:175:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15375:9:4","nodeType":"YulIdentifier","src":"15375:9:4"},{"kind":"number","nativeSrc":"15386:2:4","nodeType":"YulLiteral","src":"15386:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15368:6:4","nodeType":"YulIdentifier","src":"15368:6:4"},"nativeSrc":"15368:21:4","nodeType":"YulFunctionCall","src":"15368:21:4"},"nativeSrc":"15368:21:4","nodeType":"YulExpressionStatement","src":"15368:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15409:9:4","nodeType":"YulIdentifier","src":"15409:9:4"},{"kind":"number","nativeSrc":"15420:2:4","nodeType":"YulLiteral","src":"15420:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15405:3:4","nodeType":"YulIdentifier","src":"15405:3:4"},"nativeSrc":"15405:18:4","nodeType":"YulFunctionCall","src":"15405:18:4"},{"kind":"number","nativeSrc":"15425:2:4","nodeType":"YulLiteral","src":"15425:2:4","type":"","value":"25"}],"functionName":{"name":"mstore","nativeSrc":"15398:6:4","nodeType":"YulIdentifier","src":"15398:6:4"},"nativeSrc":"15398:30:4","nodeType":"YulFunctionCall","src":"15398:30:4"},"nativeSrc":"15398:30:4","nodeType":"YulExpressionStatement","src":"15398:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15448:9:4","nodeType":"YulIdentifier","src":"15448:9:4"},{"kind":"number","nativeSrc":"15459:2:4","nodeType":"YulLiteral","src":"15459:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15444:3:4","nodeType":"YulIdentifier","src":"15444:3:4"},"nativeSrc":"15444:18:4","nodeType":"YulFunctionCall","src":"15444:18:4"},{"hexValue":"496e73756666696369656e7420484241522062616c616e6365","kind":"string","nativeSrc":"15464:27:4","nodeType":"YulLiteral","src":"15464:27:4","type":"","value":"Insufficient HBAR balance"}],"functionName":{"name":"mstore","nativeSrc":"15437:6:4","nodeType":"YulIdentifier","src":"15437:6:4"},"nativeSrc":"15437:55:4","nodeType":"YulFunctionCall","src":"15437:55:4"},"nativeSrc":"15437:55:4","nodeType":"YulExpressionStatement","src":"15437:55:4"},{"nativeSrc":"15501:26:4","nodeType":"YulAssignment","src":"15501:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"15513:9:4","nodeType":"YulIdentifier","src":"15513:9:4"},{"kind":"number","nativeSrc":"15524:2:4","nodeType":"YulLiteral","src":"15524:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15509:3:4","nodeType":"YulIdentifier","src":"15509:3:4"},"nativeSrc":"15509:18:4","nodeType":"YulFunctionCall","src":"15509:18:4"},"variableNames":[{"name":"tail","nativeSrc":"15501:4:4","nodeType":"YulIdentifier","src":"15501:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e4591e7aa5942b9a7e03764658fae7c504c791f64b8470252259d3c5547c83a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15184:349:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15335:9:4","nodeType":"YulTypedName","src":"15335:9:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15349:4:4","nodeType":"YulTypedName","src":"15349:4:4","type":""}],"src":"15184:349:4"},{"body":{"nativeSrc":"15712:103:4","nodeType":"YulBlock","src":"15712:103:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15729:9:4","nodeType":"YulIdentifier","src":"15729:9:4"},{"kind":"number","nativeSrc":"15740:2:4","nodeType":"YulLiteral","src":"15740:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15722:6:4","nodeType":"YulIdentifier","src":"15722:6:4"},"nativeSrc":"15722:21:4","nodeType":"YulFunctionCall","src":"15722:21:4"},"nativeSrc":"15722:21:4","nodeType":"YulExpressionStatement","src":"15722:21:4"},{"nativeSrc":"15752:57:4","nodeType":"YulAssignment","src":"15752:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15794:9:4","nodeType":"YulIdentifier","src":"15794:9:4"},{"kind":"number","nativeSrc":"15805:2:4","nodeType":"YulLiteral","src":"15805:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15790:3:4","nodeType":"YulIdentifier","src":"15790:3:4"},"nativeSrc":"15790:18:4","nodeType":"YulFunctionCall","src":"15790:18:4"}],"functionName":{"name":"abi_encode_stringliteral_49eb","nativeSrc":"15760:29:4","nodeType":"YulIdentifier","src":"15760:29:4"},"nativeSrc":"15760:49:4","nodeType":"YulFunctionCall","src":"15760:49:4"},"variableNames":[{"name":"tail","nativeSrc":"15752:4:4","nodeType":"YulIdentifier","src":"15752:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15538:277:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15689:9:4","nodeType":"YulTypedName","src":"15689:9:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15703:4:4","nodeType":"YulTypedName","src":"15703:4:4","type":""}],"src":"15538:277:4"},{"body":{"nativeSrc":"15994:103:4","nodeType":"YulBlock","src":"15994:103:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16011:9:4","nodeType":"YulIdentifier","src":"16011:9:4"},{"kind":"number","nativeSrc":"16022:2:4","nodeType":"YulLiteral","src":"16022:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16004:6:4","nodeType":"YulIdentifier","src":"16004:6:4"},"nativeSrc":"16004:21:4","nodeType":"YulFunctionCall","src":"16004:21:4"},"nativeSrc":"16004:21:4","nodeType":"YulExpressionStatement","src":"16004:21:4"},{"nativeSrc":"16034:57:4","nodeType":"YulAssignment","src":"16034:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16076:9:4","nodeType":"YulIdentifier","src":"16076:9:4"},{"kind":"number","nativeSrc":"16087:2:4","nodeType":"YulLiteral","src":"16087:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16072:3:4","nodeType":"YulIdentifier","src":"16072:3:4"},"nativeSrc":"16072:18:4","nodeType":"YulFunctionCall","src":"16072:18:4"}],"functionName":{"name":"abi_encode_stringliteral_4b03","nativeSrc":"16042:29:4","nodeType":"YulIdentifier","src":"16042:29:4"},"nativeSrc":"16042:49:4","nodeType":"YulFunctionCall","src":"16042:49:4"},"variableNames":[{"name":"tail","nativeSrc":"16034:4:4","nodeType":"YulIdentifier","src":"16034:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15820:277:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15971:9:4","nodeType":"YulTypedName","src":"15971:9:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15985:4:4","nodeType":"YulTypedName","src":"15985:4:4","type":""}],"src":"15820:277:4"},{"body":{"nativeSrc":"16276:103:4","nodeType":"YulBlock","src":"16276:103:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16293:9:4","nodeType":"YulIdentifier","src":"16293:9:4"},{"kind":"number","nativeSrc":"16304:2:4","nodeType":"YulLiteral","src":"16304:2:4","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16286:6:4","nodeType":"YulIdentifier","src":"16286:6:4"},"nativeSrc":"16286:21:4","nodeType":"YulFunctionCall","src":"16286:21:4"},"nativeSrc":"16286:21:4","nodeType":"YulExpressionStatement","src":"16286:21:4"},{"nativeSrc":"16316:57:4","nodeType":"YulAssignment","src":"16316:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16358:9:4","nodeType":"YulIdentifier","src":"16358:9:4"},{"kind":"number","nativeSrc":"16369:2:4","nodeType":"YulLiteral","src":"16369:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16354:3:4","nodeType":"YulIdentifier","src":"16354:3:4"},"nativeSrc":"16354:18:4","nodeType":"YulFunctionCall","src":"16354:18:4"}],"functionName":{"name":"abi_encode_stringliteral_c6f0","nativeSrc":"16324:29:4","nodeType":"YulIdentifier","src":"16324:29:4"},"nativeSrc":"16324:49:4","nodeType":"YulFunctionCall","src":"16324:49:4"},"variableNames":[{"name":"tail","nativeSrc":"16316:4:4","nodeType":"YulIdentifier","src":"16316:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16102:277:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16253:9:4","nodeType":"YulTypedName","src":"16253:9:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16267:4:4","nodeType":"YulTypedName","src":"16267:4:4","type":""}],"src":"16102:277:4"},{"body":{"nativeSrc":"16499:191:4","nodeType":"YulBlock","src":"16499:191:4","statements":[{"body":{"nativeSrc":"16545:16:4","nodeType":"YulBlock","src":"16545:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16554:1:4","nodeType":"YulLiteral","src":"16554:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"16557:1:4","nodeType":"YulLiteral","src":"16557:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16547:6:4","nodeType":"YulIdentifier","src":"16547:6:4"},"nativeSrc":"16547:12:4","nodeType":"YulFunctionCall","src":"16547:12:4"},"nativeSrc":"16547:12:4","nodeType":"YulExpressionStatement","src":"16547:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16520:7:4","nodeType":"YulIdentifier","src":"16520:7:4"},{"name":"headStart","nativeSrc":"16529:9:4","nodeType":"YulIdentifier","src":"16529:9:4"}],"functionName":{"name":"sub","nativeSrc":"16516:3:4","nodeType":"YulIdentifier","src":"16516:3:4"},"nativeSrc":"16516:23:4","nodeType":"YulFunctionCall","src":"16516:23:4"},{"kind":"number","nativeSrc":"16541:2:4","nodeType":"YulLiteral","src":"16541:2:4","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"16512:3:4","nodeType":"YulIdentifier","src":"16512:3:4"},"nativeSrc":"16512:32:4","nodeType":"YulFunctionCall","src":"16512:32:4"},"nativeSrc":"16509:52:4","nodeType":"YulIf","src":"16509:52:4"},{"nativeSrc":"16570:26:4","nodeType":"YulAssignment","src":"16570:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"16586:9:4","nodeType":"YulIdentifier","src":"16586:9:4"}],"functionName":{"name":"mload","nativeSrc":"16580:5:4","nodeType":"YulIdentifier","src":"16580:5:4"},"nativeSrc":"16580:16:4","nodeType":"YulFunctionCall","src":"16580:16:4"},"variableNames":[{"name":"value0","nativeSrc":"16570:6:4","nodeType":"YulIdentifier","src":"16570:6:4"}]},{"nativeSrc":"16605:35:4","nodeType":"YulAssignment","src":"16605:35:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16625:9:4","nodeType":"YulIdentifier","src":"16625:9:4"},{"kind":"number","nativeSrc":"16636:2:4","nodeType":"YulLiteral","src":"16636:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16621:3:4","nodeType":"YulIdentifier","src":"16621:3:4"},"nativeSrc":"16621:18:4","nodeType":"YulFunctionCall","src":"16621:18:4"}],"functionName":{"name":"mload","nativeSrc":"16615:5:4","nodeType":"YulIdentifier","src":"16615:5:4"},"nativeSrc":"16615:25:4","nodeType":"YulFunctionCall","src":"16615:25:4"},"variableNames":[{"name":"value1","nativeSrc":"16605:6:4","nodeType":"YulIdentifier","src":"16605:6:4"}]},{"nativeSrc":"16649:35:4","nodeType":"YulAssignment","src":"16649:35:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16669:9:4","nodeType":"YulIdentifier","src":"16669:9:4"},{"kind":"number","nativeSrc":"16680:2:4","nodeType":"YulLiteral","src":"16680:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16665:3:4","nodeType":"YulIdentifier","src":"16665:3:4"},"nativeSrc":"16665:18:4","nodeType":"YulFunctionCall","src":"16665:18:4"}],"functionName":{"name":"mload","nativeSrc":"16659:5:4","nodeType":"YulIdentifier","src":"16659:5:4"},"nativeSrc":"16659:25:4","nodeType":"YulFunctionCall","src":"16659:25:4"},"variableNames":[{"name":"value2","nativeSrc":"16649:6:4","nodeType":"YulIdentifier","src":"16649:6:4"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory","nativeSrc":"16384:306:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16449:9:4","nodeType":"YulTypedName","src":"16449:9:4","type":""},{"name":"dataEnd","nativeSrc":"16460:7:4","nodeType":"YulTypedName","src":"16460:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16472:6:4","nodeType":"YulTypedName","src":"16472:6:4","type":""},{"name":"value1","nativeSrc":"16480:6:4","nodeType":"YulTypedName","src":"16480:6:4","type":""},{"name":"value2","nativeSrc":"16488:6:4","nodeType":"YulTypedName","src":"16488:6:4","type":""}],"src":"16384:306:4"},{"body":{"nativeSrc":"16925:189:4","nodeType":"YulBlock","src":"16925:189:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16942:9:4","nodeType":"YulIdentifier","src":"16942:9:4"},{"kind":"number","nativeSrc":"16953:2:4","nodeType":"YulLiteral","src":"16953:2:4","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"16935:6:4","nodeType":"YulIdentifier","src":"16935:6:4"},"nativeSrc":"16935:21:4","nodeType":"YulFunctionCall","src":"16935:21:4"},"nativeSrc":"16935:21:4","nodeType":"YulExpressionStatement","src":"16935:21:4"},{"nativeSrc":"16965:57:4","nodeType":"YulAssignment","src":"16965:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17007:9:4","nodeType":"YulIdentifier","src":"17007:9:4"},{"kind":"number","nativeSrc":"17018:2:4","nodeType":"YulLiteral","src":"17018:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17003:3:4","nodeType":"YulIdentifier","src":"17003:3:4"},"nativeSrc":"17003:18:4","nodeType":"YulFunctionCall","src":"17003:18:4"}],"functionName":{"name":"abi_encode_stringliteral_4b03","nativeSrc":"16973:29:4","nodeType":"YulIdentifier","src":"16973:29:4"},"nativeSrc":"16973:49:4","nodeType":"YulFunctionCall","src":"16973:49:4"},"variableNames":[{"name":"tail","nativeSrc":"16965:4:4","nodeType":"YulIdentifier","src":"16965:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17042:9:4","nodeType":"YulIdentifier","src":"17042:9:4"},{"kind":"number","nativeSrc":"17053:2:4","nodeType":"YulLiteral","src":"17053:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17038:3:4","nodeType":"YulIdentifier","src":"17038:3:4"},"nativeSrc":"17038:18:4","nodeType":"YulFunctionCall","src":"17038:18:4"},{"name":"value0","nativeSrc":"17058:6:4","nodeType":"YulIdentifier","src":"17058:6:4"}],"functionName":{"name":"mstore","nativeSrc":"17031:6:4","nodeType":"YulIdentifier","src":"17031:6:4"},"nativeSrc":"17031:34:4","nodeType":"YulFunctionCall","src":"17031:34:4"},"nativeSrc":"17031:34:4","nodeType":"YulExpressionStatement","src":"17031:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17085:9:4","nodeType":"YulIdentifier","src":"17085:9:4"},{"kind":"number","nativeSrc":"17096:2:4","nodeType":"YulLiteral","src":"17096:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17081:3:4","nodeType":"YulIdentifier","src":"17081:3:4"},"nativeSrc":"17081:18:4","nodeType":"YulFunctionCall","src":"17081:18:4"},{"name":"value1","nativeSrc":"17101:6:4","nodeType":"YulIdentifier","src":"17101:6:4"}],"functionName":{"name":"mstore","nativeSrc":"17074:6:4","nodeType":"YulIdentifier","src":"17074:6:4"},"nativeSrc":"17074:34:4","nodeType":"YulFunctionCall","src":"17074:34:4"},"nativeSrc":"17074:34:4","nodeType":"YulExpressionStatement","src":"17074:34:4"}]},"name":"abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"16695:419:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16886:9:4","nodeType":"YulTypedName","src":"16886:9:4","type":""},{"name":"value1","nativeSrc":"16897:6:4","nodeType":"YulTypedName","src":"16897:6:4","type":""},{"name":"value0","nativeSrc":"16905:6:4","nodeType":"YulTypedName","src":"16905:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16916:4:4","nodeType":"YulTypedName","src":"16916:4:4","type":""}],"src":"16695:419:4"},{"body":{"nativeSrc":"17349:189:4","nodeType":"YulBlock","src":"17349:189:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17366:9:4","nodeType":"YulIdentifier","src":"17366:9:4"},{"kind":"number","nativeSrc":"17377:2:4","nodeType":"YulLiteral","src":"17377:2:4","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"17359:6:4","nodeType":"YulIdentifier","src":"17359:6:4"},"nativeSrc":"17359:21:4","nodeType":"YulFunctionCall","src":"17359:21:4"},"nativeSrc":"17359:21:4","nodeType":"YulExpressionStatement","src":"17359:21:4"},{"nativeSrc":"17389:57:4","nodeType":"YulAssignment","src":"17389:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17431:9:4","nodeType":"YulIdentifier","src":"17431:9:4"},{"kind":"number","nativeSrc":"17442:2:4","nodeType":"YulLiteral","src":"17442:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17427:3:4","nodeType":"YulIdentifier","src":"17427:3:4"},"nativeSrc":"17427:18:4","nodeType":"YulFunctionCall","src":"17427:18:4"}],"functionName":{"name":"abi_encode_stringliteral_c6f0","nativeSrc":"17397:29:4","nodeType":"YulIdentifier","src":"17397:29:4"},"nativeSrc":"17397:49:4","nodeType":"YulFunctionCall","src":"17397:49:4"},"variableNames":[{"name":"tail","nativeSrc":"17389:4:4","nodeType":"YulIdentifier","src":"17389:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17466:9:4","nodeType":"YulIdentifier","src":"17466:9:4"},{"kind":"number","nativeSrc":"17477:2:4","nodeType":"YulLiteral","src":"17477:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17462:3:4","nodeType":"YulIdentifier","src":"17462:3:4"},"nativeSrc":"17462:18:4","nodeType":"YulFunctionCall","src":"17462:18:4"},{"name":"value0","nativeSrc":"17482:6:4","nodeType":"YulIdentifier","src":"17482:6:4"}],"functionName":{"name":"mstore","nativeSrc":"17455:6:4","nodeType":"YulIdentifier","src":"17455:6:4"},"nativeSrc":"17455:34:4","nodeType":"YulFunctionCall","src":"17455:34:4"},"nativeSrc":"17455:34:4","nodeType":"YulExpressionStatement","src":"17455:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17509:9:4","nodeType":"YulIdentifier","src":"17509:9:4"},{"kind":"number","nativeSrc":"17520:2:4","nodeType":"YulLiteral","src":"17520:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17505:3:4","nodeType":"YulIdentifier","src":"17505:3:4"},"nativeSrc":"17505:18:4","nodeType":"YulFunctionCall","src":"17505:18:4"},{"name":"value1","nativeSrc":"17525:6:4","nodeType":"YulIdentifier","src":"17525:6:4"}],"functionName":{"name":"mstore","nativeSrc":"17498:6:4","nodeType":"YulIdentifier","src":"17498:6:4"},"nativeSrc":"17498:34:4","nodeType":"YulFunctionCall","src":"17498:34:4"},"nativeSrc":"17498:34:4","nodeType":"YulExpressionStatement","src":"17498:34:4"}]},"name":"abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17119:419:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17310:9:4","nodeType":"YulTypedName","src":"17310:9:4","type":""},{"name":"value1","nativeSrc":"17321:6:4","nodeType":"YulTypedName","src":"17321:6:4","type":""},{"name":"value0","nativeSrc":"17329:6:4","nodeType":"YulTypedName","src":"17329:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17340:4:4","nodeType":"YulTypedName","src":"17340:4:4","type":""}],"src":"17119:419:4"},{"body":{"nativeSrc":"17773:243:4","nodeType":"YulBlock","src":"17773:243:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17790:9:4","nodeType":"YulIdentifier","src":"17790:9:4"},{"kind":"number","nativeSrc":"17801:2:4","nodeType":"YulLiteral","src":"17801:2:4","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"17783:6:4","nodeType":"YulIdentifier","src":"17783:6:4"},"nativeSrc":"17783:21:4","nodeType":"YulFunctionCall","src":"17783:21:4"},"nativeSrc":"17783:21:4","nodeType":"YulExpressionStatement","src":"17783:21:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17824:9:4","nodeType":"YulIdentifier","src":"17824:9:4"},{"kind":"number","nativeSrc":"17835:2:4","nodeType":"YulLiteral","src":"17835:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17820:3:4","nodeType":"YulIdentifier","src":"17820:3:4"},"nativeSrc":"17820:18:4","nodeType":"YulFunctionCall","src":"17820:18:4"},{"kind":"number","nativeSrc":"17840:1:4","nodeType":"YulLiteral","src":"17840:1:4","type":"","value":"4"}],"functionName":{"name":"mstore","nativeSrc":"17813:6:4","nodeType":"YulIdentifier","src":"17813:6:4"},"nativeSrc":"17813:29:4","nodeType":"YulFunctionCall","src":"17813:29:4"},"nativeSrc":"17813:29:4","nodeType":"YulExpressionStatement","src":"17813:29:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17862:9:4","nodeType":"YulIdentifier","src":"17862:9:4"},{"kind":"number","nativeSrc":"17873:3:4","nodeType":"YulLiteral","src":"17873:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"17858:3:4","nodeType":"YulIdentifier","src":"17858:3:4"},"nativeSrc":"17858:19:4","nodeType":"YulFunctionCall","src":"17858:19:4"},{"hexValue":"48424152","kind":"string","nativeSrc":"17879:6:4","nodeType":"YulLiteral","src":"17879:6:4","type":"","value":"HBAR"}],"functionName":{"name":"mstore","nativeSrc":"17851:6:4","nodeType":"YulIdentifier","src":"17851:6:4"},"nativeSrc":"17851:35:4","nodeType":"YulFunctionCall","src":"17851:35:4"},"nativeSrc":"17851:35:4","nodeType":"YulExpressionStatement","src":"17851:35:4"},{"nativeSrc":"17895:27:4","nodeType":"YulAssignment","src":"17895:27:4","value":{"arguments":[{"name":"headStart","nativeSrc":"17907:9:4","nodeType":"YulIdentifier","src":"17907:9:4"},{"kind":"number","nativeSrc":"17918:3:4","nodeType":"YulLiteral","src":"17918:3:4","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"17903:3:4","nodeType":"YulIdentifier","src":"17903:3:4"},"nativeSrc":"17903:19:4","nodeType":"YulFunctionCall","src":"17903:19:4"},"variableNames":[{"name":"tail","nativeSrc":"17895:4:4","nodeType":"YulIdentifier","src":"17895:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17942:9:4","nodeType":"YulIdentifier","src":"17942:9:4"},{"kind":"number","nativeSrc":"17953:4:4","nodeType":"YulLiteral","src":"17953:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17938:3:4","nodeType":"YulIdentifier","src":"17938:3:4"},"nativeSrc":"17938:20:4","nodeType":"YulFunctionCall","src":"17938:20:4"},{"name":"value0","nativeSrc":"17960:6:4","nodeType":"YulIdentifier","src":"17960:6:4"}],"functionName":{"name":"mstore","nativeSrc":"17931:6:4","nodeType":"YulIdentifier","src":"17931:6:4"},"nativeSrc":"17931:36:4","nodeType":"YulFunctionCall","src":"17931:36:4"},"nativeSrc":"17931:36:4","nodeType":"YulExpressionStatement","src":"17931:36:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17987:9:4","nodeType":"YulIdentifier","src":"17987:9:4"},{"kind":"number","nativeSrc":"17998:2:4","nodeType":"YulLiteral","src":"17998:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17983:3:4","nodeType":"YulIdentifier","src":"17983:3:4"},"nativeSrc":"17983:18:4","nodeType":"YulFunctionCall","src":"17983:18:4"},{"name":"value1","nativeSrc":"18003:6:4","nodeType":"YulIdentifier","src":"18003:6:4"}],"functionName":{"name":"mstore","nativeSrc":"17976:6:4","nodeType":"YulIdentifier","src":"17976:6:4"},"nativeSrc":"17976:34:4","nodeType":"YulFunctionCall","src":"17976:34:4"},"nativeSrc":"17976:34:4","nodeType":"YulExpressionStatement","src":"17976:34:4"}]},"name":"abi_encode_tuple_t_stringliteral_061735ab87dcc0fdde52a9a6072648c11c6fde3e234a87ae62c265e0bd92bb6e_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17543:473:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17734:9:4","nodeType":"YulTypedName","src":"17734:9:4","type":""},{"name":"value1","nativeSrc":"17745:6:4","nodeType":"YulTypedName","src":"17745:6:4","type":""},{"name":"value0","nativeSrc":"17753:6:4","nodeType":"YulTypedName","src":"17753:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17764:4:4","nodeType":"YulTypedName","src":"17764:4:4","type":""}],"src":"17543:473:4"},{"body":{"nativeSrc":"18325:421:4","nodeType":"YulBlock","src":"18325:421:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18342:9:4","nodeType":"YulIdentifier","src":"18342:9:4"},{"kind":"number","nativeSrc":"18353:3:4","nodeType":"YulLiteral","src":"18353:3:4","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"18335:6:4","nodeType":"YulIdentifier","src":"18335:6:4"},"nativeSrc":"18335:22:4","nodeType":"YulFunctionCall","src":"18335:22:4"},"nativeSrc":"18335:22:4","nodeType":"YulExpressionStatement","src":"18335:22:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18377:9:4","nodeType":"YulIdentifier","src":"18377:9:4"},{"kind":"number","nativeSrc":"18388:3:4","nodeType":"YulLiteral","src":"18388:3:4","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"18373:3:4","nodeType":"YulIdentifier","src":"18373:3:4"},"nativeSrc":"18373:19:4","nodeType":"YulFunctionCall","src":"18373:19:4"},{"kind":"number","nativeSrc":"18394:2:4","nodeType":"YulLiteral","src":"18394:2:4","type":"","value":"13"}],"functionName":{"name":"mstore","nativeSrc":"18366:6:4","nodeType":"YulIdentifier","src":"18366:6:4"},"nativeSrc":"18366:31:4","nodeType":"YulFunctionCall","src":"18366:31:4"},"nativeSrc":"18366:31:4","nodeType":"YulExpressionStatement","src":"18366:31:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18417:9:4","nodeType":"YulIdentifier","src":"18417:9:4"},{"kind":"number","nativeSrc":"18428:3:4","nodeType":"YulLiteral","src":"18428:3:4","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"18413:3:4","nodeType":"YulIdentifier","src":"18413:3:4"},"nativeSrc":"18413:19:4","nodeType":"YulFunctionCall","src":"18413:19:4"},{"hexValue":"7472616e73666572546f6b656e","kind":"string","nativeSrc":"18434:15:4","nodeType":"YulLiteral","src":"18434:15:4","type":"","value":"transferToken"}],"functionName":{"name":"mstore","nativeSrc":"18406:6:4","nodeType":"YulIdentifier","src":"18406:6:4"},"nativeSrc":"18406:44:4","nodeType":"YulFunctionCall","src":"18406:44:4"},"nativeSrc":"18406:44:4","nodeType":"YulExpressionStatement","src":"18406:44:4"},{"nativeSrc":"18459:29:4","nodeType":"YulVariableDeclaration","src":"18459:29:4","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18477:3:4","nodeType":"YulLiteral","src":"18477:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"18482:1:4","nodeType":"YulLiteral","src":"18482:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"18473:3:4","nodeType":"YulIdentifier","src":"18473:3:4"},"nativeSrc":"18473:11:4","nodeType":"YulFunctionCall","src":"18473:11:4"},{"kind":"number","nativeSrc":"18486:1:4","nodeType":"YulLiteral","src":"18486:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"18469:3:4","nodeType":"YulIdentifier","src":"18469:3:4"},"nativeSrc":"18469:19:4","nodeType":"YulFunctionCall","src":"18469:19:4"},"variables":[{"name":"_1","nativeSrc":"18463:2:4","nodeType":"YulTypedName","src":"18463:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18508:9:4","nodeType":"YulIdentifier","src":"18508:9:4"},{"kind":"number","nativeSrc":"18519:4:4","nodeType":"YulLiteral","src":"18519:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18504:3:4","nodeType":"YulIdentifier","src":"18504:3:4"},"nativeSrc":"18504:20:4","nodeType":"YulFunctionCall","src":"18504:20:4"},{"arguments":[{"name":"value0","nativeSrc":"18530:6:4","nodeType":"YulIdentifier","src":"18530:6:4"},{"name":"_1","nativeSrc":"18538:2:4","nodeType":"YulIdentifier","src":"18538:2:4"}],"functionName":{"name":"and","nativeSrc":"18526:3:4","nodeType":"YulIdentifier","src":"18526:3:4"},"nativeSrc":"18526:15:4","nodeType":"YulFunctionCall","src":"18526:15:4"}],"functionName":{"name":"mstore","nativeSrc":"18497:6:4","nodeType":"YulIdentifier","src":"18497:6:4"},"nativeSrc":"18497:45:4","nodeType":"YulFunctionCall","src":"18497:45:4"},"nativeSrc":"18497:45:4","nodeType":"YulExpressionStatement","src":"18497:45:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18562:9:4","nodeType":"YulIdentifier","src":"18562:9:4"},{"kind":"number","nativeSrc":"18573:2:4","nodeType":"YulLiteral","src":"18573:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18558:3:4","nodeType":"YulIdentifier","src":"18558:3:4"},"nativeSrc":"18558:18:4","nodeType":"YulFunctionCall","src":"18558:18:4"},{"arguments":[{"name":"value1","nativeSrc":"18582:6:4","nodeType":"YulIdentifier","src":"18582:6:4"},{"name":"_1","nativeSrc":"18590:2:4","nodeType":"YulIdentifier","src":"18590:2:4"}],"functionName":{"name":"and","nativeSrc":"18578:3:4","nodeType":"YulIdentifier","src":"18578:3:4"},"nativeSrc":"18578:15:4","nodeType":"YulFunctionCall","src":"18578:15:4"}],"functionName":{"name":"mstore","nativeSrc":"18551:6:4","nodeType":"YulIdentifier","src":"18551:6:4"},"nativeSrc":"18551:43:4","nodeType":"YulFunctionCall","src":"18551:43:4"},"nativeSrc":"18551:43:4","nodeType":"YulExpressionStatement","src":"18551:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18614:9:4","nodeType":"YulIdentifier","src":"18614:9:4"},{"kind":"number","nativeSrc":"18625:2:4","nodeType":"YulLiteral","src":"18625:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18610:3:4","nodeType":"YulIdentifier","src":"18610:3:4"},"nativeSrc":"18610:18:4","nodeType":"YulFunctionCall","src":"18610:18:4"},{"name":"value2","nativeSrc":"18630:6:4","nodeType":"YulIdentifier","src":"18630:6:4"}],"functionName":{"name":"mstore","nativeSrc":"18603:6:4","nodeType":"YulIdentifier","src":"18603:6:4"},"nativeSrc":"18603:34:4","nodeType":"YulFunctionCall","src":"18603:34:4"},"nativeSrc":"18603:34:4","nodeType":"YulExpressionStatement","src":"18603:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18657:9:4","nodeType":"YulIdentifier","src":"18657:9:4"},{"kind":"number","nativeSrc":"18668:3:4","nodeType":"YulLiteral","src":"18668:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18653:3:4","nodeType":"YulIdentifier","src":"18653:3:4"},"nativeSrc":"18653:19:4","nodeType":"YulFunctionCall","src":"18653:19:4"},{"kind":"number","nativeSrc":"18674:3:4","nodeType":"YulLiteral","src":"18674:3:4","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"18646:6:4","nodeType":"YulIdentifier","src":"18646:6:4"},"nativeSrc":"18646:32:4","nodeType":"YulFunctionCall","src":"18646:32:4"},"nativeSrc":"18646:32:4","nodeType":"YulExpressionStatement","src":"18646:32:4"},{"nativeSrc":"18687:53:4","nodeType":"YulAssignment","src":"18687:53:4","value":{"arguments":[{"name":"value3","nativeSrc":"18712:6:4","nodeType":"YulIdentifier","src":"18712:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"18724:9:4","nodeType":"YulIdentifier","src":"18724:9:4"},{"kind":"number","nativeSrc":"18735:3:4","nodeType":"YulLiteral","src":"18735:3:4","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"18720:3:4","nodeType":"YulIdentifier","src":"18720:3:4"},"nativeSrc":"18720:19:4","nodeType":"YulFunctionCall","src":"18720:19:4"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"18695:16:4","nodeType":"YulIdentifier","src":"18695:16:4"},"nativeSrc":"18695:45:4","nodeType":"YulFunctionCall","src":"18695:45:4"},"variableNames":[{"name":"tail","nativeSrc":"18687:4:4","nodeType":"YulIdentifier","src":"18687:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b_t_address_t_address_t_int256_t_string_memory_ptr__to_t_string_memory_ptr_t_address_t_address_t_int256_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18021:725:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18270:9:4","nodeType":"YulTypedName","src":"18270:9:4","type":""},{"name":"value3","nativeSrc":"18281:6:4","nodeType":"YulTypedName","src":"18281:6:4","type":""},{"name":"value2","nativeSrc":"18289:6:4","nodeType":"YulTypedName","src":"18289:6:4","type":""},{"name":"value1","nativeSrc":"18297:6:4","nodeType":"YulTypedName","src":"18297:6:4","type":""},{"name":"value0","nativeSrc":"18305:6:4","nodeType":"YulTypedName","src":"18305:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18316:4:4","nodeType":"YulTypedName","src":"18316:4:4","type":""}],"src":"18021:725:4"},{"body":{"nativeSrc":"19055:416:4","nodeType":"YulBlock","src":"19055:416:4","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19072:9:4","nodeType":"YulIdentifier","src":"19072:9:4"},{"kind":"number","nativeSrc":"19083:3:4","nodeType":"YulLiteral","src":"19083:3:4","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"19065:6:4","nodeType":"YulIdentifier","src":"19065:6:4"},"nativeSrc":"19065:22:4","nodeType":"YulFunctionCall","src":"19065:22:4"},"nativeSrc":"19065:22:4","nodeType":"YulExpressionStatement","src":"19065:22:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19107:9:4","nodeType":"YulIdentifier","src":"19107:9:4"},{"kind":"number","nativeSrc":"19118:3:4","nodeType":"YulLiteral","src":"19118:3:4","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"19103:3:4","nodeType":"YulIdentifier","src":"19103:3:4"},"nativeSrc":"19103:19:4","nodeType":"YulFunctionCall","src":"19103:19:4"},{"kind":"number","nativeSrc":"19124:1:4","nodeType":"YulLiteral","src":"19124:1:4","type":"","value":"9"}],"functionName":{"name":"mstore","nativeSrc":"19096:6:4","nodeType":"YulIdentifier","src":"19096:6:4"},"nativeSrc":"19096:30:4","nodeType":"YulFunctionCall","src":"19096:30:4"},"nativeSrc":"19096:30:4","nodeType":"YulExpressionStatement","src":"19096:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19146:9:4","nodeType":"YulIdentifier","src":"19146:9:4"},{"kind":"number","nativeSrc":"19157:3:4","nodeType":"YulLiteral","src":"19157:3:4","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"19142:3:4","nodeType":"YulIdentifier","src":"19142:3:4"},"nativeSrc":"19142:19:4","nodeType":"YulFunctionCall","src":"19142:19:4"},{"hexValue":"6d696e74546f6b656e","kind":"string","nativeSrc":"19163:11:4","nodeType":"YulLiteral","src":"19163:11:4","type":"","value":"mintToken"}],"functionName":{"name":"mstore","nativeSrc":"19135:6:4","nodeType":"YulIdentifier","src":"19135:6:4"},"nativeSrc":"19135:40:4","nodeType":"YulFunctionCall","src":"19135:40:4"},"nativeSrc":"19135:40:4","nodeType":"YulExpressionStatement","src":"19135:40:4"},{"nativeSrc":"19184:29:4","nodeType":"YulVariableDeclaration","src":"19184:29:4","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19202:3:4","nodeType":"YulLiteral","src":"19202:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"19207:1:4","nodeType":"YulLiteral","src":"19207:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"19198:3:4","nodeType":"YulIdentifier","src":"19198:3:4"},"nativeSrc":"19198:11:4","nodeType":"YulFunctionCall","src":"19198:11:4"},{"kind":"number","nativeSrc":"19211:1:4","nodeType":"YulLiteral","src":"19211:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"19194:3:4","nodeType":"YulIdentifier","src":"19194:3:4"},"nativeSrc":"19194:19:4","nodeType":"YulFunctionCall","src":"19194:19:4"},"variables":[{"name":"_1","nativeSrc":"19188:2:4","nodeType":"YulTypedName","src":"19188:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19233:9:4","nodeType":"YulIdentifier","src":"19233:9:4"},{"kind":"number","nativeSrc":"19244:4:4","nodeType":"YulLiteral","src":"19244:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19229:3:4","nodeType":"YulIdentifier","src":"19229:3:4"},"nativeSrc":"19229:20:4","nodeType":"YulFunctionCall","src":"19229:20:4"},{"arguments":[{"name":"value0","nativeSrc":"19255:6:4","nodeType":"YulIdentifier","src":"19255:6:4"},{"name":"_1","nativeSrc":"19263:2:4","nodeType":"YulIdentifier","src":"19263:2:4"}],"functionName":{"name":"and","nativeSrc":"19251:3:4","nodeType":"YulIdentifier","src":"19251:3:4"},"nativeSrc":"19251:15:4","nodeType":"YulFunctionCall","src":"19251:15:4"}],"functionName":{"name":"mstore","nativeSrc":"19222:6:4","nodeType":"YulIdentifier","src":"19222:6:4"},"nativeSrc":"19222:45:4","nodeType":"YulFunctionCall","src":"19222:45:4"},"nativeSrc":"19222:45:4","nodeType":"YulExpressionStatement","src":"19222:45:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19287:9:4","nodeType":"YulIdentifier","src":"19287:9:4"},{"kind":"number","nativeSrc":"19298:2:4","nodeType":"YulLiteral","src":"19298:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19283:3:4","nodeType":"YulIdentifier","src":"19283:3:4"},"nativeSrc":"19283:18:4","nodeType":"YulFunctionCall","src":"19283:18:4"},{"arguments":[{"name":"value1","nativeSrc":"19307:6:4","nodeType":"YulIdentifier","src":"19307:6:4"},{"name":"_1","nativeSrc":"19315:2:4","nodeType":"YulIdentifier","src":"19315:2:4"}],"functionName":{"name":"and","nativeSrc":"19303:3:4","nodeType":"YulIdentifier","src":"19303:3:4"},"nativeSrc":"19303:15:4","nodeType":"YulFunctionCall","src":"19303:15:4"}],"functionName":{"name":"mstore","nativeSrc":"19276:6:4","nodeType":"YulIdentifier","src":"19276:6:4"},"nativeSrc":"19276:43:4","nodeType":"YulFunctionCall","src":"19276:43:4"},"nativeSrc":"19276:43:4","nodeType":"YulExpressionStatement","src":"19276:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19339:9:4","nodeType":"YulIdentifier","src":"19339:9:4"},{"kind":"number","nativeSrc":"19350:2:4","nodeType":"YulLiteral","src":"19350:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19335:3:4","nodeType":"YulIdentifier","src":"19335:3:4"},"nativeSrc":"19335:18:4","nodeType":"YulFunctionCall","src":"19335:18:4"},{"name":"value2","nativeSrc":"19355:6:4","nodeType":"YulIdentifier","src":"19355:6:4"}],"functionName":{"name":"mstore","nativeSrc":"19328:6:4","nodeType":"YulIdentifier","src":"19328:6:4"},"nativeSrc":"19328:34:4","nodeType":"YulFunctionCall","src":"19328:34:4"},"nativeSrc":"19328:34:4","nodeType":"YulExpressionStatement","src":"19328:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19382:9:4","nodeType":"YulIdentifier","src":"19382:9:4"},{"kind":"number","nativeSrc":"19393:3:4","nodeType":"YulLiteral","src":"19393:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19378:3:4","nodeType":"YulIdentifier","src":"19378:3:4"},"nativeSrc":"19378:19:4","nodeType":"YulFunctionCall","src":"19378:19:4"},{"kind":"number","nativeSrc":"19399:3:4","nodeType":"YulLiteral","src":"19399:3:4","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"19371:6:4","nodeType":"YulIdentifier","src":"19371:6:4"},"nativeSrc":"19371:32:4","nodeType":"YulFunctionCall","src":"19371:32:4"},"nativeSrc":"19371:32:4","nodeType":"YulExpressionStatement","src":"19371:32:4"},{"nativeSrc":"19412:53:4","nodeType":"YulAssignment","src":"19412:53:4","value":{"arguments":[{"name":"value3","nativeSrc":"19437:6:4","nodeType":"YulIdentifier","src":"19437:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"19449:9:4","nodeType":"YulIdentifier","src":"19449:9:4"},{"kind":"number","nativeSrc":"19460:3:4","nodeType":"YulLiteral","src":"19460:3:4","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"19445:3:4","nodeType":"YulIdentifier","src":"19445:3:4"},"nativeSrc":"19445:19:4","nodeType":"YulFunctionCall","src":"19445:19:4"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"19420:16:4","nodeType":"YulIdentifier","src":"19420:16:4"},"nativeSrc":"19420:45:4","nodeType":"YulFunctionCall","src":"19420:45:4"},"variableNames":[{"name":"tail","nativeSrc":"19412:4:4","nodeType":"YulIdentifier","src":"19412:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_ec78d9c22c08bb9f0ecd5d95571ae83e3f22219c5a9278c3270691d50abfd91b_t_address_t_address_t_int256_t_string_memory_ptr__to_t_string_memory_ptr_t_address_t_address_t_int256_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18751:720:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19000:9:4","nodeType":"YulTypedName","src":"19000:9:4","type":""},{"name":"value3","nativeSrc":"19011:6:4","nodeType":"YulTypedName","src":"19011:6:4","type":""},{"name":"value2","nativeSrc":"19019:6:4","nodeType":"YulTypedName","src":"19019:6:4","type":""},{"name":"value1","nativeSrc":"19027:6:4","nodeType":"YulTypedName","src":"19027:6:4","type":""},{"name":"value0","nativeSrc":"19035:6:4","nodeType":"YulTypedName","src":"19035:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19046:4:4","nodeType":"YulTypedName","src":"19046:4:4","type":""}],"src":"18751:720:4"},{"body":{"nativeSrc":"19575:76:4","nodeType":"YulBlock","src":"19575:76:4","statements":[{"nativeSrc":"19585:26:4","nodeType":"YulAssignment","src":"19585:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"19597:9:4","nodeType":"YulIdentifier","src":"19597:9:4"},{"kind":"number","nativeSrc":"19608:2:4","nodeType":"YulLiteral","src":"19608:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19593:3:4","nodeType":"YulIdentifier","src":"19593:3:4"},"nativeSrc":"19593:18:4","nodeType":"YulFunctionCall","src":"19593:18:4"},"variableNames":[{"name":"tail","nativeSrc":"19585:4:4","nodeType":"YulIdentifier","src":"19585:4:4"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19627:9:4","nodeType":"YulIdentifier","src":"19627:9:4"},{"name":"value0","nativeSrc":"19638:6:4","nodeType":"YulIdentifier","src":"19638:6:4"}],"functionName":{"name":"mstore","nativeSrc":"19620:6:4","nodeType":"YulIdentifier","src":"19620:6:4"},"nativeSrc":"19620:25:4","nodeType":"YulFunctionCall","src":"19620:25:4"},"nativeSrc":"19620:25:4","nodeType":"YulExpressionStatement","src":"19620:25:4"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nativeSrc":"19476:175:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19544:9:4","nodeType":"YulTypedName","src":"19544:9:4","type":""},{"name":"value0","nativeSrc":"19555:6:4","nodeType":"YulTypedName","src":"19555:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19566:4:4","nodeType":"YulTypedName","src":"19566:4:4","type":""}],"src":"19476:175:4"},{"body":{"nativeSrc":"19699:93:4","nodeType":"YulBlock","src":"19699:93:4","statements":[{"body":{"nativeSrc":"19735:22:4","nodeType":"YulBlock","src":"19735:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19737:16:4","nodeType":"YulIdentifier","src":"19737:16:4"},"nativeSrc":"19737:18:4","nodeType":"YulFunctionCall","src":"19737:18:4"},"nativeSrc":"19737:18:4","nodeType":"YulExpressionStatement","src":"19737:18:4"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"19715:5:4","nodeType":"YulIdentifier","src":"19715:5:4"},{"arguments":[{"kind":"number","nativeSrc":"19726:3:4","nodeType":"YulLiteral","src":"19726:3:4","type":"","value":"255"},{"kind":"number","nativeSrc":"19731:1:4","nodeType":"YulLiteral","src":"19731:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"19722:3:4","nodeType":"YulIdentifier","src":"19722:3:4"},"nativeSrc":"19722:11:4","nodeType":"YulFunctionCall","src":"19722:11:4"}],"functionName":{"name":"eq","nativeSrc":"19712:2:4","nodeType":"YulIdentifier","src":"19712:2:4"},"nativeSrc":"19712:22:4","nodeType":"YulFunctionCall","src":"19712:22:4"},"nativeSrc":"19709:48:4","nodeType":"YulIf","src":"19709:48:4"},{"nativeSrc":"19766:20:4","nodeType":"YulAssignment","src":"19766:20:4","value":{"arguments":[{"kind":"number","nativeSrc":"19777:1:4","nodeType":"YulLiteral","src":"19777:1:4","type":"","value":"0"},{"name":"value","nativeSrc":"19780:5:4","nodeType":"YulIdentifier","src":"19780:5:4"}],"functionName":{"name":"sub","nativeSrc":"19773:3:4","nodeType":"YulIdentifier","src":"19773:3:4"},"nativeSrc":"19773:13:4","nodeType":"YulFunctionCall","src":"19773:13:4"},"variableNames":[{"name":"ret","nativeSrc":"19766:3:4","nodeType":"YulIdentifier","src":"19766:3:4"}]}]},"name":"negate_t_int256","nativeSrc":"19656:136:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19681:5:4","nodeType":"YulTypedName","src":"19681:5:4","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19691:3:4","nodeType":"YulTypedName","src":"19691:3:4","type":""}],"src":"19656:136:4"},{"body":{"nativeSrc":"19835:74:4","nodeType":"YulBlock","src":"19835:74:4","statements":[{"body":{"nativeSrc":"19858:22:4","nodeType":"YulBlock","src":"19858:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"19860:16:4","nodeType":"YulIdentifier","src":"19860:16:4"},"nativeSrc":"19860:18:4","nodeType":"YulFunctionCall","src":"19860:18:4"},"nativeSrc":"19860:18:4","nodeType":"YulExpressionStatement","src":"19860:18:4"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"19855:1:4","nodeType":"YulIdentifier","src":"19855:1:4"}],"functionName":{"name":"iszero","nativeSrc":"19848:6:4","nodeType":"YulIdentifier","src":"19848:6:4"},"nativeSrc":"19848:9:4","nodeType":"YulFunctionCall","src":"19848:9:4"},"nativeSrc":"19845:35:4","nodeType":"YulIf","src":"19845:35:4"},{"nativeSrc":"19889:14:4","nodeType":"YulAssignment","src":"19889:14:4","value":{"arguments":[{"name":"x","nativeSrc":"19898:1:4","nodeType":"YulIdentifier","src":"19898:1:4"},{"name":"y","nativeSrc":"19901:1:4","nodeType":"YulIdentifier","src":"19901:1:4"}],"functionName":{"name":"mod","nativeSrc":"19894:3:4","nodeType":"YulIdentifier","src":"19894:3:4"},"nativeSrc":"19894:9:4","nodeType":"YulFunctionCall","src":"19894:9:4"},"variableNames":[{"name":"r","nativeSrc":"19889:1:4","nodeType":"YulIdentifier","src":"19889:1:4"}]}]},"name":"mod_t_uint256","nativeSrc":"19797:112:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"19820:1:4","nodeType":"YulTypedName","src":"19820:1:4","type":""},{"name":"y","nativeSrc":"19823:1:4","nodeType":"YulTypedName","src":"19823:1:4","type":""}],"returnVariables":[{"name":"r","nativeSrc":"19829:1:4","nodeType":"YulTypedName","src":"19829:1:4","type":""}],"src":"19797:112:4"},{"body":{"nativeSrc":"19962:77:4","nodeType":"YulBlock","src":"19962:77:4","statements":[{"nativeSrc":"19972:16:4","nodeType":"YulAssignment","src":"19972:16:4","value":{"arguments":[{"name":"x","nativeSrc":"19983:1:4","nodeType":"YulIdentifier","src":"19983:1:4"},{"name":"y","nativeSrc":"19986:1:4","nodeType":"YulIdentifier","src":"19986:1:4"}],"functionName":{"name":"add","nativeSrc":"19979:3:4","nodeType":"YulIdentifier","src":"19979:3:4"},"nativeSrc":"19979:9:4","nodeType":"YulFunctionCall","src":"19979:9:4"},"variableNames":[{"name":"sum","nativeSrc":"19972:3:4","nodeType":"YulIdentifier","src":"19972:3:4"}]},{"body":{"nativeSrc":"20011:22:4","nodeType":"YulBlock","src":"20011:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20013:16:4","nodeType":"YulIdentifier","src":"20013:16:4"},"nativeSrc":"20013:18:4","nodeType":"YulFunctionCall","src":"20013:18:4"},"nativeSrc":"20013:18:4","nodeType":"YulExpressionStatement","src":"20013:18:4"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"20003:1:4","nodeType":"YulIdentifier","src":"20003:1:4"},{"name":"sum","nativeSrc":"20006:3:4","nodeType":"YulIdentifier","src":"20006:3:4"}],"functionName":{"name":"gt","nativeSrc":"20000:2:4","nodeType":"YulIdentifier","src":"20000:2:4"},"nativeSrc":"20000:10:4","nodeType":"YulFunctionCall","src":"20000:10:4"},"nativeSrc":"19997:36:4","nodeType":"YulIf","src":"19997:36:4"}]},"name":"checked_add_t_uint256","nativeSrc":"19914:125:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"19945:1:4","nodeType":"YulTypedName","src":"19945:1:4","type":""},{"name":"y","nativeSrc":"19948:1:4","nodeType":"YulTypedName","src":"19948:1:4","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"19954:3:4","nodeType":"YulTypedName","src":"19954:3:4","type":""}],"src":"19914:125:4"},{"body":{"nativeSrc":"20091:89:4","nodeType":"YulBlock","src":"20091:89:4","statements":[{"body":{"nativeSrc":"20118:22:4","nodeType":"YulBlock","src":"20118:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20120:16:4","nodeType":"YulIdentifier","src":"20120:16:4"},"nativeSrc":"20120:18:4","nodeType":"YulFunctionCall","src":"20120:18:4"},"nativeSrc":"20120:18:4","nodeType":"YulExpressionStatement","src":"20120:18:4"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"20111:5:4","nodeType":"YulIdentifier","src":"20111:5:4"}],"functionName":{"name":"iszero","nativeSrc":"20104:6:4","nodeType":"YulIdentifier","src":"20104:6:4"},"nativeSrc":"20104:13:4","nodeType":"YulFunctionCall","src":"20104:13:4"},"nativeSrc":"20101:39:4","nodeType":"YulIf","src":"20101:39:4"},{"nativeSrc":"20149:25:4","nodeType":"YulAssignment","src":"20149:25:4","value":{"arguments":[{"name":"value","nativeSrc":"20160:5:4","nodeType":"YulIdentifier","src":"20160:5:4"},{"arguments":[{"kind":"number","nativeSrc":"20171:1:4","nodeType":"YulLiteral","src":"20171:1:4","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"20167:3:4","nodeType":"YulIdentifier","src":"20167:3:4"},"nativeSrc":"20167:6:4","nodeType":"YulFunctionCall","src":"20167:6:4"}],"functionName":{"name":"add","nativeSrc":"20156:3:4","nodeType":"YulIdentifier","src":"20156:3:4"},"nativeSrc":"20156:18:4","nodeType":"YulFunctionCall","src":"20156:18:4"},"variableNames":[{"name":"ret","nativeSrc":"20149:3:4","nodeType":"YulIdentifier","src":"20149:3:4"}]}]},"name":"decrement_t_uint256","nativeSrc":"20044:136:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20073:5:4","nodeType":"YulTypedName","src":"20073:5:4","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"20083:3:4","nodeType":"YulTypedName","src":"20083:3:4","type":""}],"src":"20044:136:4"},{"body":{"nativeSrc":"20234:79:4","nodeType":"YulBlock","src":"20234:79:4","statements":[{"nativeSrc":"20244:17:4","nodeType":"YulAssignment","src":"20244:17:4","value":{"arguments":[{"name":"x","nativeSrc":"20256:1:4","nodeType":"YulIdentifier","src":"20256:1:4"},{"name":"y","nativeSrc":"20259:1:4","nodeType":"YulIdentifier","src":"20259:1:4"}],"functionName":{"name":"sub","nativeSrc":"20252:3:4","nodeType":"YulIdentifier","src":"20252:3:4"},"nativeSrc":"20252:9:4","nodeType":"YulFunctionCall","src":"20252:9:4"},"variableNames":[{"name":"diff","nativeSrc":"20244:4:4","nodeType":"YulIdentifier","src":"20244:4:4"}]},{"body":{"nativeSrc":"20285:22:4","nodeType":"YulBlock","src":"20285:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20287:16:4","nodeType":"YulIdentifier","src":"20287:16:4"},"nativeSrc":"20287:18:4","nodeType":"YulFunctionCall","src":"20287:18:4"},"nativeSrc":"20287:18:4","nodeType":"YulExpressionStatement","src":"20287:18:4"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"20276:4:4","nodeType":"YulIdentifier","src":"20276:4:4"},{"name":"x","nativeSrc":"20282:1:4","nodeType":"YulIdentifier","src":"20282:1:4"}],"functionName":{"name":"gt","nativeSrc":"20273:2:4","nodeType":"YulIdentifier","src":"20273:2:4"},"nativeSrc":"20273:11:4","nodeType":"YulFunctionCall","src":"20273:11:4"},"nativeSrc":"20270:37:4","nodeType":"YulIf","src":"20270:37:4"}]},"name":"checked_sub_t_uint256","nativeSrc":"20185:128:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"20216:1:4","nodeType":"YulTypedName","src":"20216:1:4","type":""},{"name":"y","nativeSrc":"20219:1:4","nodeType":"YulTypedName","src":"20219:1:4","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"20225:4:4","nodeType":"YulTypedName","src":"20225:4:4","type":""}],"src":"20185:128:4"},{"body":{"nativeSrc":"20411:265:4","nodeType":"YulBlock","src":"20411:265:4","statements":[{"body":{"nativeSrc":"20457:16:4","nodeType":"YulBlock","src":"20457:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20466:1:4","nodeType":"YulLiteral","src":"20466:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"20469:1:4","nodeType":"YulLiteral","src":"20469:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"20459:6:4","nodeType":"YulIdentifier","src":"20459:6:4"},"nativeSrc":"20459:12:4","nodeType":"YulFunctionCall","src":"20459:12:4"},"nativeSrc":"20459:12:4","nodeType":"YulExpressionStatement","src":"20459:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20432:7:4","nodeType":"YulIdentifier","src":"20432:7:4"},{"name":"headStart","nativeSrc":"20441:9:4","nodeType":"YulIdentifier","src":"20441:9:4"}],"functionName":{"name":"sub","nativeSrc":"20428:3:4","nodeType":"YulIdentifier","src":"20428:3:4"},"nativeSrc":"20428:23:4","nodeType":"YulFunctionCall","src":"20428:23:4"},{"kind":"number","nativeSrc":"20453:2:4","nodeType":"YulLiteral","src":"20453:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"20424:3:4","nodeType":"YulIdentifier","src":"20424:3:4"},"nativeSrc":"20424:32:4","nodeType":"YulFunctionCall","src":"20424:32:4"},"nativeSrc":"20421:52:4","nodeType":"YulIf","src":"20421:52:4"},{"nativeSrc":"20482:48:4","nodeType":"YulAssignment","src":"20482:48:4","value":{"arguments":[{"name":"headStart","nativeSrc":"20520:9:4","nodeType":"YulIdentifier","src":"20520:9:4"}],"functionName":{"name":"abi_decode_int32_fromMemory","nativeSrc":"20492:27:4","nodeType":"YulIdentifier","src":"20492:27:4"},"nativeSrc":"20492:38:4","nodeType":"YulFunctionCall","src":"20492:38:4"},"variableNames":[{"name":"value0","nativeSrc":"20482:6:4","nodeType":"YulIdentifier","src":"20482:6:4"}]},{"nativeSrc":"20539:38:4","nodeType":"YulVariableDeclaration","src":"20539:38:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20562:9:4","nodeType":"YulIdentifier","src":"20562:9:4"},{"kind":"number","nativeSrc":"20573:2:4","nodeType":"YulLiteral","src":"20573:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20558:3:4","nodeType":"YulIdentifier","src":"20558:3:4"},"nativeSrc":"20558:18:4","nodeType":"YulFunctionCall","src":"20558:18:4"}],"functionName":{"name":"mload","nativeSrc":"20552:5:4","nodeType":"YulIdentifier","src":"20552:5:4"},"nativeSrc":"20552:25:4","nodeType":"YulFunctionCall","src":"20552:25:4"},"variables":[{"name":"value","nativeSrc":"20543:5:4","nodeType":"YulTypedName","src":"20543:5:4","type":""}]},{"body":{"nativeSrc":"20630:16:4","nodeType":"YulBlock","src":"20630:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20639:1:4","nodeType":"YulLiteral","src":"20639:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"20642:1:4","nodeType":"YulLiteral","src":"20642:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"20632:6:4","nodeType":"YulIdentifier","src":"20632:6:4"},"nativeSrc":"20632:12:4","nodeType":"YulFunctionCall","src":"20632:12:4"},"nativeSrc":"20632:12:4","nodeType":"YulExpressionStatement","src":"20632:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"20599:5:4","nodeType":"YulIdentifier","src":"20599:5:4"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"20620:5:4","nodeType":"YulIdentifier","src":"20620:5:4"}],"functionName":{"name":"iszero","nativeSrc":"20613:6:4","nodeType":"YulIdentifier","src":"20613:6:4"},"nativeSrc":"20613:13:4","nodeType":"YulFunctionCall","src":"20613:13:4"}],"functionName":{"name":"iszero","nativeSrc":"20606:6:4","nodeType":"YulIdentifier","src":"20606:6:4"},"nativeSrc":"20606:21:4","nodeType":"YulFunctionCall","src":"20606:21:4"}],"functionName":{"name":"eq","nativeSrc":"20596:2:4","nodeType":"YulIdentifier","src":"20596:2:4"},"nativeSrc":"20596:32:4","nodeType":"YulFunctionCall","src":"20596:32:4"}],"functionName":{"name":"iszero","nativeSrc":"20589:6:4","nodeType":"YulIdentifier","src":"20589:6:4"},"nativeSrc":"20589:40:4","nodeType":"YulFunctionCall","src":"20589:40:4"},"nativeSrc":"20586:60:4","nodeType":"YulIf","src":"20586:60:4"},{"nativeSrc":"20655:15:4","nodeType":"YulAssignment","src":"20655:15:4","value":{"name":"value","nativeSrc":"20665:5:4","nodeType":"YulIdentifier","src":"20665:5:4"},"variableNames":[{"name":"value1","nativeSrc":"20655:6:4","nodeType":"YulIdentifier","src":"20655:6:4"}]}]},"name":"abi_decode_tuple_t_int32t_bool_fromMemory","nativeSrc":"20318:358:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20369:9:4","nodeType":"YulTypedName","src":"20369:9:4","type":""},{"name":"dataEnd","nativeSrc":"20380:7:4","nodeType":"YulTypedName","src":"20380:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20392:6:4","nodeType":"YulTypedName","src":"20392:6:4","type":""},{"name":"value1","nativeSrc":"20400:6:4","nodeType":"YulTypedName","src":"20400:6:4","type":""}],"src":"20318:358:4"},{"body":{"nativeSrc":"20862:286:4","nodeType":"YulBlock","src":"20862:286:4","statements":[{"nativeSrc":"20872:27:4","nodeType":"YulAssignment","src":"20872:27:4","value":{"arguments":[{"name":"headStart","nativeSrc":"20884:9:4","nodeType":"YulIdentifier","src":"20884:9:4"},{"kind":"number","nativeSrc":"20895:3:4","nodeType":"YulLiteral","src":"20895:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20880:3:4","nodeType":"YulIdentifier","src":"20880:3:4"},"nativeSrc":"20880:19:4","nodeType":"YulFunctionCall","src":"20880:19:4"},"variableNames":[{"name":"tail","nativeSrc":"20872:4:4","nodeType":"YulIdentifier","src":"20872:4:4"}]},{"nativeSrc":"20908:29:4","nodeType":"YulVariableDeclaration","src":"20908:29:4","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20926:3:4","nodeType":"YulLiteral","src":"20926:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"20931:1:4","nodeType":"YulLiteral","src":"20931:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"20922:3:4","nodeType":"YulIdentifier","src":"20922:3:4"},"nativeSrc":"20922:11:4","nodeType":"YulFunctionCall","src":"20922:11:4"},{"kind":"number","nativeSrc":"20935:1:4","nodeType":"YulLiteral","src":"20935:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"20918:3:4","nodeType":"YulIdentifier","src":"20918:3:4"},"nativeSrc":"20918:19:4","nodeType":"YulFunctionCall","src":"20918:19:4"},"variables":[{"name":"_1","nativeSrc":"20912:2:4","nodeType":"YulTypedName","src":"20912:2:4","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20953:9:4","nodeType":"YulIdentifier","src":"20953:9:4"},{"arguments":[{"name":"value0","nativeSrc":"20968:6:4","nodeType":"YulIdentifier","src":"20968:6:4"},{"name":"_1","nativeSrc":"20976:2:4","nodeType":"YulIdentifier","src":"20976:2:4"}],"functionName":{"name":"and","nativeSrc":"20964:3:4","nodeType":"YulIdentifier","src":"20964:3:4"},"nativeSrc":"20964:15:4","nodeType":"YulFunctionCall","src":"20964:15:4"}],"functionName":{"name":"mstore","nativeSrc":"20946:6:4","nodeType":"YulIdentifier","src":"20946:6:4"},"nativeSrc":"20946:34:4","nodeType":"YulFunctionCall","src":"20946:34:4"},"nativeSrc":"20946:34:4","nodeType":"YulExpressionStatement","src":"20946:34:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21000:9:4","nodeType":"YulIdentifier","src":"21000:9:4"},{"kind":"number","nativeSrc":"21011:2:4","nodeType":"YulLiteral","src":"21011:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20996:3:4","nodeType":"YulIdentifier","src":"20996:3:4"},"nativeSrc":"20996:18:4","nodeType":"YulFunctionCall","src":"20996:18:4"},{"arguments":[{"name":"value1","nativeSrc":"21020:6:4","nodeType":"YulIdentifier","src":"21020:6:4"},{"name":"_1","nativeSrc":"21028:2:4","nodeType":"YulIdentifier","src":"21028:2:4"}],"functionName":{"name":"and","nativeSrc":"21016:3:4","nodeType":"YulIdentifier","src":"21016:3:4"},"nativeSrc":"21016:15:4","nodeType":"YulFunctionCall","src":"21016:15:4"}],"functionName":{"name":"mstore","nativeSrc":"20989:6:4","nodeType":"YulIdentifier","src":"20989:6:4"},"nativeSrc":"20989:43:4","nodeType":"YulFunctionCall","src":"20989:43:4"},"nativeSrc":"20989:43:4","nodeType":"YulExpressionStatement","src":"20989:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21052:9:4","nodeType":"YulIdentifier","src":"21052:9:4"},{"kind":"number","nativeSrc":"21063:2:4","nodeType":"YulLiteral","src":"21063:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21048:3:4","nodeType":"YulIdentifier","src":"21048:3:4"},"nativeSrc":"21048:18:4","nodeType":"YulFunctionCall","src":"21048:18:4"},{"arguments":[{"name":"value2","nativeSrc":"21072:6:4","nodeType":"YulIdentifier","src":"21072:6:4"},{"name":"_1","nativeSrc":"21080:2:4","nodeType":"YulIdentifier","src":"21080:2:4"}],"functionName":{"name":"and","nativeSrc":"21068:3:4","nodeType":"YulIdentifier","src":"21068:3:4"},"nativeSrc":"21068:15:4","nodeType":"YulFunctionCall","src":"21068:15:4"}],"functionName":{"name":"mstore","nativeSrc":"21041:6:4","nodeType":"YulIdentifier","src":"21041:6:4"},"nativeSrc":"21041:43:4","nodeType":"YulFunctionCall","src":"21041:43:4"},"nativeSrc":"21041:43:4","nodeType":"YulExpressionStatement","src":"21041:43:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21104:9:4","nodeType":"YulIdentifier","src":"21104:9:4"},{"kind":"number","nativeSrc":"21115:2:4","nodeType":"YulLiteral","src":"21115:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21100:3:4","nodeType":"YulIdentifier","src":"21100:3:4"},"nativeSrc":"21100:18:4","nodeType":"YulFunctionCall","src":"21100:18:4"},{"arguments":[{"kind":"number","nativeSrc":"21131:1:4","nodeType":"YulLiteral","src":"21131:1:4","type":"","value":"7"},{"name":"value3","nativeSrc":"21134:6:4","nodeType":"YulIdentifier","src":"21134:6:4"}],"functionName":{"name":"signextend","nativeSrc":"21120:10:4","nodeType":"YulIdentifier","src":"21120:10:4"},"nativeSrc":"21120:21:4","nodeType":"YulFunctionCall","src":"21120:21:4"}],"functionName":{"name":"mstore","nativeSrc":"21093:6:4","nodeType":"YulIdentifier","src":"21093:6:4"},"nativeSrc":"21093:49:4","nodeType":"YulFunctionCall","src":"21093:49:4"},"nativeSrc":"21093:49:4","nodeType":"YulExpressionStatement","src":"21093:49:4"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed","nativeSrc":"20681:467:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20807:9:4","nodeType":"YulTypedName","src":"20807:9:4","type":""},{"name":"value3","nativeSrc":"20818:6:4","nodeType":"YulTypedName","src":"20818:6:4","type":""},{"name":"value2","nativeSrc":"20826:6:4","nodeType":"YulTypedName","src":"20826:6:4","type":""},{"name":"value1","nativeSrc":"20834:6:4","nodeType":"YulTypedName","src":"20834:6:4","type":""},{"name":"value0","nativeSrc":"20842:6:4","nodeType":"YulTypedName","src":"20842:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20853:4:4","nodeType":"YulTypedName","src":"20853:4:4","type":""}],"src":"20681:467:4"},{"body":{"nativeSrc":"21393:206:4","nodeType":"YulBlock","src":"21393:206:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21410:3:4","nodeType":"YulIdentifier","src":"21410:3:4"},{"hexValue":"554e4b4e4f574e5f4552524f525f","kind":"string","nativeSrc":"21415:16:4","nodeType":"YulLiteral","src":"21415:16:4","type":"","value":"UNKNOWN_ERROR_"}],"functionName":{"name":"mstore","nativeSrc":"21403:6:4","nodeType":"YulIdentifier","src":"21403:6:4"},"nativeSrc":"21403:29:4","nodeType":"YulFunctionCall","src":"21403:29:4"},"nativeSrc":"21403:29:4","nodeType":"YulExpressionStatement","src":"21403:29:4"},{"nativeSrc":"21441:27:4","nodeType":"YulVariableDeclaration","src":"21441:27:4","value":{"arguments":[{"name":"value0","nativeSrc":"21461:6:4","nodeType":"YulIdentifier","src":"21461:6:4"}],"functionName":{"name":"mload","nativeSrc":"21455:5:4","nodeType":"YulIdentifier","src":"21455:5:4"},"nativeSrc":"21455:13:4","nodeType":"YulFunctionCall","src":"21455:13:4"},"variables":[{"name":"length","nativeSrc":"21445:6:4","nodeType":"YulTypedName","src":"21445:6:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"21516:6:4","nodeType":"YulIdentifier","src":"21516:6:4"},{"kind":"number","nativeSrc":"21524:4:4","nodeType":"YulLiteral","src":"21524:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21512:3:4","nodeType":"YulIdentifier","src":"21512:3:4"},"nativeSrc":"21512:17:4","nodeType":"YulFunctionCall","src":"21512:17:4"},{"arguments":[{"name":"pos","nativeSrc":"21535:3:4","nodeType":"YulIdentifier","src":"21535:3:4"},{"kind":"number","nativeSrc":"21540:2:4","nodeType":"YulLiteral","src":"21540:2:4","type":"","value":"14"}],"functionName":{"name":"add","nativeSrc":"21531:3:4","nodeType":"YulIdentifier","src":"21531:3:4"},"nativeSrc":"21531:12:4","nodeType":"YulFunctionCall","src":"21531:12:4"},{"name":"length","nativeSrc":"21545:6:4","nodeType":"YulIdentifier","src":"21545:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"21477:34:4","nodeType":"YulIdentifier","src":"21477:34:4"},"nativeSrc":"21477:75:4","nodeType":"YulFunctionCall","src":"21477:75:4"},"nativeSrc":"21477:75:4","nodeType":"YulExpressionStatement","src":"21477:75:4"},{"nativeSrc":"21561:32:4","nodeType":"YulAssignment","src":"21561:32:4","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"21576:3:4","nodeType":"YulIdentifier","src":"21576:3:4"},{"name":"length","nativeSrc":"21581:6:4","nodeType":"YulIdentifier","src":"21581:6:4"}],"functionName":{"name":"add","nativeSrc":"21572:3:4","nodeType":"YulIdentifier","src":"21572:3:4"},"nativeSrc":"21572:16:4","nodeType":"YulFunctionCall","src":"21572:16:4"},{"kind":"number","nativeSrc":"21590:2:4","nodeType":"YulLiteral","src":"21590:2:4","type":"","value":"14"}],"functionName":{"name":"add","nativeSrc":"21568:3:4","nodeType":"YulIdentifier","src":"21568:3:4"},"nativeSrc":"21568:25:4","nodeType":"YulFunctionCall","src":"21568:25:4"},"variableNames":[{"name":"end","nativeSrc":"21561:3:4","nodeType":"YulIdentifier","src":"21561:3:4"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_6f5cad8325c7c3f966939257287b21f13d866689bb45fe6acb014032f9156b49_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"21153:446:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21369:3:4","nodeType":"YulTypedName","src":"21369:3:4","type":""},{"name":"value0","nativeSrc":"21374:6:4","nodeType":"YulTypedName","src":"21374:6:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21385:3:4","nodeType":"YulTypedName","src":"21385:3:4","type":""}],"src":"21153:446:4"},{"body":{"nativeSrc":"21825:761:4","nodeType":"YulBlock","src":"21825:761:4","statements":[{"nativeSrc":"21835:32:4","nodeType":"YulVariableDeclaration","src":"21835:32:4","value":{"arguments":[{"name":"headStart","nativeSrc":"21853:9:4","nodeType":"YulIdentifier","src":"21853:9:4"},{"kind":"number","nativeSrc":"21864:2:4","nodeType":"YulLiteral","src":"21864:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21849:3:4","nodeType":"YulIdentifier","src":"21849:3:4"},"nativeSrc":"21849:18:4","nodeType":"YulFunctionCall","src":"21849:18:4"},"variables":[{"name":"tail_1","nativeSrc":"21839:6:4","nodeType":"YulTypedName","src":"21839:6:4","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21883:9:4","nodeType":"YulIdentifier","src":"21883:9:4"},{"arguments":[{"name":"value0","nativeSrc":"21898:6:4","nodeType":"YulIdentifier","src":"21898:6:4"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"21914:3:4","nodeType":"YulLiteral","src":"21914:3:4","type":"","value":"160"},{"kind":"number","nativeSrc":"21919:1:4","nodeType":"YulLiteral","src":"21919:1:4","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"21910:3:4","nodeType":"YulIdentifier","src":"21910:3:4"},"nativeSrc":"21910:11:4","nodeType":"YulFunctionCall","src":"21910:11:4"},{"kind":"number","nativeSrc":"21923:1:4","nodeType":"YulLiteral","src":"21923:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"21906:3:4","nodeType":"YulIdentifier","src":"21906:3:4"},"nativeSrc":"21906:19:4","nodeType":"YulFunctionCall","src":"21906:19:4"}],"functionName":{"name":"and","nativeSrc":"21894:3:4","nodeType":"YulIdentifier","src":"21894:3:4"},"nativeSrc":"21894:32:4","nodeType":"YulFunctionCall","src":"21894:32:4"}],"functionName":{"name":"mstore","nativeSrc":"21876:6:4","nodeType":"YulIdentifier","src":"21876:6:4"},"nativeSrc":"21876:51:4","nodeType":"YulFunctionCall","src":"21876:51:4"},"nativeSrc":"21876:51:4","nodeType":"YulExpressionStatement","src":"21876:51:4"},{"nativeSrc":"21936:12:4","nodeType":"YulVariableDeclaration","src":"21936:12:4","value":{"kind":"number","nativeSrc":"21946:2:4","nodeType":"YulLiteral","src":"21946:2:4","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"21940:2:4","nodeType":"YulTypedName","src":"21940:2:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21968:9:4","nodeType":"YulIdentifier","src":"21968:9:4"},{"kind":"number","nativeSrc":"21979:2:4","nodeType":"YulLiteral","src":"21979:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21964:3:4","nodeType":"YulIdentifier","src":"21964:3:4"},"nativeSrc":"21964:18:4","nodeType":"YulFunctionCall","src":"21964:18:4"},{"arguments":[{"kind":"number","nativeSrc":"21995:1:4","nodeType":"YulLiteral","src":"21995:1:4","type":"","value":"7"},{"name":"value1","nativeSrc":"21998:6:4","nodeType":"YulIdentifier","src":"21998:6:4"}],"functionName":{"name":"signextend","nativeSrc":"21984:10:4","nodeType":"YulIdentifier","src":"21984:10:4"},"nativeSrc":"21984:21:4","nodeType":"YulFunctionCall","src":"21984:21:4"}],"functionName":{"name":"mstore","nativeSrc":"21957:6:4","nodeType":"YulIdentifier","src":"21957:6:4"},"nativeSrc":"21957:49:4","nodeType":"YulFunctionCall","src":"21957:49:4"},"nativeSrc":"21957:49:4","nodeType":"YulExpressionStatement","src":"21957:49:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22026:9:4","nodeType":"YulIdentifier","src":"22026:9:4"},{"kind":"number","nativeSrc":"22037:2:4","nodeType":"YulLiteral","src":"22037:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22022:3:4","nodeType":"YulIdentifier","src":"22022:3:4"},"nativeSrc":"22022:18:4","nodeType":"YulFunctionCall","src":"22022:18:4"},{"kind":"number","nativeSrc":"22042:2:4","nodeType":"YulLiteral","src":"22042:2:4","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"22015:6:4","nodeType":"YulIdentifier","src":"22015:6:4"},"nativeSrc":"22015:30:4","nodeType":"YulFunctionCall","src":"22015:30:4"},"nativeSrc":"22015:30:4","nodeType":"YulExpressionStatement","src":"22015:30:4"},{"nativeSrc":"22054:17:4","nodeType":"YulVariableDeclaration","src":"22054:17:4","value":{"name":"tail_1","nativeSrc":"22065:6:4","nodeType":"YulIdentifier","src":"22065:6:4"},"variables":[{"name":"pos","nativeSrc":"22058:3:4","nodeType":"YulTypedName","src":"22058:3:4","type":""}]},{"nativeSrc":"22080:27:4","nodeType":"YulVariableDeclaration","src":"22080:27:4","value":{"arguments":[{"name":"value2","nativeSrc":"22100:6:4","nodeType":"YulIdentifier","src":"22100:6:4"}],"functionName":{"name":"mload","nativeSrc":"22094:5:4","nodeType":"YulIdentifier","src":"22094:5:4"},"nativeSrc":"22094:13:4","nodeType":"YulFunctionCall","src":"22094:13:4"},"variables":[{"name":"length","nativeSrc":"22084:6:4","nodeType":"YulTypedName","src":"22084:6:4","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"22123:6:4","nodeType":"YulIdentifier","src":"22123:6:4"},{"name":"length","nativeSrc":"22131:6:4","nodeType":"YulIdentifier","src":"22131:6:4"}],"functionName":{"name":"mstore","nativeSrc":"22116:6:4","nodeType":"YulIdentifier","src":"22116:6:4"},"nativeSrc":"22116:22:4","nodeType":"YulFunctionCall","src":"22116:22:4"},"nativeSrc":"22116:22:4","nodeType":"YulExpressionStatement","src":"22116:22:4"},{"nativeSrc":"22147:26:4","nodeType":"YulAssignment","src":"22147:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"22158:9:4","nodeType":"YulIdentifier","src":"22158:9:4"},{"kind":"number","nativeSrc":"22169:3:4","nodeType":"YulLiteral","src":"22169:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22154:3:4","nodeType":"YulIdentifier","src":"22154:3:4"},"nativeSrc":"22154:19:4","nodeType":"YulFunctionCall","src":"22154:19:4"},"variableNames":[{"name":"pos","nativeSrc":"22147:3:4","nodeType":"YulIdentifier","src":"22147:3:4"}]},{"nativeSrc":"22182:54:4","nodeType":"YulVariableDeclaration","src":"22182:54:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22204:9:4","nodeType":"YulIdentifier","src":"22204:9:4"},{"arguments":[{"kind":"number","nativeSrc":"22219:1:4","nodeType":"YulLiteral","src":"22219:1:4","type":"","value":"5"},{"name":"length","nativeSrc":"22222:6:4","nodeType":"YulIdentifier","src":"22222:6:4"}],"functionName":{"name":"shl","nativeSrc":"22215:3:4","nodeType":"YulIdentifier","src":"22215:3:4"},"nativeSrc":"22215:14:4","nodeType":"YulFunctionCall","src":"22215:14:4"}],"functionName":{"name":"add","nativeSrc":"22200:3:4","nodeType":"YulIdentifier","src":"22200:3:4"},"nativeSrc":"22200:30:4","nodeType":"YulFunctionCall","src":"22200:30:4"},{"kind":"number","nativeSrc":"22232:3:4","nodeType":"YulLiteral","src":"22232:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22196:3:4","nodeType":"YulIdentifier","src":"22196:3:4"},"nativeSrc":"22196:40:4","nodeType":"YulFunctionCall","src":"22196:40:4"},"variables":[{"name":"tail_2","nativeSrc":"22186:6:4","nodeType":"YulTypedName","src":"22186:6:4","type":""}]},{"nativeSrc":"22245:29:4","nodeType":"YulVariableDeclaration","src":"22245:29:4","value":{"arguments":[{"name":"value2","nativeSrc":"22263:6:4","nodeType":"YulIdentifier","src":"22263:6:4"},{"kind":"number","nativeSrc":"22271:2:4","nodeType":"YulLiteral","src":"22271:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22259:3:4","nodeType":"YulIdentifier","src":"22259:3:4"},"nativeSrc":"22259:15:4","nodeType":"YulFunctionCall","src":"22259:15:4"},"variables":[{"name":"srcPtr","nativeSrc":"22249:6:4","nodeType":"YulTypedName","src":"22249:6:4","type":""}]},{"nativeSrc":"22283:10:4","nodeType":"YulVariableDeclaration","src":"22283:10:4","value":{"kind":"number","nativeSrc":"22292:1:4","nodeType":"YulLiteral","src":"22292:1:4","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"22287:1:4","nodeType":"YulTypedName","src":"22287:1:4","type":""}]},{"body":{"nativeSrc":"22351:206:4","nodeType":"YulBlock","src":"22351:206:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22372:3:4","nodeType":"YulIdentifier","src":"22372:3:4"},{"arguments":[{"arguments":[{"name":"tail_2","nativeSrc":"22385:6:4","nodeType":"YulIdentifier","src":"22385:6:4"},{"name":"headStart","nativeSrc":"22393:9:4","nodeType":"YulIdentifier","src":"22393:9:4"}],"functionName":{"name":"sub","nativeSrc":"22381:3:4","nodeType":"YulIdentifier","src":"22381:3:4"},"nativeSrc":"22381:22:4","nodeType":"YulFunctionCall","src":"22381:22:4"},{"arguments":[{"kind":"number","nativeSrc":"22409:3:4","nodeType":"YulLiteral","src":"22409:3:4","type":"","value":"127"}],"functionName":{"name":"not","nativeSrc":"22405:3:4","nodeType":"YulIdentifier","src":"22405:3:4"},"nativeSrc":"22405:8:4","nodeType":"YulFunctionCall","src":"22405:8:4"}],"functionName":{"name":"add","nativeSrc":"22377:3:4","nodeType":"YulIdentifier","src":"22377:3:4"},"nativeSrc":"22377:37:4","nodeType":"YulFunctionCall","src":"22377:37:4"}],"functionName":{"name":"mstore","nativeSrc":"22365:6:4","nodeType":"YulIdentifier","src":"22365:6:4"},"nativeSrc":"22365:50:4","nodeType":"YulFunctionCall","src":"22365:50:4"},"nativeSrc":"22365:50:4","nodeType":"YulExpressionStatement","src":"22365:50:4"},{"nativeSrc":"22428:49:4","nodeType":"YulAssignment","src":"22428:49:4","value":{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"22461:6:4","nodeType":"YulIdentifier","src":"22461:6:4"}],"functionName":{"name":"mload","nativeSrc":"22455:5:4","nodeType":"YulIdentifier","src":"22455:5:4"},"nativeSrc":"22455:13:4","nodeType":"YulFunctionCall","src":"22455:13:4"},{"name":"tail_2","nativeSrc":"22470:6:4","nodeType":"YulIdentifier","src":"22470:6:4"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"22438:16:4","nodeType":"YulIdentifier","src":"22438:16:4"},"nativeSrc":"22438:39:4","nodeType":"YulFunctionCall","src":"22438:39:4"},"variableNames":[{"name":"tail_2","nativeSrc":"22428:6:4","nodeType":"YulIdentifier","src":"22428:6:4"}]},{"nativeSrc":"22490:25:4","nodeType":"YulAssignment","src":"22490:25:4","value":{"arguments":[{"name":"srcPtr","nativeSrc":"22504:6:4","nodeType":"YulIdentifier","src":"22504:6:4"},{"name":"_1","nativeSrc":"22512:2:4","nodeType":"YulIdentifier","src":"22512:2:4"}],"functionName":{"name":"add","nativeSrc":"22500:3:4","nodeType":"YulIdentifier","src":"22500:3:4"},"nativeSrc":"22500:15:4","nodeType":"YulFunctionCall","src":"22500:15:4"},"variableNames":[{"name":"srcPtr","nativeSrc":"22490:6:4","nodeType":"YulIdentifier","src":"22490:6:4"}]},{"nativeSrc":"22528:19:4","nodeType":"YulAssignment","src":"22528:19:4","value":{"arguments":[{"name":"pos","nativeSrc":"22539:3:4","nodeType":"YulIdentifier","src":"22539:3:4"},{"name":"_1","nativeSrc":"22544:2:4","nodeType":"YulIdentifier","src":"22544:2:4"}],"functionName":{"name":"add","nativeSrc":"22535:3:4","nodeType":"YulIdentifier","src":"22535:3:4"},"nativeSrc":"22535:12:4","nodeType":"YulFunctionCall","src":"22535:12:4"},"variableNames":[{"name":"pos","nativeSrc":"22528:3:4","nodeType":"YulIdentifier","src":"22528:3:4"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"22313:1:4","nodeType":"YulIdentifier","src":"22313:1:4"},{"name":"length","nativeSrc":"22316:6:4","nodeType":"YulIdentifier","src":"22316:6:4"}],"functionName":{"name":"lt","nativeSrc":"22310:2:4","nodeType":"YulIdentifier","src":"22310:2:4"},"nativeSrc":"22310:13:4","nodeType":"YulFunctionCall","src":"22310:13:4"},"nativeSrc":"22302:255:4","nodeType":"YulForLoop","post":{"nativeSrc":"22324:18:4","nodeType":"YulBlock","src":"22324:18:4","statements":[{"nativeSrc":"22326:14:4","nodeType":"YulAssignment","src":"22326:14:4","value":{"arguments":[{"name":"i","nativeSrc":"22335:1:4","nodeType":"YulIdentifier","src":"22335:1:4"},{"kind":"number","nativeSrc":"22338:1:4","nodeType":"YulLiteral","src":"22338:1:4","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"22331:3:4","nodeType":"YulIdentifier","src":"22331:3:4"},"nativeSrc":"22331:9:4","nodeType":"YulFunctionCall","src":"22331:9:4"},"variableNames":[{"name":"i","nativeSrc":"22326:1:4","nodeType":"YulIdentifier","src":"22326:1:4"}]}]},"pre":{"nativeSrc":"22306:3:4","nodeType":"YulBlock","src":"22306:3:4","statements":[]},"src":"22302:255:4"},{"nativeSrc":"22566:14:4","nodeType":"YulAssignment","src":"22566:14:4","value":{"name":"tail_2","nativeSrc":"22574:6:4","nodeType":"YulIdentifier","src":"22574:6:4"},"variableNames":[{"name":"tail","nativeSrc":"22566:4:4","nodeType":"YulIdentifier","src":"22566:4:4"}]}]},"name":"abi_encode_tuple_t_address_t_int64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_address_t_int64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"21604:982:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21778:9:4","nodeType":"YulTypedName","src":"21778:9:4","type":""},{"name":"value2","nativeSrc":"21789:6:4","nodeType":"YulTypedName","src":"21789:6:4","type":""},{"name":"value1","nativeSrc":"21797:6:4","nodeType":"YulTypedName","src":"21797:6:4","type":""},{"name":"value0","nativeSrc":"21805:6:4","nodeType":"YulTypedName","src":"21805:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21816:4:4","nodeType":"YulTypedName","src":"21816:4:4","type":""}],"src":"21604:982:4"},{"body":{"nativeSrc":"22649:106:4","nodeType":"YulBlock","src":"22649:106:4","statements":[{"nativeSrc":"22659:22:4","nodeType":"YulAssignment","src":"22659:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"22674:6:4","nodeType":"YulIdentifier","src":"22674:6:4"}],"functionName":{"name":"mload","nativeSrc":"22668:5:4","nodeType":"YulIdentifier","src":"22668:5:4"},"nativeSrc":"22668:13:4","nodeType":"YulFunctionCall","src":"22668:13:4"},"variableNames":[{"name":"value","nativeSrc":"22659:5:4","nodeType":"YulIdentifier","src":"22659:5:4"}]},{"body":{"nativeSrc":"22733:16:4","nodeType":"YulBlock","src":"22733:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22742:1:4","nodeType":"YulLiteral","src":"22742:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"22745:1:4","nodeType":"YulLiteral","src":"22745:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22735:6:4","nodeType":"YulIdentifier","src":"22735:6:4"},"nativeSrc":"22735:12:4","nodeType":"YulFunctionCall","src":"22735:12:4"},"nativeSrc":"22735:12:4","nodeType":"YulExpressionStatement","src":"22735:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22703:5:4","nodeType":"YulIdentifier","src":"22703:5:4"},{"arguments":[{"kind":"number","nativeSrc":"22721:1:4","nodeType":"YulLiteral","src":"22721:1:4","type":"","value":"7"},{"name":"value","nativeSrc":"22724:5:4","nodeType":"YulIdentifier","src":"22724:5:4"}],"functionName":{"name":"signextend","nativeSrc":"22710:10:4","nodeType":"YulIdentifier","src":"22710:10:4"},"nativeSrc":"22710:20:4","nodeType":"YulFunctionCall","src":"22710:20:4"}],"functionName":{"name":"eq","nativeSrc":"22700:2:4","nodeType":"YulIdentifier","src":"22700:2:4"},"nativeSrc":"22700:31:4","nodeType":"YulFunctionCall","src":"22700:31:4"}],"functionName":{"name":"iszero","nativeSrc":"22693:6:4","nodeType":"YulIdentifier","src":"22693:6:4"},"nativeSrc":"22693:39:4","nodeType":"YulFunctionCall","src":"22693:39:4"},"nativeSrc":"22690:59:4","nodeType":"YulIf","src":"22690:59:4"}]},"name":"abi_decode_int64_fromMemory","nativeSrc":"22591:164:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"22628:6:4","nodeType":"YulTypedName","src":"22628:6:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"22639:5:4","nodeType":"YulTypedName","src":"22639:5:4","type":""}],"src":"22591:164:4"},{"body":{"nativeSrc":"22894:984:4","nodeType":"YulBlock","src":"22894:984:4","statements":[{"body":{"nativeSrc":"22940:16:4","nodeType":"YulBlock","src":"22940:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22949:1:4","nodeType":"YulLiteral","src":"22949:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"22952:1:4","nodeType":"YulLiteral","src":"22952:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22942:6:4","nodeType":"YulIdentifier","src":"22942:6:4"},"nativeSrc":"22942:12:4","nodeType":"YulFunctionCall","src":"22942:12:4"},"nativeSrc":"22942:12:4","nodeType":"YulExpressionStatement","src":"22942:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22915:7:4","nodeType":"YulIdentifier","src":"22915:7:4"},{"name":"headStart","nativeSrc":"22924:9:4","nodeType":"YulIdentifier","src":"22924:9:4"}],"functionName":{"name":"sub","nativeSrc":"22911:3:4","nodeType":"YulIdentifier","src":"22911:3:4"},"nativeSrc":"22911:23:4","nodeType":"YulFunctionCall","src":"22911:23:4"},{"kind":"number","nativeSrc":"22936:2:4","nodeType":"YulLiteral","src":"22936:2:4","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"22907:3:4","nodeType":"YulIdentifier","src":"22907:3:4"},"nativeSrc":"22907:32:4","nodeType":"YulFunctionCall","src":"22907:32:4"},"nativeSrc":"22904:52:4","nodeType":"YulIf","src":"22904:52:4"},{"nativeSrc":"22965:48:4","nodeType":"YulAssignment","src":"22965:48:4","value":{"arguments":[{"name":"headStart","nativeSrc":"23003:9:4","nodeType":"YulIdentifier","src":"23003:9:4"}],"functionName":{"name":"abi_decode_int32_fromMemory","nativeSrc":"22975:27:4","nodeType":"YulIdentifier","src":"22975:27:4"},"nativeSrc":"22975:38:4","nodeType":"YulFunctionCall","src":"22975:38:4"},"variableNames":[{"name":"value0","nativeSrc":"22965:6:4","nodeType":"YulIdentifier","src":"22965:6:4"}]},{"nativeSrc":"23022:12:4","nodeType":"YulVariableDeclaration","src":"23022:12:4","value":{"kind":"number","nativeSrc":"23032:2:4","nodeType":"YulLiteral","src":"23032:2:4","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"23026:2:4","nodeType":"YulTypedName","src":"23026:2:4","type":""}]},{"nativeSrc":"23043:57:4","nodeType":"YulAssignment","src":"23043:57:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23085:9:4","nodeType":"YulIdentifier","src":"23085:9:4"},{"name":"_1","nativeSrc":"23096:2:4","nodeType":"YulIdentifier","src":"23096:2:4"}],"functionName":{"name":"add","nativeSrc":"23081:3:4","nodeType":"YulIdentifier","src":"23081:3:4"},"nativeSrc":"23081:18:4","nodeType":"YulFunctionCall","src":"23081:18:4"}],"functionName":{"name":"abi_decode_int64_fromMemory","nativeSrc":"23053:27:4","nodeType":"YulIdentifier","src":"23053:27:4"},"nativeSrc":"23053:47:4","nodeType":"YulFunctionCall","src":"23053:47:4"},"variableNames":[{"name":"value1","nativeSrc":"23043:6:4","nodeType":"YulIdentifier","src":"23043:6:4"}]},{"nativeSrc":"23109:39:4","nodeType":"YulVariableDeclaration","src":"23109:39:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23133:9:4","nodeType":"YulIdentifier","src":"23133:9:4"},{"kind":"number","nativeSrc":"23144:2:4","nodeType":"YulLiteral","src":"23144:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23129:3:4","nodeType":"YulIdentifier","src":"23129:3:4"},"nativeSrc":"23129:18:4","nodeType":"YulFunctionCall","src":"23129:18:4"}],"functionName":{"name":"mload","nativeSrc":"23123:5:4","nodeType":"YulIdentifier","src":"23123:5:4"},"nativeSrc":"23123:25:4","nodeType":"YulFunctionCall","src":"23123:25:4"},"variables":[{"name":"offset","nativeSrc":"23113:6:4","nodeType":"YulTypedName","src":"23113:6:4","type":""}]},{"nativeSrc":"23157:28:4","nodeType":"YulVariableDeclaration","src":"23157:28:4","value":{"kind":"number","nativeSrc":"23167:18:4","nodeType":"YulLiteral","src":"23167:18:4","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"23161:2:4","nodeType":"YulTypedName","src":"23161:2:4","type":""}]},{"body":{"nativeSrc":"23212:16:4","nodeType":"YulBlock","src":"23212:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23221:1:4","nodeType":"YulLiteral","src":"23221:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"23224:1:4","nodeType":"YulLiteral","src":"23224:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"23214:6:4","nodeType":"YulIdentifier","src":"23214:6:4"},"nativeSrc":"23214:12:4","nodeType":"YulFunctionCall","src":"23214:12:4"},"nativeSrc":"23214:12:4","nodeType":"YulExpressionStatement","src":"23214:12:4"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"23200:6:4","nodeType":"YulIdentifier","src":"23200:6:4"},{"name":"_2","nativeSrc":"23208:2:4","nodeType":"YulIdentifier","src":"23208:2:4"}],"functionName":{"name":"gt","nativeSrc":"23197:2:4","nodeType":"YulIdentifier","src":"23197:2:4"},"nativeSrc":"23197:14:4","nodeType":"YulFunctionCall","src":"23197:14:4"},"nativeSrc":"23194:34:4","nodeType":"YulIf","src":"23194:34:4"},{"nativeSrc":"23237:32:4","nodeType":"YulVariableDeclaration","src":"23237:32:4","value":{"arguments":[{"name":"headStart","nativeSrc":"23251:9:4","nodeType":"YulIdentifier","src":"23251:9:4"},{"name":"offset","nativeSrc":"23262:6:4","nodeType":"YulIdentifier","src":"23262:6:4"}],"functionName":{"name":"add","nativeSrc":"23247:3:4","nodeType":"YulIdentifier","src":"23247:3:4"},"nativeSrc":"23247:22:4","nodeType":"YulFunctionCall","src":"23247:22:4"},"variables":[{"name":"_3","nativeSrc":"23241:2:4","nodeType":"YulTypedName","src":"23241:2:4","type":""}]},{"body":{"nativeSrc":"23317:16:4","nodeType":"YulBlock","src":"23317:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23326:1:4","nodeType":"YulLiteral","src":"23326:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"23329:1:4","nodeType":"YulLiteral","src":"23329:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"23319:6:4","nodeType":"YulIdentifier","src":"23319:6:4"},"nativeSrc":"23319:12:4","nodeType":"YulFunctionCall","src":"23319:12:4"},"nativeSrc":"23319:12:4","nodeType":"YulExpressionStatement","src":"23319:12:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"23296:2:4","nodeType":"YulIdentifier","src":"23296:2:4"},{"kind":"number","nativeSrc":"23300:4:4","nodeType":"YulLiteral","src":"23300:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"23292:3:4","nodeType":"YulIdentifier","src":"23292:3:4"},"nativeSrc":"23292:13:4","nodeType":"YulFunctionCall","src":"23292:13:4"},{"name":"dataEnd","nativeSrc":"23307:7:4","nodeType":"YulIdentifier","src":"23307:7:4"}],"functionName":{"name":"slt","nativeSrc":"23288:3:4","nodeType":"YulIdentifier","src":"23288:3:4"},"nativeSrc":"23288:27:4","nodeType":"YulFunctionCall","src":"23288:27:4"}],"functionName":{"name":"iszero","nativeSrc":"23281:6:4","nodeType":"YulIdentifier","src":"23281:6:4"},"nativeSrc":"23281:35:4","nodeType":"YulFunctionCall","src":"23281:35:4"},"nativeSrc":"23278:55:4","nodeType":"YulIf","src":"23278:55:4"},{"nativeSrc":"23342:19:4","nodeType":"YulVariableDeclaration","src":"23342:19:4","value":{"arguments":[{"name":"_3","nativeSrc":"23358:2:4","nodeType":"YulIdentifier","src":"23358:2:4"}],"functionName":{"name":"mload","nativeSrc":"23352:5:4","nodeType":"YulIdentifier","src":"23352:5:4"},"nativeSrc":"23352:9:4","nodeType":"YulFunctionCall","src":"23352:9:4"},"variables":[{"name":"_4","nativeSrc":"23346:2:4","nodeType":"YulTypedName","src":"23346:2:4","type":""}]},{"body":{"nativeSrc":"23384:22:4","nodeType":"YulBlock","src":"23384:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"23386:16:4","nodeType":"YulIdentifier","src":"23386:16:4"},"nativeSrc":"23386:18:4","nodeType":"YulFunctionCall","src":"23386:18:4"},"nativeSrc":"23386:18:4","nodeType":"YulExpressionStatement","src":"23386:18:4"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"23376:2:4","nodeType":"YulIdentifier","src":"23376:2:4"},{"name":"_2","nativeSrc":"23380:2:4","nodeType":"YulIdentifier","src":"23380:2:4"}],"functionName":{"name":"gt","nativeSrc":"23373:2:4","nodeType":"YulIdentifier","src":"23373:2:4"},"nativeSrc":"23373:10:4","nodeType":"YulFunctionCall","src":"23373:10:4"},"nativeSrc":"23370:36:4","nodeType":"YulIf","src":"23370:36:4"},{"nativeSrc":"23415:20:4","nodeType":"YulVariableDeclaration","src":"23415:20:4","value":{"arguments":[{"kind":"number","nativeSrc":"23429:1:4","nodeType":"YulLiteral","src":"23429:1:4","type":"","value":"5"},{"name":"_4","nativeSrc":"23432:2:4","nodeType":"YulIdentifier","src":"23432:2:4"}],"functionName":{"name":"shl","nativeSrc":"23425:3:4","nodeType":"YulIdentifier","src":"23425:3:4"},"nativeSrc":"23425:10:4","nodeType":"YulFunctionCall","src":"23425:10:4"},"variables":[{"name":"_5","nativeSrc":"23419:2:4","nodeType":"YulTypedName","src":"23419:2:4","type":""}]},{"nativeSrc":"23444:39:4","nodeType":"YulVariableDeclaration","src":"23444:39:4","value":{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"23475:2:4","nodeType":"YulIdentifier","src":"23475:2:4"},{"name":"_1","nativeSrc":"23479:2:4","nodeType":"YulIdentifier","src":"23479:2:4"}],"functionName":{"name":"add","nativeSrc":"23471:3:4","nodeType":"YulIdentifier","src":"23471:3:4"},"nativeSrc":"23471:11:4","nodeType":"YulFunctionCall","src":"23471:11:4"}],"functionName":{"name":"allocate_memory","nativeSrc":"23455:15:4","nodeType":"YulIdentifier","src":"23455:15:4"},"nativeSrc":"23455:28:4","nodeType":"YulFunctionCall","src":"23455:28:4"},"variables":[{"name":"dst","nativeSrc":"23448:3:4","nodeType":"YulTypedName","src":"23448:3:4","type":""}]},{"nativeSrc":"23492:16:4","nodeType":"YulVariableDeclaration","src":"23492:16:4","value":{"name":"dst","nativeSrc":"23505:3:4","nodeType":"YulIdentifier","src":"23505:3:4"},"variables":[{"name":"dst_1","nativeSrc":"23496:5:4","nodeType":"YulTypedName","src":"23496:5:4","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"23524:3:4","nodeType":"YulIdentifier","src":"23524:3:4"},{"name":"_4","nativeSrc":"23529:2:4","nodeType":"YulIdentifier","src":"23529:2:4"}],"functionName":{"name":"mstore","nativeSrc":"23517:6:4","nodeType":"YulIdentifier","src":"23517:6:4"},"nativeSrc":"23517:15:4","nodeType":"YulFunctionCall","src":"23517:15:4"},"nativeSrc":"23517:15:4","nodeType":"YulExpressionStatement","src":"23517:15:4"},{"nativeSrc":"23541:19:4","nodeType":"YulAssignment","src":"23541:19:4","value":{"arguments":[{"name":"dst","nativeSrc":"23552:3:4","nodeType":"YulIdentifier","src":"23552:3:4"},{"name":"_1","nativeSrc":"23557:2:4","nodeType":"YulIdentifier","src":"23557:2:4"}],"functionName":{"name":"add","nativeSrc":"23548:3:4","nodeType":"YulIdentifier","src":"23548:3:4"},"nativeSrc":"23548:12:4","nodeType":"YulFunctionCall","src":"23548:12:4"},"variableNames":[{"name":"dst","nativeSrc":"23541:3:4","nodeType":"YulIdentifier","src":"23541:3:4"}]},{"nativeSrc":"23569:34:4","nodeType":"YulVariableDeclaration","src":"23569:34:4","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"23591:2:4","nodeType":"YulIdentifier","src":"23591:2:4"},{"name":"_5","nativeSrc":"23595:2:4","nodeType":"YulIdentifier","src":"23595:2:4"}],"functionName":{"name":"add","nativeSrc":"23587:3:4","nodeType":"YulIdentifier","src":"23587:3:4"},"nativeSrc":"23587:11:4","nodeType":"YulFunctionCall","src":"23587:11:4"},{"name":"_1","nativeSrc":"23600:2:4","nodeType":"YulIdentifier","src":"23600:2:4"}],"functionName":{"name":"add","nativeSrc":"23583:3:4","nodeType":"YulIdentifier","src":"23583:3:4"},"nativeSrc":"23583:20:4","nodeType":"YulFunctionCall","src":"23583:20:4"},"variables":[{"name":"srcEnd","nativeSrc":"23573:6:4","nodeType":"YulTypedName","src":"23573:6:4","type":""}]},{"body":{"nativeSrc":"23635:16:4","nodeType":"YulBlock","src":"23635:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23644:1:4","nodeType":"YulLiteral","src":"23644:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"23647:1:4","nodeType":"YulLiteral","src":"23647:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"23637:6:4","nodeType":"YulIdentifier","src":"23637:6:4"},"nativeSrc":"23637:12:4","nodeType":"YulFunctionCall","src":"23637:12:4"},"nativeSrc":"23637:12:4","nodeType":"YulExpressionStatement","src":"23637:12:4"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"23618:6:4","nodeType":"YulIdentifier","src":"23618:6:4"},{"name":"dataEnd","nativeSrc":"23626:7:4","nodeType":"YulIdentifier","src":"23626:7:4"}],"functionName":{"name":"gt","nativeSrc":"23615:2:4","nodeType":"YulIdentifier","src":"23615:2:4"},"nativeSrc":"23615:19:4","nodeType":"YulFunctionCall","src":"23615:19:4"},"nativeSrc":"23612:39:4","nodeType":"YulIf","src":"23612:39:4"},{"nativeSrc":"23660:22:4","nodeType":"YulVariableDeclaration","src":"23660:22:4","value":{"arguments":[{"name":"_3","nativeSrc":"23675:2:4","nodeType":"YulIdentifier","src":"23675:2:4"},{"name":"_1","nativeSrc":"23679:2:4","nodeType":"YulIdentifier","src":"23679:2:4"}],"functionName":{"name":"add","nativeSrc":"23671:3:4","nodeType":"YulIdentifier","src":"23671:3:4"},"nativeSrc":"23671:11:4","nodeType":"YulFunctionCall","src":"23671:11:4"},"variables":[{"name":"src","nativeSrc":"23664:3:4","nodeType":"YulTypedName","src":"23664:3:4","type":""}]},{"body":{"nativeSrc":"23747:101:4","nodeType":"YulBlock","src":"23747:101:4","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"23768:3:4","nodeType":"YulIdentifier","src":"23768:3:4"},{"arguments":[{"name":"src","nativeSrc":"23801:3:4","nodeType":"YulIdentifier","src":"23801:3:4"}],"functionName":{"name":"abi_decode_int64_fromMemory","nativeSrc":"23773:27:4","nodeType":"YulIdentifier","src":"23773:27:4"},"nativeSrc":"23773:32:4","nodeType":"YulFunctionCall","src":"23773:32:4"}],"functionName":{"name":"mstore","nativeSrc":"23761:6:4","nodeType":"YulIdentifier","src":"23761:6:4"},"nativeSrc":"23761:45:4","nodeType":"YulFunctionCall","src":"23761:45:4"},"nativeSrc":"23761:45:4","nodeType":"YulExpressionStatement","src":"23761:45:4"},{"nativeSrc":"23819:19:4","nodeType":"YulAssignment","src":"23819:19:4","value":{"arguments":[{"name":"dst","nativeSrc":"23830:3:4","nodeType":"YulIdentifier","src":"23830:3:4"},{"name":"_1","nativeSrc":"23835:2:4","nodeType":"YulIdentifier","src":"23835:2:4"}],"functionName":{"name":"add","nativeSrc":"23826:3:4","nodeType":"YulIdentifier","src":"23826:3:4"},"nativeSrc":"23826:12:4","nodeType":"YulFunctionCall","src":"23826:12:4"},"variableNames":[{"name":"dst","nativeSrc":"23819:3:4","nodeType":"YulIdentifier","src":"23819:3:4"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"23702:3:4","nodeType":"YulIdentifier","src":"23702:3:4"},{"name":"srcEnd","nativeSrc":"23707:6:4","nodeType":"YulIdentifier","src":"23707:6:4"}],"functionName":{"name":"lt","nativeSrc":"23699:2:4","nodeType":"YulIdentifier","src":"23699:2:4"},"nativeSrc":"23699:15:4","nodeType":"YulFunctionCall","src":"23699:15:4"},"nativeSrc":"23691:157:4","nodeType":"YulForLoop","post":{"nativeSrc":"23715:23:4","nodeType":"YulBlock","src":"23715:23:4","statements":[{"nativeSrc":"23717:19:4","nodeType":"YulAssignment","src":"23717:19:4","value":{"arguments":[{"name":"src","nativeSrc":"23728:3:4","nodeType":"YulIdentifier","src":"23728:3:4"},{"name":"_1","nativeSrc":"23733:2:4","nodeType":"YulIdentifier","src":"23733:2:4"}],"functionName":{"name":"add","nativeSrc":"23724:3:4","nodeType":"YulIdentifier","src":"23724:3:4"},"nativeSrc":"23724:12:4","nodeType":"YulFunctionCall","src":"23724:12:4"},"variableNames":[{"name":"src","nativeSrc":"23717:3:4","nodeType":"YulIdentifier","src":"23717:3:4"}]}]},"pre":{"nativeSrc":"23695:3:4","nodeType":"YulBlock","src":"23695:3:4","statements":[]},"src":"23691:157:4"},{"nativeSrc":"23857:15:4","nodeType":"YulAssignment","src":"23857:15:4","value":{"name":"dst_1","nativeSrc":"23867:5:4","nodeType":"YulIdentifier","src":"23867:5:4"},"variableNames":[{"name":"value2","nativeSrc":"23857:6:4","nodeType":"YulIdentifier","src":"23857:6:4"}]}]},"name":"abi_decode_tuple_t_int32t_int64t_array$_t_int64_$dyn_memory_ptr_fromMemory","nativeSrc":"22760:1118:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22844:9:4","nodeType":"YulTypedName","src":"22844:9:4","type":""},{"name":"dataEnd","nativeSrc":"22855:7:4","nodeType":"YulTypedName","src":"22855:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22867:6:4","nodeType":"YulTypedName","src":"22867:6:4","type":""},{"name":"value1","nativeSrc":"22875:6:4","nodeType":"YulTypedName","src":"22875:6:4","type":""},{"name":"value2","nativeSrc":"22883:6:4","nodeType":"YulTypedName","src":"22883:6:4","type":""}],"src":"22760:1118:4"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(7, value0))\n    }\n    function abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_int256_t_bytes_memory_ptr__to_t_int256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool_t_bool_t_bool__to_t_bool_t_bool_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_bool__to_t_bool_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_int32_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(3, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_int32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_int32_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_address_t_int256__to_t_address_t_int256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_05b8c81e4d50af98fb5fa519b925050c6ae01b6abdbde399cd313d795f1a13f1_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"LYNX token association failed: \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 31), length)\n        end := add(add(pos, length), 31)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_stringliteral_49eb(pos) -> end\n    {\n        mstore(pos, 4)\n        mstore(add(pos, 0x20), \"LYNX\")\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_stringliteral_49eb(add(headStart, 96))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value0, _1))\n        mstore(add(headStart, 64), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Cannot transfer to zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_68495250fdc0ee8e53fcde04a36e34fbf1ec8715429481eca8f59ec65fc8e2c4_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"SAUCE token association failed: \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(pos, 32), length)\n        end := add(add(pos, length), 32)\n    }\n    function abi_encode_stringliteral_4b03(pos) -> end\n    {\n        mstore(pos, 5)\n        mstore(add(pos, 0x20), \"SAUCE\")\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_stringliteral_4b03(add(headStart, 96))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value0, _1))\n        mstore(add(headStart, 64), and(value1, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_7eb3639e548d99e2b5f171e605acad2de5f51ddc896d16b083d0dc5d115a0fe2_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Token association failed: \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 26), length)\n        end := add(add(pos, length), 26)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a71107265ed46d55753f901c0ef2ce1bd8a60e72b08794a34eebec38ec384993_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"CLXY token association failed: \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 31), length)\n        end := add(add(pos, length), 31)\n    }\n    function abi_encode_stringliteral_c6f0(pos) -> end\n    {\n        mstore(pos, 4)\n        mstore(add(pos, 0x20), \"CLXY\")\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_stringliteral_c6f0(add(headStart, 96))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value0, _1))\n        mstore(add(headStart, 64), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_8e4591e7aa5942b9a7e03764658fae7c504c791f64b8470252259d3c5547c83a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Insufficient HBAR balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_49eb7ee01c69d75b66cb98fccea74d25249c1b4b930bf88dfdcfd58c74a8c0d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_stringliteral_49eb(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_stringliteral_4b03(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_stringliteral_c6f0(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_4b0382107e6b16d912c06a6f8c836bf1c53594c68f1563e861b5c31ffd2097d8_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_stringliteral_4b03(add(headStart, 96))\n        mstore(add(headStart, 32), value0)\n        mstore(add(headStart, 64), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c6f0cd13006abdba4968f837d9105f173ac2e7017989d0803ef989ce0e591c00_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_stringliteral_c6f0(add(headStart, 96))\n        mstore(add(headStart, 32), value0)\n        mstore(add(headStart, 64), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_061735ab87dcc0fdde52a9a6072648c11c6fde3e234a87ae62c265e0bd92bb6e_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        mstore(add(headStart, 96), 4)\n        mstore(add(headStart, 128), \"HBAR\")\n        tail := add(headStart, 160)\n        mstore(add(headStart, 0x20), value0)\n        mstore(add(headStart, 64), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_be977b710620808899cfe9b64153d25b090aeabbaca08bf69302667e4561b07b_t_address_t_address_t_int256_t_string_memory_ptr__to_t_string_memory_ptr_t_address_t_address_t_int256_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 160)\n        mstore(add(headStart, 160), 13)\n        mstore(add(headStart, 192), \"transferToken\")\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 0x20), and(value0, _1))\n        mstore(add(headStart, 64), and(value1, _1))\n        mstore(add(headStart, 96), value2)\n        mstore(add(headStart, 128), 224)\n        tail := abi_encode_bytes(value3, add(headStart, 224))\n    }\n    function abi_encode_tuple_t_stringliteral_ec78d9c22c08bb9f0ecd5d95571ae83e3f22219c5a9278c3270691d50abfd91b_t_address_t_address_t_int256_t_string_memory_ptr__to_t_string_memory_ptr_t_address_t_address_t_int256_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 160)\n        mstore(add(headStart, 160), 9)\n        mstore(add(headStart, 192), \"mintToken\")\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 0x20), and(value0, _1))\n        mstore(add(headStart, 64), and(value1, _1))\n        mstore(add(headStart, 96), value2)\n        mstore(add(headStart, 128), 224)\n        tail := abi_encode_bytes(value3, add(headStart, 224))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, shl(255, 1)) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_int32t_bool_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_int32_fromMemory(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), signextend(7, value3))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_6f5cad8325c7c3f966939257287b21f13d866689bb45fe6acb014032f9156b49_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"UNKNOWN_ERROR_\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 14), length)\n        end := add(add(pos, length), 14)\n    }\n    function abi_encode_tuple_t_address_t_int64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_address_t_int64_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 32\n        mstore(add(headStart, 32), signextend(7, value1))\n        mstore(add(headStart, 64), 96)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let tail_2 := add(add(headStart, shl(5, length)), 128)\n        let srcPtr := add(value2, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(127)))\n            tail_2 := abi_encode_bytes(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_int64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(7, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_int32t_int64t_array$_t_int64_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_int32_fromMemory(headStart)\n        let _1 := 32\n        value1 := abi_decode_int64_fromMemory(add(headStart, _1))\n        let offset := mload(add(headStart, 64))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_int64_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value2 := dst_1\n    }\n}","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061016a5760003560e01c80638d6be540116100d1578063b94fab4e1161008a578063e860ff7411610064578063e860ff7414610466578063ef03759314610486578063ef1643e41461049b578063f851a440146104bb57600080fd5b8063b94fab4e14610426578063d65db29714610446578063de97b29f146103b157600080fd5b80638d6be540146103615780638f9f8b011461037657806396cd51d7146103b157806397236479146103c65780639b23d3d9146103e6578063a1d4da151461040657600080fd5b80635ea4a9fd116101235780635ea4a9fd14610261578063618dc65e14610288578063724302a7146102b657806375829def146102ea5780637bd82c691461030a57806387bff26b1461031d57600080fd5b806315dacbea14610176578063169b78a2146101ae5780632ac2555f146101d15780633ed4d3bc146102095780634924190c1461021e57806352eb2a441461024157600080fd5b3661017157005b600080fd5b34801561018257600080fd5b50610196610191366004611c95565b6104db565b60405160079190910b81526020015b60405180910390f35b3480156101ba57600080fd5b5060408051600181526101676020820152016101a5565b3480156101dd57600080fd5b506002546101f1906001600160a01b031681565b6040516001600160a01b0390911681526020016101a5565b61021c610217366004611ce0565b6105cf565b005b34801561022a57600080fd5b50610233600a81565b6040519081526020016101a5565b34801561024d57600080fd5b5061021c61025c366004611d0c565b6105f2565b34801561026d57600080fd5b50610276600881565b60405160ff90911681526020016101a5565b34801561029457600080fd5b506102a86102a3366004611d75565b610715565b6040516101a5929190611e6b565b3480156102c257600080fd5b506102cb610833565b60408051931515845291151560208401521515908201526060016101a5565b3480156102f657600080fd5b5061021c610305366004611d0c565b610886565b34801561031657600080fd5b5047610233565b34801561032957600080fd5b5061033d610338366004611e84565b610961565b604080519415158552602085019390935291830152151560608201526080016101a5565b34801561036d57600080fd5b50610233600281565b34801561038257600080fd5b50610396610391366004611eb7565b6109aa565b604080519384526020840192909252908201526060016101a5565b3480156103bd57600080fd5b50610276600681565b3480156103d257600080fd5b5061021c6103e1366004611d0c565b610a33565b3480156103f257600080fd5b50610196610401366004611c95565b610b41565b34801561041257600080fd5b5061021c610421366004611ed0565b610b86565b34801561043257600080fd5b5061021c610441366004611d0c565b610c9b565b34801561045257600080fd5b5061021c610461366004611eb7565b610da9565b34801561047257600080fd5b506001546101f1906001600160a01b031681565b34801561049257600080fd5b50610233600581565b3480156104a757600080fd5b506000546101f1906001600160a01b031681565b3480156104c757600080fd5b506003546101f1906001600160a01b031681565b6040516001600160a01b038581166024830152848116604483015283166064820152608481018290526000908190819061016790630aed65f560e11b9060a4015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161055a9190611f45565b6000604051808303816000865af19150503d8060008114610597576040519150601f19603f3d011682016040523d82523d6000602084013e61059c565b606091505b5091509150816105ad5760156105c1565b808060200190518101906105c19190611f73565b60030b979650505050505050565b6105da838383610e62565b6105e48282611004565b6105ed8361114c565b505050565b6003546001600160a01b0316331461061d57604051634755657960e01b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681179093551690156106d857600061064f30846112aa565b604080516001600160a01b0386168152602081018390529192506000805160206126bd833981519152910160405180910390a16016811461068f8261137e565b60405160200161069f9190611f8e565b604051602081830303815290604052906106d55760405162461bcd60e51b81526004016106cc9190611fd3565b60405180910390fd5b50505b7f267ecc93910a877e2ca3059a02e04c683dc5687c1c8426fa61d6054e39ee022e8183604051610709929190611fe6565b60405180910390a15050565b600060606000806101676001600160a01b031663618dc65e60e01b8787604051602401610743929190612029565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516107819190611f45565b6000604051808303816000865af19150503d80600081146107be576040519150601f19603f3d011682016040523d82523d6000602084013e6107c3565b606091505b50915091507f4af4780e06fe8cb9df64b0794fa6f01399af979175bb988e35e0e57e594567bc82826040516107f992919061204d565b60405180910390a18161081d57601560405180602001604052806000815250610821565b6016815b60039190910b97909650945050505050565b6001546000908190819061084f906001600160a01b0316611558565b600254909350610867906001600160a01b0316611558565b60005490925061087f906001600160a01b0316611558565b9050909192565b6003546001600160a01b031633146108b157604051634755657960e01b815260040160405180910390fd5b6001600160a01b0381166109075760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f20616464726573730060448201526064016106cc565b600380546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527ff8ccb027dfcd135e000e9d45e6cc2d662578a8825d4c45b5e32e0adf67e79ec69101610709565b6000806000806000806109738861159b565b915060070b9150601660030b8214801561098a5750805b9250821561099f576001955060009450600093505b505092959194509250565b600080806109ba6008600a612164565b6109c66006600a612164565b6109d1600587612173565b6109db9190612173565b6109e591906121a0565b92506109f36008600a612164565b6109ff6006600a612164565b610a0a600287612173565b610a149190612173565b610a1e91906121a0565b9150610a2b600a85612173565b929491935050565b6003546001600160a01b03163314610a5e57604051634755657960e01b815260040160405180910390fd5b600180546001600160a01b038381166001600160a01b031983168117909355169015610b10576000610a9030846112aa565b604080516001600160a01b0386168152602081018390529192506000805160206126bd833981519152910160405180910390a160168114610ad08261137e565b604051602001610ae091906121b4565b60405160208183030381529060405290610b0d5760405162461bcd60e51b81526004016106cc9190611fd3565b50505b7f267ecc93910a877e2ca3059a02e04c683dc5687c1c8426fa61d6054e39ee022e81836040516107099291906121f9565b6040516001600160a01b038581166024830152848116604483015283166064820152608481018290526000908190819061016790639b23d3d960e01b9060a40161051c565b6003546001600160a01b03163314610bb157604051634755657960e01b815260040160405180910390fd5b60005b818110156105ed576000610bee30858585818110610bd457610bd461221e565b9050602002016020810190610be99190611d0c565b6112aa565b90506000805160206126bd833981519152848484818110610c1157610c1161221e565b9050602002016020810190610c269190611d0c565b604080516001600160a01b039092168252602082018490520160405180910390a160168114610c548261137e565b604051602001610c649190612234565b60405160208183030381529060405290610c915760405162461bcd60e51b81526004016106cc9190611fd3565b5050600101610bb4565b6003546001600160a01b03163314610cc657604051634755657960e01b815260040160405180910390fd5b600280546001600160a01b038381166001600160a01b031983168117909355169015610d78576000610cf830846112aa565b604080516001600160a01b0386168152602081018390529192506000805160206126bd833981519152910160405180910390a160168114610d388261137e565b604051602001610d489190612279565b60405160208183030381529060405290610d755760405162461bcd60e51b81526004016106cc9190611fd3565b50505b7f267ecc93910a877e2ca3059a02e04c683dc5687c1c8426fa61d6054e39ee022e81836040516107099291906122b1565b6003546001600160a01b03163314610dd457604051634755657960e01b815260040160405180910390fd5b47811115610e245760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420484241522062616c616e63650000000000000060448201526064016106cc565b6003546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610e5e573d6000803e3d6000fd5b5050565b82600003610e835760405163162908e360e11b815260040160405180910390fd5b6000546001600160a01b0316610eac576040516364d2ac4160e01b81526004016106cc906122d5565b6001546001600160a01b0316610ed5576040516364d2ac4160e01b81526004016106cc906122f9565b6002546001600160a01b0316610efe576040516364d2ac4160e01b81526004016106cc9061231e565b604051638f9f8b0160e01b815260048101849052600090819081903090638f9f8b0190602401606060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f659190612342565b92509250925082851015610f9057828560405163d5871b2360e01b81526004016106cc929190612370565b81841015610fb557818460405163d5871b2360e01b81526004016106cc9291906123a5565b80341015610ffc5760405163d5871b2360e01b81526060600480830191909152606482015263242120a960e11b60848201526024810182905234604482015260a4016106cc565b505050505050565b60015460009061101f906001600160a01b031633308661166f565b6001549091506000805160206126dd833981519152906001600160a01b03163383611049816116b7565b60405161105994939291906123c9565b60405180910390a160168114611082576040516312dfddb360e01b81526004016106cc906122f9565b60025460009061109d906001600160a01b031633308661166f565b6002549091506000805160206126dd833981519152906001600160a01b031633836110c7816116b7565b6040516110d794939291906123c9565b60405180910390a160168114611100576040516312dfddb360e01b81526004016106cc9061231e565b6040805185815260208101859052349181019190915233907f651b66d4c82e3fedc9c57c6ff8a4cf8c81b8d1cd432d7297773c6edbf6cfb36a906060015b60405180910390a250505050565b6040805160008082526020820190925281611177565b60608152602001906001900390816111625790505b506000805491925090611194906001600160a01b03168484611b7b565b50506000549091506000805160206126dd833981519152906001600160a01b031630836111c0816116b7565b6040516111d0949392919061242a565b60405180910390a1601681146111fc57604051637850178160e11b8152600481018290526024016106cc565b60008054611215906001600160a01b031630338761166f565b6000549091506000805160206126dd833981519152906001600160a01b0316338361123f816116b7565b60405161124f94939291906123c9565b60405180910390a160168114611278576040516312dfddb360e01b81526004016106cc906122d5565b60405184815233907f465927a4840d7c7d6aa087bb368fe25bed2f96a7de450603903e0331dec0dbb59060200161113e565b604080516001600160a01b038481166024830152831660448083019190915282518083039091018152606490910182526020810180516001600160e01b031663248a35ef60e11b1790529051600091829182916101679161130b9190611f45565b6000604051808303816000865af19150503d8060008114611348576040519150601f19603f3d011682016040523d82523d6000602084013e61134d565b606091505b50915091508161135e576015611372565b808060200190518101906113729190611f73565b60030b95945050505050565b6060816000036113a55750506040805180820190915260018152600360fc1b602082015290565b600080831290816113b657836113bf565b6113bf8461247d565b60408051602080825281830190925291925060009190602082018180368337019050509050601f5b821561144c576113f8600a84612499565b6114039060306124ad565b60f81b8282611411816124c0565b9350815181106114235761142361221e565b60200101906001600160f81b031916908160001a905350611445600a846121a0565b92506113e7565b831561148c57602d60f81b8282611462816124c0565b9350815181106114745761147461221e565b60200101906001600160f81b031916908160001a9053505b600061149982601f6124d7565b67ffffffffffffffff8111156114b1576114b1611d2e565b6040519080825280601f01601f1916602001820160405280156114db576020820181803683370190505b50905060005b815181101561154d5783816114f78560016124ad565b61150191906124ad565b815181106115115761151161221e565b602001015160f81c60f81b82828151811061152e5761152e61221e565b60200101906001600160f81b031916908160001a9053506001016114e1565b509695505050505050565b60006001600160a01b03821661157057506000919050565b60008061157c8461159b565b915060070b9150601660030b821480156115935750805b949350505050565b604080516001600160a01b03831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166319f3736160e01b1790529051600091829182918291610167916115f591611f45565b6000604051808303816000865af19150503d8060008114611632576040519150601f19603f3d011682016040523d82523d6000602084013e611637565b606091505b50915091508161164a576015600061165e565b8080602001905181019061165e91906124ea565b60039190910b969095509350505050565b6040516001600160a01b038581166024830152848116604483015283166064820152600782900b6084820152600090819081906101679063eca3691760e01b9060a40161051c565b606060151982016116e55750506040805180820190915260078152665355434345535360c81b602082015290565b600019820161171d57505060408051808201909152601381527224a72b20a624a22faa2920a729a0a1aa24a7a760691b602082015290565b600119820161175f57505060408051808201909152601781527f50415945525f4143434f554e545f4e4f545f464f554e44000000000000000000602082015290565b60021982016117985750506040805180820190915260148152731253959053125117d393d11157d050d0d3d5539560621b602082015290565b60031982016117d05750506040805180820190915260138152721514905394d050d51253d397d1561412549151606a1b602082015290565b600419820161181257505060408051808201909152601981527f494e56414c49445f5452414e53414354494f4e5f535441525400000000000000602082015290565b600519820161185457505060408051808201909152601c81527f494e56414c49445f5452414e53414354494f4e5f4455524154494f4e00000000602082015290565b600619820161188a575050604080518082019091526011815270494e56414c49445f5349474e415455524560781b602082015290565b60071982016118bc57505060408051808201909152600d81526c4d454d4f5f544f4f5f4c4f4e4760981b602082015290565b60081982016118f4575050604080518082019091526013815272494e53554646494349454e545f54585f46454560681b602082015290565b600919820161193657505060408051808201909152601a81527f494e53554646494349454e545f50415945525f42414c414e4345000000000000602082015290565b600a198201611970575050604080518082019091526015815274222aa82624a1a0aa22afaa2920a729a0a1aa24a7a760591b602082015290565b600b1982016119995750506040805180820190915260048152634255535960e01b602082015290565b600c1982016119cb57505060408051808201909152600d81526c1393d517d4d5541413d4951151609a1b602082015290565b600d1982016119ff57505060408051808201909152600f81526e1253959053125117d192531157d251608a1b602082015290565b600e198201611a365750506040805180820190915260128152711253959053125117d050d0d3d5539517d25160721b602082015290565b600f198201611a6e5750506040805180820190915260138152721253959053125117d0d3d395149050d517d251606a1b602082015290565b6010198201611aa95750506040805180820190915260168152751253959053125117d514905394d050d51253d397d25160521b602082015290565b6011198201611adf575050604080518082019091526011815270149150d152541517d393d517d193d55391607a1b602082015290565b6012198201611b1457505060408051808201909152601081526f149150d3d49117d393d517d193d5539160821b602082015290565b6013198201611b4c5750506040805180820190915260138152721253959053125117d4d3d3125112551657d251606a1b602082015290565b611b558261137e565b604051602001611b659190612526565b6040516020818303038152906040529050919050565b60008060606000806101676001600160a01b031663e0f4059a60e01b898989604051602401611bac9392919061255c565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611bea9190611f45565b6000604051808303816000865af19150503d8060008114611c27576040519150601f19603f3d011682016040523d82523d6000602084013e611c2c565b606091505b509150915081611c4f576040805160008082526020820190925260159190611c63565b80806020019051810190611c6391906125ec565b60039290920b9a90995090975095505050505050565b80356001600160a01b0381168114611c9057600080fd5b919050565b60008060008060808587031215611cab57600080fd5b611cb485611c79565b9350611cc260208601611c79565b9250611cd060408601611c79565b9396929550929360600135925050565b600080600060608486031215611cf557600080fd5b505081359360208301359350604090920135919050565b600060208284031215611d1e57600080fd5b611d2782611c79565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d6d57611d6d611d2e565b604052919050565b60008060408385031215611d8857600080fd5b611d9183611c79565b915060208084013567ffffffffffffffff80821115611daf57600080fd5b818601915086601f830112611dc357600080fd5b813581811115611dd557611dd5611d2e565b611de7601f8201601f19168501611d44565b91508082528784828501011115611dfd57600080fd5b80848401858401376000848284010152508093505050509250929050565b60005b83811015611e36578181015183820152602001611e1e565b50506000910152565b60008151808452611e57816020860160208601611e1b565b601f01601f19169290920160200192915050565b8281526040602082015260006115936040830184611e3f565b60008060408385031215611e9757600080fd5b611ea083611c79565b9150611eae60208401611c79565b90509250929050565b600060208284031215611ec957600080fd5b5035919050565b60008060208385031215611ee357600080fd5b823567ffffffffffffffff80821115611efb57600080fd5b818501915085601f830112611f0f57600080fd5b813581811115611f1e57600080fd5b8660208260051b8501011115611f3357600080fd5b60209290920196919550909350505050565b60008251611f57818460208701611e1b565b9190910192915050565b8051600381900b8114611c9057600080fd5b600060208284031215611f8557600080fd5b611d2782611f61565b7f4c594e5820746f6b656e206173736f63696174696f6e206661696c65643a2000815260008251611fc681601f850160208701611e1b565b91909101601f0192915050565b602081526000611d276020830184611e3f565b60608152600061200a606083016004815263098b29cb60e31b602082015260400190565b6001600160a01b03948516602084015292909316604090910152919050565b6001600160a01b038316815260406020820181905260009061159390830184611e3f565b82151581526040602082015260006115936040830184611e3f565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156120b957816000190482111561209f5761209f612068565b808516156120ac57918102915b93841c9390800290612083565b509250929050565b6000826120d05750600161215e565b816120dd5750600061215e565b81600181146120f357600281146120fd57612119565b600191505061215e565b60ff84111561210e5761210e612068565b50506001821b61215e565b5060208310610133831016604e8410600b841016171561213c575081810a61215e565b612146838361207e565b806000190482111561215a5761215a612068565b0290505b92915050565b6000611d2760ff8416836120c1565b808202811582820484141761215e5761215e612068565b634e487b7160e01b600052601260045260246000fd5b6000826121af576121af61218a565b500490565b7f534155434520746f6b656e206173736f63696174696f6e206661696c65643a208152600082516121ec816020850160208701611e1b565b9190910160200192915050565b60608152600061200a606083016005815264534155434560d81b602082015260400190565b634e487b7160e01b600052603260045260246000fd5b7f546f6b656e206173736f63696174696f6e206661696c65643a2000000000000081526000825161226c81601a850160208701611e1b565b91909101601a0192915050565b7f434c585920746f6b656e206173736f63696174696f6e206661696c65643a2000815260008251611fc681601f850160208701611e1b565b60608152600061200a606083016004815263434c585960e01b602082015260400190565b60208152600061215e602083016004815263098b29cb60e31b602082015260400190565b60208152600061215e602083016005815264534155434560d81b602082015260400190565b60208152600061215e602083016004815263434c585960e01b602082015260400190565b60008060006060848603121561235757600080fd5b8351925060208401519150604084015190509250925092565b606081526000612395606083016005815264534155434560d81b602082015260400190565b6020830194909452506040015290565b606081526000612395606083016004815263434c585960e01b602082015260400190565b60a0808252600d908201526c3a3930b739b332b92a37b5b2b760991b60c08201526001600160a01b038581166020830152841660408201526060810183905260e06080820181905260009061242090830184611e3f565b9695505050505050565b60a08082526009908201526836b4b73a2a37b5b2b760b91b60c08201526001600160a01b038581166020830152841660408201526060810183905260e06080820181905260009061242090830184611e3f565b6000600160ff1b820161249257612492612068565b5060000390565b6000826124a8576124a861218a565b500690565b8082018082111561215e5761215e612068565b6000816124cf576124cf612068565b506000190190565b8181038181111561215e5761215e612068565b600080604083850312156124fd57600080fd5b61250683611f61565b91506020830151801515811461251b57600080fd5b809150509250929050565b6d554e4b4e4f574e5f4552524f525f60901b81526000825161254f81600e850160208701611e1b565b91909101600e0192915050565b60006060820160018060a01b038616835260208560070b60208501526060604085015281855180845260808601915060808160051b87010193506020870160005b828110156125cb57607f198887030184526125b9868351611e3f565b9550928401929084019060010161259d565b50939998505050505050505050565b8051600781900b8114611c9057600080fd5b60008060006060848603121561260157600080fd5b61260a84611f61565b925060206126198186016125da565b9250604085015167ffffffffffffffff8082111561263657600080fd5b818701915087601f83011261264a57600080fd5b81518181111561265c5761265c611d2e565b8060051b915061266d848301611d44565b818152918301840191848101908a84111561268757600080fd5b938501935b838510156126ac5761269d856125da565b8252938501939085019061268c565b809650505050505050925092509256feca04269aafa6b89ced6631d9643f3d61366dd8e5abf65031bae59d640e2ab64fe8e92ea3580b0ca922d0ba2eab56806a32481c0b7fb44ce303c6e8eed6ada356a264697066735822122026a51fd55048e34c66ffc9e33a5b3d1512b4b6991797a18d707a5d13db42041364736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D6BE540 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB94FAB4E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE860FF74 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE860FF74 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xEF037593 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xEF1643E4 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB94FAB4E EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xD65DB297 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xDE97B29F EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D6BE540 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x8F9F8B01 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x96CD51D7 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x97236479 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x9B23D3D9 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xA1D4DA15 EQ PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EA4A9FD GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x5EA4A9FD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x618DC65E EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x724302A7 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x7BD82C69 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x87BFF26B EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15DACBEA EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x169B78A2 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x2AC2555F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x3ED4D3BC EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x4924190C EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x52EB2A44 EQ PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x171 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x7 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP3 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x233 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x6 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED0 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0xC9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0xDA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x167 SWAP1 PUSH4 0xAED65F5 PUSH1 0xE1 SHL SWAP1 PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x59C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x5AD JUMPI PUSH1 0x15 PUSH2 0x5C1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5DA DUP4 DUP4 DUP4 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x5E4 DUP3 DUP3 PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x5ED DUP4 PUSH2 0x114C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE AND SWAP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 PUSH2 0x64F ADDRESS DUP5 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x68F DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1F8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH32 0x267ECC93910A877E2CA3059A02E04C683DC5687C1C8426FA61D6054E39EE022E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x709 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x167 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x618DC65E PUSH1 0xE0 SHL DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x743 SWAP3 SWAP2 SWAP1 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH32 0x4AF4780E06FE8CB9DF64B0794FA6F01399AF979175BB988E35E0E57E594567BC DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F9 SWAP3 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH2 0x81D JUMPI PUSH1 0x15 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x821 JUMP JUMPDEST PUSH1 0x16 DUP2 JUMPDEST PUSH1 0x3 SWAP2 SWAP1 SWAP2 SIGNEXTEND SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x84F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP4 POP PUSH2 0x867 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP3 POP PUSH2 0x87F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1558 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xF8CCB027DFCD135E000E9D45E6CC2D662578A8825D4C45B5E32E0ADF67E79EC6 SWAP2 ADD PUSH2 0x709 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x973 DUP9 PUSH2 0x159B JUMP JUMPDEST SWAP2 POP PUSH1 0x7 SIGNEXTEND SWAP2 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP3 EQ DUP1 ISZERO PUSH2 0x98A JUMPI POP DUP1 JUMPDEST SWAP3 POP DUP3 ISZERO PUSH2 0x99F JUMPI PUSH1 0x1 SWAP6 POP PUSH1 0x0 SWAP5 POP PUSH1 0x0 SWAP4 POP JUMPDEST POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x9BA PUSH1 0x8 PUSH1 0xA PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x9C6 PUSH1 0x6 PUSH1 0xA PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x9D1 PUSH1 0x5 DUP8 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F3 PUSH1 0x8 PUSH1 0xA PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x9FF PUSH1 0x6 PUSH1 0xA PUSH2 0x2164 JUMP JUMPDEST PUSH2 0xA0A PUSH1 0x2 DUP8 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0xA1E SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2B PUSH1 0xA DUP6 PUSH2 0x2173 JUMP JUMPDEST SWAP3 SWAP5 SWAP2 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE AND SWAP1 ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 PUSH2 0xA90 ADDRESS DUP5 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0xAD0 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST POP POP JUMPDEST PUSH32 0x267ECC93910A877E2CA3059A02E04C683DC5687C1C8426FA61D6054E39EE022E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x709 SWAP3 SWAP2 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x167 SWAP1 PUSH4 0x9B23D3D9 PUSH1 0xE0 SHL SWAP1 PUSH1 0xA4 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 PUSH2 0xBEE ADDRESS DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xBD4 JUMPI PUSH2 0xBD4 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x12AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0xC11 JUMPI PUSH2 0xC11 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0xC54 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0x2234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xC91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE AND SWAP1 ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 PUSH2 0xCF8 ADDRESS DUP5 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0xD38 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD48 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST POP POP JUMPDEST PUSH32 0x267ECC93910A877E2CA3059A02E04C683DC5687C1C8426FA61D6054E39EE022E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x709 SWAP3 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47556579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420484241522062616C616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH4 0x64D2AC41 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64D2AC41 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x64D2AC41 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8F9F8B01 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x8F9F8B01 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x2342 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP6 LT ISZERO PUSH2 0xF90 JUMPI DUP3 DUP6 PUSH1 0x40 MLOAD PUSH4 0xD5871B23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP3 SWAP2 SWAP1 PUSH2 0x2370 JUMP JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xFB5 JUMPI DUP2 DUP5 PUSH1 0x40 MLOAD PUSH4 0xD5871B23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP3 SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH4 0xD5871B23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x242120A9 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6CC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x101F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1049 DUP2 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1059 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12DFDDB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x109D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x10C7 DUP2 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x1100 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12DFDDB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLVALUE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 PUSH32 0x651B66D4C82E3FEDC9C57C6FF8A4CF8C81B8D1CD432D7297773C6EDBF6CFB36A SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE DUP2 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1162 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1194 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x1B7B JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS DUP4 PUSH2 0x11C0 DUP2 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x242A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x78501781 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1215 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS CALLER DUP8 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x123F DUP2 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x16 DUP2 EQ PUSH2 0x1278 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12DFDDB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x465927A4840D7C7D6AA087BB368FE25BED2F96A7DE450603903E0331DEC0DBB5 SWAP1 PUSH1 0x20 ADD PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x248A35EF PUSH1 0xE1 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH2 0x167 SWAP2 PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x134D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x135E JUMPI PUSH1 0x15 PUSH2 0x1372 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1372 SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH1 0x3 SIGNEXTEND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x13A5 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT SWAP1 DUP2 PUSH2 0x13B6 JUMPI DUP4 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x13BF DUP5 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1F JUMPDEST DUP3 ISZERO PUSH2 0x144C JUMPI PUSH2 0x13F8 PUSH1 0xA DUP5 PUSH2 0x2499 JUMP JUMPDEST PUSH2 0x1403 SWAP1 PUSH1 0x30 PUSH2 0x24AD JUMP JUMPDEST PUSH1 0xF8 SHL DUP3 DUP3 PUSH2 0x1411 DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1445 PUSH1 0xA DUP5 PUSH2 0x21A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x13E7 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x148C JUMPI PUSH1 0x2D PUSH1 0xF8 SHL DUP3 DUP3 PUSH2 0x1462 DUP2 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x1474 JUMPI PUSH2 0x1474 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST PUSH1 0x0 PUSH2 0x1499 DUP3 PUSH1 0x1F PUSH2 0x24D7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B1 JUMPI PUSH2 0x14B1 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14DB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x154D JUMPI DUP4 DUP2 PUSH2 0x14F7 DUP6 PUSH1 0x1 PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x1501 SWAP2 SWAP1 PUSH2 0x24AD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1511 JUMPI PUSH2 0x1511 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x152E JUMPI PUSH2 0x152E PUSH2 0x221E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 ADD PUSH2 0x14E1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1570 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x157C DUP5 PUSH2 0x159B JUMP JUMPDEST SWAP2 POP PUSH1 0x7 SIGNEXTEND SWAP2 POP PUSH1 0x16 PUSH1 0x3 SIGNEXTEND DUP3 EQ DUP1 ISZERO PUSH2 0x1593 JUMPI POP DUP1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x19F37361 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH2 0x167 SWAP2 PUSH2 0x15F5 SWAP2 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x164A JUMPI PUSH1 0x15 PUSH1 0x0 PUSH2 0x165E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x165E SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH1 0x3 SWAP2 SWAP1 SWAP2 SIGNEXTEND SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x7 DUP3 SWAP1 SIGNEXTEND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x167 SWAP1 PUSH4 0xECA36917 PUSH1 0xE0 SHL SWAP1 PUSH1 0xA4 ADD PUSH2 0x51C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 NOT DUP3 ADD PUSH2 0x16E5 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x53554343455353 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD PUSH2 0x171D JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x24A72B20A624A22FAA2920A729A0A1AA24A7A7 PUSH1 0x69 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 NOT DUP3 ADD PUSH2 0x175F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH32 0x50415945525F4143434F554E545F4E4F545F464F554E44000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 NOT DUP3 ADD PUSH2 0x1798 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH20 0x1253959053125117D393D11157D050D0D3D55395 PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 NOT DUP3 ADD PUSH2 0x17D0 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x1514905394D050D51253D397D1561412549151 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 NOT DUP3 ADD PUSH2 0x1812 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x494E56414C49445F5452414E53414354494F4E5F535441525400000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x5 NOT DUP3 ADD PUSH2 0x1854 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x494E56414C49445F5452414E53414354494F4E5F4455524154494F4E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x6 NOT DUP3 ADD PUSH2 0x188A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x494E56414C49445F5349474E4154555245 PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 NOT DUP3 ADD PUSH2 0x18BC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x4D454D4F5F544F4F5F4C4F4E47 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x8 NOT DUP3 ADD PUSH2 0x18F4 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x494E53554646494349454E545F54585F464545 PUSH1 0x68 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x9 NOT DUP3 ADD PUSH2 0x1936 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x494E53554646494349454E545F50415945525F42414C414E4345000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xA NOT DUP3 ADD PUSH2 0x1970 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x222AA82624A1A0AA22AFAA2920A729A0A1AA24A7A7 PUSH1 0x59 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xB NOT DUP3 ADD PUSH2 0x1999 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x42555359 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xC NOT DUP3 ADD PUSH2 0x19CB JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x1393D517D4D5541413D4951151 PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xD NOT DUP3 ADD PUSH2 0x19FF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x1253959053125117D192531157D251 PUSH1 0x8A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xE NOT DUP3 ADD PUSH2 0x1A36 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x1253959053125117D050D0D3D5539517D251 PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xF NOT DUP3 ADD PUSH2 0x1A6E JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x1253959053125117D0D3D395149050D517D251 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x10 NOT DUP3 ADD PUSH2 0x1AA9 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH22 0x1253959053125117D514905394D050D51253D397D251 PUSH1 0x52 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x11 NOT DUP3 ADD PUSH2 0x1ADF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x149150D152541517D393D517D193D55391 PUSH1 0x7A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x12 NOT DUP3 ADD PUSH2 0x1B14 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x149150D3D49117D393D517D193D55391 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x13 NOT DUP3 ADD PUSH2 0x1B4C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x1253959053125117D4D3D3125112551657D251 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1B55 DUP3 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B65 SWAP2 SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x167 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE0F4059A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1BEA SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C27 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1C4F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x15 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C63 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x3 SWAP3 SWAP1 SWAP3 SIGNEXTEND SWAP11 SWAP1 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB4 DUP6 PUSH2 0x1C79 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CC2 PUSH1 0x20 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CD0 PUSH1 0x40 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D27 DUP3 PUSH2 0x1C79 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D6D JUMPI PUSH2 0x1D6D PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D91 DUP4 PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1DD5 PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x1DE7 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1D44 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1DFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E36 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E1E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E57 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1593 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA0 DUP4 PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAE PUSH1 0x20 DUP5 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1F33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F57 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D27 DUP3 PUSH2 0x1F61 JUMP JUMPDEST PUSH32 0x4C594E5820746F6B656E206173736F63696174696F6E206661696C65643A2000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1FC6 DUP2 PUSH1 0x1F DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D27 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x200A PUSH1 0x60 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x98B29CB PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1593 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1593 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x20B9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x209F JUMPI PUSH2 0x209F PUSH2 0x2068 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x20AC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2083 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20D0 JUMPI POP PUSH1 0x1 PUSH2 0x215E JUMP JUMPDEST DUP2 PUSH2 0x20DD JUMPI POP PUSH1 0x0 PUSH2 0x215E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x20F3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x20FD JUMPI PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x215E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x210E JUMPI PUSH2 0x210E PUSH2 0x2068 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x215E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x213C JUMPI POP DUP2 DUP2 EXP PUSH2 0x215E JUMP JUMPDEST PUSH2 0x2146 DUP4 DUP4 PUSH2 0x207E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x215A JUMPI PUSH2 0x215A PUSH2 0x2068 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D27 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x20C1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x215E JUMPI PUSH2 0x215E PUSH2 0x2068 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21AF JUMPI PUSH2 0x21AF PUSH2 0x218A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH32 0x534155434520746F6B656E206173736F63696174696F6E206661696C65643A20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x21EC DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x200A PUSH1 0x60 DUP4 ADD PUSH1 0x5 DUP2 MSTORE PUSH5 0x5341554345 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x546F6B656E206173736F63696174696F6E206661696C65643A20000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x226C DUP2 PUSH1 0x1A DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1A ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x434C585920746F6B656E206173736F63696174696F6E206661696C65643A2000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1FC6 DUP2 PUSH1 0x1F DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x200A PUSH1 0x60 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x434C5859 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x215E PUSH1 0x20 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x98B29CB PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x215E PUSH1 0x20 DUP4 ADD PUSH1 0x5 DUP2 MSTORE PUSH5 0x5341554345 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x215E PUSH1 0x20 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x434C5859 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2395 PUSH1 0x60 DUP4 ADD PUSH1 0x5 DUP2 MSTORE PUSH5 0x5341554345 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2395 PUSH1 0x60 DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH4 0x434C5859 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xA0 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x3A3930B739B332B92A37B5B2B7 PUSH1 0x99 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2420 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x36B4B73A2A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2420 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x2492 JUMPI PUSH2 0x2492 PUSH2 0x2068 JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24A8 JUMPI PUSH2 0x24A8 PUSH2 0x218A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215E PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x24CF JUMPI PUSH2 0x24CF PUSH2 0x2068 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215E PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2506 DUP4 PUSH2 0x1F61 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x251B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH14 0x554E4B4E4F574E5F4552524F525F PUSH1 0x90 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x254F DUP2 PUSH1 0xE DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0xE ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE PUSH1 0x20 DUP6 PUSH1 0x7 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP PUSH1 0x80 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP PUSH1 0x20 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25CB JUMPI PUSH1 0x7F NOT DUP9 DUP8 SUB ADD DUP5 MSTORE PUSH2 0x25B9 DUP7 DUP4 MLOAD PUSH2 0x1E3F JUMP JUMPDEST SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x259D JUMP JUMPDEST POP SWAP4 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x260A DUP5 PUSH2 0x1F61 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 PUSH2 0x2619 DUP2 DUP7 ADD PUSH2 0x25DA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x264A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x265C JUMPI PUSH2 0x265C PUSH2 0x1D2E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x266D DUP5 DUP4 ADD PUSH2 0x1D44 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x2687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x26AC JUMPI PUSH2 0x269D DUP6 PUSH2 0x25DA JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x268C JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID 0xCA DIV 0x26 SWAP11 0xAF 0xA6 0xB8 SWAP13 0xED PUSH7 0x31D9643F3D6136 PUSH14 0xD8E5ABF65031BAE59D640E2AB64F 0xE8 0xE9 0x2E LOG3 PC SIGNEXTEND 0xC 0xA9 0x22 0xD0 0xBA 0x2E 0xAB JUMP DUP1 PUSH11 0x32481C0B7FB44CE303C6E8 0xEE 0xD6 0xAD LOG3 JUMP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xA5 0x1F 0xD5 POP BASEFEE 0xE3 0x4C PUSH7 0xFFC9E33A5B3D15 SLT 0xB4 0xB6 SWAP10 OR SWAP8 LOG1 DUP14 PUSH17 0x7A5D13DB42041364736F6C634300081800 CALLER ","sourceMap":"339:15281:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18727:407:2;;;;;;;;;;-1:-1:-1;18727:407:2;;;;;:::i;:::-;;:::i;:::-;;;771:1:4;760:21;;;;742:40;;730:2;715:18;18727:407:2;;;;;;;;2612:235:0;;;;;;;;;;-1:-1:-1;2612:235:0;;;2733:4;961:41:4;;2834:5:0;1033:2:4;1018:18;;1011:60;934:18;2612:235:0;793:284:4;536:24:0;;;;;;;;;;-1:-1:-1;536:24:0;;;;-1:-1:-1;;;;;536:24:0;;;;;;-1:-1:-1;;;;;1246:32:4;;;1228:51;;1216:2;1201:18;536:24:0;1082:203:4;8425:296:0;;;;;;:::i;:::-;;:::i;:::-;;841:39;;;;;;;;;;;;878:2;841:39;;;;;1757:25:4;;;1745:2;1730:18;841:39:0;1611:177:4;3893:633:0;;;;;;;;;;-1:-1:-1;3893:633:0;;;;;:::i;:::-;;:::i;1092:39::-;;;;;;;;;;;;1130:1;1092:39;;;;;2156:4:4;2144:17;;;2126:36;;2114:2;2099:18;1092:39:0;1984:184:4;41785:517:2;;;;;;;;;;-1:-1:-1;41785:517:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6782:381:0:-;;;;;;;;;;;;;:::i;:::-;;;;4457:14:4;;4450:22;4432:41;;4516:14;;4509:22;4504:2;4489:18;;4482:50;4575:14;4568:22;4548:18;;;4541:50;4420:2;4405:18;6782:381:0;4248:349:4;5883:264:0;;;;;;;;;;-1:-1:-1;5883:264:0;;;;;:::i;:::-;;:::i;12119:103::-;;;;;;;;;;-1:-1:-1;12194:21:0;12119:103;;2940:764;;;;;;;;;;-1:-1:-1;2940:764:0;;;;;:::i;:::-;;:::i;:::-;;;;5111:14:4;;5104:22;5086:41;;5158:2;5143:18;;5136:34;;;;5186:18;;;5179:34;5256:14;5249:22;5244:2;5229:18;;5222:50;5073:3;5058:19;2940:764:0;4867:411:4;774:38:0;;;;;;;;;;;;811:1;774:38;;7751:583;;;;;;;;;;-1:-1:-1;7751:583:0;;;;;:::i;:::-;;:::i;:::-;;;;5670:25:4;;;5726:2;5711:18;;5704:34;;;;5754:18;;;5747:34;5658:2;5643:18;7751:583:0;5468:319:4;1022:39:0;;;;;;;;;;;;1060:1;1022:39;;4536:644;;;;;;;;;;-1:-1:-1;4536:644:0;;;;;:::i;:::-;;:::i;19660:425:2:-;;;;;;;;;;-1:-1:-1;19660:425:2;;;;;:::i;:::-;;:::i;6251:444:0:-;;;;;;;;;;-1:-1:-1;6251:444:0;;;;;:::i;:::-;;:::i;5190:633::-;;;;;;;;;;-1:-1:-1;5190:633:0;;;;;:::i;:::-;;:::i;12294:193::-;;;;;;;;;;-1:-1:-1;12294:193:0;;;;;:::i;:::-;;:::i;474:25::-;;;;;;;;;;-1:-1:-1;474:25:0;;;;-1:-1:-1;;;;;474:25:0;;;706:39;;;;;;;;;;;;744:1;706:39;;418:24;;;;;;;;;;-1:-1:-1;418:24:0;;;;-1:-1:-1;;;;;418:24:0;;;624:20;;;;;;;;;;-1:-1:-1;624:20:0;;;;-1:-1:-1;;;;;624:20:0;;;18727:407:2;18932:102;;-1:-1:-1;;;;;6699:15:4;;;18932:102:2;;;6681:34:4;6751:15;;;6731:18;;;6724:43;6803:15;;6783:18;;;6776:43;6835:18;;;6828:34;;;18824:18:2;;;;;;267:5;;-1:-1:-1;;;18955:41:2;6615:19:4;;18932:102:2;;;;-1:-1:-1;;18932:102:2;;;;;;;;;;;;;;-1:-1:-1;;;;;18932:102:2;-1:-1:-1;;;;;;18932:102:2;;;;;;;;;;18896:139;;;;18932:102;18896:139;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18858:177;;;;19060:7;:67;;3145:2:1;19060:67:2;;;19081:6;19070:27;;;;;;;;;;;;:::i;:::-;19045:82;;;18727:407;-1:-1:-1;;;;;;;18727:407:2:o;8425:296:0:-;8569:56;8589:10;8601:11;8614:10;8569:19;:56::i;:::-;8635:41;8652:11;8665:10;8635:16;:41::i;:::-;8686:28;8703:10;8686:16;:28::i;:::-;8425:296;;;:::o;3893:633::-;2425:5;;-1:-1:-1;;;;;2425:5:0;2411:10;:19;2407:43;;2439:11;;-1:-1:-1;;;2439:11:0;;;;;;;;;;;2407:43;3964:21:::1;3988:9:::0;;-1:-1:-1;;;;;4007:22:0;;::::1;-1:-1:-1::0;;;;;;4007:22:0;::::1;::::0;::::1;::::0;;;3988:9:::1;::::0;4132:24;4128:318:::1;;4172:12;4187:41;4210:4;4217:10;4187:14;:41::i;:::-;4247:39;::::0;;-1:-1:-1;;;;;7733:32:4;;7715:51;;7797:2;7782:18;;7775:34;;;4172:56:0;;-1:-1:-1;;;;;;;;;;;;4247:39:0;7688:18:4;4247:39:0::1;;;;;;;3222:2:1;4308:39:0::0;::::1;4408:24;4308:8:::0;4408:14:::1;:24::i;:::-;4356:77;;;;;;;;:::i;:::-;;;;;;;;;;;;;4300:135;;;;;-1:-1:-1::0;;;4300:135:0::1;;;;;;;;:::i;:::-;;;;;;;;;;4158:288;4128:318;4469:50;4493:13;4508:10;4469:50;;;;;;;:::i;:::-;;;;;;;;3954:572;3893:633:::0;:::o;41785:517:2:-;41882:16;41900:21;41934:12;41948:19;267:5;-1:-1:-1;;;;;41971:22:2;42030:45;;;42077:5;42084:23;42007:101;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;42007:101:2;;;;;;;;;;;;;;-1:-1:-1;;;;;42007:101:2;-1:-1:-1;;;;;;42007:101:2;;;;;;;;;;41971:147;;;;42007:101;41971:147;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41933:185;;;;42134:34;42152:7;42161:6;42134:34;;;;;;;:::i;:::-;;;;;;;;42205:7;:90;;3145:2:1;42285:9:2;;;;;;;;;;;;42205:90;;;3222:2:1;42245:6:2;42205:90;42178:117;;;;;;;;-1:-1:-1;41785:517:2;-1:-1:-1;;;;;41785:517:2:o;6782:381:0:-;7009:10;;6841:28;;;;;;6986:34;;-1:-1:-1;;;;;7009:10:0;6986:22;:34::i;:::-;7078:9;;6960:60;;-1:-1:-1;7055:33:0;;-1:-1:-1;;;;;7078:9:0;7055:22;:33::i;:::-;7146:9;;7030:58;;-1:-1:-1;7123:33:0;;-1:-1:-1;;;;;7146:9:0;7123:22;:33::i;:::-;7098:58;;6782:381;;;:::o;5883:264::-;2425:5;;-1:-1:-1;;;;;2425:5:0;2411:10;:19;2407:43;;2439:11;;-1:-1:-1;;;2439:11:0;;;;;;;;;;;2407:43;-1:-1:-1;;;;;5961:22:0;::::1;5953:66;;;::::0;-1:-1:-1;;;5953:66:0;;9973:2:4;5953:66:0::1;::::0;::::1;9955:21:4::0;10012:2;9992:18;;;9985:30;10051:33;10031:18;;;10024:61;10102:18;;5953:66:0::1;9771:355:4::0;5953:66:0::1;6053:5;::::0;;-1:-1:-1;;;;;6068:16:0;;::::1;-1:-1:-1::0;;;;;;6068:16:0;::::1;::::0;::::1;::::0;;;6099:41:::1;::::0;;6053:5;;;::::1;10343:34:4::0;;;10408:2;10393:18;;10386:43;;;;6099:41:0::1;::::0;10278:18:4;6099:41:0::1;10131:304:4::0;2940:764:0;3026:17;3053:15;3078:17;3105;3211;3230:16;3250:14;3258:5;3250:7;:14::i;:::-;3210:54;;;;;;3222:2:1;3290:44:0;;:13;:44;:59;;;;;3338:11;3290:59;3274:76;;3373:12;3369:329;;;3515:4;3500:19;;3659:1;3649:11;;3686:1;3674:13;;3369:329;3129:575;;2940:764;;;;;;;:::o;7751:583::-;7856:21;;;8139:17;1130:1;8139:2;:17;:::i;:::-;8117:18;990:1;8117:2;:18;:::i;:::-;8090:24;744:1;8090:10;:24;:::i;:::-;:45;;;;:::i;:::-;8089:67;;;;:::i;:::-;8073:83;-1:-1:-1;8229:17:0;1130:1;8229:2;:17;:::i;:::-;8208;1060:1;8208:2;:17;:::i;:::-;8182:23;811:1;8182:10;:23;:::i;:::-;:43;;;;:::i;:::-;8181:65;;;;:::i;:::-;8166:80;-1:-1:-1;8271:23:0;878:2;8271:10;:23;:::i;:::-;7751:583;;;;-1:-1:-1;;7751:583:0:o;4536:644::-;2425:5;;-1:-1:-1;;;;;2425:5:0;2411:10;:19;2407:43;;2439:11;;-1:-1:-1;;;2439:11:0;;;;;;;;;;;2407:43;4633:10:::1;::::0;;-1:-1:-1;;;;;4653:24:0;;::::1;-1:-1:-1::0;;;;;;4653:24:0;::::1;::::0;::::1;::::0;;;4633:10:::1;::::0;4780:25;4776:322:::1;;4821:12;4836:42;4859:4;4866:11;4836:14;:42::i;:::-;4897:40;::::0;;-1:-1:-1;;;;;7733:32:4;;7715:51;;7797:2;7782:18;;7775:34;;;4821:57:0;;-1:-1:-1;;;;;;;;;;;;4897:40:0;7688:18:4;4897:40:0::1;;;;;;;3222:2:1;4959:39:0::0;::::1;5060:24;4959:8:::0;5060:14:::1;:24::i;:::-;5007:78;;;;;;;;:::i;:::-;;;;;;;;;;;;;4951:136;;;;;-1:-1:-1::0;;;4951:136:0::1;;;;;;;;:::i;:::-;;4807:291;4776:322;5121:52;5146:13;5161:11;5121:52;;;;;;;:::i;19660:425:2:-:0;19874:111;;-1:-1:-1;;;;;6699:15:4;;;19874:111:2;;;6681:34:4;6751:15;;;6731:18;;;6724:43;6803:15;;6783:18;;;6776:43;6835:18;;;6828:34;;;19766:18:2;;;;;;267:5;;-1:-1:-1;;;19897:44:2;6615:19:4;;19874:111:2;6412:456:4;6251:444:0;2425:5;;-1:-1:-1;;;;;2425:5:0;2411:10;:19;2407:43;;2439:11;;-1:-1:-1;;;2439:11:0;;;;;;;;;;;2407:43;6345:9:::1;6340:349;6360:25:::0;;::::1;6340:349;;;6406:12;6421:48;6444:4;6451:14;;6466:1;6451:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6421:14;:48::i;:::-;6406:63;;-1:-1:-1::0;;;;;;;;;;;6506:14:0::1;;6521:1;6506:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6488:46;::::0;;-1:-1:-1;;;;;7733:32:4;;;7715:51;;7797:2;7782:18;;7775:34;;;7688:18;6488:46:0::1;;;;;;;3222:2:1;6556:39:0::0;::::1;6651:24;6556:8:::0;6651:14:::1;:24::i;:::-;6604:72;;;;;;;;:::i;:::-;;;;;;;;;;;;;6548:130;;;;;-1:-1:-1::0;;;6548:130:0::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;6387:3:0::1;;6340:349;;5190:633:::0;2425:5;;-1:-1:-1;;;;;2425:5:0;2411:10;:19;2407:43;;2439:11;;-1:-1:-1;;;2439:11:0;;;;;;;;;;;2407:43;5285:9:::1;::::0;;-1:-1:-1;;;;;5304:22:0;;::::1;-1:-1:-1::0;;;;;;5304:22:0;::::1;::::0;::::1;::::0;;;5285:9:::1;::::0;5429:24;5425:318:::1;;5469:12;5484:41;5507:4;5514:10;5484:14;:41::i;:::-;5544:39;::::0;;-1:-1:-1;;;;;7733:32:4;;7715:51;;7797:2;7782:18;;7775:34;;;5469:56:0;;-1:-1:-1;;;;;;;;;;;;5544:39:0;7688:18:4;5544:39:0::1;;;;;;;3222:2:1;5605:39:0::0;::::1;5705:24;5605:8:::0;5705:14:::1;:24::i;:::-;5653:77;;;;;;;;:::i;:::-;;;;;;;;;;;;;5597:135;;;;;-1:-1:-1::0;;;5597:135:0::1;;;;;;;;:::i;:::-;;5455:288;5425:318;5766:50;5790:13;5805:10;5766:50;;;;;;;:::i;12294:193::-:0;2425:5;;-1:-1:-1;;;;;2425:5:0;2411:10;:19;2407:43;;2439:11;;-1:-1:-1;;;2439:11:0;;;;;;;;;;;2407:43;12388:21:::1;12378:6;:31;;12370:69;;;::::0;-1:-1:-1;;;12370:69:0;;15386:2:4;12370:69:0::1;::::0;::::1;15368:21:4::0;15425:2;15405:18;;;15398:30;15464:27;15444:18;;;15437:55;15509:18;;12370:69:0::1;15184:349:4::0;12370:69:0::1;12457:5;::::0;12449:31:::1;::::0;-1:-1:-1;;;;;12457:5:0;;::::1;::::0;12449:31;::::1;;;::::0;12473:6;;12457:5:::1;12449:31:::0;12457:5;12449:31;12473:6;12457:5;12449:31;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;12294:193:::0;:::o;8801:976::-;8949:10;8963:1;8949:15;8945:43;;8973:15;;-1:-1:-1;;;8973:15:0;;;;;;;;;;;8945:43;9023:1;9002:9;-1:-1:-1;;;;;9002:9:0;8998:55;;9034:19;;-1:-1:-1;;;9034:19:0;;;;;;;:::i;8998:55::-;9067:10;;-1:-1:-1;;;;;9067:10:0;9063:57;;9100:20;;-1:-1:-1;;;9100:20:0;;;;;;;:::i;9063:57::-;9134:9;;-1:-1:-1;;;;;9134:9:0;9130:55;;9166:19;;-1:-1:-1;;;9166:19:0;;;;;;;:::i;9130:55::-;9312:42;;-1:-1:-1;;;9312:42:0;;;;;1757:25:4;;;9243:21:0;;;;;;9312:4;;:30;;1730:18:4;;9312:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9242:112;;;;;;9420:13;9406:11;:27;9402:121;;;9485:13;9500:11;9456:56;;-1:-1:-1;;;9456:56:0;;;;;;;;;:::i;9402:121::-;9549:12;9536:10;:25;9532:116;;;9612:12;9626:10;9584:53;;-1:-1:-1;;;9584:53:0;;;;;;;;;:::i;9532:116::-;9673:12;9661:9;:24;9657:114;;;9708:52;;-1:-1:-1;;;9708:52:0;;17801:2:4;9708:52:0;;;;17783:21:4;;;;17820:18;;;17813:29;-1:-1:-1;;;17858:19:4;;;17851:35;17938:20;;;17931:36;;;9750:9:0;17983:18:4;;;17976:34;17903:19;;9708:52:0;17543:473:4;9657:114:0;8935:842;;;8801:976;;;:::o;9889:1086::-;10100:10;;10060:23;;10086:80;;-1:-1:-1;;;;;10100:10:0;10112;10132:4;10152:11;10086:13;:80::i;:::-;10217:10;;10060:106;;-1:-1:-1;;;;;;;;;;;;10181:122:0;-1:-1:-1;;;;;10217:10:0;10229;10060:106;10262:40;10060:106;10262:19;:40::i;:::-;10181:122;;;;;;;;;:::i;:::-;;;;;;;;3222:2:1;10317:50:0;;10313:111;;10390:23;;-1:-1:-1;;;10390:23:0;;;;;;;:::i;10313:111::-;10565:9;;10526:22;;10551:78;;-1:-1:-1;;;;;10565:9:0;10576:10;10596:4;10616:10;10551:13;:78::i;:::-;10680:9;;10526:103;;-1:-1:-1;;;;;;;;;;;;10644:119:0;-1:-1:-1;;;;;10680:9:0;10691:10;10526:103;10723:39;10526:103;10723:19;:39::i;:::-;10644:119;;;;;;;;;:::i;:::-;;;;;;;;3222:2:1;10777:49:0;;10773:109;;10849:22;;-1:-1:-1;;;10849:22:0;;;;;;;:::i;10773:109::-;10905:63;;;5670:25:4;;;5726:2;5711:18;;5704:34;;;10958:9:0;5754:18:4;;;5747:34;;;;10921:10:0;;10905:63;;5658:2:4;5643:18;10905:63:0;;;;;;;;9965:1010;;9889:1086;;:::o;11090:963::-;11231:14;;;11205:23;11231:14;;;;;;;;;11205:23;11231:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;11256:14:0;11288:9;;11205:40;;-1:-1:-1;11256:14:0;11278:57;;-1:-1:-1;;;;;11288:9:0;11312:10;11205:40;11278:9;:57::i;:::-;-1:-1:-1;;11382:9:0;;11255:80;;-1:-1:-1;;;;;;;;;;;;11350:102:0;-1:-1:-1;;;;;11382:9:0;11401:4;11255:80;11420:31;11255:80;11420:19;:31::i;:::-;11350:102;;;;;;;;;:::i;:::-;;;;;;;;3222:2:1;11466:41:0;;11462:101;;11530:22;;-1:-1:-1;;;11530:22:0;;;;;1757:25:4;;;1730:18;;11530:22:0;1611:177:4;11462:101:0;11649:18;11684:9;;11670:78;;-1:-1:-1;;;;;11684:9:0;11703:4;11710:10;11735;11670:13;:78::i;:::-;11799:9;;11649:99;;-1:-1:-1;;;;;;;;;;;;11763:111:0;-1:-1:-1;;;;;11799:9:0;11810:10;11649:99;11838:35;11649:99;11838:19;:35::i;:::-;11763:111;;;;;;;;;:::i;:::-;;;;;;;;3222:2:1;11888:45:0;;11884:105;;11956:22;;-1:-1:-1;;;11956:22:0;;;;;;;:::i;11884:105::-;12012:34;;1757:25:4;;;12023:10:0;;12012:34;;1745:2:4;1730:18;12012:34:0;1611:177:4;6352:371:2;6528:95;;;-1:-1:-1;;;;;10361:15:4;;;6528:95:2;;;10343:34:4;10413:15;;10393:18;;;;10386:43;;;;6528:95:2;;;;;;;;;;10278:18:4;;;;6528:95:2;;;;;;;-1:-1:-1;;;;;6528:95:2;-1:-1:-1;;;6528:95:2;;;6492:132;;-1:-1:-1;;;;;;267:5:2;;6492:132;;6528:95;6492:132;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6454:170;;;;6649:7;:67;;3145:2:1;6649:67:2;;;6670:6;6659:27;;;;;;;;;;;;:::i;:::-;6634:82;;;6352:371;-1:-1:-1;;;;;6352:371:2:o;14878:740:0:-;14936:13;14965:5;14974:1;14965:10;14961:26;;-1:-1:-1;;14977:10:0;;;;;;;;;;;;-1:-1:-1;;;14977:10:0;;;;;14878:740::o;14961:26::-;15006:13;15022:9;;;;;15057:37;;15088:5;15057:37;;;15073:6;15074:5;15073:6;:::i;:::-;15135:13;;;15145:2;15135:13;;;;;;;;;15041:53;;-1:-1:-1;15113:19:0;;15135:13;;;;;;;;;;;-1:-1:-1;;15113:35:0;-1:-1:-1;15174:2:0;15195:126;15202:13;;15195:126;;15267:13;15278:2;15267:8;:13;:::i;:::-;15262:18;;:2;:18;:::i;:::-;15249:33;;15231:6;15238:7;;;;:::i;:::-;;;15231:15;;;;;;;;:::i;:::-;;;;:51;-1:-1:-1;;;;;15231:51:0;;;;;;;;-1:-1:-1;15296:14:0;15308:2;15296:14;;:::i;:::-;;;15195:126;;;15343:8;15339:60;;;-1:-1:-1;;;15367:6:0;15374:7;;;;:::i;:::-;;;15367:15;;;;;;;;:::i;:::-;;;;:21;-1:-1:-1;;;;;15367:21:0;;;;;;;;;15339:60;15417:19;15449:10;15454:5;15449:2;:10;:::i;:::-;15439:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15439:21:0;;15417:43;;15475:9;15470:102;15494:6;:13;15490:1;:17;15470:102;;;15540:6;15559:1;15547:9;:5;15555:1;15547:9;:::i;:::-;:13;;;;:::i;:::-;15540:21;;;;;;;;:::i;:::-;;;;;;;;;15528:6;15535:1;15528:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;15528:33:0;;;;;;;;-1:-1:-1;15509:3:0;;15470:102;;;-1:-1:-1;15604:6:0;14878:740;-1:-1:-1;;;;;;14878:740:0:o;7277:358::-;7342:4;-1:-1:-1;;;;;7362:19:0;;7358:37;;-1:-1:-1;7390:5:0;;7277:358;-1:-1:-1;7277:358:0:o;7358:37::-;7509:12;7523:16;7543:14;7551:5;7543:7;:14::i;:::-;7508:49;;;;;;3222:2:1;7574:39:0;;:8;:39;:54;;;;;7617:11;7574:54;7567:61;7277:358;-1:-1:-1;;;;7277:358:0:o;38238:369:2:-;38410:67;;;-1:-1:-1;;;;;1246:32:4;;38410:67:2;;;;1228:51:4;;;;38410:67:2;;;;;;;;;;1201:18:4;;;;38410:67:2;;;;;;;-1:-1:-1;;;;;38410:67:2;-1:-1:-1;;;38410:67:2;;;38374:104;;38288:18;;;;;;;;267:5;;38374:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38336:142;;;;38518:7;:82;;3145:2:1;38594:5:2;38518:82;;;38539:6;38528:33;;;;;;;;;;;;:::i;:::-;38488:112;;;;;;;;-1:-1:-1;38238:369:2;-1:-1:-1;;;;38238:369:2:o;32052:425::-;32266:111;;-1:-1:-1;;;;;20964:15:4;;;32266:111:2;;;20946:34:4;21016:15;;;20996:18;;;20989:43;21068:15;;21048:18;;;21041:43;21131:1;21120:21;;;21100:18;;;21093:49;32160:16:2;;;;;;267:5;;-1:-1:-1;;;32289:42:2;20880:19:4;;32266:111:2;20681:467:4;12562:2222:0;12632:13;-1:-1:-1;;12661:43:0;;12657:65;;-1:-1:-1;;12706:16:0;;;;;;;;;;;;-1:-1:-1;;;12706:16:0;;;;;12562:2222::o;12657:65::-;-1:-1:-1;;12736:55:0;;12732:89;;-1:-1:-1;;12793:28:0;;;;;;;;;;;;-1:-1:-1;;;12793:28:0;;;;;12562:2222::o;12732:89::-;-1:-1:-1;;12835:59:0;;12831:97;;-1:-1:-1;;12896:32:0;;;;;;;;;;;;;;;;;;12562:2222::o;12831:97::-;-1:-1:-1;;12942:56:0;;12938:91;;-1:-1:-1;;13000:29:0;;;;;;;;;;;;-1:-1:-1;;;13000:29:0;;;;;12562:2222::o;12938:91::-;-1:-1:-1;;13043:55:0;;13039:89;;-1:-1:-1;;13100:28:0;;;;;;;;;;;;-1:-1:-1;;;13100:28:0;;;;;12562:2222::o;13039:89::-;-1:-1:-1;;13142:61:0;;13138:101;;-1:-1:-1;;13205:34:0;;;;;;;;;;;;;;;;;;12562:2222::o;13138:101::-;-1:-1:-1;;13253:64:0;;13249:107;;-1:-1:-1;;13319:37:0;;;;;;;;;;;;;;;;;;12562:2222::o;13249:107::-;-1:-1:-1;;13370:53:0;;13366:85;;-1:-1:-1;;13425:26:0;;;;;;;;;;;;-1:-1:-1;;;13425:26:0;;;;;12562:2222::o;13366:85::-;-1:-1:-1;;13465:49:0;;13461:77;;-1:-1:-1;;13516:22:0;;;;;;;;;;;;-1:-1:-1;;;13516:22:0;;;;;12562:2222::o;13461:77::-;-1:-1:-1;;13552:55:0;;13548:89;;-1:-1:-1;;13609:28:0;;;;;;;;;;;;-1:-1:-1;;;13609:28:0;;;;;12562:2222::o;13548:89::-;-1:-1:-1;;13651:62:0;;13647:103;;-1:-1:-1;;13715:35:0;;;;;;;;;;;;;;;;;;12562:2222::o;13647:103::-;-1:-1:-1;;13764:57:0;;13760:93;;-1:-1:-1;;13823:30:0;;;;;;;;;;;;-1:-1:-1;;;13823:30:0;;;;;12562:2222::o;13760:93::-;-1:-1:-1;;13867:40:0;;13863:59;;-1:-1:-1;;13909:13:0;;;;;;;;;;;;-1:-1:-1;;;13909:13:0;;;;;12562:2222::o;13863:59::-;-1:-1:-1;;13936:49:0;;13932:77;;-1:-1:-1;;13987:22:0;;;;;;;;;;;;-1:-1:-1;;;13987:22:0;;;;;12562:2222::o;13932:77::-;-1:-1:-1;;14023:51:0;;14019:81;;-1:-1:-1;;14076:24:0;;;;;;;;;;;;-1:-1:-1;;;14076:24:0;;;;;12562:2222::o;14019:81::-;-1:-1:-1;;14114:54:0;;14110:87;;-1:-1:-1;;14170:27:0;;;;;;;;;;;;-1:-1:-1;;;14170:27:0;;;;;12562:2222::o;14110:87::-;-1:-1:-1;;14211:55:0;;14207:89;;-1:-1:-1;;14268:28:0;;;;;;;;;;;;-1:-1:-1;;;14268:28:0;;;;;12562:2222::o;14207:89::-;-1:-1:-1;;14310:58:0;;14306:95;;-1:-1:-1;;14370:31:0;;;;;;;;;;;;-1:-1:-1;;;14370:31:0;;;;;12562:2222::o;14306:95::-;-1:-1:-1;;14415:53:0;;14411:85;;-1:-1:-1;;14470:26:0;;;;;;;;;;;;-1:-1:-1;;;14470:26:0;;;;;12562:2222::o;14411:85::-;-1:-1:-1;;14510:52:0;;14506:83;;-1:-1:-1;;14564:25:0;;;;;;;;;;;;-1:-1:-1;;;14564:25:0;;;;;12562:2222::o;14506:83::-;-1:-1:-1;;14603:55:0;;14599:89;;-1:-1:-1;;14660:28:0;;;;;;;;;;;;-1:-1:-1;;;14660:28:0;;;;;12562:2222::o;14599:89::-;14747:28;14762:12;14747:14;:28::i;:::-;14712:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;14698:79;;12562:2222;;;:::o;2545:553:2:-;2640:16;2658:20;2680:28;2725:12;2739:19;267:5;-1:-1:-1;;;;;2762:22:2;2821:38;;;2873:5;2880:6;2888:8;2798:99;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2798:99:2;;;;;;;;;;;;;;-1:-1:-1;;;;;2798:99:2;-1:-1:-1;;;;;;2798:99:2;;;;;;;;;;2762:136;;;;2798:99;2762:136;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2724:174;;;;2964:7;:127;;3076:14;;;3072:1;3076:14;;;;;;;;;3145:2:1;;3072:1:2;2964:127;;;2993:6;2982:43;;;;;;;;;;;;:::i;:::-;2908:183;;;;;;;;-1:-1:-1;2908:183:2;;-1:-1:-1;2545:553:2;-1:-1:-1;;;;;;2545:553:2:o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:403::-;278:6;286;294;302;355:3;343:9;334:7;330:23;326:33;323:53;;;372:1;369;362:12;323:53;395:29;414:9;395:29;:::i;:::-;385:39;;443:38;477:2;466:9;462:18;443:38;:::i;:::-;433:48;;500:38;534:2;523:9;519:18;500:38;:::i;:::-;192:403;;;;-1:-1:-1;490:48:4;;585:2;570:18;557:32;;-1:-1:-1;;192:403:4:o;1290:316::-;1367:6;1375;1383;1436:2;1424:9;1415:7;1411:23;1407:32;1404:52;;;1452:1;1449;1442:12;1404:52;-1:-1:-1;;1475:23:4;;;1545:2;1530:18;;1517:32;;-1:-1:-1;1596:2:4;1581:18;;;1568:32;;1290:316;-1:-1:-1;1290:316:4:o;1793:186::-;1852:6;1905:2;1893:9;1884:7;1880:23;1876:32;1873:52;;;1921:1;1918;1911:12;1873:52;1944:29;1963:9;1944:29;:::i;:::-;1934:39;1793:186;-1:-1:-1;;;1793:186:4:o;2173:127::-;2234:10;2229:3;2225:20;2222:1;2215:31;2265:4;2262:1;2255:15;2289:4;2286:1;2279:15;2305:275;2376:2;2370:9;2441:2;2422:13;;-1:-1:-1;;2418:27:4;2406:40;;2476:18;2461:34;;2497:22;;;2458:62;2455:88;;;2523:18;;:::i;:::-;2559:2;2552:22;2305:275;;-1:-1:-1;2305:275:4:o;2585:837::-;2662:6;2670;2723:2;2711:9;2702:7;2698:23;2694:32;2691:52;;;2739:1;2736;2729:12;2691:52;2762:29;2781:9;2762:29;:::i;:::-;2752:39;;2810:2;2863;2852:9;2848:18;2835:32;2886:18;2927:2;2919:6;2916:14;2913:34;;;2943:1;2940;2933:12;2913:34;2981:6;2970:9;2966:22;2956:32;;3026:7;3019:4;3015:2;3011:13;3007:27;2997:55;;3048:1;3045;3038:12;2997:55;3084:2;3071:16;3106:2;3102;3099:10;3096:36;;;3112:18;;:::i;:::-;3154:53;3197:2;3178:13;;-1:-1:-1;;3174:27:4;3170:36;;3154:53;:::i;:::-;3141:66;;3230:2;3223:5;3216:17;3270:7;3265:2;3260;3256;3252:11;3248:20;3245:33;3242:53;;;3291:1;3288;3281:12;3242:53;3346:2;3341;3337;3333:11;3328:2;3321:5;3317:14;3304:45;3390:1;3385:2;3380;3373:5;3369:14;3365:23;3358:34;;3411:5;3401:15;;;;;2585:837;;;;;:::o;3427:250::-;3512:1;3522:113;3536:6;3533:1;3530:13;3522:113;;;3612:11;;;3606:18;3593:11;;;3586:39;3558:2;3551:10;3522:113;;;-1:-1:-1;;3669:1:4;3651:16;;3644:27;3427:250::o;3682:270::-;3723:3;3761:5;3755:12;3788:6;3783:3;3776:19;3804:76;3873:6;3866:4;3861:3;3857:14;3850:4;3843:5;3839:16;3804:76;:::i;:::-;3934:2;3913:15;-1:-1:-1;;3909:29:4;3900:39;;;;3941:4;3896:50;;3682:270;-1:-1:-1;;3682:270:4:o;3957:286::-;4130:6;4119:9;4112:25;4173:2;4168;4157:9;4153:18;4146:30;4093:4;4193:44;4233:2;4222:9;4218:18;4210:6;4193:44;:::i;4602:260::-;4670:6;4678;4731:2;4719:9;4710:7;4706:23;4702:32;4699:52;;;4747:1;4744;4737:12;4699:52;4770:29;4789:9;4770:29;:::i;:::-;4760:39;;4818:38;4852:2;4841:9;4837:18;4818:38;:::i;:::-;4808:48;;4602:260;;;;;:::o;5283:180::-;5342:6;5395:2;5383:9;5374:7;5370:23;5366:32;5363:52;;;5411:1;5408;5401:12;5363:52;-1:-1:-1;5434:23:4;;5283:180;-1:-1:-1;5283:180:4:o;5792:615::-;5878:6;5886;5939:2;5927:9;5918:7;5914:23;5910:32;5907:52;;;5955:1;5952;5945:12;5907:52;5995:9;5982:23;6024:18;6065:2;6057:6;6054:14;6051:34;;;6081:1;6078;6071:12;6051:34;6119:6;6108:9;6104:22;6094:32;;6164:7;6157:4;6153:2;6149:13;6145:27;6135:55;;6186:1;6183;6176:12;6135:55;6226:2;6213:16;6252:2;6244:6;6241:14;6238:34;;;6268:1;6265;6258:12;6238:34;6321:7;6316:2;6306:6;6303:1;6299:14;6295:2;6291:23;6287:32;6284:45;6281:65;;;6342:1;6339;6332:12;6281:65;6373:2;6365:11;;;;;6395:6;;-1:-1:-1;5792:615:4;;-1:-1:-1;;;;5792:615:4:o;6873:287::-;7002:3;7040:6;7034:13;7056:66;7115:6;7110:3;7103:4;7095:6;7091:17;7056:66;:::i;:::-;7138:16;;;;;6873:287;-1:-1:-1;;6873:287:4:o;7165:164::-;7242:13;;7295:1;7284:20;;;7274:31;;7264:59;;7319:1;7316;7309:12;7334:204;7402:6;7455:2;7443:9;7434:7;7430:23;7426:32;7423:52;;;7471:1;7468;7461:12;7423:52;7494:38;7522:9;7494:38;:::i;7820:463::-;8082:33;8077:3;8070:46;8052:3;8145:6;8139:13;8161:75;8229:6;8224:2;8219:3;8215:12;8208:4;8200:6;8196:17;8161:75;:::i;:::-;8256:16;;;;8274:2;8252:25;;7820:463;-1:-1:-1;;7820:463:4:o;8288:219::-;8437:2;8426:9;8419:21;8400:4;8457:44;8497:2;8486:9;8482:18;8474:6;8457:44;:::i;8669:475::-;8927:2;8916:9;8909:21;8890:4;8947:49;8992:2;8981:9;8977:18;8589:1;8577:14;;-1:-1:-1;;;8616:4:4;8607:14;;8600:30;8655:2;8646:12;;8512:152;8947:49;-1:-1:-1;;;;;9070:15:4;;;9065:2;9050:18;;9043:43;9122:15;;;;9117:2;9102:18;;;9095:43;8939:57;8669:475;-1:-1:-1;8669:475:4:o;9149:314::-;-1:-1:-1;;;;;9324:32:4;;9306:51;;9393:2;9388;9373:18;;9366:30;;;-1:-1:-1;;9413:44:4;;9438:18;;9430:6;9413:44;:::i;9468:298::-;9651:6;9644:14;9637:22;9626:9;9619:41;9696:2;9691;9680:9;9676:18;9669:30;9600:4;9716:44;9756:2;9745:9;9741:18;9733:6;9716:44;:::i;10440:127::-;10501:10;10496:3;10492:20;10489:1;10482:31;10532:4;10529:1;10522:15;10556:4;10553:1;10546:15;10572:416;10661:1;10698:5;10661:1;10712:270;10733:7;10723:8;10720:21;10712:270;;;10792:4;10788:1;10784:6;10780:17;10774:4;10771:27;10768:53;;;10801:18;;:::i;:::-;10851:7;10841:8;10837:22;10834:55;;;10871:16;;;;10834:55;10950:22;;;;10910:15;;;;10712:270;;;10716:3;10572:416;;;;;:::o;10993:806::-;11042:5;11072:8;11062:80;;-1:-1:-1;11113:1:4;11127:5;;11062:80;11161:4;11151:76;;-1:-1:-1;11198:1:4;11212:5;;11151:76;11243:4;11261:1;11256:59;;;;11329:1;11324:130;;;;11236:218;;11256:59;11286:1;11277:10;;11300:5;;;11324:130;11361:3;11351:8;11348:17;11345:43;;;11368:18;;:::i;:::-;-1:-1:-1;;11424:1:4;11410:16;;11439:5;;11236:218;;11538:2;11528:8;11525:16;11519:3;11513:4;11510:13;11506:36;11500:2;11490:8;11487:16;11482:2;11476:4;11473:12;11469:35;11466:77;11463:159;;;-1:-1:-1;11575:19:4;;;11607:5;;11463:159;11654:34;11679:8;11673:4;11654:34;:::i;:::-;11724:6;11720:1;11716:6;11712:19;11703:7;11700:32;11697:58;;;11735:18;;:::i;:::-;11773:20;;-1:-1:-1;10993:806:4;;;;;:::o;11804:140::-;11862:5;11891:47;11932:4;11922:8;11918:19;11912:4;11891:47;:::i;11949:168::-;12022:9;;;12053;;12070:15;;;12064:22;;12050:37;12040:71;;12091:18;;:::i;12122:127::-;12183:10;12178:3;12174:20;12171:1;12164:31;12214:4;12211:1;12204:15;12238:4;12235:1;12228:15;12254:120;12294:1;12320;12310:35;;12325:18;;:::i;:::-;-1:-1:-1;12359:9:4;;12254:120::o;12379:462::-;12641:34;12636:3;12629:47;12611:3;12705:6;12699:13;12721:73;12787:6;12782:2;12777:3;12773:12;12768:2;12760:6;12756:15;12721:73;:::i;:::-;12814:16;;;;12832:2;12810:25;;12379:462;-1:-1:-1;;12379:462:4:o;13004:475::-;13262:2;13251:9;13244:21;13225:4;13282:49;13327:2;13316:9;13312:18;12923:1;12911:14;;-1:-1:-1;;;12950:4:4;12941:14;;12934:31;12990:2;12981:12;;12846:153;13484:127;13545:10;13540:3;13536:20;13533:1;13526:31;13576:4;13573:1;13566:15;13600:4;13597:1;13590:15;13616:458;13878:28;13873:3;13866:41;13848:3;13936:6;13930:13;13952:75;14020:6;14015:2;14010:3;14006:12;13999:4;13991:6;13987:17;13952:75;:::i;:::-;14047:16;;;;14065:2;14043:25;;13616:458;-1:-1:-1;;13616:458:4:o;14079:463::-;14341:33;14336:3;14329:46;14311:3;14404:6;14398:13;14420:75;14488:6;14483:2;14478:3;14474:12;14467:4;14459:6;14455:17;14420:75;:::i;14704:475::-;14962:2;14951:9;14944:21;14925:4;14982:49;15027:2;15016:9;15012:18;14624:1;14612:14;;-1:-1:-1;;;14651:4:4;14642:14;;14635:30;14690:2;14681:12;;14547:152;15538:277;15740:2;15729:9;15722:21;15703:4;15760:49;15805:2;15794:9;15790:18;8589:1;8577:14;;-1:-1:-1;;;8616:4:4;8607:14;;8600:30;8655:2;8646:12;;8512:152;15820:277;16022:2;16011:9;16004:21;15985:4;16042:49;16087:2;16076:9;16072:18;12923:1;12911:14;;-1:-1:-1;;;12950:4:4;12941:14;;12934:31;12990:2;12981:12;;12846:153;16102:277;16304:2;16293:9;16286:21;16267:4;16324:49;16369:2;16358:9;16354:18;14624:1;14612:14;;-1:-1:-1;;;14651:4:4;14642:14;;14635:30;14690:2;14681:12;;14547:152;16384:306;16472:6;16480;16488;16541:2;16529:9;16520:7;16516:23;16512:32;16509:52;;;16557:1;16554;16547:12;16509:52;16586:9;16580:16;16570:26;;16636:2;16625:9;16621:18;16615:25;16605:35;;16680:2;16669:9;16665:18;16659:25;16649:35;;16384:306;;;;;:::o;16695:419::-;16953:2;16942:9;16935:21;16916:4;16973:49;17018:2;17007:9;17003:18;12923:1;12911:14;;-1:-1:-1;;;12950:4:4;12941:14;;12934:31;12990:2;12981:12;;12846:153;16973:49;17053:2;17038:18;;17031:34;;;;-1:-1:-1;17096:2:4;17081:18;17074:34;16965:57;16695:419::o;17119:::-;17377:2;17366:9;17359:21;17340:4;17397:49;17442:2;17431:9;17427:18;14624:1;14612:14;;-1:-1:-1;;;14651:4:4;14642:14;;14635:30;14690:2;14681:12;;14547:152;18021:725;18353:3;18335:22;;;18394:2;18373:19;;;18366:31;-1:-1:-1;;;18428:3:4;18413:19;;18406:44;-1:-1:-1;;;;;18526:15:4;;;18519:4;18504:20;;18497:45;18578:15;;18573:2;18558:18;;18551:43;-1:-1:-1;18610:18:4;;18603:34;;;18674:3;-1:-1:-1;18653:19:4;;18646:32;;;-1:-1:-1;;18695:45:4;;18720:19;;18712:6;18695:45;:::i;:::-;18687:53;18021:725;-1:-1:-1;;;;;;18021:725:4:o;18751:720::-;19083:3;19065:22;;;19124:1;19103:19;;;19096:30;-1:-1:-1;;;19157:3:4;19142:19;;19135:40;-1:-1:-1;;;;;19251:15:4;;;19244:4;19229:20;;19222:45;19303:15;;19298:2;19283:18;;19276:43;-1:-1:-1;19335:18:4;;19328:34;;;19399:3;-1:-1:-1;19378:19:4;;19371:32;;;-1:-1:-1;;19420:45:4;;19445:19;;19437:6;19420:45;:::i;19656:136::-;19691:3;-1:-1:-1;;;19712:22:4;;19709:48;;19737:18;;:::i;:::-;-1:-1:-1;19777:1:4;19773:13;;19656:136::o;19797:112::-;19829:1;19855;19845:35;;19860:18;;:::i;:::-;-1:-1:-1;19894:9:4;;19797:112::o;19914:125::-;19979:9;;;20000:10;;;19997:36;;;20013:18;;:::i;20044:136::-;20083:3;20111:5;20101:39;;20120:18;;:::i;:::-;-1:-1:-1;;;20156:18:4;;20044:136::o;20185:128::-;20252:9;;;20273:11;;;20270:37;;;20287:18;;:::i;20318:358::-;20392:6;20400;20453:2;20441:9;20432:7;20428:23;20424:32;20421:52;;;20469:1;20466;20459:12;20421:52;20492:38;20520:9;20492:38;:::i;:::-;20482:48;;20573:2;20562:9;20558:18;20552:25;20620:5;20613:13;20606:21;20599:5;20596:32;20586:60;;20642:1;20639;20632:12;20586:60;20665:5;20655:15;;;20318:358;;;;;:::o;21153:446::-;-1:-1:-1;;;21410:3:4;21403:29;21385:3;21461:6;21455:13;21477:75;21545:6;21540:2;21535:3;21531:12;21524:4;21516:6;21512:17;21477:75;:::i;:::-;21572:16;;;;21590:2;21568:25;;21153:446;-1:-1:-1;;21153:446:4:o;21604:982::-;21816:4;21864:2;21853:9;21849:18;21923:1;21919;21914:3;21910:11;21906:19;21898:6;21894:32;21883:9;21876:51;21946:2;21998:6;21995:1;21984:21;21979:2;21968:9;21964:18;21957:49;22042:2;22037;22026:9;22022:18;22015:30;22065:6;22100;22094:13;22131:6;22123;22116:22;22169:3;22158:9;22154:19;22147:26;;22232:3;22222:6;22219:1;22215:14;22204:9;22200:30;22196:40;22182:54;;22271:2;22263:6;22259:15;22292:1;22302:255;22316:6;22313:1;22310:13;22302:255;;;22409:3;22405:8;22393:9;22385:6;22381:22;22377:37;22372:3;22365:50;22438:39;22470:6;22461;22455:13;22438:39;:::i;:::-;22428:49;-1:-1:-1;22535:12:4;;;;22500:15;;;;22338:1;22331:9;22302:255;;;-1:-1:-1;22574:6:4;;21604:982;-1:-1:-1;;;;;;;;;21604:982:4:o;22591:164::-;22668:13;;22721:1;22710:20;;;22700:31;;22690:59;;22745:1;22742;22735:12;22760:1118;22867:6;22875;22883;22936:2;22924:9;22915:7;22911:23;22907:32;22904:52;;;22952:1;22949;22942:12;22904:52;22975:38;23003:9;22975:38;:::i;:::-;22965:48;;23032:2;23053:47;23096:2;23085:9;23081:18;23053:47;:::i;:::-;23043:57;;23144:2;23133:9;23129:18;23123:25;23167:18;23208:2;23200:6;23197:14;23194:34;;;23224:1;23221;23214:12;23194:34;23262:6;23251:9;23247:22;23237:32;;23307:7;23300:4;23296:2;23292:13;23288:27;23278:55;;23329:1;23326;23319:12;23278:55;23358:2;23352:9;23380:2;23376;23373:10;23370:36;;;23386:18;;:::i;:::-;23432:2;23429:1;23425:10;23415:20;;23455:28;23479:2;23475;23471:11;23455:28;:::i;:::-;23517:15;;;23587:11;;;23583:20;;;23548:12;;;;23615:19;;;23612:39;;;23647:1;23644;23637:12;23612:39;23671:11;;;;23691:157;23707:6;23702:3;23699:15;23691:157;;;23773:32;23801:3;23773:32;:::i;:::-;23761:45;;23724:12;;;;23826;;;;23691:157;;;23867:5;23857:15;;;;;;;;22760:1118;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2006800","executionCost":"26362","totalCost":"2033162"},"external":{"CLXY_DECIMALS()":"271","CLXY_RATIO()":"218","HBAR_RATIO()":"307","LYNX_DECIMALS()":"227","SAUCE_DECIMALS()":"293","SAUCE_RATIO()":"261","admin()":"2447","associateTokens(address[])":"infinite","calculateRequiredDeposits(uint256)":"infinite","checkAllAssociations()":"infinite","clxyToken()":"2405","emergencyWithdrawHbar(uint256)":"infinite","getHbarBalance()":"305","lynxToken()":"2425","mintWithDeposits(uint256,uint256,uint256)":"infinite","redirectForToken(address,bytes)":"infinite","sauceToken()":"2381","setClxyToken(address)":"infinite","setLynxToken(address)":"infinite","setSauceToken(address)":"infinite","testHTSOperations(address,address)":"infinite","testHTSPrecompile()":"241","transferAdmin(address)":"28197","transferFrom(address,address,address,uint256)":"infinite","transferFromNFT(address,address,address,uint256)":"infinite"},"internal":{"_checkTokenAssociation(address)":"infinite","_getHTSErrorMessage(int256)":"infinite","_int64ToString(int256)":"infinite","_mintAndTransfer(uint256)":"infinite","_processDeposits(uint256,uint256)":"infinite","_validateMintInputs(uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{"CLXY_DECIMALS()":"96cd51d7","CLXY_RATIO()":"8d6be540","HBAR_RATIO()":"4924190c","LYNX_DECIMALS()":"5ea4a9fd","SAUCE_DECIMALS()":"de97b29f","SAUCE_RATIO()":"ef037593","admin()":"f851a440","associateTokens(address[])":"a1d4da15","calculateRequiredDeposits(uint256)":"8f9f8b01","checkAllAssociations()":"724302a7","clxyToken()":"2ac2555f","emergencyWithdrawHbar(uint256)":"d65db297","getHbarBalance()":"7bd82c69","lynxToken()":"ef1643e4","mintWithDeposits(uint256,uint256,uint256)":"3ed4d3bc","redirectForToken(address,bytes)":"618dc65e","sauceToken()":"e860ff74","setClxyToken(address)":"b94fab4e","setLynxToken(address)":"52eb2a44","setSauceToken(address)":"97236479","testHTSOperations(address,address)":"87bff26b","testHTSPrecompile()":"169b78a2","transferAdmin(address)":"75829def","transferFrom(address,address,address,uint256)":"15dacbea","transferFromNFT(address,address,address,uint256)":"9b23d3d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"}],\"name\":\"InsufficientDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"responseCode\",\"type\":\"int256\"}],\"name\":\"MintFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"TokenNotAssociated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenType\",\"type\":\"string\"}],\"name\":\"TokenNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenType\",\"type\":\"string\"}],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"AllowanceCheck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"responseCode\",\"type\":\"int256\"}],\"name\":\"AssociationResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"BalanceCheck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"CallResponseEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"responseCode\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"HTSOperationResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lynxAmount\",\"type\":\"uint256\"}],\"name\":\"LynxMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"TokenAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sauceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"clxyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hbarAmount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"step\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"ValidationStep\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLXY_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLXY_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HBAR_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LYNX_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SAUCE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SAUCE_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lynxAmount\",\"type\":\"uint256\"}],\"name\":\"calculateRequiredDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sauceRequired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clxyRequired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hbarRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAllAssociations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"contractSauceAssociated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"contractClxyAssociated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"contractLynxAssociated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clxyToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawHbar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHbarBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lynxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lynxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sauceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clxyAmount\",\"type\":\"uint256\"}],\"name\":\"mintWithDeposits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedFunctionSelector\",\"type\":\"bytes\"}],\"name\":\"redirectForToken\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"responseCode\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sauceToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_clxyToken\",\"type\":\"address\"}],\"name\":\"setClxyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lynxToken\",\"type\":\"address\"}],\"name\":\"setLynxToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sauceToken\",\"type\":\"address\"}],\"name\":\"setSauceToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"testHTSOperations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAssociated\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValidToken\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testHTSPrecompile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"precompileAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"transferFromNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Enhanced token minter that accepts SAUCE/CLXY deposits and mints proportional LYNX tokens Using official Hedera inheritance pattern - inherits from HederaTokenService\",\"kind\":\"dev\",\"methods\":{\"associateTokens(address[])\":{\"details\":\"Associate contract with multiple tokens using inherited HTS functions\"},\"calculateRequiredDeposits(uint256)\":{\"details\":\"Calculate required deposits for a given LYNX amount (accounting for decimals)\"},\"checkAllAssociations()\":{\"details\":\"Check all associations using inherited HTS functions\"},\"emergencyWithdrawHbar(uint256)\":{\"details\":\"Emergency withdrawal (admin only)\"},\"getHbarBalance()\":{\"details\":\"Get contract's HBAR balance\"},\"mintWithDeposits(uint256,uint256,uint256)\":{\"details\":\"Mint LYNX tokens by depositing SAUCE, CLXY, and HBAR\"},\"redirectForToken(address,bytes)\":{\"params\":{\"encodedFunctionSelector\":\"The function selector from the ERC20 interface + the bytes input for the function called\",\"token\":\"The token address\"},\"returns\":{\"response\":\"The result of the call that had been encoded and sent for execution.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"setLynxToken(address)\":{\"details\":\"Set token addresses (admin only) - automatically associates with contract\"},\"testHTSOperations(address,address)\":{\"details\":\"Test HTS operations directly using inheritance pattern\"},\"testHTSPrecompile()\":{\"details\":\"Test if HTS precompile is properly initialized\"},\"transferAdmin(address)\":{\"details\":\"Transfer admin rights\"},\"transferFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer from `from` to `to`\",\"from\":\"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\",\"to\":\"The account address of the receiver of the `amount` tokens\",\"token\":\"The address of the fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFromNFT(address,address,address,uint256)\":{\"params\":{\"from\":\"The account address of the owner of `serialNumber` of `token`\",\"serialNumber\":\"The NFT serial number to transfer\",\"to\":\"The account address of the receiver of `serialNumber`\",\"token\":\"The address of the non-fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}}},\"title\":\"DepositMinter\",\"version\":1},\"userdoc\":{\"events\":{\"CallResponseEvent(bool,bytes)\":{\"notice\":\"Generic event\"}},\"kind\":\"user\",\"methods\":{\"redirectForToken(address,bytes)\":{\"notice\":\"Redirect for token\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"Only applicable to fungible tokens\"},\"transferFromNFT(address,address,address,uint256)\":{\"notice\":\"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"app/contracts/DepositMinter.sol\":\"DepositMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"app/contracts/DepositMinter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./HederaTokenService.sol\\\";\\nimport \\\"./HederaResponseCodes.sol\\\";\\n\\n/**\\n * @title DepositMinter\\n * @dev Enhanced token minter that accepts SAUCE/CLXY deposits and mints proportional LYNX tokens\\n * Using official Hedera inheritance pattern - inherits from HederaTokenService\\n */\\ncontract DepositMinter is HederaTokenService {\\n    \\n    // Token addresses\\n    address public lynxToken;     // LYNX token to mint\\n    address public sauceToken;    // SAUCE token for deposits\\n    address public clxyToken;     // CLXY token for deposits\\n    \\n    // Admin controls\\n    address public admin;\\n    \\n    // Minting ratios (tokens required per 1 LYNX)\\n    uint256 public constant SAUCE_RATIO = 5;  // 5 SAUCE per 1 LYNX\\n    uint256 public constant CLXY_RATIO = 2;   // 2 CLXY per 1 LYNX\\n    uint256 public constant HBAR_RATIO = 10;  // 10 HBAR per 1 LYNX (in tiny HBAR)\\n    \\n    // Token decimals\\n    uint8 public constant SAUCE_DECIMALS = 6;  // SAUCE has 6 decimals\\n    uint8 public constant CLXY_DECIMALS = 6;   // CLXY has 6 decimals\\n    uint8 public constant LYNX_DECIMALS = 8;   // LYNX has 8 decimals\\n    \\n    // Events\\n    event TokensDeposited(address indexed user, uint256 sauceAmount, uint256 clxyAmount, uint256 hbarAmount);\\n    event LynxMinted(address indexed user, uint256 lynxAmount);\\n    event TokenAddressSet(string tokenType, address previousToken, address newToken);\\n    event AdminTransferred(address previousAdmin, address newAdmin);\\n    \\n    // Debug Events\\n    event HTSOperationResult(string operation, address token, address account, int responseCode, string message);\\n    event ValidationStep(string step, bool passed, string details);\\n    event AssociationResult(address token, int responseCode);\\n    event AllowanceCheck(address token, address owner, address spender, uint256 allowance);\\n    event BalanceCheck(address token, address account, uint256 balance);\\n    \\n    // Errors\\n    error OnlyAdmin();\\n    error InvalidAmount();\\n    error TokenNotSet(string tokenType);\\n    error InsufficientDeposit(string tokenType, uint256 required, uint256 provided);\\n    error InsufficientAllowance(string tokenType, uint256 required, uint256 current);\\n    error TransferFailed(string tokenType);\\n    error MintFailed(int responseCode);\\n    error TokenNotAssociated(address token, address account);\\n    \\n    modifier onlyAdmin() {\\n        if (msg.sender != admin) revert OnlyAdmin();\\n        _;\\n    }\\n    \\n    constructor() {\\n        admin = msg.sender;\\n    }\\n    \\n    /**\\n     * @dev Test if HTS precompile is properly initialized\\n     */\\n    function testHTSPrecompile() external view returns (bool initialized, address precompileAddress) {\\n        initialized = true; // If we inherit from HederaTokenService, it's initialized\\n        precompileAddress = address(0x167);\\n    }\\n    \\n    /**\\n     * @dev Test HTS operations directly using inheritance pattern\\n     */\\n    function testHTSOperations(address token, address account) external returns (\\n        bool isAssociated,\\n        uint256 balance,\\n        uint256 allowance,\\n        bool isValidToken\\n    ) {\\n        // Using inherited HTS functions directly (no interface calls)\\n        (int tokenResponse, bool tokenExists) = isToken(token);\\n        isValidToken = (tokenResponse == HederaResponseCodes.SUCCESS && tokenExists);\\n        \\n        if (isValidToken) {\\n            // For association, we assume it's working if token is valid and we can call functions\\n            isAssociated = true;\\n            \\n            // For balance and allowance, return 0 for now - these require different approaches in HTS\\n            balance = 0;\\n            allowance = 0;\\n        }\\n    }\\n    \\n    // Allow contract to receive HBAR\\n    receive() external payable {}\\n    \\n    /**\\n     * @dev Set token addresses (admin only) - automatically associates with contract\\n     */\\n    function setLynxToken(address _lynxToken) external onlyAdmin {\\n        address previousToken = lynxToken;\\n        lynxToken = _lynxToken;\\n        \\n        // Automatically associate contract with token using inherited function\\n        if (_lynxToken != address(0)) {\\n            int response = associateToken(address(this), _lynxToken);\\n            emit AssociationResult(_lynxToken, response);\\n            require(response == HederaResponseCodes.SUCCESS, string(abi.encodePacked(\\\"LYNX token association failed: \\\", _int64ToString(response))));\\n        }\\n        \\n        emit TokenAddressSet(\\\"LYNX\\\", previousToken, _lynxToken);\\n    }\\n    \\n    function setSauceToken(address _sauceToken) external onlyAdmin {\\n        address previousToken = sauceToken;\\n        sauceToken = _sauceToken;\\n        \\n        // Automatically associate contract with token using inherited function\\n        if (_sauceToken != address(0)) {\\n            int response = associateToken(address(this), _sauceToken);\\n            emit AssociationResult(_sauceToken, response);\\n            require(response == HederaResponseCodes.SUCCESS, string(abi.encodePacked(\\\"SAUCE token association failed: \\\", _int64ToString(response))));\\n        }\\n        \\n        emit TokenAddressSet(\\\"SAUCE\\\", previousToken, _sauceToken);\\n    }\\n    \\n    function setClxyToken(address _clxyToken) external onlyAdmin {\\n        address previousToken = clxyToken;\\n        clxyToken = _clxyToken;\\n        \\n        // Automatically associate contract with token using inherited function\\n        if (_clxyToken != address(0)) {\\n            int response = associateToken(address(this), _clxyToken);\\n            emit AssociationResult(_clxyToken, response);\\n            require(response == HederaResponseCodes.SUCCESS, string(abi.encodePacked(\\\"CLXY token association failed: \\\", _int64ToString(response))));\\n        }\\n        \\n        emit TokenAddressSet(\\\"CLXY\\\", previousToken, _clxyToken);\\n    }\\n    \\n    /**\\n     * @dev Transfer admin rights\\n     */\\n    function transferAdmin(address newAdmin) external onlyAdmin {\\n        require(newAdmin != address(0), \\\"Cannot transfer to zero address\\\");\\n        address previousAdmin = admin;\\n        admin = newAdmin;\\n        emit AdminTransferred(previousAdmin, newAdmin);\\n    }\\n\\n    /**\\n     * @dev Associate contract with multiple tokens using inherited HTS functions\\n     */\\n    function associateTokens(address[] calldata tokenAddresses) external onlyAdmin {\\n        for (uint256 i = 0; i < tokenAddresses.length; i++) {\\n            int response = associateToken(address(this), tokenAddresses[i]);\\n            emit AssociationResult(tokenAddresses[i], response);\\n            require(response == HederaResponseCodes.SUCCESS, string(abi.encodePacked(\\\"Token association failed: \\\", _int64ToString(response))));\\n        }\\n    }\\n\\n    /**\\n     * @dev Check all associations using inherited HTS functions\\n     */\\n    function checkAllAssociations() external returns (\\n        bool contractSauceAssociated,\\n        bool contractClxyAssociated,\\n        bool contractLynxAssociated\\n    ) {\\n        contractSauceAssociated = _checkTokenAssociation(sauceToken);\\n        contractClxyAssociated = _checkTokenAssociation(clxyToken);\\n        contractLynxAssociated = _checkTokenAssociation(lynxToken);\\n    }\\n    \\n    /**\\n     * @dev Internal function to check if token is associated using inherited functions\\n     */\\n    function _checkTokenAssociation(address token) internal returns (bool) {\\n        if (token == address(0)) return false;\\n        \\n        // Check if token is valid - if so, assume associated (we set them during deployment)\\n        (int response, bool tokenExists) = isToken(token);\\n        return response == HederaResponseCodes.SUCCESS && tokenExists;\\n    }\\n    \\n    /**\\n     * @dev Calculate required deposits for a given LYNX amount (accounting for decimals)\\n     */\\n    function calculateRequiredDeposits(uint256 lynxAmount) \\n        external \\n        pure \\n        returns (uint256 sauceRequired, uint256 clxyRequired, uint256 hbarRequired) \\n    {\\n        // Convert LYNX amount to base units and calculate requirements\\n        // LYNX has 8 decimals, SAUCE and CLXY have 6 decimals\\n        sauceRequired = (lynxAmount * SAUCE_RATIO * 10**SAUCE_DECIMALS) / 10**LYNX_DECIMALS;\\n        clxyRequired = (lynxAmount * CLXY_RATIO * 10**CLXY_DECIMALS) / 10**LYNX_DECIMALS;\\n        hbarRequired = lynxAmount * HBAR_RATIO; // HBAR is already in tiny units\\n    }\\n    \\n    /**\\n     * @dev Mint LYNX tokens by depositing SAUCE, CLXY, and HBAR\\n     */\\n    function mintWithDeposits(\\n        uint256 lynxAmount,\\n        uint256 sauceAmount,\\n        uint256 clxyAmount\\n    ) external payable {\\n        _validateMintInputs(lynxAmount, sauceAmount, clxyAmount);\\n        _processDeposits(sauceAmount, clxyAmount);\\n        _mintAndTransfer(lynxAmount);\\n    }\\n    \\n    /**\\n     * @dev Internal function to validate mint inputs\\n     */\\n    function _validateMintInputs(\\n        uint256 lynxAmount,\\n        uint256 sauceAmount,\\n        uint256 clxyAmount\\n    ) internal view {\\n        if (lynxAmount == 0) revert InvalidAmount();\\n        if (lynxToken == address(0)) revert TokenNotSet(\\\"LYNX\\\");\\n        if (sauceToken == address(0)) revert TokenNotSet(\\\"SAUCE\\\");\\n        if (clxyToken == address(0)) revert TokenNotSet(\\\"CLXY\\\");\\n        \\n        // Calculate required amounts\\n        (uint256 sauceRequired, uint256 clxyRequired, uint256 hbarRequired) = this.calculateRequiredDeposits(lynxAmount);\\n        \\n        // Validate deposits\\n        if (sauceAmount < sauceRequired) {\\n            revert InsufficientDeposit(\\\"SAUCE\\\", sauceRequired, sauceAmount);\\n        }\\n        if (clxyAmount < clxyRequired) {\\n            revert InsufficientDeposit(\\\"CLXY\\\", clxyRequired, clxyAmount);\\n        }\\n        if (msg.value < hbarRequired) {\\n            revert InsufficientDeposit(\\\"HBAR\\\", hbarRequired, msg.value);\\n        }\\n    }\\n    \\n    /**\\n     * @dev Internal function to process token deposits using inherited HTS functions\\n     */\\n    function _processDeposits(uint256 sauceAmount, uint256 clxyAmount) internal {\\n        // Transfer SAUCE tokens from user to contract using inherited transferToken\\n        int sauceTransferResult = transferToken(sauceToken, msg.sender, address(this), int64(uint64(sauceAmount)));\\n        emit HTSOperationResult(\\\"transferToken\\\", sauceToken, msg.sender, sauceTransferResult, _getHTSErrorMessage(sauceTransferResult));\\n        if (sauceTransferResult != HederaResponseCodes.SUCCESS) {\\n            revert TransferFailed(\\\"SAUCE\\\");\\n        }\\n        \\n        // Transfer CLXY tokens from user to contract using inherited transferToken\\n        int clxyTransferResult = transferToken(clxyToken, msg.sender, address(this), int64(uint64(clxyAmount)));\\n        emit HTSOperationResult(\\\"transferToken\\\", clxyToken, msg.sender, clxyTransferResult, _getHTSErrorMessage(clxyTransferResult));\\n        if (clxyTransferResult != HederaResponseCodes.SUCCESS) {\\n            revert TransferFailed(\\\"CLXY\\\");\\n        }\\n        \\n        emit TokensDeposited(msg.sender, sauceAmount, clxyAmount, msg.value);\\n    }\\n    \\n    /**\\n     * @dev Internal function to mint and transfer LYNX tokens using inherited functions\\n     */\\n    function _mintAndTransfer(uint256 lynxAmount) internal {\\n        // Mint LYNX tokens to the contract first\\n        bytes[] memory metadata = new bytes[](0);\\n        (int mintResult, , ) = mintToken(lynxToken, int64(uint64(lynxAmount)), metadata);\\n        emit HTSOperationResult(\\\"mintToken\\\", lynxToken, address(this), mintResult, _getHTSErrorMessage(mintResult));\\n        if (mintResult != HederaResponseCodes.SUCCESS) {\\n            revert MintFailed(mintResult);\\n        }\\n        \\n        // Transfer newly minted tokens to user using transferToken\\n        int transferResult = transferToken(lynxToken, address(this), msg.sender, int64(uint64(lynxAmount)));\\n        emit HTSOperationResult(\\\"transferToken\\\", lynxToken, msg.sender, transferResult, _getHTSErrorMessage(transferResult));\\n        if (transferResult != HederaResponseCodes.SUCCESS) {\\n            revert TransferFailed(\\\"LYNX\\\");\\n        }\\n        \\n        emit LynxMinted(msg.sender, lynxAmount);\\n    }\\n    \\n    /**\\n     * @dev Get contract's HBAR balance\\n     */\\n    function getHbarBalance() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n    \\n    /**\\n     * @dev Emergency withdrawal (admin only)\\n     */\\n    function emergencyWithdrawHbar(uint256 amount) external onlyAdmin {\\n        require(amount <= address(this).balance, \\\"Insufficient HBAR balance\\\");\\n        payable(admin).transfer(amount);\\n    }\\n\\n    /**\\n     * @dev Helper function to get HTS error message\\n     */\\n    function _getHTSErrorMessage(int responseCode) internal pure returns (string memory) {\\n        if (responseCode == HederaResponseCodes.SUCCESS) return \\\"SUCCESS\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_TRANSACTION) return \\\"INVALID_TRANSACTION\\\";\\n        if (responseCode == HederaResponseCodes.PAYER_ACCOUNT_NOT_FOUND) return \\\"PAYER_ACCOUNT_NOT_FOUND\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_NODE_ACCOUNT) return \\\"INVALID_NODE_ACCOUNT\\\";\\n        if (responseCode == HederaResponseCodes.TRANSACTION_EXPIRED) return \\\"TRANSACTION_EXPIRED\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_TRANSACTION_START) return \\\"INVALID_TRANSACTION_START\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_TRANSACTION_DURATION) return \\\"INVALID_TRANSACTION_DURATION\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_SIGNATURE) return \\\"INVALID_SIGNATURE\\\";\\n        if (responseCode == HederaResponseCodes.MEMO_TOO_LONG) return \\\"MEMO_TOO_LONG\\\";\\n        if (responseCode == HederaResponseCodes.INSUFFICIENT_TX_FEE) return \\\"INSUFFICIENT_TX_FEE\\\";\\n        if (responseCode == HederaResponseCodes.INSUFFICIENT_PAYER_BALANCE) return \\\"INSUFFICIENT_PAYER_BALANCE\\\";\\n        if (responseCode == HederaResponseCodes.DUPLICATE_TRANSACTION) return \\\"DUPLICATE_TRANSACTION\\\";\\n        if (responseCode == HederaResponseCodes.BUSY) return \\\"BUSY\\\";\\n        if (responseCode == HederaResponseCodes.NOT_SUPPORTED) return \\\"NOT_SUPPORTED\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_FILE_ID) return \\\"INVALID_FILE_ID\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_ACCOUNT_ID) return \\\"INVALID_ACCOUNT_ID\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_CONTRACT_ID) return \\\"INVALID_CONTRACT_ID\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_TRANSACTION_ID) return \\\"INVALID_TRANSACTION_ID\\\";\\n        if (responseCode == HederaResponseCodes.RECEIPT_NOT_FOUND) return \\\"RECEIPT_NOT_FOUND\\\";\\n        if (responseCode == HederaResponseCodes.RECORD_NOT_FOUND) return \\\"RECORD_NOT_FOUND\\\";\\n        if (responseCode == HederaResponseCodes.INVALID_SOLIDITY_ID) return \\\"INVALID_SOLIDITY_ID\\\";\\n        return string(abi.encodePacked(\\\"UNKNOWN_ERROR_\\\", _int64ToString(responseCode)));\\n    }\\n\\n    /**\\n     * @dev Helper function to convert int to string for error messages\\n     */\\n    function _int64ToString(int value) internal pure returns (string memory) {\\n        if (value == 0) return \\\"0\\\";\\n        \\n        bool negative = value < 0;\\n        uint absValue = negative ? uint(-value) : uint(value);\\n        \\n        bytes memory buffer = new bytes(32);\\n        uint256 index = 31;\\n        \\n        while (absValue != 0) {\\n            buffer[index--] = bytes1(uint8(48 + absValue % 10));\\n            absValue /= 10;\\n        }\\n        \\n        if (negative) {\\n            buffer[index--] = \\\"-\\\";\\n        }\\n        \\n        bytes memory result = new bytes(31 - index);\\n        for (uint256 i = 0; i < result.length; i++) {\\n            result[i] = buffer[index + 1 + i];\\n        }\\n        \\n        return string(result);\\n    }\\n} \",\"keccak256\":\"0x1a5124ac2630dc97ec42f1408257f51bee6fd6ad2b5afac40f895de89941c7d1\",\"license\":\"MIT\"},\"app/contracts/HederaResponseCodes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.9 <0.9.0;\\n\\n// this contract is auto-generated by a manual triggered script in utils/hedera-response-codes-protobuf-parser.js\\n// the generated contract is using hedera response codes from services version 0.59.0-SNAPSHOT\\n// https://github.com/hashgraph/hedera-services/blob/main/hapi/hedera-protobufs/services/response_code.proto\\n\\nlibrary HederaResponseCodes {\\n    /// The transaction passed the precheck validations.\\n    int32 internal constant OK = 0;\\n\\n    /// For any error not handled by specific error codes listed below.\\n    int32 internal constant INVALID_TRANSACTION = 1;\\n\\n    /// Payer account does not exist.\\n    int32 internal constant PAYER_ACCOUNT_NOT_FOUND = 2;\\n\\n    /// Node Account provided does not match the node account of the node the transaction was submitted to.\\n    int32 internal constant INVALID_NODE_ACCOUNT = 3;\\n\\n    /// Pre-Check error when TransactionValidStart + transactionValidDuration is less than current consensus time.\\n    int32 internal constant TRANSACTION_EXPIRED = 4;\\n\\n    /// Transaction start time is greater than current consensus time\\n    int32 internal constant INVALID_TRANSACTION_START = 5;\\n\\n    /// The given transactionValidDuration was either non-positive, or greater than the maximum valid duration of 180 secs.\\n    int32 internal constant INVALID_TRANSACTION_DURATION = 6;\\n\\n    /// The transaction signature is not valid\\n    int32 internal constant INVALID_SIGNATURE = 7;\\n\\n    /// Transaction memo size exceeded 100 bytes\\n    int32 internal constant MEMO_TOO_LONG = 8;\\n\\n    /// The fee provided in the transaction is insufficient for this type of transaction\\n    int32 internal constant INSUFFICIENT_TX_FEE = 9;\\n\\n    /// The payer account has insufficient cryptocurrency to pay the transaction fee\\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE = 10;\\n\\n    /// This transaction ID is a duplicate of one that was submitted to this node or reached consensus in the last 180 seconds (receipt period)\\n    int32 internal constant DUPLICATE_TRANSACTION = 11;\\n\\n    /// If API is throttled out\\n    int32 internal constant BUSY = 12;\\n\\n    /// The API is not currently supported\\n    int32 internal constant NOT_SUPPORTED = 13;\\n\\n    /// The file id is invalid or does not exist\\n    int32 internal constant INVALID_FILE_ID = 14;\\n\\n    /// The account id is invalid or does not exist\\n    int32 internal constant INVALID_ACCOUNT_ID = 15;\\n\\n    /// The contract id is invalid or does not exist\\n    int32 internal constant INVALID_CONTRACT_ID = 16;\\n\\n    /// Transaction id is not valid\\n    int32 internal constant INVALID_TRANSACTION_ID = 17;\\n\\n    /// Receipt for given transaction id does not exist\\n    int32 internal constant RECEIPT_NOT_FOUND = 18;\\n\\n    /// Record for given transaction id does not exist\\n    int32 internal constant RECORD_NOT_FOUND = 19;\\n\\n    /// The solidity id is invalid or entity with this solidity id does not exist\\n    int32 internal constant INVALID_SOLIDITY_ID = 20;\\n\\n    /// The responding node has submitted the transaction to the network. Its final status is still unknown.\\n    int32 internal constant UNKNOWN = 21;\\n\\n    /// The transaction succeeded\\n    int32 internal constant SUCCESS = 22;\\n\\n    /// There was a system error and the transaction failed because of invalid request parameters.\\n    int32 internal constant FAIL_INVALID = 23;\\n\\n    /// There was a system error while performing fee calculation, reserved for future.\\n    int32 internal constant FAIL_FEE = 24;\\n\\n    /// There was a system error while performing balance checks, reserved for future.\\n    int32 internal constant FAIL_BALANCE = 25;\\n\\n    /// Key not provided in the transaction body\\n    int32 internal constant KEY_REQUIRED = 26;\\n\\n    /// Unsupported algorithm/encoding used for keys in the transaction\\n    int32 internal constant BAD_ENCODING = 27;\\n\\n    /// When the account balance is not sufficient for the transfer\\n    int32 internal constant INSUFFICIENT_ACCOUNT_BALANCE = 28;\\n\\n    /// During an update transaction when the system is not able to find the Users Solidity address\\n    int32 internal constant INVALID_SOLIDITY_ADDRESS = 29;\\n\\n    /// Not enough gas was supplied to execute transaction\\n    int32 internal constant INSUFFICIENT_GAS = 30;\\n\\n    /// contract byte code size is over the limit\\n    int32 internal constant CONTRACT_SIZE_LIMIT_EXCEEDED = 31;\\n\\n    /// local execution (query) is requested for a function which changes state\\n    int32 internal constant LOCAL_CALL_MODIFICATION_EXCEPTION = 32;\\n\\n    /// Contract REVERT OPCODE executed\\n    int32 internal constant CONTRACT_REVERT_EXECUTED = 33;\\n\\n    /// For any contract execution related error not handled by specific error codes listed above.\\n    int32 internal constant CONTRACT_EXECUTION_EXCEPTION = 34;\\n\\n    /// In Query validation, account with +ve(amount) value should be Receiving node account, the receiver account should be only one account in the list\\n    int32 internal constant INVALID_RECEIVING_NODE_ACCOUNT = 35;\\n\\n    /// Header is missing in Query request\\n    int32 internal constant MISSING_QUERY_HEADER = 36;\\n\\n    /// The update of the account failed\\n    int32 internal constant ACCOUNT_UPDATE_FAILED = 37;\\n\\n    /// Provided key encoding was not supported by the system\\n    int32 internal constant INVALID_KEY_ENCODING = 38;\\n\\n    /// null solidity address\\n    int32 internal constant NULL_SOLIDITY_ADDRESS = 39;\\n\\n    /// update of the contract failed\\n    int32 internal constant CONTRACT_UPDATE_FAILED = 40;\\n\\n    /// the query header is invalid\\n    int32 internal constant INVALID_QUERY_HEADER = 41;\\n\\n    /// Invalid fee submitted\\n    int32 internal constant INVALID_FEE_SUBMITTED = 42;\\n\\n    /// Payer signature is invalid\\n    int32 internal constant INVALID_PAYER_SIGNATURE = 43;\\n\\n    /// The keys were not provided in the request.\\n    int32 internal constant KEY_NOT_PROVIDED = 44;\\n\\n    /// Expiration time provided in the transaction was invalid.\\n    int32 internal constant INVALID_EXPIRATION_TIME = 45;\\n\\n    /// WriteAccess Control Keys are not provided for the file\\n    int32 internal constant NO_WACL_KEY = 46;\\n\\n    /// The contents of file are provided as empty.\\n    int32 internal constant FILE_CONTENT_EMPTY = 47;\\n\\n    /// The crypto transfer credit and debit do not sum equal to 0\\n    int32 internal constant INVALID_ACCOUNT_AMOUNTS = 48;\\n\\n    /// Transaction body provided is empty\\n    int32 internal constant EMPTY_TRANSACTION_BODY = 49;\\n\\n    /// Invalid transaction body provided\\n    int32 internal constant INVALID_TRANSACTION_BODY = 50;\\n\\n    /// the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)\\n    int32 internal constant INVALID_SIGNATURE_TYPE_MISMATCHING_KEY = 51;\\n\\n    /// the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList, or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding signatureList should also have 3 base signatures.\\n    int32 internal constant INVALID_SIGNATURE_COUNT_MISMATCHING_KEY = 52;\\n\\n    /// the livehash body is empty\\n    int32 internal constant EMPTY_LIVE_HASH_BODY = 53;\\n\\n    /// the livehash data is missing\\n    int32 internal constant EMPTY_LIVE_HASH = 54;\\n\\n    /// the keys for a livehash are missing\\n    int32 internal constant EMPTY_LIVE_HASH_KEYS = 55;\\n\\n    /// the livehash data is not the output of a SHA-384 digest\\n    int32 internal constant INVALID_LIVE_HASH_SIZE = 56;\\n\\n    /// the query body is empty\\n    int32 internal constant EMPTY_QUERY_BODY = 57;\\n\\n    /// the crypto livehash query is empty\\n    int32 internal constant EMPTY_LIVE_HASH_QUERY = 58;\\n\\n    /// the livehash is not present\\n    int32 internal constant LIVE_HASH_NOT_FOUND = 59;\\n\\n    /// the account id passed has not yet been created.\\n    int32 internal constant ACCOUNT_ID_DOES_NOT_EXIST = 60;\\n\\n    /// the livehash already exists for a given account\\n    int32 internal constant LIVE_HASH_ALREADY_EXISTS = 61;\\n\\n    /// File WACL keys are invalid\\n    int32 internal constant INVALID_FILE_WACL = 62;\\n\\n    /// Serialization failure\\n    int32 internal constant SERIALIZATION_FAILED = 63;\\n\\n    /// The size of the Transaction is greater than transactionMaxBytes\\n    int32 internal constant TRANSACTION_OVERSIZE = 64;\\n\\n    /// The Transaction has more than 50 levels\\n    int32 internal constant TRANSACTION_TOO_MANY_LAYERS = 65;\\n\\n    /// Contract is marked as deleted\\n    int32 internal constant CONTRACT_DELETED = 66;\\n\\n    /// the platform node is either disconnected or lagging behind.\\n    int32 internal constant PLATFORM_NOT_ACTIVE = 67;\\n\\n    /// one public key matches more than one prefixes on the signature map\\n    int32 internal constant KEY_PREFIX_MISMATCH = 68;\\n\\n    /// transaction not created by platform due to large backlog\\n    int32 internal constant PLATFORM_TRANSACTION_NOT_CREATED = 69;\\n\\n    /// auto renewal period is not a positive number of seconds\\n    int32 internal constant INVALID_RENEWAL_PERIOD = 70;\\n\\n    /// the response code when a smart contract id is passed for a crypto API request\\n    int32 internal constant INVALID_PAYER_ACCOUNT_ID = 71;\\n\\n    /// the account has been marked as deleted\\n    int32 internal constant ACCOUNT_DELETED = 72;\\n\\n    /// the file has been marked as deleted\\n    int32 internal constant FILE_DELETED = 73;\\n\\n    /// same accounts repeated in the transfer account list\\n    int32 internal constant ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS = 74;\\n\\n    /// attempting to set negative balance value for crypto account\\n    int32 internal constant SETTING_NEGATIVE_ACCOUNT_BALANCE = 75;\\n\\n    /// when deleting smart contract that has crypto balance either transfer account or transfer smart contract is required\\n    int32 internal constant OBTAINER_REQUIRED = 76;\\n\\n    /// when deleting smart contract that has crypto balance you can not use the same contract id as transferContractId as the one being deleted\\n    int32 internal constant OBTAINER_SAME_CONTRACT_ID = 77;\\n\\n    /// transferAccountId or transferContractId specified for contract delete does not exist\\n    int32 internal constant OBTAINER_DOES_NOT_EXIST = 78;\\n\\n    /// attempting to modify (update or delete a immutable smart contract, i.e. one created without a admin key)\\n    int32 internal constant MODIFYING_IMMUTABLE_CONTRACT = 79;\\n\\n    /// Unexpected exception thrown by file system functions\\n    int32 internal constant FILE_SYSTEM_EXCEPTION = 80;\\n\\n    /// the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]\\n    int32 internal constant AUTORENEW_DURATION_NOT_IN_RANGE = 81;\\n\\n    /// Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex string.\\n    int32 internal constant ERROR_DECODING_BYTESTRING = 82;\\n\\n    /// File to create a smart contract was of length zero\\n    int32 internal constant CONTRACT_FILE_EMPTY = 83;\\n\\n    /// Bytecode for smart contract is of length zero\\n    int32 internal constant CONTRACT_BYTECODE_EMPTY = 84;\\n\\n    /// Attempt to set negative initial balance\\n    int32 internal constant INVALID_INITIAL_BALANCE = 85;\\n\\n    /// Attempt to set negative receive record threshold\\n    int32 internal constant INVALID_RECEIVE_RECORD_THRESHOLD = 86;\\n\\n    /// Attempt to set negative send record threshold\\n    int32 internal constant INVALID_SEND_RECORD_THRESHOLD = 87;\\n\\n    /// Special Account Operations should be performed by only Genesis account, return this code if it is not Genesis Account\\n    int32 internal constant ACCOUNT_IS_NOT_GENESIS_ACCOUNT = 88;\\n\\n    /// The fee payer account doesn't have permission to submit such Transaction\\n    int32 internal constant PAYER_ACCOUNT_UNAUTHORIZED = 89;\\n\\n    /// FreezeTransactionBody is invalid\\n    int32 internal constant INVALID_FREEZE_TRANSACTION_BODY = 90;\\n\\n    /// FreezeTransactionBody does not exist\\n    int32 internal constant FREEZE_TRANSACTION_BODY_NOT_FOUND = 91;\\n\\n    /// Exceeded the number of accounts (both from and to) allowed for crypto transfer list\\n    int32 internal constant TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 92;\\n\\n    /// Smart contract result size greater than specified maxResultSize\\n    int32 internal constant RESULT_SIZE_LIMIT_EXCEEDED = 93;\\n\\n    /// The payer account is not a special account(account 0.0.55)\\n    int32 internal constant NOT_SPECIAL_ACCOUNT = 94;\\n\\n    /// Negative gas was offered in smart contract call\\n    int32 internal constant CONTRACT_NEGATIVE_GAS = 95;\\n\\n    /// Negative value / initial balance was specified in a smart contract call / create\\n    int32 internal constant CONTRACT_NEGATIVE_VALUE = 96;\\n\\n    /// Failed to update fee file\\n    int32 internal constant INVALID_FEE_FILE = 97;\\n\\n    /// Failed to update exchange rate file\\n    int32 internal constant INVALID_EXCHANGE_RATE_FILE = 98;\\n\\n    /// Payment tendered for contract local call cannot cover both the fee and the gas\\n    int32 internal constant INSUFFICIENT_LOCAL_CALL_GAS = 99;\\n\\n    /// Entities with Entity ID below 1000 are not allowed to be deleted\\n    int32 internal constant ENTITY_NOT_ALLOWED_TO_DELETE = 100;\\n\\n    /// Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2) account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102), ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate (0.0.112).\\n    int32 internal constant AUTHORIZATION_FAILED = 101;\\n\\n    /// Fee Schedule Proto uploaded but not valid (append or update is required)\\n    int32 internal constant FILE_UPLOADED_PROTO_INVALID = 102;\\n\\n    /// Fee Schedule Proto uploaded but not valid (append or update is required)\\n    int32 internal constant FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK = 103;\\n\\n    /// Fee Schedule Proto File Part uploaded\\n    int32 internal constant FEE_SCHEDULE_FILE_PART_UPLOADED = 104;\\n\\n    /// The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage\\n    int32 internal constant EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED = 105;\\n\\n    /// Contract permanent storage exceeded the currently allowable limit\\n    int32 internal constant MAX_CONTRACT_STORAGE_EXCEEDED = 106;\\n\\n    /// Transfer Account should not be same as Account to be deleted\\n    int32 internal constant TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT = 107;\\n\\n    int32 internal constant TOTAL_LEDGER_BALANCE_INVALID = 108;\\n\\n    /// The expiration date/time on a smart contract may not be reduced\\n    int32 internal constant EXPIRATION_REDUCTION_NOT_ALLOWED = 110;\\n\\n    /// Gas exceeded currently allowable gas limit per transaction\\n    int32 internal constant MAX_GAS_LIMIT_EXCEEDED = 111;\\n\\n    /// File size exceeded the currently allowable limit\\n    int32 internal constant MAX_FILE_SIZE_EXCEEDED = 112;\\n\\n    /// When a valid signature is not provided for operations on account with receiverSigRequired=true\\n    int32 internal constant RECEIVER_SIG_REQUIRED = 113;\\n\\n    /// The Topic ID specified is not in the system.\\n    int32 internal constant INVALID_TOPIC_ID = 150;\\n\\n    /// A provided admin key was invalid. Verify the bytes for an Ed25519 public key are exactly 32 bytes; and the bytes for a compressed ECDSA(secp256k1) key are exactly 33 bytes, with the first byte either 0x02 or 0x03..\\n    int32 internal constant INVALID_ADMIN_KEY = 155;\\n\\n    /// A provided submit key was invalid.\\n    int32 internal constant INVALID_SUBMIT_KEY = 156;\\n\\n    /// An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey).\\n    int32 internal constant UNAUTHORIZED = 157;\\n\\n    /// A ConsensusService message is empty.\\n    int32 internal constant INVALID_TOPIC_MESSAGE = 158;\\n\\n    /// The autoRenewAccount specified is not a valid, active account.\\n    int32 internal constant INVALID_AUTORENEW_ACCOUNT = 159;\\n\\n    /// An adminKey was not specified on the topic, so there must not be an autoRenewAccount.\\n    int32 internal constant AUTORENEW_ACCOUNT_NOT_ALLOWED = 160;\\n\\n    /// The topic has expired, was not automatically renewed, and is in a 7 day grace period before the topic will be deleted unrecoverably. This error response code will not be returned until autoRenew functionality is supported by HAPI.\\n    int32 internal constant TOPIC_EXPIRED = 162;\\n\\n    /// chunk number must be from 1 to total (chunks) inclusive.\\n    int32 internal constant INVALID_CHUNK_NUMBER = 163;\\n\\n    /// For every chunk, the payer account that is part of initialTransactionID must match the Payer Account of this transaction. The entire initialTransactionID should match the transactionID of the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1.\\n    int32 internal constant INVALID_CHUNK_TRANSACTION_ID = 164;\\n\\n    /// Account is frozen and cannot transact with the token\\n    int32 internal constant ACCOUNT_FROZEN_FOR_TOKEN = 165;\\n\\n    /// An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with non-deleted tokens.\\n    int32 internal constant TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED = 166;\\n\\n    /// The token is invalid or does not exist\\n    int32 internal constant INVALID_TOKEN_ID = 167;\\n\\n    /// Invalid token decimals\\n    int32 internal constant INVALID_TOKEN_DECIMALS = 168;\\n\\n    /// Invalid token initial supply\\n    int32 internal constant INVALID_TOKEN_INITIAL_SUPPLY = 169;\\n\\n    /// Treasury Account does not exist or is deleted\\n    int32 internal constant INVALID_TREASURY_ACCOUNT_FOR_TOKEN = 170;\\n\\n    /// Token Symbol is not UTF-8 capitalized alphabetical string\\n    int32 internal constant INVALID_TOKEN_SYMBOL = 171;\\n\\n    /// Freeze key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_FREEZE_KEY = 172;\\n\\n    /// Amounts in transfer list are not net zero\\n    int32 internal constant TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN = 173;\\n\\n    /// A token symbol was not provided\\n    int32 internal constant MISSING_TOKEN_SYMBOL = 174;\\n\\n    /// The provided token symbol was too long\\n    int32 internal constant TOKEN_SYMBOL_TOO_LONG = 175;\\n\\n    /// KYC must be granted and account does not have KYC granted\\n    int32 internal constant ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN = 176;\\n\\n    /// KYC key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_KYC_KEY = 177;\\n\\n    /// Token balance is not sufficient for the transaction\\n    int32 internal constant INSUFFICIENT_TOKEN_BALANCE = 178;\\n\\n    /// Token transactions cannot be executed on deleted token\\n    int32 internal constant TOKEN_WAS_DELETED = 179;\\n\\n    /// Supply key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_SUPPLY_KEY = 180;\\n\\n    /// Wipe key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_WIPE_KEY = 181;\\n\\n    /// The requested token mint amount would cause an invalid total supply\\n    int32 internal constant INVALID_TOKEN_MINT_AMOUNT = 182;\\n\\n    /// The requested token burn amount would cause an invalid total supply\\n    int32 internal constant INVALID_TOKEN_BURN_AMOUNT = 183;\\n\\n    /// A required token-account relationship is missing\\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_ACCOUNT = 184;\\n\\n    /// The target of a wipe operation was the token treasury account\\n    int32 internal constant CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT = 185;\\n\\n    /// The provided KYC key was invalid.\\n    int32 internal constant INVALID_KYC_KEY = 186;\\n\\n    /// The provided wipe key was invalid.\\n    int32 internal constant INVALID_WIPE_KEY = 187;\\n\\n    /// The provided freeze key was invalid.\\n    int32 internal constant INVALID_FREEZE_KEY = 188;\\n\\n    /// The provided supply key was invalid.\\n    int32 internal constant INVALID_SUPPLY_KEY = 189;\\n\\n    /// Token Name is not provided\\n    int32 internal constant MISSING_TOKEN_NAME = 190;\\n\\n    /// Token Name is too long\\n    int32 internal constant TOKEN_NAME_TOO_LONG = 191;\\n\\n    /// The provided wipe amount must not be negative, zero or bigger than the token holder balance\\n    int32 internal constant INVALID_WIPING_AMOUNT = 192;\\n\\n    /// Token does not have Admin key set, thus update/delete transactions cannot be performed\\n    int32 internal constant TOKEN_IS_IMMUTABLE = 193;\\n\\n    /// An <tt>associateToken</tt> operation specified a token already associated to the account\\n    int32 internal constant TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT = 194;\\n\\n    /// An attempted operation is invalid until all token balances for the target account are zero\\n    int32 internal constant TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES = 195;\\n\\n    /// An attempted operation is invalid because the account is a treasury\\n    int32 internal constant ACCOUNT_IS_TREASURY = 196;\\n\\n    /// Same TokenIDs present in the token list\\n    int32 internal constant TOKEN_ID_REPEATED_IN_TOKEN_LIST = 197;\\n\\n    /// Exceeded the number of token transfers (both from and to) allowed for token transfer list\\n    int32 internal constant TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 198;\\n\\n    /// TokenTransfersTransactionBody has no TokenTransferList\\n    int32 internal constant EMPTY_TOKEN_TRANSFER_BODY = 199;\\n\\n    /// TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts\\n    int32 internal constant EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS = 200;\\n\\n    /// The Scheduled entity does not exist; or has now expired, been deleted, or been executed\\n    int32 internal constant INVALID_SCHEDULE_ID = 201;\\n\\n    /// The Scheduled entity cannot be modified. Admin key not set\\n    int32 internal constant SCHEDULE_IS_IMMUTABLE = 202;\\n\\n    /// The provided Scheduled Payer does not exist\\n    int32 internal constant INVALID_SCHEDULE_PAYER_ID = 203;\\n\\n    /// The Schedule Create Transaction TransactionID account does not exist\\n    int32 internal constant INVALID_SCHEDULE_ACCOUNT_ID = 204;\\n\\n    /// The provided sig map did not contain any new valid signatures from required signers of the scheduled transaction\\n    int32 internal constant NO_NEW_VALID_SIGNATURES = 205;\\n\\n    /// The required signers for a scheduled transaction cannot be resolved, for example because they do not exist or have been deleted\\n    int32 internal constant UNRESOLVABLE_REQUIRED_SIGNERS = 206;\\n\\n    /// Only whitelisted transaction types may be scheduled\\n    int32 internal constant SCHEDULED_TRANSACTION_NOT_IN_WHITELIST = 207;\\n\\n    /// At least one of the signatures in the provided sig map did not represent a valid signature for any required signer\\n    int32 internal constant SOME_SIGNATURES_WERE_INVALID = 208;\\n\\n    /// The scheduled field in the TransactionID may not be set to true\\n    int32 internal constant TRANSACTION_ID_FIELD_NOT_ALLOWED = 209;\\n\\n    /// A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that is, all fields other than scheduledPayerAccountID)\\n    int32 internal constant IDENTICAL_SCHEDULE_ALREADY_CREATED = 210;\\n\\n    /// A string field in the transaction has a UTF-8 encoding with the prohibited zero byte\\n    int32 internal constant INVALID_ZERO_BYTE_IN_STRING = 211;\\n\\n    /// A schedule being signed or deleted has already been deleted\\n    int32 internal constant SCHEDULE_ALREADY_DELETED = 212;\\n\\n    /// A schedule being signed or deleted has already been executed\\n    int32 internal constant SCHEDULE_ALREADY_EXECUTED = 213;\\n\\n    /// ConsensusSubmitMessage request's message size is larger than allowed.\\n    int32 internal constant MESSAGE_SIZE_TOO_LARGE = 214;\\n\\n    /// An operation was assigned to more than one throttle group in a given bucket\\n    int32 internal constant OPERATION_REPEATED_IN_BUCKET_GROUPS = 215;\\n\\n    /// The capacity needed to satisfy all opsPerSec groups in a bucket overflowed a signed 8-byte integral type\\n    int32 internal constant BUCKET_CAPACITY_OVERFLOW = 216;\\n\\n    /// Given the network size in the address book, the node-level capacity for an operation would never be enough to accept a single request; usually means a bucket burstPeriod should be increased\\n    int32 internal constant NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION = 217;\\n\\n    /// A bucket was defined without any throttle groups\\n    int32 internal constant BUCKET_HAS_NO_THROTTLE_GROUPS = 218;\\n\\n    /// A throttle group was granted zero opsPerSec\\n    int32 internal constant THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC = 219;\\n\\n    /// The throttle definitions file was updated, but some supported operations were not assigned a bucket\\n    int32 internal constant SUCCESS_BUT_MISSING_EXPECTED_OPERATION = 220;\\n\\n    /// The new contents for the throttle definitions system file were not valid protobuf\\n    int32 internal constant UNPARSEABLE_THROTTLE_DEFINITIONS = 221;\\n\\n    /// The new throttle definitions system file were invalid, and no more specific error could be divined\\n    int32 internal constant INVALID_THROTTLE_DEFINITIONS = 222;\\n\\n    /// The transaction references an account which has passed its expiration without renewal funds available, and currently remains in the ledger only because of the grace period given to expired entities\\n    int32 internal constant ACCOUNT_EXPIRED_AND_PENDING_REMOVAL = 223;\\n\\n    /// Invalid token max supply\\n    int32 internal constant INVALID_TOKEN_MAX_SUPPLY = 224;\\n\\n    /// Invalid token nft serial number\\n    int32 internal constant INVALID_TOKEN_NFT_SERIAL_NUMBER = 225;\\n\\n    /// Invalid nft id\\n    int32 internal constant INVALID_NFT_ID = 226;\\n\\n    /// Nft metadata is too long\\n    int32 internal constant METADATA_TOO_LONG = 227;\\n\\n    /// Repeated operations count exceeds the limit\\n    int32 internal constant BATCH_SIZE_LIMIT_EXCEEDED = 228;\\n\\n    /// The range of data to be gathered is out of the set boundaries\\n    int32 internal constant INVALID_QUERY_RANGE = 229;\\n\\n    /// A custom fractional fee set a denominator of zero\\n    int32 internal constant FRACTION_DIVIDES_BY_ZERO = 230;\\n\\n    /// The transaction payer could not afford a custom fee\\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE = 231;\\n\\n    /// More than 10 custom fees were specified\\n    int32 internal constant CUSTOM_FEES_LIST_TOO_LONG = 232;\\n\\n    /// Any of the feeCollector accounts for customFees is invalid\\n    int32 internal constant INVALID_CUSTOM_FEE_COLLECTOR = 233;\\n\\n    /// Any of the token Ids in customFees is invalid\\n    int32 internal constant INVALID_TOKEN_ID_IN_CUSTOM_FEES = 234;\\n\\n    /// Any of the token Ids in customFees are not associated to feeCollector\\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR = 235;\\n\\n    /// A token cannot have more units minted due to its configured supply ceiling\\n    int32 internal constant TOKEN_MAX_SUPPLY_REACHED = 236;\\n\\n    /// The transaction attempted to move an NFT serial number from an account other than its owner\\n    int32 internal constant SENDER_DOES_NOT_OWN_NFT_SERIAL_NO = 237;\\n\\n    /// A custom fee schedule entry did not specify either a fixed or fractional fee\\n    int32 internal constant CUSTOM_FEE_NOT_FULLY_SPECIFIED = 238;\\n\\n    /// Only positive fees may be assessed at this time\\n    int32 internal constant CUSTOM_FEE_MUST_BE_POSITIVE = 239;\\n\\n    /// Fee schedule key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_FEE_SCHEDULE_KEY = 240;\\n\\n    /// A fractional custom fee exceeded the range of a 64-bit signed integer\\n    int32 internal constant CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE = 241;\\n\\n    /// A royalty cannot exceed the total fungible value exchanged for an NFT\\n    int32 internal constant ROYALTY_FRACTION_CANNOT_EXCEED_ONE = 242;\\n\\n    /// Each fractional custom fee must have its maximum_amount, if specified, at least its minimum_amount\\n    int32 internal constant FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT = 243;\\n\\n    /// A fee schedule update tried to clear the custom fees from a token whose fee schedule was already empty\\n    int32 internal constant CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES = 244;\\n\\n    /// Only tokens of type FUNGIBLE_COMMON can be used to as fee schedule denominations\\n    int32 internal constant CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON = 245;\\n\\n    /// Only tokens of type FUNGIBLE_COMMON can have fractional fees\\n    int32 internal constant CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON = 246;\\n\\n    /// The provided custom fee schedule key was invalid\\n    int32 internal constant INVALID_CUSTOM_FEE_SCHEDULE_KEY = 247;\\n\\n    /// The requested token mint metadata was invalid\\n    int32 internal constant INVALID_TOKEN_MINT_METADATA = 248;\\n\\n    /// The requested token burn metadata was invalid\\n    int32 internal constant INVALID_TOKEN_BURN_METADATA = 249;\\n\\n    /// The treasury for a unique token cannot be changed until it owns no NFTs\\n    int32 internal constant CURRENT_TREASURY_STILL_OWNS_NFTS = 250;\\n\\n    /// An account cannot be dissociated from a unique token if it owns NFTs for the token\\n    int32 internal constant ACCOUNT_STILL_OWNS_NFTS = 251;\\n\\n    /// A NFT can only be burned when owned by the unique token's treasury\\n    int32 internal constant TREASURY_MUST_OWN_BURNED_NFT = 252;\\n\\n    /// An account did not own the NFT to be wiped\\n    int32 internal constant ACCOUNT_DOES_NOT_OWN_WIPED_NFT = 253;\\n\\n    /// An AccountAmount token transfers list referenced a token type other than FUNGIBLE_COMMON\\n    int32 internal constant ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON = 254;\\n\\n    /// All the NFTs allowed in the current price regime have already been minted\\n    int32 internal constant MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED = 255;\\n\\n    /// The payer account has been marked as deleted\\n    int32 internal constant PAYER_ACCOUNT_DELETED = 256;\\n\\n    /// The reference chain of custom fees for a transferred token exceeded the maximum length of 2\\n    int32 internal constant CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH = 257;\\n\\n    /// More than 20 balance adjustments were to satisfy a CryptoTransfer and its implied custom fee payments\\n    int32 internal constant CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS = 258;\\n\\n    /// The sender account in the token transfer transaction could not afford a custom fee\\n    int32 internal constant INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE = 259;\\n\\n    /// Currently no more than 4,294,967,295 NFTs may be minted for a given unique token type\\n    int32 internal constant SERIAL_NUMBER_LIMIT_REACHED = 260;\\n\\n    /// Only tokens of type NON_FUNGIBLE_UNIQUE can have royalty fees\\n    int32 internal constant CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE = 261;\\n\\n    /// The account has reached the limit on the automatic associations count.\\n    int32 internal constant NO_REMAINING_AUTOMATIC_ASSOCIATIONS = 262;\\n\\n    /// Already existing automatic associations are more than the new maximum automatic associations.\\n    int32 internal constant EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT = 263;\\n\\n    /// Cannot set the number of automatic associations for an account more than the maximum allowed token associations <tt>tokens.maxPerAccount</tt>.\\n    int32 internal constant REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT = 264;\\n\\n    /// Token is paused. This Token cannot be a part of any kind of Transaction until unpaused.\\n    int32 internal constant TOKEN_IS_PAUSED = 265;\\n\\n    /// Pause key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_PAUSE_KEY = 266;\\n\\n    /// The provided pause key was invalid\\n    int32 internal constant INVALID_PAUSE_KEY = 267;\\n\\n    /// The update file in a freeze transaction body must exist.\\n    int32 internal constant FREEZE_UPDATE_FILE_DOES_NOT_EXIST = 268;\\n\\n    /// The hash of the update file in a freeze transaction body must match the in-memory hash.\\n    int32 internal constant FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH = 269;\\n\\n    /// A FREEZE_UPGRADE transaction was handled with no previous update prepared.\\n    int32 internal constant NO_UPGRADE_HAS_BEEN_PREPARED = 270;\\n\\n    /// A FREEZE_ABORT transaction was handled with no scheduled freeze.\\n    int32 internal constant NO_FREEZE_IS_SCHEDULED = 271;\\n\\n    /// The update file hash when handling a FREEZE_UPGRADE transaction differs from the file hash at the time of handling the PREPARE_UPGRADE transaction.\\n    int32 internal constant UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE = 272;\\n\\n    /// The given freeze start time was in the (consensus) past.\\n    int32 internal constant FREEZE_START_TIME_MUST_BE_FUTURE = 273;\\n\\n    /// The prepared update file cannot be updated or appended until either the upgrade has been completed, or a FREEZE_ABORT has been handled.\\n    int32 internal constant PREPARED_UPDATE_FILE_IS_IMMUTABLE = 274;\\n\\n    /// Once a freeze is scheduled, it must be aborted before any other type of freeze can can be performed.\\n    int32 internal constant FREEZE_ALREADY_SCHEDULED = 275;\\n\\n    /// If an NMT upgrade has been prepared, the following operation must be a FREEZE_UPGRADE. (To issue a FREEZE_ONLY, submit a FREEZE_ABORT first.)\\n    int32 internal constant FREEZE_UPGRADE_IN_PROGRESS = 276;\\n\\n    /// If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the id of the file to be used in the upgrade.\\n    int32 internal constant UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED = 277;\\n\\n    /// If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the hash of the file to be used in the upgrade.\\n    int32 internal constant UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED = 278;\\n\\n    /// Consensus throttle did not allow execution of this transaction. System is throttled at consensus level.\\n    int32 internal constant CONSENSUS_GAS_EXHAUSTED = 279;\\n\\n    /// A precompiled contract succeeded, but was later reverted.\\n    int32 internal constant REVERTED_SUCCESS = 280;\\n\\n    /// All contract storage allocated to the current price regime has been consumed.\\n    int32 internal constant MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED = 281;\\n\\n    /// An alias used in a CryptoTransfer transaction is not the serialization of a primitive Key message--that is, a Key with a single Ed25519 or ECDSA(secp256k1) public key and no unknown protobuf fields.\\n    int32 internal constant INVALID_ALIAS_KEY = 282;\\n\\n    /// A fungible token transfer expected a different number of decimals than the involved type actually has.\\n    int32 internal constant UNEXPECTED_TOKEN_DECIMALS = 283;\\n\\n    /// The proxy account id is invalid or does not exist.\\n    int32 internal constant INVALID_PROXY_ACCOUNT_ID = 284;\\n\\n    /// The transfer account id in CryptoDelete transaction is invalid or does not exist.\\n    int32 internal constant INVALID_TRANSFER_ACCOUNT_ID = 285;\\n\\n    /// The fee collector account id in TokenFeeScheduleUpdate is invalid or does not exist.\\n    int32 internal constant INVALID_FEE_COLLECTOR_ACCOUNT_ID = 286;\\n\\n    /// The alias already set on an account cannot be updated using CryptoUpdate transaction.\\n    int32 internal constant ALIAS_IS_IMMUTABLE = 287;\\n\\n    /// An approved allowance specifies a spender account that is the same as the hbar/token owner account.\\n    int32 internal constant SPENDER_ACCOUNT_SAME_AS_OWNER = 288;\\n\\n    /// The establishment or adjustment of an approved allowance cause the token allowance to exceed the token maximum supply.\\n    int32 internal constant AMOUNT_EXCEEDS_TOKEN_MAX_SUPPLY = 289;\\n\\n    /// The specified amount for an approved allowance cannot be negative.\\n    int32 internal constant NEGATIVE_ALLOWANCE_AMOUNT = 290;\\n\\n    /// The approveForAll flag cannot be set for a fungible token.\\n    int32 internal constant CANNOT_APPROVE_FOR_ALL_FUNGIBLE_COMMON = 291;\\n\\n    /// The spender does not have an existing approved allowance with the hbar/token owner.\\n    int32 internal constant SPENDER_DOES_NOT_HAVE_ALLOWANCE = 292;\\n\\n    /// The transfer amount exceeds the current approved allowance for the spender account.\\n    int32 internal constant AMOUNT_EXCEEDS_ALLOWANCE = 293;\\n\\n    /// The payer account of an approveAllowances or adjustAllowance transaction is attempting to go beyond the maximum allowed number of allowances.\\n    int32 internal constant MAX_ALLOWANCES_EXCEEDED = 294;\\n\\n    /// No allowances have been specified in the approval transaction.\\n    int32 internal constant EMPTY_ALLOWANCES = 295;\\n\\n    /// Spender is repeated more than once in Crypto or Token or NFT allowance lists in a single CryptoApproveAllowance transaction.\\n    int32 internal constant SPENDER_ACCOUNT_REPEATED_IN_ALLOWANCES = 296;\\n\\n    /// Serial numbers are repeated in nft allowance for a single spender account\\n    int32 internal constant REPEATED_SERIAL_NUMS_IN_NFT_ALLOWANCES = 297;\\n\\n    /// Fungible common token used in NFT allowances\\n    int32 internal constant FUNGIBLE_TOKEN_IN_NFT_ALLOWANCES = 298;\\n\\n    /// Non fungible token used in fungible token allowances\\n    int32 internal constant NFT_IN_FUNGIBLE_TOKEN_ALLOWANCES = 299;\\n\\n    /// The account id specified as the owner is invalid or does not exist.\\n    int32 internal constant INVALID_ALLOWANCE_OWNER_ID = 300;\\n\\n    /// The account id specified as the spender is invalid or does not exist.\\n    int32 internal constant INVALID_ALLOWANCE_SPENDER_ID = 301;\\n\\n    /// [Deprecated] If the CryptoDeleteAllowance transaction has repeated crypto or token or Nft allowances to delete.\\n    int32 internal constant REPEATED_ALLOWANCES_TO_DELETE = 302;\\n\\n    /// If the account Id specified as the delegating spender is invalid or does not exist.\\n    int32 internal constant INVALID_DELEGATING_SPENDER = 303;\\n\\n    /// The delegating Spender cannot grant approveForAll allowance on a NFT token type for another spender.\\n    int32 internal constant DELEGATING_SPENDER_CANNOT_GRANT_APPROVE_FOR_ALL = 304;\\n\\n    /// The delegating Spender cannot grant allowance on a NFT serial for another spender as it doesnt not have approveForAll granted on token-owner.\\n    int32 internal constant DELEGATING_SPENDER_DOES_NOT_HAVE_APPROVE_FOR_ALL = 305;\\n\\n    /// The scheduled transaction could not be created because it's expiration_time was too far in the future.\\n    int32 internal constant SCHEDULE_EXPIRATION_TIME_TOO_FAR_IN_FUTURE = 306;\\n\\n    /// The scheduled transaction could not be created because it's expiration_time was less than or equal to the consensus time.\\n    int32 internal constant SCHEDULE_EXPIRATION_TIME_MUST_BE_HIGHER_THAN_CONSENSUS_TIME = 307;\\n\\n    /// The scheduled transaction could not be created because it would cause throttles to be violated on the specified expiration_time.\\n    int32 internal constant SCHEDULE_FUTURE_THROTTLE_EXCEEDED = 308;\\n\\n    /// The scheduled transaction could not be created because it would cause the gas limit to be violated on the specified expiration_time.\\n    int32 internal constant SCHEDULE_FUTURE_GAS_LIMIT_EXCEEDED = 309;\\n\\n    /// The ethereum transaction either failed parsing or failed signature validation, or some other EthereumTransaction error not covered by another response code.\\n    int32 internal constant INVALID_ETHEREUM_TRANSACTION = 310;\\n\\n    /// EthereumTransaction was signed against a chainId that this network does not support.\\n    int32 internal constant WRONG_CHAIN_ID = 311;\\n\\n    /// This transaction specified an ethereumNonce that is not the current ethereumNonce of the account.\\n    int32 internal constant WRONG_NONCE = 312;\\n\\n    /// The ethereum transaction specified an access list, which the network does not support.\\n    int32 internal constant ACCESS_LIST_UNSUPPORTED = 313;\\n\\n    /// A schedule being signed or deleted has passed it's expiration date and is pending execution if needed and then expiration.\\n    int32 internal constant SCHEDULE_PENDING_EXPIRATION = 314;\\n\\n    /// A selfdestruct or ContractDelete targeted a contract that is a token treasury.\\n    int32 internal constant CONTRACT_IS_TOKEN_TREASURY = 315;\\n\\n    /// A selfdestruct or ContractDelete targeted a contract with non-zero token balances.\\n    int32 internal constant CONTRACT_HAS_NON_ZERO_TOKEN_BALANCES = 316;\\n\\n    /// A contract referenced by a transaction is \\\"detached\\\"; that is, expired and lacking any hbar funds for auto-renewal payment---but still within its post-expiry grace period.\\n    int32 internal constant CONTRACT_EXPIRED_AND_PENDING_REMOVAL = 317;\\n\\n    /// A ContractUpdate requested removal of a contract's auto-renew account, but that contract has no auto-renew account.\\n    int32 internal constant CONTRACT_HAS_NO_AUTO_RENEW_ACCOUNT = 318;\\n\\n    /// A delete transaction submitted via HAPI set permanent_removal=true\\n    int32 internal constant PERMANENT_REMOVAL_REQUIRES_SYSTEM_INITIATION = 319;\\n\\n    /// A CryptoCreate or ContractCreate used the deprecated proxyAccountID field.\\n    int32 internal constant PROXY_ACCOUNT_ID_FIELD_IS_DEPRECATED = 320;\\n\\n    /// An account set the staked_account_id to itself in CryptoUpdate or ContractUpdate transactions.\\n    int32 internal constant SELF_STAKING_IS_NOT_ALLOWED = 321;\\n\\n    /// The staking account id or staking node id given is invalid or does not exist.\\n    int32 internal constant INVALID_STAKING_ID = 322;\\n\\n    /// Native staking, while implemented, has not yet enabled by the council.\\n    int32 internal constant STAKING_NOT_ENABLED = 323;\\n\\n    /// The range provided in UtilPrng transaction is negative.\\n    int32 internal constant INVALID_PRNG_RANGE = 324;\\n\\n    /// The maximum number of entities allowed in the current price regime have been created.\\n    int32 internal constant MAX_ENTITIES_IN_PRICE_REGIME_HAVE_BEEN_CREATED = 325;\\n\\n    /// The full prefix signature for precompile is not valid\\n    int32 internal constant INVALID_FULL_PREFIX_SIGNATURE_FOR_PRECOMPILE = 326;\\n\\n    /// The combined balances of a contract and its auto-renew account (if any) did not cover the rent charged for net new storage used in a transaction.\\n    int32 internal constant INSUFFICIENT_BALANCES_FOR_STORAGE_RENT = 327;\\n\\n    /// A contract transaction tried to use more than the allowed number of child records, via either system contract records or internal contract creations.\\n    int32 internal constant MAX_CHILD_RECORDS_EXCEEDED = 328;\\n\\n    /// The combined balances of a contract and its auto-renew account (if any) or balance of an account did not cover the auto-renewal fees in a transaction.\\n    int32 internal constant INSUFFICIENT_BALANCES_FOR_RENEWAL_FEES = 329;\\n\\n    /// A transaction's protobuf message includes unknown fields; could mean that a client expects not-yet-released functionality to be available.\\n    int32 internal constant TRANSACTION_HAS_UNKNOWN_FIELDS = 330;\\n\\n    /// The account cannot be modified. Account's key is not set\\n    int32 internal constant ACCOUNT_IS_IMMUTABLE = 331;\\n\\n    /// An alias that is assigned to an account or contract cannot be assigned to another account or contract.\\n    int32 internal constant ALIAS_ALREADY_ASSIGNED = 332;\\n\\n    /// A provided metadata key was invalid. Verification includes, for example, checking the size of Ed25519 and ECDSA(secp256k1) public keys.\\n    int32 internal constant INVALID_METADATA_KEY = 333;\\n\\n    /// Metadata key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_METADATA_KEY = 334;\\n\\n    /// Token Metadata is not provided\\n    int32 internal constant MISSING_TOKEN_METADATA = 335;\\n\\n    /// NFT serial numbers are missing in the TokenUpdateNftsTransactionBody\\n    int32 internal constant MISSING_SERIAL_NUMBERS = 336;\\n\\n    /// Admin key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_ADMIN_KEY = 337;\\n\\n    /// A transaction failed because the consensus node identified is deleted from the address book.\\n    int32 internal constant NODE_DELETED = 338;\\n\\n    /// A transaction failed because the consensus node identified is not valid or does not exist in state.\\n    int32 internal constant INVALID_NODE_ID = 339;\\n\\n    /// A transaction failed because one or more entries in the list of service endpoints for the `gossip_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port.\\n    int32 internal constant INVALID_GOSSIP_ENDPOINT = 340;\\n\\n    /// A transaction failed because the node account identifier provided does not exist or is not valid.<br/> One common source of this error is providing a node account identifier using the \\\"alias\\\" form rather than \\\"numeric\\\" form.\\n    int32 internal constant INVALID_NODE_ACCOUNT_ID = 341;\\n\\n    /// A transaction failed because the description field cannot be encoded as UTF-8 or is more than 100 bytes when encoded.\\n    int32 internal constant INVALID_NODE_DESCRIPTION = 342;\\n\\n    /// A transaction failed because one or more entries in the list of service endpoints for the `service_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port.\\n    int32 internal constant INVALID_SERVICE_ENDPOINT = 343;\\n\\n    /// A transaction failed because the TLS certificate provided for the node is missing or invalid. <p> #### Probable Causes The certificate MUST be a TLS certificate of a type permitted for gossip signatures.<br/> The value presented MUST be a UTF-8 NFKD encoding of the TLS certificate.<br/> The certificate encoded MUST be in PEM format.<br/> The `gossip_ca_certificate` field is REQUIRED and MUST NOT be empty.\\n    int32 internal constant INVALID_GOSSIP_CA_CERTIFICATE = 344;\\n\\n    /// A transaction failed because the hash provided for the gRPC certificate is present but invalid. <p> #### Probable Causes The `grpc_certificate_hash` MUST be a SHA-384 hash.<br/> The input hashed MUST be a UTF-8 NFKD encoding of the actual TLS certificate.<br/> The certificate to be encoded MUST be in PEM format.\\n    int32 internal constant INVALID_GRPC_CERTIFICATE = 345;\\n\\n    /// The maximum automatic associations value is not valid.<br/> The most common cause for this error is a value less than `-1`.\\n    int32 internal constant INVALID_MAX_AUTO_ASSOCIATIONS = 346;\\n\\n    /// The maximum number of nodes allowed in the address book have been created.\\n    int32 internal constant MAX_NODES_CREATED = 347;\\n\\n    /// In ServiceEndpoint, domain_name and ipAddressV4 are mutually exclusive\\n    int32 internal constant IP_FQDN_CANNOT_BE_SET_FOR_SAME_ENDPOINT = 348;\\n\\n    /// Fully qualified domain name is not allowed in gossip_endpoint\\n    int32 internal constant GOSSIP_ENDPOINT_CANNOT_HAVE_FQDN = 349;\\n\\n    /// In ServiceEndpoint, domain_name size too large\\n    int32 internal constant FQDN_SIZE_TOO_LARGE = 350;\\n\\n    /// ServiceEndpoint is invalid\\n    int32 internal constant INVALID_ENDPOINT = 351;\\n\\n    /// The number of gossip endpoints exceeds the limit\\n    int32 internal constant GOSSIP_ENDPOINTS_EXCEEDED_LIMIT = 352;\\n\\n    /// The transaction attempted to use duplicate `TokenReference`.<br/> This affects `TokenReject` attempting to reject same token reference more than once.\\n    int32 internal constant TOKEN_REFERENCE_REPEATED = 353;\\n\\n    /// The account id specified as the owner in `TokenReject` is invalid or does not exist.\\n    int32 internal constant INVALID_OWNER_ID = 354;\\n\\n    /// The transaction attempted to use more than the allowed number of `TokenReference`.\\n    int32 internal constant TOKEN_REFERENCE_LIST_SIZE_LIMIT_EXCEEDED = 355;\\n\\n    /// The number of service endpoints exceeds the limit\\n    int32 internal constant SERVICE_ENDPOINTS_EXCEEDED_LIMIT = 356;\\n\\n    /// The IPv4 address is invalid\\n    int32 internal constant INVALID_IPV4_ADDRESS = 357;\\n\\n    /// The transaction attempted to use empty `TokenReference` list.\\n    int32 internal constant EMPTY_TOKEN_REFERENCE_LIST = 358;\\n\\n    /// The node account is not allowed to be updated\\n    int32 internal constant UPDATE_NODE_ACCOUNT_NOT_ALLOWED = 359;\\n\\n    /// The token has no metadata or supply key\\n    int32 internal constant TOKEN_HAS_NO_METADATA_OR_SUPPLY_KEY = 360;\\n\\n    /// The list of `PendingAirdropId`s is empty and MUST NOT be empty.\\n    int32 internal constant EMPTY_PENDING_AIRDROP_ID_LIST = 361;\\n\\n    /// A `PendingAirdropId` is repeated in a `claim` or `cancel` transaction.\\n    int32 internal constant PENDING_AIRDROP_ID_REPEATED = 362;\\n\\n    /// The number of `PendingAirdropId` values in the list exceeds the maximum allowable number.\\n    int32 internal constant PENDING_AIRDROP_ID_LIST_TOO_LONG = 363;\\n\\n    /// A pending airdrop already exists for the specified NFT.\\n    int32 internal constant PENDING_NFT_AIRDROP_ALREADY_EXISTS = 364;\\n\\n    /// The identified account is sender for one or more pending airdrop(s) and cannot be deleted. <p> The requester SHOULD cancel all pending airdrops before resending this transaction.\\n    int32 internal constant ACCOUNT_HAS_PENDING_AIRDROPS = 365;\\n\\n    /// Consensus throttle did not allow execution of this transaction.<br/> The transaction should be retried after a modest delay.\\n    int32 internal constant THROTTLED_AT_CONSENSUS = 366;\\n\\n    /// The provided pending airdrop id is invalid.<br/> This pending airdrop MAY already be claimed or cancelled. <p> The client SHOULD query a mirror node to determine the current status of the pending airdrop.\\n    int32 internal constant INVALID_PENDING_AIRDROP_ID = 367;\\n\\n    /// The token to be airdropped has a fallback royalty fee and cannot be sent or claimed via an airdrop transaction.\\n    int32 internal constant TOKEN_AIRDROP_WITH_FALLBACK_ROYALTY = 368;\\n\\n    /// This airdrop claim is for a pending airdrop with an invalid token.<br/> The token might be deleted, or the sender may not have enough tokens to fulfill the offer. <p> The client SHOULD query mirror node to determine the status of the pending airdrop and whether the sender can fulfill the offer.\\n    int32 internal constant INVALID_TOKEN_IN_PENDING_AIRDROP = 369;\\n\\n    /// A scheduled transaction configured to wait for expiry to execute was given an expiry time at which there is already too many transactions scheduled to expire; its creation must be retried with a different expiry.\\n    int32 internal constant SCHEDULE_EXPIRY_IS_BUSY = 370;\\n\\n    /// The provided gRPC certificate hash is invalid.\\n    int32 internal constant INVALID_GRPC_CERTIFICATE_HASH = 371;\\n\\n    /// A scheduled transaction configured to wait for expiry to execute was not given an explicit expiration time.\\n    int32 internal constant MISSING_EXPIRY_TIME = 372;\\n\\n    /// A contract operation attempted to schedule another transaction after it had already scheduled a recursive contract call.\\n    int32 internal constant NO_SCHEDULING_ALLOWED_AFTER_SCHEDULED_RECURSION = 373;\\n\\n    /// A contract can schedule recursive calls a finite number of times (this is approximately four million times with typical network configuration.)\\n    int32 internal constant RECURSIVE_SCHEDULING_LIMIT_REACHED = 374;\\n\\n    /// The target network is waiting for the ledger ID to be set, which is a side effect of finishing the network's TSS construction.\\n    int32 internal constant WAITING_FOR_LEDGER_ID = 375;\\n\\n    /// The provided fee exempt key list size exceeded the limit.\\n    int32 internal constant MAX_ENTRIES_FOR_FEE_EXEMPT_KEY_LIST_EXCEEDED = 376;\\n\\n    /// The provided fee exempt key list contains duplicated keys.\\n    int32 internal constant FEE_EXEMPT_KEY_LIST_CONTAINS_DUPLICATED_KEYS = 377;\\n\\n    /// The provided fee exempt key list contains an invalid key.\\n    int32 internal constant INVALID_KEY_IN_FEE_EXEMPT_KEY_LIST = 378;\\n\\n    /// The provided fee schedule key contains an invalid key.\\n    int32 internal constant INVALID_FEE_SCHEDULE_KEY = 379;\\n\\n    /// If a fee schedule key is not set when we create a topic we cannot add it on update.\\n    int32 internal constant FEE_SCHEDULE_KEY_CANNOT_BE_UPDATED = 380;\\n\\n    /// If the topic's custom fees are updated the topic SHOULD have a fee schedule key\\n    int32 internal constant FEE_SCHEDULE_KEY_NOT_SET = 381;\\n\\n    /// The fee amount is exceeding the amount that the payer is willing to pay.\\n    int32 internal constant MAX_CUSTOM_FEE_LIMIT_EXCEEDED = 382;\\n\\n    /// There are no corresponding custom fees.\\n    int32 internal constant NO_VALID_MAX_CUSTOM_FEE = 383;\\n\\n    /// The provided list contains invalid max custom fee.\\n    int32 internal constant INVALID_MAX_CUSTOM_FEES = 384;\\n\\n    /// The provided max custom fee list contains fees with duplicate denominations.\\n    int32 internal constant DUPLICATE_DENOMINATION_IN_MAX_CUSTOM_FEE_LIST = 385;\\n\\n    /// The provided max custom fee list contains fees with duplicate account id.\\n    int32 internal constant DUPLICATE_ACCOUNT_ID_IN_MAX_CUSTOM_FEE_LIST = 386;\\n\\n    /// Max custom fees list is not supported for this operation.\\n    int32 internal constant MAX_CUSTOM_FEES_IS_NOT_SUPPORTED = 387;\\n\\n}\",\"keccak256\":\"0xfea411961dc0166189bd93b4f23e8e53430b5090f8dc0d25e870472d779603ee\",\"license\":\"Apache-2.0\"},\"app/contracts/HederaTokenService.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.5.0 <0.9.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./HederaResponseCodes.sol\\\";\\nimport \\\"./IHederaTokenService.sol\\\";\\n\\nabstract contract HederaTokenService {\\n    address constant precompileAddress = address(0x167);\\n    // 90 days in seconds\\n    int32 constant defaultAutoRenewPeriod = 7776000;\\n\\n    modifier nonEmptyExpiry(IHederaTokenService.HederaToken memory token)\\n    {\\n        if (token.expiry.second == 0 && token.expiry.autoRenewPeriod == 0) {\\n            token.expiry.autoRenewPeriod = defaultAutoRenewPeriod;\\n        }\\n        _;\\n    }\\n\\n    /// Generic event\\n    event CallResponseEvent(bool, bytes);\\n\\n    /// Performs transfers among combinations of tokens and hbars\\n    /// @param transferList the list of hbar transfers to do\\n    /// @param tokenTransfers the list of transfers to do\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\\n    function cryptoTransfer(IHederaTokenService.TransferList memory transferList, IHederaTokenService.TokenTransferList[] memory tokenTransfers) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.cryptoTransfer.selector, transferList, tokenTransfers));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Mints an amount of the token to the defined treasury account\\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\\n    ///               token. The new supply must be lower than 2^63.\\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\\n    ///                 Maximum allowed size of each metadata is 100 bytes\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, otherwise empty.\\n    function mintToken(address token, int64 amount, bytes[] memory metadata) internal\\n    returns (int responseCode, int64 newTotalSupply, int64[] memory serialNumbers)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.mintToken.selector,\\n            token, amount, metadata));\\n        (responseCode, newTotalSupply, serialNumbers) =\\n        success\\n        ? abi.decode(result, (int32, int64, int64[]))\\n        : (HederaResponseCodes.UNKNOWN, int64(0), new int64[](0));\\n    }\\n\\n    /// Burns an amount of the token from the defined treasury account\\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\\n    ///                account (0; balance], represented in the lowest denomination.\\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    function burnToken(address token, int64 amount, int64[] memory serialNumbers) internal\\n    returns (int responseCode, int64 newTotalSupply)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.burnToken.selector,\\n            token, amount, serialNumbers));\\n        (responseCode, newTotalSupply) =\\n        success\\n        ? abi.decode(result, (int32, int64))\\n        : (HederaResponseCodes.UNKNOWN, int64(0));\\n    }\\n\\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\\n    ///  Account's key or called from the accounts contract key\\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    ///  If an association between the provided account and any of the tokens already exists, the\\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\\n    ///  On success, associations between the provided account and tokens are made and the account is\\n    ///    ready to interact with the tokens.\\n    /// @param account The account to be associated with the provided tokens\\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\\n    ///               token type\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function associateTokens(address account, address[] memory tokens) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.associateTokens.selector,\\n            account, tokens));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    function associateToken(address account, address token) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.associateToken.selector,\\n            account, token));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\\n    /// Account's key.\\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    /// If an association between the provided account and any of the tokens does not exist, the\\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\\n    /// not zero.\\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\\n    /// On success, associations between the provided account and tokens are removed.\\n    /// @param account The account to be dissociated from the provided tokens\\n    /// @param tokens The tokens to be dissociated from the provided account.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function dissociateTokens(address account, address[] memory tokens) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.dissociateTokens.selector,\\n            account, tokens));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    function dissociateToken(address account, address token) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.dissociateToken.selector,\\n            account, token));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleToken(\\n        IHederaTokenService.HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals) nonEmptyExpiry(token)\\n    internal returns (int responseCode, address tokenAddress) {\\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\\n            abi.encodeWithSelector(IHederaTokenService.createFungibleToken.selector,\\n            token, initialTotalSupply, decimals));\\n\\n\\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param fractionalFees list of fractional fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleTokenWithCustomFees(\\n        IHederaTokenService.HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals,\\n        IHederaTokenService.FixedFee[] memory fixedFees,\\n        IHederaTokenService.FractionalFee[] memory fractionalFees) nonEmptyExpiry(token)\\n    internal returns (int responseCode, address tokenAddress) {\\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\\n            abi.encodeWithSelector(IHederaTokenService.createFungibleTokenWithCustomFees.selector,\\n            token, initialTotalSupply, decimals, fixedFees, fractionalFees));\\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleToken(IHederaTokenService.HederaToken memory token) nonEmptyExpiry(token)\\n    internal returns (int responseCode, address tokenAddress) {\\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\\n            abi.encodeWithSelector(IHederaTokenService.createNonFungibleToken.selector, token));\\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param royaltyFees list of royalty fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleTokenWithCustomFees(\\n        IHederaTokenService.HederaToken memory token,\\n        IHederaTokenService.FixedFee[] memory fixedFees,\\n        IHederaTokenService.RoyaltyFee[] memory royaltyFees) nonEmptyExpiry(token)\\n    internal returns (int responseCode, address tokenAddress) {\\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\\n            abi.encodeWithSelector(IHederaTokenService.createNonFungibleTokenWithCustomFees.selector,\\n            token, fixedFees, royaltyFees));\\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Retrieves fungible specific token info for a fungible token\\n    /// @param token The ID of the token as a solidity address\\n    /// @dev This function reverts if the call is not successful\\n    function getFungibleTokenInfo(address token) internal returns (int responseCode, IHederaTokenService.FungibleTokenInfo memory tokenInfo) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getFungibleTokenInfo.selector, token));\\n        IHederaTokenService.FungibleTokenInfo memory defaultTokenInfo;\\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.FungibleTokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\\n    }\\n\\n    /// Retrieves general token info for a given token\\n    /// @param token The ID of the token as a solidity address\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenInfo(address token) internal returns (int responseCode, IHederaTokenService.TokenInfo memory tokenInfo) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenInfo.selector, token));\\n        IHederaTokenService.TokenInfo memory defaultTokenInfo;\\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.TokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\\n    }\\n\\n    /// Retrieves non-fungible specific token info for a given NFT\\n    /// @param token The ID of the token as a solidity address\\n    /// @dev This function reverts if the call is not successful\\n    function getNonFungibleTokenInfo(address token, int64 serialNumber) internal returns (int responseCode, IHederaTokenService.NonFungibleTokenInfo memory tokenInfo) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getNonFungibleTokenInfo.selector, token, serialNumber));\\n        IHederaTokenService.NonFungibleTokenInfo memory defaultTokenInfo;\\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.NonFungibleTokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\\n    }\\n\\n    /// Query token custom fees\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return fixedFees Set of fixed fees for `token`\\n    /// @return fractionalFees Set of fractional fees for `token`\\n    /// @return royaltyFees Set of royalty fees for `token`\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenCustomFees(address token) internal returns (int64 responseCode,\\n        IHederaTokenService.FixedFee[] memory fixedFees,\\n        IHederaTokenService.FractionalFee[] memory fractionalFees,\\n        IHederaTokenService.RoyaltyFee[] memory royaltyFees) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenCustomFees.selector, token));\\n        IHederaTokenService.FixedFee[] memory defaultFixedFees;\\n        IHederaTokenService.FractionalFee[] memory defaultFractionalFees;\\n        IHederaTokenService.RoyaltyFee[] memory defaultRoyaltyFees;\\n        (responseCode, fixedFees, fractionalFees, royaltyFees) =\\n        success ? abi.decode\\n        (result, (int32, IHederaTokenService.FixedFee[], IHederaTokenService.FractionalFee[], IHederaTokenService.RoyaltyFee[]))\\n        : (HederaResponseCodes.UNKNOWN, defaultFixedFees, defaultFractionalFees, defaultRoyaltyFees);\\n    }\\n\\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\\n    /// again it overwrites the current allowance with value.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The hedera token address to approve\\n    /// @param spender the account authorized to spend\\n    /// @param amount the amount of tokens authorized to spend.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approve(address token, address spender, uint256 amount) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.approve.selector,\\n            token, spender, amount));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Transfers `amount` tokens from `from` to `to` using the\\n    //  allowance mechanism. `amount` is then deducted from the caller's allowance.\\n    /// Only applicable to fungible tokens\\n    /// @param token The address of the fungible Hedera token to transfer\\n    /// @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\\n    /// @param to The account address of the receiver of the `amount` tokens\\n    /// @param amount The amount of tokens to transfer from `from` to `to`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFrom(address token, address from, address to, uint256 amount) external returns (int64 responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferFrom.selector,\\n            token, from, to, amount));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\\n    /// Only applicable to NFT tokens\\n    /// @param token The address of the non-fungible Hedera token to transfer\\n    /// @param from The account address of the owner of `serialNumber` of `token`\\n    /// @param to The account address of the receiver of `serialNumber`\\n    /// @param serialNumber The NFT serial number to transfer\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFromNFT(address token, address from, address to, uint256 serialNumber) external returns (int64 responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferFromNFT.selector,\\n            token, from, to, serialNumber));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Returns the amount which spender is still allowed to withdraw from owner.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The Hedera token address to check the allowance of\\n    /// @param owner the owner of the tokens to be spent\\n    /// @param spender the spender of the tokens\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function allowance(address token, address owner, address spender) internal returns (int responseCode, uint256 amount)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.allowance.selector,\\n            token, owner, spender));\\n        (responseCode, amount) = success ? abi.decode(result, (int32, uint256)) : (HederaResponseCodes.UNKNOWN, 0);\\n    }\\n\\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\\n    /// @param serialNumber The NFT serial number  to approve\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approveNFT(address token, address approved, uint256 serialNumber) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.approveNFT.selector,\\n            token, approved, serialNumber));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Get the approved address for a single NFT\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to check approval\\n    /// @param serialNumber The NFT to find the approved address for\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved The approved address for this NFT, or the zero address if there is none\\n    function getApproved(address token, uint256 serialNumber) internal returns (int responseCode, address approved)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getApproved.selector,\\n            token, serialNumber));\\n        (responseCode, approved) =\\n        success\\n        ? abi.decode(result, (int32, address))\\n        : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Query if token account is frozen\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return frozen True if `account` is frozen for `token`\\n    /// @dev This function reverts if the call is not successful\\n    function isFrozen(address token, address account) internal returns (int64 responseCode, bool frozen){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.isFrozen.selector, token, account));\\n        (responseCode, frozen) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Query if token account has kyc granted\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return kycGranted True if `account` has kyc granted for `token`\\n    /// @dev This function reverts if the call is not successful\\n    function isKyc(address token, address account) internal returns (int64 responseCode, bool kycGranted){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.isKyc.selector, token, account));\\n        (responseCode, kycGranted) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Operation to freeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be frozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function freezeToken(address token, address account) internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.freezeToken.selector, token, account));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to unfreeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be unfrozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unfreezeToken(address token, address account) internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.unfreezeToken.selector, token, account));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to grant kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to grant kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function grantTokenKyc(address token, address account) internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.grantTokenKyc.selector, token, account));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to revoke kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function revokeTokenKyc(address token, address account) internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.revokeTokenKyc.selector, token, account));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Enable or disable approval for a third party (\\\"operator\\\") to manage\\n    ///  all of `msg.sender`'s assets\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param operator Address to add to the set of authorized operators\\n    /// @param approved True if the operator is approved, false to revoke approval\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function setApprovalForAll(address token, address operator, bool approved) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.setApprovalForAll.selector,\\n            token, operator, approved));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Query if an address is an authorized operator for another address\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param owner The address that owns the NFTs\\n    /// @param operator The address that acts on behalf of the owner\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\\n    function isApprovedForAll(address token, address owner, address operator) internal returns (int responseCode, bool approved)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.isApprovedForAll.selector,\\n            token, owner, operator));\\n        (responseCode, approved) =\\n        success\\n        ? abi.decode(result, (int32, bool))\\n        : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Query token default freeze status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenDefaultFreezeStatus(address token) internal returns (int responseCode, bool defaultFreezeStatus) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenDefaultFreezeStatus.selector, token));\\n        (responseCode, defaultFreezeStatus) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Query token default kyc status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenDefaultKycStatus(address token) internal returns (int responseCode, bool defaultKycStatus) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenDefaultKycStatus.selector, token));\\n        (responseCode, defaultKycStatus) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /**********************\\n     * ABI v1 calls       *\\n     **********************/\\n\\n    /// Initiates a Fungible Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param accountIds account to do a transfer to/from\\n    /// @param amounts The amount from the accountId at the same index\\n    function transferTokens(address token, address[] memory accountIds, int64[] memory amounts) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferTokens.selector,\\n            token, accountIds, amounts));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Initiates a Non-Fungable Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param sender the sender of an nft\\n    /// @param receiver the receiver of the nft sent by the same index at sender\\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\\n    function transferNFTs(address token, address[] memory sender, address[] memory receiver, int64[] memory serialNumber)\\n    internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferNFTs.selector,\\n            token, sender, receiver, serialNumber));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param receiver The receiver of the transaction\\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\\n    function transferToken(address token, address sender, address receiver, int64 amount) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferToken.selector,\\n            token, sender, receiver, amount));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param receiver The receiver of the transaction\\n    /// @param serialNumber The serial number of the NFT to transfer.\\n    function transferNFT(address token, address sender, address receiver, int64 serialNumber) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferNFT.selector,\\n            token, sender, receiver, serialNumber));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to pause token\\n    /// @param token The token address to be paused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function pauseToken(address token) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.pauseToken.selector, token));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to unpause token\\n    /// @param token The token address to be unpaused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unpauseToken(address token) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.unpauseToken.selector, token));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to wipe fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param amount The number of tokens to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccount(address token, address account, int64 amount) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.wipeTokenAccount.selector, token, account, amount));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to wipe non fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param  serialNumbers The serial numbers of token to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccountNFT(address token, address account, int64[] memory serialNumbers) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.wipeTokenAccountNFT.selector, token, account, serialNumbers));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to delete token\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function deleteToken(address token) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.deleteToken.selector, token));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to update token keys\\n    /// @param token The token address\\n    /// @param keys The token keys\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenKeys(address token, IHederaTokenService.TokenKey[] memory keys)\\n    internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateTokenKeys.selector, token, keys));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Query token KeyValue\\n    /// @param token The token address to check\\n    /// @param keyType The keyType of the desired KeyValue\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return key KeyValue info for key of type `keyType`\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenKey(address token, uint keyType)\\n    internal returns (int64 responseCode, IHederaTokenService.KeyValue memory key){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenKey.selector, token, keyType));\\n        IHederaTokenService.KeyValue memory defaultKeyValueInfo;\\n        (responseCode, key) = success ? abi.decode(result, (int32,IHederaTokenService.KeyValue) ) : (HederaResponseCodes.UNKNOWN, defaultKeyValueInfo);\\n    }\\n\\n\\n    /// Query if valid token found for the given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return isTokenFlag True if valid token found for the given address\\n    /// @dev This function reverts if the call is not successful\\n    function isToken(address token) internal returns (int64 responseCode, bool isTokenFlag) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.isToken.selector, token));\\n        (responseCode, isTokenFlag) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Query to return the token type for a given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenType(address token) internal returns (int64 responseCode, int32 tokenType) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenType.selector, token));\\n        (responseCode, tokenType) = success ? abi.decode(result, (int32, int32)) : (HederaResponseCodes.UNKNOWN, - 1);\\n    }\\n\\n    /// Operation to get token expiry info\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return expiryInfo The expiry info of the token\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenExpiryInfo(address token) internal returns (int responseCode, IHederaTokenService.Expiry memory expiryInfo){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenExpiryInfo.selector, token));\\n        IHederaTokenService.Expiry memory defaultExpiryInfo;\\n        (responseCode, expiryInfo) = success ? abi.decode(result, (int32, IHederaTokenService.Expiry)) : (HederaResponseCodes.UNKNOWN, defaultExpiryInfo);\\n    }\\n\\n    /// Operation to update token expiry info\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenExpiryInfo(address token, IHederaTokenService.Expiry memory expiryInfo) internal returns (int responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateTokenExpiryInfo.selector, token, expiryInfo));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to update token info\\n    /// @param token The token address\\n    /// @param tokenInfo The hedera token info to update token with\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenInfo(address token, IHederaTokenService.HederaToken memory tokenInfo) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateTokenInfo.selector, token, tokenInfo));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Redirect for token\\n    /// @param token The token address\\n    /// @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return response The result of the call that had been encoded and sent for execution.\\n    function redirectForToken(address token, bytes memory encodedFunctionSelector) external returns (int responseCode, bytes memory response) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.redirectForToken.selector, token, encodedFunctionSelector)\\n        );\\n\\n        emit CallResponseEvent(success, result);\\n        (responseCode, response) = success ? (HederaResponseCodes.SUCCESS, result) : (HederaResponseCodes.UNKNOWN, bytes(\\\"\\\"));\\n    }\\n\\n    /// Update the custom fees for a fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param fractionalFees Set of fractional fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateFungibleTokenCustomFees(address token,  IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.FractionalFee[] memory fractionalFees) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateFungibleTokenCustomFees.selector, token, fixedFees, fractionalFees));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Update the custom fees for a non-fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param royaltyFees Set of royalty fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateNonFungibleTokenCustomFees(address token, IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.RoyaltyFee[] memory royaltyFees) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateNonFungibleTokenCustomFees.selector, token, fixedFees, royaltyFees));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// @notice Airdrop one or more tokens to one or more accounts\\n    /// @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function airdropTokens(IHederaTokenService.TokenTransferList[] memory tokenTransfers) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.airdropTokens.selector, tokenTransfers));\\n\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// @notice Cancels pending airdrops that have not yet been claimed\\n    /// @param pendingAirdrops Array of pending airdrops to cancel\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function cancelAirdrops(IHederaTokenService.PendingAirdrop[] memory pendingAirdrops) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.cancelAirdrops.selector, pendingAirdrops)\\n        );\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// @notice Claims pending airdrops that were sent to the calling account\\n    /// @param pendingAirdrops Array of pending airdrops to claim\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function claimAirdrops(IHederaTokenService.PendingAirdrop[] memory pendingAirdrops) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.claimAirdrops.selector, pendingAirdrops)\\n        );\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// @notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\\n    /// @param rejectingAddress The address rejecting the tokens\\n    /// @param ftAddresses Array of fungible token addresses to reject\\n    /// @param nftIds Array of NFT IDs to reject\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function rejectTokens(address rejectingAddress, address[] memory ftAddresses, IHederaTokenService.NftID[] memory nftIds) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.rejectTokens.selector, rejectingAddress, ftAddresses, nftIds)\\n        );\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n}\",\"keccak256\":\"0x6ee83b480cc0c8cb900142a5c24bf3c630024db9928d7239171b146cb22b0e1d\",\"license\":\"Apache-2.0\"},\"app/contracts/IHederaTokenService.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.9 <0.9.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IHederaTokenService {\\n    /// Transfers cryptocurrency among two or more accounts by making the desired adjustments to their\\n    /// balances. Each transfer list can specify up to 10 adjustments. Each negative amount is withdrawn\\n    /// from the corresponding account (a sender), and each positive one is added to the corresponding\\n    /// account (a receiver). The amounts list must sum to zero. Each amount is a number of tinybars\\n    /// (there are 100,000,000 tinybars in one hbar).  If any sender account fails to have sufficient\\n    /// hbars, then the entire transaction fails, and none of those transfers occur, though the\\n    /// transaction fee is still charged. This transaction must be signed by the keys for all the sending\\n    /// accounts, and for any receiving accounts that have receiverSigRequired == true. The signatures\\n    /// are in the same order as the accounts, skipping those accounts that don't need a signature.\\n    /// @custom:version 0.3.0 previous version did not include isApproval\\n    struct AccountAmount {\\n        // The Account ID, as a solidity address, that sends/receives cryptocurrency or tokens\\n        address accountID;\\n\\n        // The amount of  the lowest denomination of the given token that\\n        // the account sends(negative) or receives(positive)\\n        int64 amount;\\n\\n        // If true then the transfer is expected to be an approved allowance and the\\n        // accountID is expected to be the owner. The default is false (omitted).\\n        bool isApproval;\\n    }\\n\\n    /// A sender account, a receiver account, and the serial number of an NFT of a Token with\\n    /// NON_FUNGIBLE_UNIQUE type. When minting NFTs the sender will be the default AccountID instance\\n    /// (0.0.0 aka 0x0) and when burning NFTs, the receiver will be the default AccountID instance.\\n    /// @custom:version 0.3.0 previous version did not include isApproval\\n    struct NftTransfer {\\n        // The solidity address of the sender\\n        address senderAccountID;\\n\\n        // The solidity address of the receiver\\n        address receiverAccountID;\\n\\n        // The serial number of the NFT\\n        int64 serialNumber;\\n\\n        // If true then the transfer is expected to be an approved allowance and the\\n        // accountID is expected to be the owner. The default is false (omitted).\\n        bool isApproval;\\n    }\\n\\n    struct TokenTransferList {\\n        // The ID of the token as a solidity address\\n        address token;\\n\\n        // Applicable to tokens of type FUNGIBLE_COMMON. Multiple list of AccountAmounts, each of which\\n        // has an account and amount.\\n        AccountAmount[] transfers;\\n\\n        // Applicable to tokens of type NON_FUNGIBLE_UNIQUE. Multiple list of NftTransfers, each of\\n        // which has a sender and receiver account, including the serial number of the NFT\\n        NftTransfer[] nftTransfers;\\n    }\\n\\n    struct TransferList {\\n        // Multiple list of AccountAmounts, each of which has an account and amount.\\n        // Used to transfer hbars between the accounts in the list.\\n        AccountAmount[] transfers;\\n    }\\n\\n    /// Expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\\n    struct Expiry {\\n        // The epoch second at which the token should expire; if an auto-renew account and period are\\n        // specified, this is coerced to the current epoch second plus the autoRenewPeriod\\n        int64 second;\\n\\n        // ID of an account which will be automatically charged to renew the token's expiration, at\\n        // autoRenewPeriod interval, expressed as a solidity address\\n        address autoRenewAccount;\\n\\n        // The interval at which the auto-renew account will be charged to extend the token's expiry\\n        int64 autoRenewPeriod;\\n    }\\n\\n    /// A Key can be a public key from either the Ed25519 or ECDSA(secp256k1) signature schemes, where\\n    /// in the ECDSA(secp256k1) case we require the 33-byte compressed form of the public key. We call\\n    /// these public keys <b>primitive keys</b>.\\n    /// A Key can also be the ID of a smart contract instance, which is then authorized to perform any\\n    /// precompiled contract action that requires this key to sign.\\n    /// Note that when a Key is a smart contract ID, it <i>doesn't</i> mean the contract with that ID\\n    /// will actually create a cryptographic signature. It only means that when the contract calls a\\n    /// precompiled contract, the resulting \\\"child transaction\\\" will be authorized to perform any action\\n    /// controlled by the Key.\\n    /// Exactly one of the possible values should be populated in order for the Key to be valid.\\n    struct KeyValue {\\n\\n        // if set to true, the key of the calling Hedera account will be inherited as the token key\\n        bool inheritAccountKey;\\n\\n        // smart contract instance that is authorized as if it had signed with a key\\n        address contractId;\\n\\n        // Ed25519 public key bytes\\n        bytes ed25519;\\n\\n        // Compressed ECDSA(secp256k1) public key bytes\\n        bytes ECDSA_secp256k1;\\n\\n        // A smart contract that, if the recipient of the active message frame, should be treated\\n        // as having signed. (Note this does not mean the <i>code being executed in the frame</i>\\n        // will belong to the given contract, since it could be running another contract's code via\\n        // <tt>delegatecall</tt>. So setting this key is a more permissive version of setting the\\n        // contractID key, which also requires the code in the active message frame belong to the\\n        // the contract with the given id.)\\n        address delegatableContractId;\\n    }\\n\\n    /// A list of token key types the key should be applied to and the value of the key\\n    struct TokenKey {\\n\\n        // bit field representing the key type. Keys of all types that have corresponding bits set to 1\\n        // will be created for the token.\\n        // 0th bit: adminKey\\n        // 1st bit: kycKey\\n        // 2nd bit: freezeKey\\n        // 3rd bit: wipeKey\\n        // 4th bit: supplyKey\\n        // 5th bit: feeScheduleKey\\n        // 6th bit: pauseKey\\n        // 7th bit: ignored\\n        uint keyType;\\n\\n        // the value that will be set to the key type\\n        KeyValue key;\\n    }\\n\\n    /// Basic properties of a Hedera Token - name, symbol, memo, tokenSupplyType, maxSupply,\\n    /// treasury, freezeDefault. These properties are related both to Fungible and NFT token types.\\n    struct HederaToken {\\n        // The publicly visible name of the token. The token name is specified as a Unicode string.\\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\\n        string name;\\n\\n        // The publicly visible token symbol. The token symbol is specified as a Unicode string.\\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\\n        string symbol;\\n\\n        // The ID of the account which will act as a treasury for the token as a solidity address.\\n        // This account will receive the specified initial supply or the newly minted NFTs in\\n        // the case for NON_FUNGIBLE_UNIQUE Type\\n        address treasury;\\n\\n        // The memo associated with the token (UTF-8 encoding max 100 bytes)\\n        string memo;\\n\\n        // IWA compatibility. Specified the token supply type. Defaults to INFINITE\\n        bool tokenSupplyType;\\n\\n        // IWA Compatibility. Depends on TokenSupplyType. For tokens of type FUNGIBLE_COMMON - the\\n        // maximum number of tokens that can be in circulation. For tokens of type NON_FUNGIBLE_UNIQUE -\\n        // the maximum number of NFTs (serial numbers) that can be minted. This field can never be changed!\\n        int64 maxSupply;\\n\\n        // The default Freeze status (frozen or unfrozen) of Hedera accounts relative to this token. If\\n        // true, an account must be unfrozen before it can receive the token\\n        bool freezeDefault;\\n\\n        // list of keys to set to the token - removed due to Solidity compiler limitation\\n        // TokenKey[] tokenKeys;\\n\\n        // expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\\n        Expiry expiry;\\n    }\\n\\n    /// Additional post creation fungible and non fungible properties of a Hedera Token.\\n    struct TokenInfo {\\n        /// Basic properties of a Hedera Token\\n        HederaToken token;\\n\\n        /// The number of tokens (fungible) or serials (non-fungible) of the token\\n        int64 totalSupply;\\n\\n        /// Specifies whether the token is deleted or not\\n        bool deleted;\\n\\n        /// Specifies whether the token kyc was defaulted with KycNotApplicable (true) or Revoked (false)\\n        bool defaultKycStatus;\\n\\n        /// Specifies whether the token is currently paused or not\\n        bool pauseStatus;\\n\\n        /// The fixed fees collected when transferring the token\\n        FixedFee[] fixedFees;\\n\\n        /// The fractional fees collected when transferring the token\\n        FractionalFee[] fractionalFees;\\n\\n        /// The royalty fees collected when transferring the token\\n        RoyaltyFee[] royaltyFees;\\n\\n        /// The ID of the network ledger\\n        string ledgerId;\\n    }\\n\\n    /// Additional fungible properties of a Hedera Token.\\n    struct FungibleTokenInfo {\\n        /// The shared hedera token info\\n        TokenInfo tokenInfo;\\n\\n        /// The number of decimal places a token is divisible by\\n        int32 decimals;\\n    }\\n\\n    /// Additional non fungible properties of a Hedera Token.\\n    struct NonFungibleTokenInfo {\\n        /// The shared hedera token info\\n        TokenInfo tokenInfo;\\n\\n        /// The serial number of the nft\\n        int64 serialNumber;\\n\\n        /// The account id specifying the owner of the non fungible token\\n        address ownerId;\\n\\n        /// The epoch second at which the token was created.\\n        int64 creationTime;\\n\\n        /// The unique metadata of the NFT\\n        bytes metadata;\\n\\n        /// The account id specifying an account that has been granted spending permissions on this nft\\n        address spenderId;\\n    }\\n\\n    /// A fixed number of units (hbar or token) to assess as a fee during a transfer of\\n    /// units of the token to which this fixed fee is attached. The denomination of\\n    /// the fee depends on the values of tokenId, useHbarsForPayment and\\n    /// useCurrentTokenForPayment. Exactly one of the values should be set.\\n    struct FixedFee {\\n\\n        int64 amount;\\n\\n        // Specifies ID of token that should be used for fixed fee denomination\\n        address tokenId;\\n\\n        // Specifies this fixed fee should be denominated in Hbar\\n        bool useHbarsForPayment;\\n\\n        // Specifies this fixed fee should be denominated in the Token currently being created\\n        bool useCurrentTokenForPayment;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// A fraction of the transferred units of a token to assess as a fee. The amount assessed will never\\n    /// be less than the given minimumAmount, and never greater than the given maximumAmount.  The\\n    /// denomination is always units of the token to which this fractional fee is attached.\\n    struct FractionalFee {\\n        // A rational number's numerator, used to set the amount of a value transfer to collect as a custom fee\\n        int64 numerator;\\n\\n        // A rational number's denominator, used to set the amount of a value transfer to collect as a custom fee\\n        int64 denominator;\\n\\n        // The minimum amount to assess\\n        int64 minimumAmount;\\n\\n        // The maximum amount to assess (zero implies no maximum)\\n        int64 maximumAmount;\\n        bool netOfTransfers;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// A fee to assess during a transfer that changes ownership of an NFT. Defines the fraction of\\n    /// the fungible value exchanged for an NFT that the ledger should collect as a royalty. (\\\"Fungible\\n    /// value\\\" includes both \\u210f and units of fungible HTS tokens.) When the NFT sender does not receive\\n    /// any fungible value, the ledger will assess the fallback fee, if present, to the new NFT owner.\\n    /// Royalty fees can only be added to tokens of type type NON_FUNGIBLE_UNIQUE.\\n    struct RoyaltyFee {\\n        // A fraction's numerator of fungible value exchanged for an NFT to collect as royalty\\n        int64 numerator;\\n\\n        // A fraction's denominator of fungible value exchanged for an NFT to collect as royalty\\n        int64 denominator;\\n\\n        // If present, the fee to assess to the NFT receiver when no fungible value\\n        // is exchanged with the sender. Consists of:\\n        // amount: the amount to charge for the fee\\n        // tokenId: Specifies ID of token that should be used for fixed fee denomination\\n        // useHbarsForPayment: Specifies this fee should be denominated in Hbar\\n        int64 amount;\\n        address tokenId;\\n        bool useHbarsForPayment;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// Represents a pending airdrop of a token or NFT to a receiver\\n    /// @param sender The address of the account sending the airdrop\\n    /// @param receiver The address of the account receiving the airdrop\\n    /// @param token The address of the token being airdropped\\n    /// @param serial For NFT airdrops, the serial number of the NFT. For fungible tokens, this should be 0\\n    struct PendingAirdrop {\\n        address sender;\\n        address receiver;\\n        address token;\\n        int64 serial;\\n    }\\n\\n    /// Represents a unique NFT by its token address and serial number\\n    /// @param nft The address of the NFT token\\n    /// @param serial The serial number that uniquely identifies this NFT within its token type\\n    struct NftID {\\n        address nft;\\n        int64 serial;\\n    }\\n\\n    /**********************\\n     * Direct HTS Calls   *\\n     **********************/\\n\\n    /// Performs transfers among combinations of tokens and hbars\\n    /// @param transferList the list of hbar transfers to do\\n    /// @param tokenTransfers the list of token transfers to do\\n    /// @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\\n    function cryptoTransfer(TransferList memory transferList, TokenTransferList[] memory tokenTransfers)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Mints an amount of the token to the defined treasury account\\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\\n    ///               token. The new supply must be lower than 2^63.\\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\\n    ///                 Maximum allowed size of each metadata is 100 bytes\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty.\\n    function mintToken(\\n        address token,\\n        int64 amount,\\n        bytes[] memory metadata\\n    )\\n        external\\n        returns (\\n            int64 responseCode,\\n            int64 newTotalSupply,\\n            int64[] memory serialNumbers\\n        );\\n\\n    /// Burns an amount of the token from the defined treasury account\\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\\n    ///                account (0; balance], represented in the lowest denomination.\\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    function burnToken(\\n        address token,\\n        int64 amount,\\n        int64[] memory serialNumbers\\n    ) external returns (int64 responseCode, int64 newTotalSupply);\\n\\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\\n    ///  Account's key or called from the accounts contract key\\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    ///  If an association between the provided account and any of the tokens already exists, the\\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\\n    ///  On success, associations between the provided account and tokens are made and the account is\\n    ///    ready to interact with the tokens.\\n    /// @param account The account to be associated with the provided tokens\\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\\n    ///               token type\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function associateTokens(address account, address[] memory tokens)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\\n    /// @param account The account to be associated with the provided token\\n    /// @param token The token to be associated with the provided account\\n    function associateToken(address account, address token)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\\n    /// Account's key.\\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    /// If an association between the provided account and any of the tokens does not exist, the\\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\\n    /// not zero.\\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\\n    /// On success, associations between the provided account and tokens are removed.\\n    /// @param account The account to be dissociated from the provided tokens\\n    /// @param tokens The tokens to be dissociated from the provided account.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function dissociateTokens(address account, address[] memory tokens)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\\n    /// @param account The account to be associated with the provided token\\n    /// @param token The token to be associated with the provided account\\n    function dissociateToken(address account, address token)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleToken(\\n        HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by.\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param fractionalFees list of fractional fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleTokenWithCustomFees(\\n        HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals,\\n        FixedFee[] memory fixedFees,\\n        FractionalFee[] memory fractionalFees\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleToken(HederaToken memory token)\\n        external\\n        payable\\n        returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param royaltyFees list of royalty fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleTokenWithCustomFees(\\n        HederaToken memory token,\\n        FixedFee[] memory fixedFees,\\n        RoyaltyFee[] memory royaltyFees\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /**********************\\n     * ABIV1 calls        *\\n     **********************/\\n\\n    /// Initiates a Fungible Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param accountId account to do a transfer to/from\\n    /// @param amount The amount from the accountId at the same index\\n    function transferTokens(\\n        address token,\\n        address[] memory accountId,\\n        int64[] memory amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Initiates a Non-Fungable Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param sender the sender of an nft\\n    /// @param receiver the receiver of the nft sent by the same index at sender\\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\\n    function transferNFTs(\\n        address token,\\n        address[] memory sender,\\n        address[] memory receiver,\\n        int64[] memory serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param recipient The receiver of the transaction\\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\\n    function transferToken(\\n        address token,\\n        address sender,\\n        address recipient,\\n        int64 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param recipient The receiver of the transaction\\n    /// @param serialNumber The serial number of the NFT to transfer.\\n    function transferNFT(\\n        address token,\\n        address sender,\\n        address recipient,\\n        int64 serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\\n    /// again it overwrites the current allowance with value.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The hedera token address to approve\\n    /// @param spender the account address authorized to spend\\n    /// @param amount the amount of tokens authorized to spend.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approve(\\n        address token,\\n        address spender,\\n        uint256 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers `amount` tokens from `from` to `to` using the\\n    //  allowance mechanism. `amount` is then deducted from the caller's allowance.\\n    /// Only applicable to fungible tokens\\n    /// @param token The address of the fungible Hedera token to transfer\\n    /// @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\\n    /// @param to The account address of the receiver of the `amount` tokens\\n    /// @param amount The amount of tokens to transfer from `from` to `to`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFrom(address token, address from, address to, uint256 amount) external returns (int64 responseCode);\\n\\n    /// Returns the amount which spender is still allowed to withdraw from owner.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The Hedera token address to check the allowance of\\n    /// @param owner the owner of the tokens to be spent\\n    /// @param spender the spender of the tokens\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return allowance The amount which spender is still allowed to withdraw from owner.\\n    function allowance(\\n        address token,\\n        address owner,\\n        address spender\\n    ) external returns (int64 responseCode, uint256 allowance);\\n\\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\\n    /// @param serialNumber The NFT serial number  to approve\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approveNFT(\\n        address token,\\n        address approved,\\n        uint256 serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\\n    /// Only applicable to NFT tokens\\n    /// @param token The address of the non-fungible Hedera token to transfer\\n    /// @param from The account address of the owner of `serialNumber` of `token`\\n    /// @param to The account address of the receiver of `serialNumber`\\n    /// @param serialNumber The NFT serial number to transfer\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFromNFT(address token, address from, address to, uint256 serialNumber) external returns (int64 responseCode);\\n\\n    /// Get the approved address for a single NFT\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to check approval\\n    /// @param serialNumber The NFT to find the approved address for\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved The approved address for this NFT, or the zero address if there is none\\n    function getApproved(address token, uint256 serialNumber)\\n        external\\n        returns (int64 responseCode, address approved);\\n\\n    /// Enable or disable approval for a third party (\\\"operator\\\") to manage\\n    ///  all of `msg.sender`'s assets\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param operator Address to add to the set of authorized operators\\n    /// @param approved True if the operator is approved, false to revoke approval\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function setApprovalForAll(\\n        address token,\\n        address operator,\\n        bool approved\\n    ) external returns (int64 responseCode);\\n\\n    /// Query if an address is an authorized operator for another address\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param owner The address that owns the NFTs\\n    /// @param operator The address that acts on behalf of the owner\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\\n    function isApprovedForAll(\\n        address token,\\n        address owner,\\n        address operator\\n    ) external returns (int64 responseCode, bool approved);\\n\\n    /// Query if token account is frozen\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return frozen True if `account` is frozen for `token`\\n    function isFrozen(address token, address account)\\n        external\\n        returns (int64 responseCode, bool frozen);\\n\\n    /// Query if token account has kyc granted\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return kycGranted True if `account` has kyc granted for `token`\\n    function isKyc(address token, address account)\\n        external\\n        returns (int64 responseCode, bool kycGranted);\\n\\n    /// Operation to delete token\\n    /// @param token The token address to be deleted\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function deleteToken(address token) external returns (int64 responseCode);\\n\\n    /// Query token custom fees\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return fixedFees Set of fixed fees for `token`\\n    /// @return fractionalFees Set of fractional fees for `token`\\n    /// @return royaltyFees Set of royalty fees for `token`\\n    function getTokenCustomFees(address token)\\n        external\\n        returns (int64 responseCode, FixedFee[] memory fixedFees, FractionalFee[] memory fractionalFees, RoyaltyFee[] memory royaltyFees);\\n\\n    /// Query token default freeze status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\\n    function getTokenDefaultFreezeStatus(address token)\\n        external\\n        returns (int64 responseCode, bool defaultFreezeStatus);\\n\\n    /// Query token default kyc status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\\n    function getTokenDefaultKycStatus(address token)\\n        external\\n        returns (int64 responseCode, bool defaultKycStatus);\\n\\n    /// Query token expiry info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return expiry Expiry info for `token`\\n    function getTokenExpiryInfo(address token)\\n        external\\n        returns (int64 responseCode, Expiry memory expiry);\\n\\n    /// Query fungible token info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return fungibleTokenInfo FungibleTokenInfo info for `token`\\n    function getFungibleTokenInfo(address token)\\n        external\\n        returns (int64 responseCode, FungibleTokenInfo memory fungibleTokenInfo);\\n\\n    /// Query token info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenInfo TokenInfo info for `token`\\n    function getTokenInfo(address token)\\n        external\\n        returns (int64 responseCode, TokenInfo memory tokenInfo);\\n\\n    /// Query token KeyValue\\n    /// @param token The token address to check\\n    /// @param keyType The keyType of the desired KeyValue\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return key KeyValue info for key of type `keyType`\\n    function getTokenKey(address token, uint keyType)\\n        external\\n        returns (int64 responseCode, KeyValue memory key);\\n\\n    /// Query non fungible token info\\n    /// @param token The token address to check\\n    /// @param serialNumber The NFT serialNumber to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`\\n    function getNonFungibleTokenInfo(address token, int64 serialNumber)\\n        external\\n        returns (int64 responseCode, NonFungibleTokenInfo memory nonFungibleTokenInfo);\\n\\n    /// Operation to freeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be frozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function freezeToken(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to unfreeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be unfrozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unfreezeToken(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to grant kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to grant kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function grantTokenKyc(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to revoke kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function revokeTokenKyc(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to pause token\\n    /// @param token The token address to be paused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function pauseToken(address token) external returns (int64 responseCode);\\n\\n    /// Operation to unpause token\\n    /// @param token The token address to be unpaused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unpauseToken(address token) external returns (int64 responseCode);\\n\\n    /// Operation to wipe fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param amount The number of tokens to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccount(\\n        address token,\\n        address account,\\n        int64 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Operation to wipe non fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param  serialNumbers The serial numbers of token to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccountNFT(\\n        address token,\\n        address account,\\n        int64[] memory serialNumbers\\n    ) external returns (int64 responseCode);\\n\\n    /// Operation to update token info\\n    /// @param token The token address\\n    /// @param tokenInfo The hedera token info to update token with\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenInfo(address token, HederaToken memory tokenInfo)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to update token expiry info\\n    /// @param token The token address\\n    /// @param expiryInfo The hedera token expiry info\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenExpiryInfo(address token, Expiry memory expiryInfo)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to update token expiry info\\n    /// @param token The token address\\n    /// @param keys The token keys\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenKeys(address token, TokenKey[] memory keys)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Query if valid token found for the given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return isToken True if valid token found for the given address\\n    function isToken(address token)\\n        external returns\\n        (int64 responseCode, bool isToken);\\n\\n    /// Query to return the token type for a given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\\n    function getTokenType(address token)\\n        external returns\\n        (int64 responseCode, int32 tokenType);\\n\\n    /// Initiates a Redirect For Token\\n    /// @param token The token address\\n    /// @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return response The result of the call that had been encoded and sent for execution.\\n    function redirectForToken(address token, bytes memory encodedFunctionSelector) external returns (int64 responseCode, bytes memory response);\\n\\n    /// Update the custom fees for a fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param fractionalFees Set of fractional fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateFungibleTokenCustomFees(address token,  IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.FractionalFee[] memory fractionalFees) external returns (int64 responseCode);\\n\\n    /// Update the custom fees for a non-fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param royaltyFees Set of royalty fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateNonFungibleTokenCustomFees(address token, IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.RoyaltyFee[] memory royaltyFees) external returns (int64 responseCode);\\n\\n    /// @notice Airdrop one or more tokens to one or more accounts\\n    /// @notice Recipients will receive tokens in one of these ways:\\n    /// @notice     - Immediately if already associated with the token\\n    /// @notice     - Immediately with auto-association if they have available slots\\n    /// @notice     - As a pending airdrop requiring claim if they have \\\"receiver signature required\\\" \\n    /// @notice     - As a pending airdrop requiring claim if they have no available auto-association slots\\n    /// @notice Immediate airdrops are irreversible, pending airdrops can be canceled\\n    /// @notice All transfer fees and auto-renewal rent costs are charged to the transaction submitter\\n    /// @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function airdropTokens(TokenTransferList[] memory tokenTransfers) external returns (int64 responseCode);\\n\\n    /// @notice Cancels pending airdrops that have not yet been claimed\\n    /// @param pendingAirdrops Array of pending airdrops to cancel\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function cancelAirdrops(PendingAirdrop[] memory pendingAirdrops) external returns (int64 responseCode);\\n\\n    /// @notice Claims pending airdrops that were sent to the calling account\\n    /// @param pendingAirdrops Array of pending airdrops to claim\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function claimAirdrops(PendingAirdrop[] memory pendingAirdrops) external returns (int64 responseCode);\\n\\n    /// @notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\\n    /// @notice This transfer does not charge any custom fees or royalties defined for the tokens\\n    /// @notice For fungible tokens, the requesting account's balance will become 0 and the treasury balance will increase by that amount\\n    /// @notice For non-fungible tokens, the requesting account will no longer hold the rejected serial numbers and they will be transferred to the treasury\\n    /// @param rejectingAddress The address rejecting the tokens\\n    /// @param ftAddresses Array of fungible token addresses to reject\\n    /// @param nftIDs Array of NFT IDs to reject\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function rejectTokens(address rejectingAddress, address[] memory ftAddresses, NftID[] memory nftIDs) external returns (int64 responseCode);\\n}\",\"keccak256\":\"0x2986ecf353112c4cfef645f5ac49eb594c911ace15136a6ea38645fc5bf6d1a9\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"app/contracts/DepositMinter.sol:DepositMinter","label":"lynxToken","offset":0,"slot":"0","type":"t_address"},{"astId":10,"contract":"app/contracts/DepositMinter.sol:DepositMinter","label":"sauceToken","offset":0,"slot":"1","type":"t_address"},{"astId":12,"contract":"app/contracts/DepositMinter.sol:DepositMinter","label":"clxyToken","offset":0,"slot":"2","type":"t_address"},{"astId":14,"contract":"app/contracts/DepositMinter.sol:DepositMinter","label":"admin","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"events":{"CallResponseEvent(bool,bytes)":{"notice":"Generic event"}},"kind":"user","methods":{"redirectForToken(address,bytes)":{"notice":"Redirect for token"},"transferFrom(address,address,address,uint256)":{"notice":"Only applicable to fungible tokens"},"transferFromNFT(address,address,address,uint256)":{"notice":"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"}},"version":1}}},"app/contracts/HederaResponseCodes.sol":{"HederaResponseCodes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ab5b2f6735918a3d0485871eb113637c6993a2dcecb1e5b7d23e148c51c9a8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xB5 0xB2 0xF6 PUSH20 0x5918A3D0485871EB113637C6993A2DCECB1E5B7D 0x23 0xE1 BASEFEE 0xC5 SHR SWAP11 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"391:52065:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;391:52065:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ab5b2f6735918a3d0485871eb113637c6993a2dcecb1e5b7d23e148c51c9a8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xB5 0xB2 0xF6 PUSH20 0x5918A3D0485871EB113637C6993A2DCECB1E5B7D 0x23 0xE1 BASEFEE 0xC5 SHR SWAP11 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"391:52065:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"app/contracts/HederaResponseCodes.sol\":\"HederaResponseCodes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"app/contracts/HederaResponseCodes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.9 <0.9.0;\\n\\n// this contract is auto-generated by a manual triggered script in utils/hedera-response-codes-protobuf-parser.js\\n// the generated contract is using hedera response codes from services version 0.59.0-SNAPSHOT\\n// https://github.com/hashgraph/hedera-services/blob/main/hapi/hedera-protobufs/services/response_code.proto\\n\\nlibrary HederaResponseCodes {\\n    /// The transaction passed the precheck validations.\\n    int32 internal constant OK = 0;\\n\\n    /// For any error not handled by specific error codes listed below.\\n    int32 internal constant INVALID_TRANSACTION = 1;\\n\\n    /// Payer account does not exist.\\n    int32 internal constant PAYER_ACCOUNT_NOT_FOUND = 2;\\n\\n    /// Node Account provided does not match the node account of the node the transaction was submitted to.\\n    int32 internal constant INVALID_NODE_ACCOUNT = 3;\\n\\n    /// Pre-Check error when TransactionValidStart + transactionValidDuration is less than current consensus time.\\n    int32 internal constant TRANSACTION_EXPIRED = 4;\\n\\n    /// Transaction start time is greater than current consensus time\\n    int32 internal constant INVALID_TRANSACTION_START = 5;\\n\\n    /// The given transactionValidDuration was either non-positive, or greater than the maximum valid duration of 180 secs.\\n    int32 internal constant INVALID_TRANSACTION_DURATION = 6;\\n\\n    /// The transaction signature is not valid\\n    int32 internal constant INVALID_SIGNATURE = 7;\\n\\n    /// Transaction memo size exceeded 100 bytes\\n    int32 internal constant MEMO_TOO_LONG = 8;\\n\\n    /// The fee provided in the transaction is insufficient for this type of transaction\\n    int32 internal constant INSUFFICIENT_TX_FEE = 9;\\n\\n    /// The payer account has insufficient cryptocurrency to pay the transaction fee\\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE = 10;\\n\\n    /// This transaction ID is a duplicate of one that was submitted to this node or reached consensus in the last 180 seconds (receipt period)\\n    int32 internal constant DUPLICATE_TRANSACTION = 11;\\n\\n    /// If API is throttled out\\n    int32 internal constant BUSY = 12;\\n\\n    /// The API is not currently supported\\n    int32 internal constant NOT_SUPPORTED = 13;\\n\\n    /// The file id is invalid or does not exist\\n    int32 internal constant INVALID_FILE_ID = 14;\\n\\n    /// The account id is invalid or does not exist\\n    int32 internal constant INVALID_ACCOUNT_ID = 15;\\n\\n    /// The contract id is invalid or does not exist\\n    int32 internal constant INVALID_CONTRACT_ID = 16;\\n\\n    /// Transaction id is not valid\\n    int32 internal constant INVALID_TRANSACTION_ID = 17;\\n\\n    /// Receipt for given transaction id does not exist\\n    int32 internal constant RECEIPT_NOT_FOUND = 18;\\n\\n    /// Record for given transaction id does not exist\\n    int32 internal constant RECORD_NOT_FOUND = 19;\\n\\n    /// The solidity id is invalid or entity with this solidity id does not exist\\n    int32 internal constant INVALID_SOLIDITY_ID = 20;\\n\\n    /// The responding node has submitted the transaction to the network. Its final status is still unknown.\\n    int32 internal constant UNKNOWN = 21;\\n\\n    /// The transaction succeeded\\n    int32 internal constant SUCCESS = 22;\\n\\n    /// There was a system error and the transaction failed because of invalid request parameters.\\n    int32 internal constant FAIL_INVALID = 23;\\n\\n    /// There was a system error while performing fee calculation, reserved for future.\\n    int32 internal constant FAIL_FEE = 24;\\n\\n    /// There was a system error while performing balance checks, reserved for future.\\n    int32 internal constant FAIL_BALANCE = 25;\\n\\n    /// Key not provided in the transaction body\\n    int32 internal constant KEY_REQUIRED = 26;\\n\\n    /// Unsupported algorithm/encoding used for keys in the transaction\\n    int32 internal constant BAD_ENCODING = 27;\\n\\n    /// When the account balance is not sufficient for the transfer\\n    int32 internal constant INSUFFICIENT_ACCOUNT_BALANCE = 28;\\n\\n    /// During an update transaction when the system is not able to find the Users Solidity address\\n    int32 internal constant INVALID_SOLIDITY_ADDRESS = 29;\\n\\n    /// Not enough gas was supplied to execute transaction\\n    int32 internal constant INSUFFICIENT_GAS = 30;\\n\\n    /// contract byte code size is over the limit\\n    int32 internal constant CONTRACT_SIZE_LIMIT_EXCEEDED = 31;\\n\\n    /// local execution (query) is requested for a function which changes state\\n    int32 internal constant LOCAL_CALL_MODIFICATION_EXCEPTION = 32;\\n\\n    /// Contract REVERT OPCODE executed\\n    int32 internal constant CONTRACT_REVERT_EXECUTED = 33;\\n\\n    /// For any contract execution related error not handled by specific error codes listed above.\\n    int32 internal constant CONTRACT_EXECUTION_EXCEPTION = 34;\\n\\n    /// In Query validation, account with +ve(amount) value should be Receiving node account, the receiver account should be only one account in the list\\n    int32 internal constant INVALID_RECEIVING_NODE_ACCOUNT = 35;\\n\\n    /// Header is missing in Query request\\n    int32 internal constant MISSING_QUERY_HEADER = 36;\\n\\n    /// The update of the account failed\\n    int32 internal constant ACCOUNT_UPDATE_FAILED = 37;\\n\\n    /// Provided key encoding was not supported by the system\\n    int32 internal constant INVALID_KEY_ENCODING = 38;\\n\\n    /// null solidity address\\n    int32 internal constant NULL_SOLIDITY_ADDRESS = 39;\\n\\n    /// update of the contract failed\\n    int32 internal constant CONTRACT_UPDATE_FAILED = 40;\\n\\n    /// the query header is invalid\\n    int32 internal constant INVALID_QUERY_HEADER = 41;\\n\\n    /// Invalid fee submitted\\n    int32 internal constant INVALID_FEE_SUBMITTED = 42;\\n\\n    /// Payer signature is invalid\\n    int32 internal constant INVALID_PAYER_SIGNATURE = 43;\\n\\n    /// The keys were not provided in the request.\\n    int32 internal constant KEY_NOT_PROVIDED = 44;\\n\\n    /// Expiration time provided in the transaction was invalid.\\n    int32 internal constant INVALID_EXPIRATION_TIME = 45;\\n\\n    /// WriteAccess Control Keys are not provided for the file\\n    int32 internal constant NO_WACL_KEY = 46;\\n\\n    /// The contents of file are provided as empty.\\n    int32 internal constant FILE_CONTENT_EMPTY = 47;\\n\\n    /// The crypto transfer credit and debit do not sum equal to 0\\n    int32 internal constant INVALID_ACCOUNT_AMOUNTS = 48;\\n\\n    /// Transaction body provided is empty\\n    int32 internal constant EMPTY_TRANSACTION_BODY = 49;\\n\\n    /// Invalid transaction body provided\\n    int32 internal constant INVALID_TRANSACTION_BODY = 50;\\n\\n    /// the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)\\n    int32 internal constant INVALID_SIGNATURE_TYPE_MISMATCHING_KEY = 51;\\n\\n    /// the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList, or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding signatureList should also have 3 base signatures.\\n    int32 internal constant INVALID_SIGNATURE_COUNT_MISMATCHING_KEY = 52;\\n\\n    /// the livehash body is empty\\n    int32 internal constant EMPTY_LIVE_HASH_BODY = 53;\\n\\n    /// the livehash data is missing\\n    int32 internal constant EMPTY_LIVE_HASH = 54;\\n\\n    /// the keys for a livehash are missing\\n    int32 internal constant EMPTY_LIVE_HASH_KEYS = 55;\\n\\n    /// the livehash data is not the output of a SHA-384 digest\\n    int32 internal constant INVALID_LIVE_HASH_SIZE = 56;\\n\\n    /// the query body is empty\\n    int32 internal constant EMPTY_QUERY_BODY = 57;\\n\\n    /// the crypto livehash query is empty\\n    int32 internal constant EMPTY_LIVE_HASH_QUERY = 58;\\n\\n    /// the livehash is not present\\n    int32 internal constant LIVE_HASH_NOT_FOUND = 59;\\n\\n    /// the account id passed has not yet been created.\\n    int32 internal constant ACCOUNT_ID_DOES_NOT_EXIST = 60;\\n\\n    /// the livehash already exists for a given account\\n    int32 internal constant LIVE_HASH_ALREADY_EXISTS = 61;\\n\\n    /// File WACL keys are invalid\\n    int32 internal constant INVALID_FILE_WACL = 62;\\n\\n    /// Serialization failure\\n    int32 internal constant SERIALIZATION_FAILED = 63;\\n\\n    /// The size of the Transaction is greater than transactionMaxBytes\\n    int32 internal constant TRANSACTION_OVERSIZE = 64;\\n\\n    /// The Transaction has more than 50 levels\\n    int32 internal constant TRANSACTION_TOO_MANY_LAYERS = 65;\\n\\n    /// Contract is marked as deleted\\n    int32 internal constant CONTRACT_DELETED = 66;\\n\\n    /// the platform node is either disconnected or lagging behind.\\n    int32 internal constant PLATFORM_NOT_ACTIVE = 67;\\n\\n    /// one public key matches more than one prefixes on the signature map\\n    int32 internal constant KEY_PREFIX_MISMATCH = 68;\\n\\n    /// transaction not created by platform due to large backlog\\n    int32 internal constant PLATFORM_TRANSACTION_NOT_CREATED = 69;\\n\\n    /// auto renewal period is not a positive number of seconds\\n    int32 internal constant INVALID_RENEWAL_PERIOD = 70;\\n\\n    /// the response code when a smart contract id is passed for a crypto API request\\n    int32 internal constant INVALID_PAYER_ACCOUNT_ID = 71;\\n\\n    /// the account has been marked as deleted\\n    int32 internal constant ACCOUNT_DELETED = 72;\\n\\n    /// the file has been marked as deleted\\n    int32 internal constant FILE_DELETED = 73;\\n\\n    /// same accounts repeated in the transfer account list\\n    int32 internal constant ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS = 74;\\n\\n    /// attempting to set negative balance value for crypto account\\n    int32 internal constant SETTING_NEGATIVE_ACCOUNT_BALANCE = 75;\\n\\n    /// when deleting smart contract that has crypto balance either transfer account or transfer smart contract is required\\n    int32 internal constant OBTAINER_REQUIRED = 76;\\n\\n    /// when deleting smart contract that has crypto balance you can not use the same contract id as transferContractId as the one being deleted\\n    int32 internal constant OBTAINER_SAME_CONTRACT_ID = 77;\\n\\n    /// transferAccountId or transferContractId specified for contract delete does not exist\\n    int32 internal constant OBTAINER_DOES_NOT_EXIST = 78;\\n\\n    /// attempting to modify (update or delete a immutable smart contract, i.e. one created without a admin key)\\n    int32 internal constant MODIFYING_IMMUTABLE_CONTRACT = 79;\\n\\n    /// Unexpected exception thrown by file system functions\\n    int32 internal constant FILE_SYSTEM_EXCEPTION = 80;\\n\\n    /// the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]\\n    int32 internal constant AUTORENEW_DURATION_NOT_IN_RANGE = 81;\\n\\n    /// Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex string.\\n    int32 internal constant ERROR_DECODING_BYTESTRING = 82;\\n\\n    /// File to create a smart contract was of length zero\\n    int32 internal constant CONTRACT_FILE_EMPTY = 83;\\n\\n    /// Bytecode for smart contract is of length zero\\n    int32 internal constant CONTRACT_BYTECODE_EMPTY = 84;\\n\\n    /// Attempt to set negative initial balance\\n    int32 internal constant INVALID_INITIAL_BALANCE = 85;\\n\\n    /// Attempt to set negative receive record threshold\\n    int32 internal constant INVALID_RECEIVE_RECORD_THRESHOLD = 86;\\n\\n    /// Attempt to set negative send record threshold\\n    int32 internal constant INVALID_SEND_RECORD_THRESHOLD = 87;\\n\\n    /// Special Account Operations should be performed by only Genesis account, return this code if it is not Genesis Account\\n    int32 internal constant ACCOUNT_IS_NOT_GENESIS_ACCOUNT = 88;\\n\\n    /// The fee payer account doesn't have permission to submit such Transaction\\n    int32 internal constant PAYER_ACCOUNT_UNAUTHORIZED = 89;\\n\\n    /// FreezeTransactionBody is invalid\\n    int32 internal constant INVALID_FREEZE_TRANSACTION_BODY = 90;\\n\\n    /// FreezeTransactionBody does not exist\\n    int32 internal constant FREEZE_TRANSACTION_BODY_NOT_FOUND = 91;\\n\\n    /// Exceeded the number of accounts (both from and to) allowed for crypto transfer list\\n    int32 internal constant TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 92;\\n\\n    /// Smart contract result size greater than specified maxResultSize\\n    int32 internal constant RESULT_SIZE_LIMIT_EXCEEDED = 93;\\n\\n    /// The payer account is not a special account(account 0.0.55)\\n    int32 internal constant NOT_SPECIAL_ACCOUNT = 94;\\n\\n    /// Negative gas was offered in smart contract call\\n    int32 internal constant CONTRACT_NEGATIVE_GAS = 95;\\n\\n    /// Negative value / initial balance was specified in a smart contract call / create\\n    int32 internal constant CONTRACT_NEGATIVE_VALUE = 96;\\n\\n    /// Failed to update fee file\\n    int32 internal constant INVALID_FEE_FILE = 97;\\n\\n    /// Failed to update exchange rate file\\n    int32 internal constant INVALID_EXCHANGE_RATE_FILE = 98;\\n\\n    /// Payment tendered for contract local call cannot cover both the fee and the gas\\n    int32 internal constant INSUFFICIENT_LOCAL_CALL_GAS = 99;\\n\\n    /// Entities with Entity ID below 1000 are not allowed to be deleted\\n    int32 internal constant ENTITY_NOT_ALLOWED_TO_DELETE = 100;\\n\\n    /// Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2) account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102), ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate (0.0.112).\\n    int32 internal constant AUTHORIZATION_FAILED = 101;\\n\\n    /// Fee Schedule Proto uploaded but not valid (append or update is required)\\n    int32 internal constant FILE_UPLOADED_PROTO_INVALID = 102;\\n\\n    /// Fee Schedule Proto uploaded but not valid (append or update is required)\\n    int32 internal constant FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK = 103;\\n\\n    /// Fee Schedule Proto File Part uploaded\\n    int32 internal constant FEE_SCHEDULE_FILE_PART_UPLOADED = 104;\\n\\n    /// The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage\\n    int32 internal constant EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED = 105;\\n\\n    /// Contract permanent storage exceeded the currently allowable limit\\n    int32 internal constant MAX_CONTRACT_STORAGE_EXCEEDED = 106;\\n\\n    /// Transfer Account should not be same as Account to be deleted\\n    int32 internal constant TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT = 107;\\n\\n    int32 internal constant TOTAL_LEDGER_BALANCE_INVALID = 108;\\n\\n    /// The expiration date/time on a smart contract may not be reduced\\n    int32 internal constant EXPIRATION_REDUCTION_NOT_ALLOWED = 110;\\n\\n    /// Gas exceeded currently allowable gas limit per transaction\\n    int32 internal constant MAX_GAS_LIMIT_EXCEEDED = 111;\\n\\n    /// File size exceeded the currently allowable limit\\n    int32 internal constant MAX_FILE_SIZE_EXCEEDED = 112;\\n\\n    /// When a valid signature is not provided for operations on account with receiverSigRequired=true\\n    int32 internal constant RECEIVER_SIG_REQUIRED = 113;\\n\\n    /// The Topic ID specified is not in the system.\\n    int32 internal constant INVALID_TOPIC_ID = 150;\\n\\n    /// A provided admin key was invalid. Verify the bytes for an Ed25519 public key are exactly 32 bytes; and the bytes for a compressed ECDSA(secp256k1) key are exactly 33 bytes, with the first byte either 0x02 or 0x03..\\n    int32 internal constant INVALID_ADMIN_KEY = 155;\\n\\n    /// A provided submit key was invalid.\\n    int32 internal constant INVALID_SUBMIT_KEY = 156;\\n\\n    /// An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey).\\n    int32 internal constant UNAUTHORIZED = 157;\\n\\n    /// A ConsensusService message is empty.\\n    int32 internal constant INVALID_TOPIC_MESSAGE = 158;\\n\\n    /// The autoRenewAccount specified is not a valid, active account.\\n    int32 internal constant INVALID_AUTORENEW_ACCOUNT = 159;\\n\\n    /// An adminKey was not specified on the topic, so there must not be an autoRenewAccount.\\n    int32 internal constant AUTORENEW_ACCOUNT_NOT_ALLOWED = 160;\\n\\n    /// The topic has expired, was not automatically renewed, and is in a 7 day grace period before the topic will be deleted unrecoverably. This error response code will not be returned until autoRenew functionality is supported by HAPI.\\n    int32 internal constant TOPIC_EXPIRED = 162;\\n\\n    /// chunk number must be from 1 to total (chunks) inclusive.\\n    int32 internal constant INVALID_CHUNK_NUMBER = 163;\\n\\n    /// For every chunk, the payer account that is part of initialTransactionID must match the Payer Account of this transaction. The entire initialTransactionID should match the transactionID of the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1.\\n    int32 internal constant INVALID_CHUNK_TRANSACTION_ID = 164;\\n\\n    /// Account is frozen and cannot transact with the token\\n    int32 internal constant ACCOUNT_FROZEN_FOR_TOKEN = 165;\\n\\n    /// An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with non-deleted tokens.\\n    int32 internal constant TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED = 166;\\n\\n    /// The token is invalid or does not exist\\n    int32 internal constant INVALID_TOKEN_ID = 167;\\n\\n    /// Invalid token decimals\\n    int32 internal constant INVALID_TOKEN_DECIMALS = 168;\\n\\n    /// Invalid token initial supply\\n    int32 internal constant INVALID_TOKEN_INITIAL_SUPPLY = 169;\\n\\n    /// Treasury Account does not exist or is deleted\\n    int32 internal constant INVALID_TREASURY_ACCOUNT_FOR_TOKEN = 170;\\n\\n    /// Token Symbol is not UTF-8 capitalized alphabetical string\\n    int32 internal constant INVALID_TOKEN_SYMBOL = 171;\\n\\n    /// Freeze key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_FREEZE_KEY = 172;\\n\\n    /// Amounts in transfer list are not net zero\\n    int32 internal constant TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN = 173;\\n\\n    /// A token symbol was not provided\\n    int32 internal constant MISSING_TOKEN_SYMBOL = 174;\\n\\n    /// The provided token symbol was too long\\n    int32 internal constant TOKEN_SYMBOL_TOO_LONG = 175;\\n\\n    /// KYC must be granted and account does not have KYC granted\\n    int32 internal constant ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN = 176;\\n\\n    /// KYC key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_KYC_KEY = 177;\\n\\n    /// Token balance is not sufficient for the transaction\\n    int32 internal constant INSUFFICIENT_TOKEN_BALANCE = 178;\\n\\n    /// Token transactions cannot be executed on deleted token\\n    int32 internal constant TOKEN_WAS_DELETED = 179;\\n\\n    /// Supply key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_SUPPLY_KEY = 180;\\n\\n    /// Wipe key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_WIPE_KEY = 181;\\n\\n    /// The requested token mint amount would cause an invalid total supply\\n    int32 internal constant INVALID_TOKEN_MINT_AMOUNT = 182;\\n\\n    /// The requested token burn amount would cause an invalid total supply\\n    int32 internal constant INVALID_TOKEN_BURN_AMOUNT = 183;\\n\\n    /// A required token-account relationship is missing\\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_ACCOUNT = 184;\\n\\n    /// The target of a wipe operation was the token treasury account\\n    int32 internal constant CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT = 185;\\n\\n    /// The provided KYC key was invalid.\\n    int32 internal constant INVALID_KYC_KEY = 186;\\n\\n    /// The provided wipe key was invalid.\\n    int32 internal constant INVALID_WIPE_KEY = 187;\\n\\n    /// The provided freeze key was invalid.\\n    int32 internal constant INVALID_FREEZE_KEY = 188;\\n\\n    /// The provided supply key was invalid.\\n    int32 internal constant INVALID_SUPPLY_KEY = 189;\\n\\n    /// Token Name is not provided\\n    int32 internal constant MISSING_TOKEN_NAME = 190;\\n\\n    /// Token Name is too long\\n    int32 internal constant TOKEN_NAME_TOO_LONG = 191;\\n\\n    /// The provided wipe amount must not be negative, zero or bigger than the token holder balance\\n    int32 internal constant INVALID_WIPING_AMOUNT = 192;\\n\\n    /// Token does not have Admin key set, thus update/delete transactions cannot be performed\\n    int32 internal constant TOKEN_IS_IMMUTABLE = 193;\\n\\n    /// An <tt>associateToken</tt> operation specified a token already associated to the account\\n    int32 internal constant TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT = 194;\\n\\n    /// An attempted operation is invalid until all token balances for the target account are zero\\n    int32 internal constant TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES = 195;\\n\\n    /// An attempted operation is invalid because the account is a treasury\\n    int32 internal constant ACCOUNT_IS_TREASURY = 196;\\n\\n    /// Same TokenIDs present in the token list\\n    int32 internal constant TOKEN_ID_REPEATED_IN_TOKEN_LIST = 197;\\n\\n    /// Exceeded the number of token transfers (both from and to) allowed for token transfer list\\n    int32 internal constant TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 198;\\n\\n    /// TokenTransfersTransactionBody has no TokenTransferList\\n    int32 internal constant EMPTY_TOKEN_TRANSFER_BODY = 199;\\n\\n    /// TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts\\n    int32 internal constant EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS = 200;\\n\\n    /// The Scheduled entity does not exist; or has now expired, been deleted, or been executed\\n    int32 internal constant INVALID_SCHEDULE_ID = 201;\\n\\n    /// The Scheduled entity cannot be modified. Admin key not set\\n    int32 internal constant SCHEDULE_IS_IMMUTABLE = 202;\\n\\n    /// The provided Scheduled Payer does not exist\\n    int32 internal constant INVALID_SCHEDULE_PAYER_ID = 203;\\n\\n    /// The Schedule Create Transaction TransactionID account does not exist\\n    int32 internal constant INVALID_SCHEDULE_ACCOUNT_ID = 204;\\n\\n    /// The provided sig map did not contain any new valid signatures from required signers of the scheduled transaction\\n    int32 internal constant NO_NEW_VALID_SIGNATURES = 205;\\n\\n    /// The required signers for a scheduled transaction cannot be resolved, for example because they do not exist or have been deleted\\n    int32 internal constant UNRESOLVABLE_REQUIRED_SIGNERS = 206;\\n\\n    /// Only whitelisted transaction types may be scheduled\\n    int32 internal constant SCHEDULED_TRANSACTION_NOT_IN_WHITELIST = 207;\\n\\n    /// At least one of the signatures in the provided sig map did not represent a valid signature for any required signer\\n    int32 internal constant SOME_SIGNATURES_WERE_INVALID = 208;\\n\\n    /// The scheduled field in the TransactionID may not be set to true\\n    int32 internal constant TRANSACTION_ID_FIELD_NOT_ALLOWED = 209;\\n\\n    /// A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that is, all fields other than scheduledPayerAccountID)\\n    int32 internal constant IDENTICAL_SCHEDULE_ALREADY_CREATED = 210;\\n\\n    /// A string field in the transaction has a UTF-8 encoding with the prohibited zero byte\\n    int32 internal constant INVALID_ZERO_BYTE_IN_STRING = 211;\\n\\n    /// A schedule being signed or deleted has already been deleted\\n    int32 internal constant SCHEDULE_ALREADY_DELETED = 212;\\n\\n    /// A schedule being signed or deleted has already been executed\\n    int32 internal constant SCHEDULE_ALREADY_EXECUTED = 213;\\n\\n    /// ConsensusSubmitMessage request's message size is larger than allowed.\\n    int32 internal constant MESSAGE_SIZE_TOO_LARGE = 214;\\n\\n    /// An operation was assigned to more than one throttle group in a given bucket\\n    int32 internal constant OPERATION_REPEATED_IN_BUCKET_GROUPS = 215;\\n\\n    /// The capacity needed to satisfy all opsPerSec groups in a bucket overflowed a signed 8-byte integral type\\n    int32 internal constant BUCKET_CAPACITY_OVERFLOW = 216;\\n\\n    /// Given the network size in the address book, the node-level capacity for an operation would never be enough to accept a single request; usually means a bucket burstPeriod should be increased\\n    int32 internal constant NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION = 217;\\n\\n    /// A bucket was defined without any throttle groups\\n    int32 internal constant BUCKET_HAS_NO_THROTTLE_GROUPS = 218;\\n\\n    /// A throttle group was granted zero opsPerSec\\n    int32 internal constant THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC = 219;\\n\\n    /// The throttle definitions file was updated, but some supported operations were not assigned a bucket\\n    int32 internal constant SUCCESS_BUT_MISSING_EXPECTED_OPERATION = 220;\\n\\n    /// The new contents for the throttle definitions system file were not valid protobuf\\n    int32 internal constant UNPARSEABLE_THROTTLE_DEFINITIONS = 221;\\n\\n    /// The new throttle definitions system file were invalid, and no more specific error could be divined\\n    int32 internal constant INVALID_THROTTLE_DEFINITIONS = 222;\\n\\n    /// The transaction references an account which has passed its expiration without renewal funds available, and currently remains in the ledger only because of the grace period given to expired entities\\n    int32 internal constant ACCOUNT_EXPIRED_AND_PENDING_REMOVAL = 223;\\n\\n    /// Invalid token max supply\\n    int32 internal constant INVALID_TOKEN_MAX_SUPPLY = 224;\\n\\n    /// Invalid token nft serial number\\n    int32 internal constant INVALID_TOKEN_NFT_SERIAL_NUMBER = 225;\\n\\n    /// Invalid nft id\\n    int32 internal constant INVALID_NFT_ID = 226;\\n\\n    /// Nft metadata is too long\\n    int32 internal constant METADATA_TOO_LONG = 227;\\n\\n    /// Repeated operations count exceeds the limit\\n    int32 internal constant BATCH_SIZE_LIMIT_EXCEEDED = 228;\\n\\n    /// The range of data to be gathered is out of the set boundaries\\n    int32 internal constant INVALID_QUERY_RANGE = 229;\\n\\n    /// A custom fractional fee set a denominator of zero\\n    int32 internal constant FRACTION_DIVIDES_BY_ZERO = 230;\\n\\n    /// The transaction payer could not afford a custom fee\\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE = 231;\\n\\n    /// More than 10 custom fees were specified\\n    int32 internal constant CUSTOM_FEES_LIST_TOO_LONG = 232;\\n\\n    /// Any of the feeCollector accounts for customFees is invalid\\n    int32 internal constant INVALID_CUSTOM_FEE_COLLECTOR = 233;\\n\\n    /// Any of the token Ids in customFees is invalid\\n    int32 internal constant INVALID_TOKEN_ID_IN_CUSTOM_FEES = 234;\\n\\n    /// Any of the token Ids in customFees are not associated to feeCollector\\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR = 235;\\n\\n    /// A token cannot have more units minted due to its configured supply ceiling\\n    int32 internal constant TOKEN_MAX_SUPPLY_REACHED = 236;\\n\\n    /// The transaction attempted to move an NFT serial number from an account other than its owner\\n    int32 internal constant SENDER_DOES_NOT_OWN_NFT_SERIAL_NO = 237;\\n\\n    /// A custom fee schedule entry did not specify either a fixed or fractional fee\\n    int32 internal constant CUSTOM_FEE_NOT_FULLY_SPECIFIED = 238;\\n\\n    /// Only positive fees may be assessed at this time\\n    int32 internal constant CUSTOM_FEE_MUST_BE_POSITIVE = 239;\\n\\n    /// Fee schedule key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_FEE_SCHEDULE_KEY = 240;\\n\\n    /// A fractional custom fee exceeded the range of a 64-bit signed integer\\n    int32 internal constant CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE = 241;\\n\\n    /// A royalty cannot exceed the total fungible value exchanged for an NFT\\n    int32 internal constant ROYALTY_FRACTION_CANNOT_EXCEED_ONE = 242;\\n\\n    /// Each fractional custom fee must have its maximum_amount, if specified, at least its minimum_amount\\n    int32 internal constant FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT = 243;\\n\\n    /// A fee schedule update tried to clear the custom fees from a token whose fee schedule was already empty\\n    int32 internal constant CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES = 244;\\n\\n    /// Only tokens of type FUNGIBLE_COMMON can be used to as fee schedule denominations\\n    int32 internal constant CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON = 245;\\n\\n    /// Only tokens of type FUNGIBLE_COMMON can have fractional fees\\n    int32 internal constant CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON = 246;\\n\\n    /// The provided custom fee schedule key was invalid\\n    int32 internal constant INVALID_CUSTOM_FEE_SCHEDULE_KEY = 247;\\n\\n    /// The requested token mint metadata was invalid\\n    int32 internal constant INVALID_TOKEN_MINT_METADATA = 248;\\n\\n    /// The requested token burn metadata was invalid\\n    int32 internal constant INVALID_TOKEN_BURN_METADATA = 249;\\n\\n    /// The treasury for a unique token cannot be changed until it owns no NFTs\\n    int32 internal constant CURRENT_TREASURY_STILL_OWNS_NFTS = 250;\\n\\n    /// An account cannot be dissociated from a unique token if it owns NFTs for the token\\n    int32 internal constant ACCOUNT_STILL_OWNS_NFTS = 251;\\n\\n    /// A NFT can only be burned when owned by the unique token's treasury\\n    int32 internal constant TREASURY_MUST_OWN_BURNED_NFT = 252;\\n\\n    /// An account did not own the NFT to be wiped\\n    int32 internal constant ACCOUNT_DOES_NOT_OWN_WIPED_NFT = 253;\\n\\n    /// An AccountAmount token transfers list referenced a token type other than FUNGIBLE_COMMON\\n    int32 internal constant ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON = 254;\\n\\n    /// All the NFTs allowed in the current price regime have already been minted\\n    int32 internal constant MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED = 255;\\n\\n    /// The payer account has been marked as deleted\\n    int32 internal constant PAYER_ACCOUNT_DELETED = 256;\\n\\n    /// The reference chain of custom fees for a transferred token exceeded the maximum length of 2\\n    int32 internal constant CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH = 257;\\n\\n    /// More than 20 balance adjustments were to satisfy a CryptoTransfer and its implied custom fee payments\\n    int32 internal constant CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS = 258;\\n\\n    /// The sender account in the token transfer transaction could not afford a custom fee\\n    int32 internal constant INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE = 259;\\n\\n    /// Currently no more than 4,294,967,295 NFTs may be minted for a given unique token type\\n    int32 internal constant SERIAL_NUMBER_LIMIT_REACHED = 260;\\n\\n    /// Only tokens of type NON_FUNGIBLE_UNIQUE can have royalty fees\\n    int32 internal constant CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE = 261;\\n\\n    /// The account has reached the limit on the automatic associations count.\\n    int32 internal constant NO_REMAINING_AUTOMATIC_ASSOCIATIONS = 262;\\n\\n    /// Already existing automatic associations are more than the new maximum automatic associations.\\n    int32 internal constant EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT = 263;\\n\\n    /// Cannot set the number of automatic associations for an account more than the maximum allowed token associations <tt>tokens.maxPerAccount</tt>.\\n    int32 internal constant REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT = 264;\\n\\n    /// Token is paused. This Token cannot be a part of any kind of Transaction until unpaused.\\n    int32 internal constant TOKEN_IS_PAUSED = 265;\\n\\n    /// Pause key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_PAUSE_KEY = 266;\\n\\n    /// The provided pause key was invalid\\n    int32 internal constant INVALID_PAUSE_KEY = 267;\\n\\n    /// The update file in a freeze transaction body must exist.\\n    int32 internal constant FREEZE_UPDATE_FILE_DOES_NOT_EXIST = 268;\\n\\n    /// The hash of the update file in a freeze transaction body must match the in-memory hash.\\n    int32 internal constant FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH = 269;\\n\\n    /// A FREEZE_UPGRADE transaction was handled with no previous update prepared.\\n    int32 internal constant NO_UPGRADE_HAS_BEEN_PREPARED = 270;\\n\\n    /// A FREEZE_ABORT transaction was handled with no scheduled freeze.\\n    int32 internal constant NO_FREEZE_IS_SCHEDULED = 271;\\n\\n    /// The update file hash when handling a FREEZE_UPGRADE transaction differs from the file hash at the time of handling the PREPARE_UPGRADE transaction.\\n    int32 internal constant UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE = 272;\\n\\n    /// The given freeze start time was in the (consensus) past.\\n    int32 internal constant FREEZE_START_TIME_MUST_BE_FUTURE = 273;\\n\\n    /// The prepared update file cannot be updated or appended until either the upgrade has been completed, or a FREEZE_ABORT has been handled.\\n    int32 internal constant PREPARED_UPDATE_FILE_IS_IMMUTABLE = 274;\\n\\n    /// Once a freeze is scheduled, it must be aborted before any other type of freeze can can be performed.\\n    int32 internal constant FREEZE_ALREADY_SCHEDULED = 275;\\n\\n    /// If an NMT upgrade has been prepared, the following operation must be a FREEZE_UPGRADE. (To issue a FREEZE_ONLY, submit a FREEZE_ABORT first.)\\n    int32 internal constant FREEZE_UPGRADE_IN_PROGRESS = 276;\\n\\n    /// If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the id of the file to be used in the upgrade.\\n    int32 internal constant UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED = 277;\\n\\n    /// If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the hash of the file to be used in the upgrade.\\n    int32 internal constant UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED = 278;\\n\\n    /// Consensus throttle did not allow execution of this transaction. System is throttled at consensus level.\\n    int32 internal constant CONSENSUS_GAS_EXHAUSTED = 279;\\n\\n    /// A precompiled contract succeeded, but was later reverted.\\n    int32 internal constant REVERTED_SUCCESS = 280;\\n\\n    /// All contract storage allocated to the current price regime has been consumed.\\n    int32 internal constant MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED = 281;\\n\\n    /// An alias used in a CryptoTransfer transaction is not the serialization of a primitive Key message--that is, a Key with a single Ed25519 or ECDSA(secp256k1) public key and no unknown protobuf fields.\\n    int32 internal constant INVALID_ALIAS_KEY = 282;\\n\\n    /// A fungible token transfer expected a different number of decimals than the involved type actually has.\\n    int32 internal constant UNEXPECTED_TOKEN_DECIMALS = 283;\\n\\n    /// The proxy account id is invalid or does not exist.\\n    int32 internal constant INVALID_PROXY_ACCOUNT_ID = 284;\\n\\n    /// The transfer account id in CryptoDelete transaction is invalid or does not exist.\\n    int32 internal constant INVALID_TRANSFER_ACCOUNT_ID = 285;\\n\\n    /// The fee collector account id in TokenFeeScheduleUpdate is invalid or does not exist.\\n    int32 internal constant INVALID_FEE_COLLECTOR_ACCOUNT_ID = 286;\\n\\n    /// The alias already set on an account cannot be updated using CryptoUpdate transaction.\\n    int32 internal constant ALIAS_IS_IMMUTABLE = 287;\\n\\n    /// An approved allowance specifies a spender account that is the same as the hbar/token owner account.\\n    int32 internal constant SPENDER_ACCOUNT_SAME_AS_OWNER = 288;\\n\\n    /// The establishment or adjustment of an approved allowance cause the token allowance to exceed the token maximum supply.\\n    int32 internal constant AMOUNT_EXCEEDS_TOKEN_MAX_SUPPLY = 289;\\n\\n    /// The specified amount for an approved allowance cannot be negative.\\n    int32 internal constant NEGATIVE_ALLOWANCE_AMOUNT = 290;\\n\\n    /// The approveForAll flag cannot be set for a fungible token.\\n    int32 internal constant CANNOT_APPROVE_FOR_ALL_FUNGIBLE_COMMON = 291;\\n\\n    /// The spender does not have an existing approved allowance with the hbar/token owner.\\n    int32 internal constant SPENDER_DOES_NOT_HAVE_ALLOWANCE = 292;\\n\\n    /// The transfer amount exceeds the current approved allowance for the spender account.\\n    int32 internal constant AMOUNT_EXCEEDS_ALLOWANCE = 293;\\n\\n    /// The payer account of an approveAllowances or adjustAllowance transaction is attempting to go beyond the maximum allowed number of allowances.\\n    int32 internal constant MAX_ALLOWANCES_EXCEEDED = 294;\\n\\n    /// No allowances have been specified in the approval transaction.\\n    int32 internal constant EMPTY_ALLOWANCES = 295;\\n\\n    /// Spender is repeated more than once in Crypto or Token or NFT allowance lists in a single CryptoApproveAllowance transaction.\\n    int32 internal constant SPENDER_ACCOUNT_REPEATED_IN_ALLOWANCES = 296;\\n\\n    /// Serial numbers are repeated in nft allowance for a single spender account\\n    int32 internal constant REPEATED_SERIAL_NUMS_IN_NFT_ALLOWANCES = 297;\\n\\n    /// Fungible common token used in NFT allowances\\n    int32 internal constant FUNGIBLE_TOKEN_IN_NFT_ALLOWANCES = 298;\\n\\n    /// Non fungible token used in fungible token allowances\\n    int32 internal constant NFT_IN_FUNGIBLE_TOKEN_ALLOWANCES = 299;\\n\\n    /// The account id specified as the owner is invalid or does not exist.\\n    int32 internal constant INVALID_ALLOWANCE_OWNER_ID = 300;\\n\\n    /// The account id specified as the spender is invalid or does not exist.\\n    int32 internal constant INVALID_ALLOWANCE_SPENDER_ID = 301;\\n\\n    /// [Deprecated] If the CryptoDeleteAllowance transaction has repeated crypto or token or Nft allowances to delete.\\n    int32 internal constant REPEATED_ALLOWANCES_TO_DELETE = 302;\\n\\n    /// If the account Id specified as the delegating spender is invalid or does not exist.\\n    int32 internal constant INVALID_DELEGATING_SPENDER = 303;\\n\\n    /// The delegating Spender cannot grant approveForAll allowance on a NFT token type for another spender.\\n    int32 internal constant DELEGATING_SPENDER_CANNOT_GRANT_APPROVE_FOR_ALL = 304;\\n\\n    /// The delegating Spender cannot grant allowance on a NFT serial for another spender as it doesnt not have approveForAll granted on token-owner.\\n    int32 internal constant DELEGATING_SPENDER_DOES_NOT_HAVE_APPROVE_FOR_ALL = 305;\\n\\n    /// The scheduled transaction could not be created because it's expiration_time was too far in the future.\\n    int32 internal constant SCHEDULE_EXPIRATION_TIME_TOO_FAR_IN_FUTURE = 306;\\n\\n    /// The scheduled transaction could not be created because it's expiration_time was less than or equal to the consensus time.\\n    int32 internal constant SCHEDULE_EXPIRATION_TIME_MUST_BE_HIGHER_THAN_CONSENSUS_TIME = 307;\\n\\n    /// The scheduled transaction could not be created because it would cause throttles to be violated on the specified expiration_time.\\n    int32 internal constant SCHEDULE_FUTURE_THROTTLE_EXCEEDED = 308;\\n\\n    /// The scheduled transaction could not be created because it would cause the gas limit to be violated on the specified expiration_time.\\n    int32 internal constant SCHEDULE_FUTURE_GAS_LIMIT_EXCEEDED = 309;\\n\\n    /// The ethereum transaction either failed parsing or failed signature validation, or some other EthereumTransaction error not covered by another response code.\\n    int32 internal constant INVALID_ETHEREUM_TRANSACTION = 310;\\n\\n    /// EthereumTransaction was signed against a chainId that this network does not support.\\n    int32 internal constant WRONG_CHAIN_ID = 311;\\n\\n    /// This transaction specified an ethereumNonce that is not the current ethereumNonce of the account.\\n    int32 internal constant WRONG_NONCE = 312;\\n\\n    /// The ethereum transaction specified an access list, which the network does not support.\\n    int32 internal constant ACCESS_LIST_UNSUPPORTED = 313;\\n\\n    /// A schedule being signed or deleted has passed it's expiration date and is pending execution if needed and then expiration.\\n    int32 internal constant SCHEDULE_PENDING_EXPIRATION = 314;\\n\\n    /// A selfdestruct or ContractDelete targeted a contract that is a token treasury.\\n    int32 internal constant CONTRACT_IS_TOKEN_TREASURY = 315;\\n\\n    /// A selfdestruct or ContractDelete targeted a contract with non-zero token balances.\\n    int32 internal constant CONTRACT_HAS_NON_ZERO_TOKEN_BALANCES = 316;\\n\\n    /// A contract referenced by a transaction is \\\"detached\\\"; that is, expired and lacking any hbar funds for auto-renewal payment---but still within its post-expiry grace period.\\n    int32 internal constant CONTRACT_EXPIRED_AND_PENDING_REMOVAL = 317;\\n\\n    /// A ContractUpdate requested removal of a contract's auto-renew account, but that contract has no auto-renew account.\\n    int32 internal constant CONTRACT_HAS_NO_AUTO_RENEW_ACCOUNT = 318;\\n\\n    /// A delete transaction submitted via HAPI set permanent_removal=true\\n    int32 internal constant PERMANENT_REMOVAL_REQUIRES_SYSTEM_INITIATION = 319;\\n\\n    /// A CryptoCreate or ContractCreate used the deprecated proxyAccountID field.\\n    int32 internal constant PROXY_ACCOUNT_ID_FIELD_IS_DEPRECATED = 320;\\n\\n    /// An account set the staked_account_id to itself in CryptoUpdate or ContractUpdate transactions.\\n    int32 internal constant SELF_STAKING_IS_NOT_ALLOWED = 321;\\n\\n    /// The staking account id or staking node id given is invalid or does not exist.\\n    int32 internal constant INVALID_STAKING_ID = 322;\\n\\n    /// Native staking, while implemented, has not yet enabled by the council.\\n    int32 internal constant STAKING_NOT_ENABLED = 323;\\n\\n    /// The range provided in UtilPrng transaction is negative.\\n    int32 internal constant INVALID_PRNG_RANGE = 324;\\n\\n    /// The maximum number of entities allowed in the current price regime have been created.\\n    int32 internal constant MAX_ENTITIES_IN_PRICE_REGIME_HAVE_BEEN_CREATED = 325;\\n\\n    /// The full prefix signature for precompile is not valid\\n    int32 internal constant INVALID_FULL_PREFIX_SIGNATURE_FOR_PRECOMPILE = 326;\\n\\n    /// The combined balances of a contract and its auto-renew account (if any) did not cover the rent charged for net new storage used in a transaction.\\n    int32 internal constant INSUFFICIENT_BALANCES_FOR_STORAGE_RENT = 327;\\n\\n    /// A contract transaction tried to use more than the allowed number of child records, via either system contract records or internal contract creations.\\n    int32 internal constant MAX_CHILD_RECORDS_EXCEEDED = 328;\\n\\n    /// The combined balances of a contract and its auto-renew account (if any) or balance of an account did not cover the auto-renewal fees in a transaction.\\n    int32 internal constant INSUFFICIENT_BALANCES_FOR_RENEWAL_FEES = 329;\\n\\n    /// A transaction's protobuf message includes unknown fields; could mean that a client expects not-yet-released functionality to be available.\\n    int32 internal constant TRANSACTION_HAS_UNKNOWN_FIELDS = 330;\\n\\n    /// The account cannot be modified. Account's key is not set\\n    int32 internal constant ACCOUNT_IS_IMMUTABLE = 331;\\n\\n    /// An alias that is assigned to an account or contract cannot be assigned to another account or contract.\\n    int32 internal constant ALIAS_ALREADY_ASSIGNED = 332;\\n\\n    /// A provided metadata key was invalid. Verification includes, for example, checking the size of Ed25519 and ECDSA(secp256k1) public keys.\\n    int32 internal constant INVALID_METADATA_KEY = 333;\\n\\n    /// Metadata key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_METADATA_KEY = 334;\\n\\n    /// Token Metadata is not provided\\n    int32 internal constant MISSING_TOKEN_METADATA = 335;\\n\\n    /// NFT serial numbers are missing in the TokenUpdateNftsTransactionBody\\n    int32 internal constant MISSING_SERIAL_NUMBERS = 336;\\n\\n    /// Admin key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_ADMIN_KEY = 337;\\n\\n    /// A transaction failed because the consensus node identified is deleted from the address book.\\n    int32 internal constant NODE_DELETED = 338;\\n\\n    /// A transaction failed because the consensus node identified is not valid or does not exist in state.\\n    int32 internal constant INVALID_NODE_ID = 339;\\n\\n    /// A transaction failed because one or more entries in the list of service endpoints for the `gossip_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port.\\n    int32 internal constant INVALID_GOSSIP_ENDPOINT = 340;\\n\\n    /// A transaction failed because the node account identifier provided does not exist or is not valid.<br/> One common source of this error is providing a node account identifier using the \\\"alias\\\" form rather than \\\"numeric\\\" form.\\n    int32 internal constant INVALID_NODE_ACCOUNT_ID = 341;\\n\\n    /// A transaction failed because the description field cannot be encoded as UTF-8 or is more than 100 bytes when encoded.\\n    int32 internal constant INVALID_NODE_DESCRIPTION = 342;\\n\\n    /// A transaction failed because one or more entries in the list of service endpoints for the `service_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port.\\n    int32 internal constant INVALID_SERVICE_ENDPOINT = 343;\\n\\n    /// A transaction failed because the TLS certificate provided for the node is missing or invalid. <p> #### Probable Causes The certificate MUST be a TLS certificate of a type permitted for gossip signatures.<br/> The value presented MUST be a UTF-8 NFKD encoding of the TLS certificate.<br/> The certificate encoded MUST be in PEM format.<br/> The `gossip_ca_certificate` field is REQUIRED and MUST NOT be empty.\\n    int32 internal constant INVALID_GOSSIP_CA_CERTIFICATE = 344;\\n\\n    /// A transaction failed because the hash provided for the gRPC certificate is present but invalid. <p> #### Probable Causes The `grpc_certificate_hash` MUST be a SHA-384 hash.<br/> The input hashed MUST be a UTF-8 NFKD encoding of the actual TLS certificate.<br/> The certificate to be encoded MUST be in PEM format.\\n    int32 internal constant INVALID_GRPC_CERTIFICATE = 345;\\n\\n    /// The maximum automatic associations value is not valid.<br/> The most common cause for this error is a value less than `-1`.\\n    int32 internal constant INVALID_MAX_AUTO_ASSOCIATIONS = 346;\\n\\n    /// The maximum number of nodes allowed in the address book have been created.\\n    int32 internal constant MAX_NODES_CREATED = 347;\\n\\n    /// In ServiceEndpoint, domain_name and ipAddressV4 are mutually exclusive\\n    int32 internal constant IP_FQDN_CANNOT_BE_SET_FOR_SAME_ENDPOINT = 348;\\n\\n    /// Fully qualified domain name is not allowed in gossip_endpoint\\n    int32 internal constant GOSSIP_ENDPOINT_CANNOT_HAVE_FQDN = 349;\\n\\n    /// In ServiceEndpoint, domain_name size too large\\n    int32 internal constant FQDN_SIZE_TOO_LARGE = 350;\\n\\n    /// ServiceEndpoint is invalid\\n    int32 internal constant INVALID_ENDPOINT = 351;\\n\\n    /// The number of gossip endpoints exceeds the limit\\n    int32 internal constant GOSSIP_ENDPOINTS_EXCEEDED_LIMIT = 352;\\n\\n    /// The transaction attempted to use duplicate `TokenReference`.<br/> This affects `TokenReject` attempting to reject same token reference more than once.\\n    int32 internal constant TOKEN_REFERENCE_REPEATED = 353;\\n\\n    /// The account id specified as the owner in `TokenReject` is invalid or does not exist.\\n    int32 internal constant INVALID_OWNER_ID = 354;\\n\\n    /// The transaction attempted to use more than the allowed number of `TokenReference`.\\n    int32 internal constant TOKEN_REFERENCE_LIST_SIZE_LIMIT_EXCEEDED = 355;\\n\\n    /// The number of service endpoints exceeds the limit\\n    int32 internal constant SERVICE_ENDPOINTS_EXCEEDED_LIMIT = 356;\\n\\n    /// The IPv4 address is invalid\\n    int32 internal constant INVALID_IPV4_ADDRESS = 357;\\n\\n    /// The transaction attempted to use empty `TokenReference` list.\\n    int32 internal constant EMPTY_TOKEN_REFERENCE_LIST = 358;\\n\\n    /// The node account is not allowed to be updated\\n    int32 internal constant UPDATE_NODE_ACCOUNT_NOT_ALLOWED = 359;\\n\\n    /// The token has no metadata or supply key\\n    int32 internal constant TOKEN_HAS_NO_METADATA_OR_SUPPLY_KEY = 360;\\n\\n    /// The list of `PendingAirdropId`s is empty and MUST NOT be empty.\\n    int32 internal constant EMPTY_PENDING_AIRDROP_ID_LIST = 361;\\n\\n    /// A `PendingAirdropId` is repeated in a `claim` or `cancel` transaction.\\n    int32 internal constant PENDING_AIRDROP_ID_REPEATED = 362;\\n\\n    /// The number of `PendingAirdropId` values in the list exceeds the maximum allowable number.\\n    int32 internal constant PENDING_AIRDROP_ID_LIST_TOO_LONG = 363;\\n\\n    /// A pending airdrop already exists for the specified NFT.\\n    int32 internal constant PENDING_NFT_AIRDROP_ALREADY_EXISTS = 364;\\n\\n    /// The identified account is sender for one or more pending airdrop(s) and cannot be deleted. <p> The requester SHOULD cancel all pending airdrops before resending this transaction.\\n    int32 internal constant ACCOUNT_HAS_PENDING_AIRDROPS = 365;\\n\\n    /// Consensus throttle did not allow execution of this transaction.<br/> The transaction should be retried after a modest delay.\\n    int32 internal constant THROTTLED_AT_CONSENSUS = 366;\\n\\n    /// The provided pending airdrop id is invalid.<br/> This pending airdrop MAY already be claimed or cancelled. <p> The client SHOULD query a mirror node to determine the current status of the pending airdrop.\\n    int32 internal constant INVALID_PENDING_AIRDROP_ID = 367;\\n\\n    /// The token to be airdropped has a fallback royalty fee and cannot be sent or claimed via an airdrop transaction.\\n    int32 internal constant TOKEN_AIRDROP_WITH_FALLBACK_ROYALTY = 368;\\n\\n    /// This airdrop claim is for a pending airdrop with an invalid token.<br/> The token might be deleted, or the sender may not have enough tokens to fulfill the offer. <p> The client SHOULD query mirror node to determine the status of the pending airdrop and whether the sender can fulfill the offer.\\n    int32 internal constant INVALID_TOKEN_IN_PENDING_AIRDROP = 369;\\n\\n    /// A scheduled transaction configured to wait for expiry to execute was given an expiry time at which there is already too many transactions scheduled to expire; its creation must be retried with a different expiry.\\n    int32 internal constant SCHEDULE_EXPIRY_IS_BUSY = 370;\\n\\n    /// The provided gRPC certificate hash is invalid.\\n    int32 internal constant INVALID_GRPC_CERTIFICATE_HASH = 371;\\n\\n    /// A scheduled transaction configured to wait for expiry to execute was not given an explicit expiration time.\\n    int32 internal constant MISSING_EXPIRY_TIME = 372;\\n\\n    /// A contract operation attempted to schedule another transaction after it had already scheduled a recursive contract call.\\n    int32 internal constant NO_SCHEDULING_ALLOWED_AFTER_SCHEDULED_RECURSION = 373;\\n\\n    /// A contract can schedule recursive calls a finite number of times (this is approximately four million times with typical network configuration.)\\n    int32 internal constant RECURSIVE_SCHEDULING_LIMIT_REACHED = 374;\\n\\n    /// The target network is waiting for the ledger ID to be set, which is a side effect of finishing the network's TSS construction.\\n    int32 internal constant WAITING_FOR_LEDGER_ID = 375;\\n\\n    /// The provided fee exempt key list size exceeded the limit.\\n    int32 internal constant MAX_ENTRIES_FOR_FEE_EXEMPT_KEY_LIST_EXCEEDED = 376;\\n\\n    /// The provided fee exempt key list contains duplicated keys.\\n    int32 internal constant FEE_EXEMPT_KEY_LIST_CONTAINS_DUPLICATED_KEYS = 377;\\n\\n    /// The provided fee exempt key list contains an invalid key.\\n    int32 internal constant INVALID_KEY_IN_FEE_EXEMPT_KEY_LIST = 378;\\n\\n    /// The provided fee schedule key contains an invalid key.\\n    int32 internal constant INVALID_FEE_SCHEDULE_KEY = 379;\\n\\n    /// If a fee schedule key is not set when we create a topic we cannot add it on update.\\n    int32 internal constant FEE_SCHEDULE_KEY_CANNOT_BE_UPDATED = 380;\\n\\n    /// If the topic's custom fees are updated the topic SHOULD have a fee schedule key\\n    int32 internal constant FEE_SCHEDULE_KEY_NOT_SET = 381;\\n\\n    /// The fee amount is exceeding the amount that the payer is willing to pay.\\n    int32 internal constant MAX_CUSTOM_FEE_LIMIT_EXCEEDED = 382;\\n\\n    /// There are no corresponding custom fees.\\n    int32 internal constant NO_VALID_MAX_CUSTOM_FEE = 383;\\n\\n    /// The provided list contains invalid max custom fee.\\n    int32 internal constant INVALID_MAX_CUSTOM_FEES = 384;\\n\\n    /// The provided max custom fee list contains fees with duplicate denominations.\\n    int32 internal constant DUPLICATE_DENOMINATION_IN_MAX_CUSTOM_FEE_LIST = 385;\\n\\n    /// The provided max custom fee list contains fees with duplicate account id.\\n    int32 internal constant DUPLICATE_ACCOUNT_ID_IN_MAX_CUSTOM_FEE_LIST = 386;\\n\\n    /// Max custom fees list is not supported for this operation.\\n    int32 internal constant MAX_CUSTOM_FEES_IS_NOT_SUPPORTED = 387;\\n\\n}\",\"keccak256\":\"0xfea411961dc0166189bd93b4f23e8e53430b5090f8dc0d25e870472d779603ee\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"app/contracts/HederaTokenService.sol":{"HederaTokenService":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"","type":"bool"},{"indexed":false,"internalType":"bytes","name":"","type":"bytes"}],"name":"CallResponseEvent","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes","name":"encodedFunctionSelector","type":"bytes"}],"name":"redirectForToken","outputs":[{"internalType":"int256","name":"responseCode","type":"int256"},{"internalType":"bytes","name":"response","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"serialNumber","type":"uint256"}],"name":"transferFromNFT","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"redirectForToken(address,bytes)":{"params":{"encodedFunctionSelector":"The function selector from the ERC20 interface + the bytes input for the function called","token":"The token address"},"returns":{"response":"The result of the call that had been encoded and sent for execution.","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"transferFrom(address,address,address,uint256)":{"params":{"amount":"The amount of tokens to transfer from `from` to `to`","from":"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens","to":"The account address of the receiver of the `amount` tokens","token":"The address of the fungible Hedera token to transfer"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"transferFromNFT(address,address,address,uint256)":{"params":{"from":"The account address of the owner of `serialNumber` of `token`","serialNumber":"The NFT serial number to transfer","to":"The account address of the receiver of `serialNumber`","token":"The address of the non-fungible Hedera token to transfer"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"redirectForToken(address,bytes)":"618dc65e","transferFrom(address,address,address,uint256)":"15dacbea","transferFromNFT(address,address,address,uint256)":"9b23d3d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"CallResponseEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedFunctionSelector\",\"type\":\"bytes\"}],\"name\":\"redirectForToken\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"responseCode\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"transferFromNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"redirectForToken(address,bytes)\":{\"params\":{\"encodedFunctionSelector\":\"The function selector from the ERC20 interface + the bytes input for the function called\",\"token\":\"The token address\"},\"returns\":{\"response\":\"The result of the call that had been encoded and sent for execution.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer from `from` to `to`\",\"from\":\"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\",\"to\":\"The account address of the receiver of the `amount` tokens\",\"token\":\"The address of the fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFromNFT(address,address,address,uint256)\":{\"params\":{\"from\":\"The account address of the owner of `serialNumber` of `token`\",\"serialNumber\":\"The NFT serial number to transfer\",\"to\":\"The account address of the receiver of `serialNumber`\",\"token\":\"The address of the non-fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CallResponseEvent(bool,bytes)\":{\"notice\":\"Generic event\"}},\"kind\":\"user\",\"methods\":{\"redirectForToken(address,bytes)\":{\"notice\":\"Redirect for token\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"Only applicable to fungible tokens\"},\"transferFromNFT(address,address,address,uint256)\":{\"notice\":\"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"app/contracts/HederaTokenService.sol\":\"HederaTokenService\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"app/contracts/HederaResponseCodes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.9 <0.9.0;\\n\\n// this contract is auto-generated by a manual triggered script in utils/hedera-response-codes-protobuf-parser.js\\n// the generated contract is using hedera response codes from services version 0.59.0-SNAPSHOT\\n// https://github.com/hashgraph/hedera-services/blob/main/hapi/hedera-protobufs/services/response_code.proto\\n\\nlibrary HederaResponseCodes {\\n    /// The transaction passed the precheck validations.\\n    int32 internal constant OK = 0;\\n\\n    /// For any error not handled by specific error codes listed below.\\n    int32 internal constant INVALID_TRANSACTION = 1;\\n\\n    /// Payer account does not exist.\\n    int32 internal constant PAYER_ACCOUNT_NOT_FOUND = 2;\\n\\n    /// Node Account provided does not match the node account of the node the transaction was submitted to.\\n    int32 internal constant INVALID_NODE_ACCOUNT = 3;\\n\\n    /// Pre-Check error when TransactionValidStart + transactionValidDuration is less than current consensus time.\\n    int32 internal constant TRANSACTION_EXPIRED = 4;\\n\\n    /// Transaction start time is greater than current consensus time\\n    int32 internal constant INVALID_TRANSACTION_START = 5;\\n\\n    /// The given transactionValidDuration was either non-positive, or greater than the maximum valid duration of 180 secs.\\n    int32 internal constant INVALID_TRANSACTION_DURATION = 6;\\n\\n    /// The transaction signature is not valid\\n    int32 internal constant INVALID_SIGNATURE = 7;\\n\\n    /// Transaction memo size exceeded 100 bytes\\n    int32 internal constant MEMO_TOO_LONG = 8;\\n\\n    /// The fee provided in the transaction is insufficient for this type of transaction\\n    int32 internal constant INSUFFICIENT_TX_FEE = 9;\\n\\n    /// The payer account has insufficient cryptocurrency to pay the transaction fee\\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE = 10;\\n\\n    /// This transaction ID is a duplicate of one that was submitted to this node or reached consensus in the last 180 seconds (receipt period)\\n    int32 internal constant DUPLICATE_TRANSACTION = 11;\\n\\n    /// If API is throttled out\\n    int32 internal constant BUSY = 12;\\n\\n    /// The API is not currently supported\\n    int32 internal constant NOT_SUPPORTED = 13;\\n\\n    /// The file id is invalid or does not exist\\n    int32 internal constant INVALID_FILE_ID = 14;\\n\\n    /// The account id is invalid or does not exist\\n    int32 internal constant INVALID_ACCOUNT_ID = 15;\\n\\n    /// The contract id is invalid or does not exist\\n    int32 internal constant INVALID_CONTRACT_ID = 16;\\n\\n    /// Transaction id is not valid\\n    int32 internal constant INVALID_TRANSACTION_ID = 17;\\n\\n    /// Receipt for given transaction id does not exist\\n    int32 internal constant RECEIPT_NOT_FOUND = 18;\\n\\n    /// Record for given transaction id does not exist\\n    int32 internal constant RECORD_NOT_FOUND = 19;\\n\\n    /// The solidity id is invalid or entity with this solidity id does not exist\\n    int32 internal constant INVALID_SOLIDITY_ID = 20;\\n\\n    /// The responding node has submitted the transaction to the network. Its final status is still unknown.\\n    int32 internal constant UNKNOWN = 21;\\n\\n    /// The transaction succeeded\\n    int32 internal constant SUCCESS = 22;\\n\\n    /// There was a system error and the transaction failed because of invalid request parameters.\\n    int32 internal constant FAIL_INVALID = 23;\\n\\n    /// There was a system error while performing fee calculation, reserved for future.\\n    int32 internal constant FAIL_FEE = 24;\\n\\n    /// There was a system error while performing balance checks, reserved for future.\\n    int32 internal constant FAIL_BALANCE = 25;\\n\\n    /// Key not provided in the transaction body\\n    int32 internal constant KEY_REQUIRED = 26;\\n\\n    /// Unsupported algorithm/encoding used for keys in the transaction\\n    int32 internal constant BAD_ENCODING = 27;\\n\\n    /// When the account balance is not sufficient for the transfer\\n    int32 internal constant INSUFFICIENT_ACCOUNT_BALANCE = 28;\\n\\n    /// During an update transaction when the system is not able to find the Users Solidity address\\n    int32 internal constant INVALID_SOLIDITY_ADDRESS = 29;\\n\\n    /// Not enough gas was supplied to execute transaction\\n    int32 internal constant INSUFFICIENT_GAS = 30;\\n\\n    /// contract byte code size is over the limit\\n    int32 internal constant CONTRACT_SIZE_LIMIT_EXCEEDED = 31;\\n\\n    /// local execution (query) is requested for a function which changes state\\n    int32 internal constant LOCAL_CALL_MODIFICATION_EXCEPTION = 32;\\n\\n    /// Contract REVERT OPCODE executed\\n    int32 internal constant CONTRACT_REVERT_EXECUTED = 33;\\n\\n    /// For any contract execution related error not handled by specific error codes listed above.\\n    int32 internal constant CONTRACT_EXECUTION_EXCEPTION = 34;\\n\\n    /// In Query validation, account with +ve(amount) value should be Receiving node account, the receiver account should be only one account in the list\\n    int32 internal constant INVALID_RECEIVING_NODE_ACCOUNT = 35;\\n\\n    /// Header is missing in Query request\\n    int32 internal constant MISSING_QUERY_HEADER = 36;\\n\\n    /// The update of the account failed\\n    int32 internal constant ACCOUNT_UPDATE_FAILED = 37;\\n\\n    /// Provided key encoding was not supported by the system\\n    int32 internal constant INVALID_KEY_ENCODING = 38;\\n\\n    /// null solidity address\\n    int32 internal constant NULL_SOLIDITY_ADDRESS = 39;\\n\\n    /// update of the contract failed\\n    int32 internal constant CONTRACT_UPDATE_FAILED = 40;\\n\\n    /// the query header is invalid\\n    int32 internal constant INVALID_QUERY_HEADER = 41;\\n\\n    /// Invalid fee submitted\\n    int32 internal constant INVALID_FEE_SUBMITTED = 42;\\n\\n    /// Payer signature is invalid\\n    int32 internal constant INVALID_PAYER_SIGNATURE = 43;\\n\\n    /// The keys were not provided in the request.\\n    int32 internal constant KEY_NOT_PROVIDED = 44;\\n\\n    /// Expiration time provided in the transaction was invalid.\\n    int32 internal constant INVALID_EXPIRATION_TIME = 45;\\n\\n    /// WriteAccess Control Keys are not provided for the file\\n    int32 internal constant NO_WACL_KEY = 46;\\n\\n    /// The contents of file are provided as empty.\\n    int32 internal constant FILE_CONTENT_EMPTY = 47;\\n\\n    /// The crypto transfer credit and debit do not sum equal to 0\\n    int32 internal constant INVALID_ACCOUNT_AMOUNTS = 48;\\n\\n    /// Transaction body provided is empty\\n    int32 internal constant EMPTY_TRANSACTION_BODY = 49;\\n\\n    /// Invalid transaction body provided\\n    int32 internal constant INVALID_TRANSACTION_BODY = 50;\\n\\n    /// the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)\\n    int32 internal constant INVALID_SIGNATURE_TYPE_MISMATCHING_KEY = 51;\\n\\n    /// the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList, or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding signatureList should also have 3 base signatures.\\n    int32 internal constant INVALID_SIGNATURE_COUNT_MISMATCHING_KEY = 52;\\n\\n    /// the livehash body is empty\\n    int32 internal constant EMPTY_LIVE_HASH_BODY = 53;\\n\\n    /// the livehash data is missing\\n    int32 internal constant EMPTY_LIVE_HASH = 54;\\n\\n    /// the keys for a livehash are missing\\n    int32 internal constant EMPTY_LIVE_HASH_KEYS = 55;\\n\\n    /// the livehash data is not the output of a SHA-384 digest\\n    int32 internal constant INVALID_LIVE_HASH_SIZE = 56;\\n\\n    /// the query body is empty\\n    int32 internal constant EMPTY_QUERY_BODY = 57;\\n\\n    /// the crypto livehash query is empty\\n    int32 internal constant EMPTY_LIVE_HASH_QUERY = 58;\\n\\n    /// the livehash is not present\\n    int32 internal constant LIVE_HASH_NOT_FOUND = 59;\\n\\n    /// the account id passed has not yet been created.\\n    int32 internal constant ACCOUNT_ID_DOES_NOT_EXIST = 60;\\n\\n    /// the livehash already exists for a given account\\n    int32 internal constant LIVE_HASH_ALREADY_EXISTS = 61;\\n\\n    /// File WACL keys are invalid\\n    int32 internal constant INVALID_FILE_WACL = 62;\\n\\n    /// Serialization failure\\n    int32 internal constant SERIALIZATION_FAILED = 63;\\n\\n    /// The size of the Transaction is greater than transactionMaxBytes\\n    int32 internal constant TRANSACTION_OVERSIZE = 64;\\n\\n    /// The Transaction has more than 50 levels\\n    int32 internal constant TRANSACTION_TOO_MANY_LAYERS = 65;\\n\\n    /// Contract is marked as deleted\\n    int32 internal constant CONTRACT_DELETED = 66;\\n\\n    /// the platform node is either disconnected or lagging behind.\\n    int32 internal constant PLATFORM_NOT_ACTIVE = 67;\\n\\n    /// one public key matches more than one prefixes on the signature map\\n    int32 internal constant KEY_PREFIX_MISMATCH = 68;\\n\\n    /// transaction not created by platform due to large backlog\\n    int32 internal constant PLATFORM_TRANSACTION_NOT_CREATED = 69;\\n\\n    /// auto renewal period is not a positive number of seconds\\n    int32 internal constant INVALID_RENEWAL_PERIOD = 70;\\n\\n    /// the response code when a smart contract id is passed for a crypto API request\\n    int32 internal constant INVALID_PAYER_ACCOUNT_ID = 71;\\n\\n    /// the account has been marked as deleted\\n    int32 internal constant ACCOUNT_DELETED = 72;\\n\\n    /// the file has been marked as deleted\\n    int32 internal constant FILE_DELETED = 73;\\n\\n    /// same accounts repeated in the transfer account list\\n    int32 internal constant ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS = 74;\\n\\n    /// attempting to set negative balance value for crypto account\\n    int32 internal constant SETTING_NEGATIVE_ACCOUNT_BALANCE = 75;\\n\\n    /// when deleting smart contract that has crypto balance either transfer account or transfer smart contract is required\\n    int32 internal constant OBTAINER_REQUIRED = 76;\\n\\n    /// when deleting smart contract that has crypto balance you can not use the same contract id as transferContractId as the one being deleted\\n    int32 internal constant OBTAINER_SAME_CONTRACT_ID = 77;\\n\\n    /// transferAccountId or transferContractId specified for contract delete does not exist\\n    int32 internal constant OBTAINER_DOES_NOT_EXIST = 78;\\n\\n    /// attempting to modify (update or delete a immutable smart contract, i.e. one created without a admin key)\\n    int32 internal constant MODIFYING_IMMUTABLE_CONTRACT = 79;\\n\\n    /// Unexpected exception thrown by file system functions\\n    int32 internal constant FILE_SYSTEM_EXCEPTION = 80;\\n\\n    /// the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]\\n    int32 internal constant AUTORENEW_DURATION_NOT_IN_RANGE = 81;\\n\\n    /// Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex string.\\n    int32 internal constant ERROR_DECODING_BYTESTRING = 82;\\n\\n    /// File to create a smart contract was of length zero\\n    int32 internal constant CONTRACT_FILE_EMPTY = 83;\\n\\n    /// Bytecode for smart contract is of length zero\\n    int32 internal constant CONTRACT_BYTECODE_EMPTY = 84;\\n\\n    /// Attempt to set negative initial balance\\n    int32 internal constant INVALID_INITIAL_BALANCE = 85;\\n\\n    /// Attempt to set negative receive record threshold\\n    int32 internal constant INVALID_RECEIVE_RECORD_THRESHOLD = 86;\\n\\n    /// Attempt to set negative send record threshold\\n    int32 internal constant INVALID_SEND_RECORD_THRESHOLD = 87;\\n\\n    /// Special Account Operations should be performed by only Genesis account, return this code if it is not Genesis Account\\n    int32 internal constant ACCOUNT_IS_NOT_GENESIS_ACCOUNT = 88;\\n\\n    /// The fee payer account doesn't have permission to submit such Transaction\\n    int32 internal constant PAYER_ACCOUNT_UNAUTHORIZED = 89;\\n\\n    /// FreezeTransactionBody is invalid\\n    int32 internal constant INVALID_FREEZE_TRANSACTION_BODY = 90;\\n\\n    /// FreezeTransactionBody does not exist\\n    int32 internal constant FREEZE_TRANSACTION_BODY_NOT_FOUND = 91;\\n\\n    /// Exceeded the number of accounts (both from and to) allowed for crypto transfer list\\n    int32 internal constant TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 92;\\n\\n    /// Smart contract result size greater than specified maxResultSize\\n    int32 internal constant RESULT_SIZE_LIMIT_EXCEEDED = 93;\\n\\n    /// The payer account is not a special account(account 0.0.55)\\n    int32 internal constant NOT_SPECIAL_ACCOUNT = 94;\\n\\n    /// Negative gas was offered in smart contract call\\n    int32 internal constant CONTRACT_NEGATIVE_GAS = 95;\\n\\n    /// Negative value / initial balance was specified in a smart contract call / create\\n    int32 internal constant CONTRACT_NEGATIVE_VALUE = 96;\\n\\n    /// Failed to update fee file\\n    int32 internal constant INVALID_FEE_FILE = 97;\\n\\n    /// Failed to update exchange rate file\\n    int32 internal constant INVALID_EXCHANGE_RATE_FILE = 98;\\n\\n    /// Payment tendered for contract local call cannot cover both the fee and the gas\\n    int32 internal constant INSUFFICIENT_LOCAL_CALL_GAS = 99;\\n\\n    /// Entities with Entity ID below 1000 are not allowed to be deleted\\n    int32 internal constant ENTITY_NOT_ALLOWED_TO_DELETE = 100;\\n\\n    /// Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2) account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102), ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate (0.0.112).\\n    int32 internal constant AUTHORIZATION_FAILED = 101;\\n\\n    /// Fee Schedule Proto uploaded but not valid (append or update is required)\\n    int32 internal constant FILE_UPLOADED_PROTO_INVALID = 102;\\n\\n    /// Fee Schedule Proto uploaded but not valid (append or update is required)\\n    int32 internal constant FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK = 103;\\n\\n    /// Fee Schedule Proto File Part uploaded\\n    int32 internal constant FEE_SCHEDULE_FILE_PART_UPLOADED = 104;\\n\\n    /// The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage\\n    int32 internal constant EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED = 105;\\n\\n    /// Contract permanent storage exceeded the currently allowable limit\\n    int32 internal constant MAX_CONTRACT_STORAGE_EXCEEDED = 106;\\n\\n    /// Transfer Account should not be same as Account to be deleted\\n    int32 internal constant TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT = 107;\\n\\n    int32 internal constant TOTAL_LEDGER_BALANCE_INVALID = 108;\\n\\n    /// The expiration date/time on a smart contract may not be reduced\\n    int32 internal constant EXPIRATION_REDUCTION_NOT_ALLOWED = 110;\\n\\n    /// Gas exceeded currently allowable gas limit per transaction\\n    int32 internal constant MAX_GAS_LIMIT_EXCEEDED = 111;\\n\\n    /// File size exceeded the currently allowable limit\\n    int32 internal constant MAX_FILE_SIZE_EXCEEDED = 112;\\n\\n    /// When a valid signature is not provided for operations on account with receiverSigRequired=true\\n    int32 internal constant RECEIVER_SIG_REQUIRED = 113;\\n\\n    /// The Topic ID specified is not in the system.\\n    int32 internal constant INVALID_TOPIC_ID = 150;\\n\\n    /// A provided admin key was invalid. Verify the bytes for an Ed25519 public key are exactly 32 bytes; and the bytes for a compressed ECDSA(secp256k1) key are exactly 33 bytes, with the first byte either 0x02 or 0x03..\\n    int32 internal constant INVALID_ADMIN_KEY = 155;\\n\\n    /// A provided submit key was invalid.\\n    int32 internal constant INVALID_SUBMIT_KEY = 156;\\n\\n    /// An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey).\\n    int32 internal constant UNAUTHORIZED = 157;\\n\\n    /// A ConsensusService message is empty.\\n    int32 internal constant INVALID_TOPIC_MESSAGE = 158;\\n\\n    /// The autoRenewAccount specified is not a valid, active account.\\n    int32 internal constant INVALID_AUTORENEW_ACCOUNT = 159;\\n\\n    /// An adminKey was not specified on the topic, so there must not be an autoRenewAccount.\\n    int32 internal constant AUTORENEW_ACCOUNT_NOT_ALLOWED = 160;\\n\\n    /// The topic has expired, was not automatically renewed, and is in a 7 day grace period before the topic will be deleted unrecoverably. This error response code will not be returned until autoRenew functionality is supported by HAPI.\\n    int32 internal constant TOPIC_EXPIRED = 162;\\n\\n    /// chunk number must be from 1 to total (chunks) inclusive.\\n    int32 internal constant INVALID_CHUNK_NUMBER = 163;\\n\\n    /// For every chunk, the payer account that is part of initialTransactionID must match the Payer Account of this transaction. The entire initialTransactionID should match the transactionID of the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1.\\n    int32 internal constant INVALID_CHUNK_TRANSACTION_ID = 164;\\n\\n    /// Account is frozen and cannot transact with the token\\n    int32 internal constant ACCOUNT_FROZEN_FOR_TOKEN = 165;\\n\\n    /// An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with non-deleted tokens.\\n    int32 internal constant TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED = 166;\\n\\n    /// The token is invalid or does not exist\\n    int32 internal constant INVALID_TOKEN_ID = 167;\\n\\n    /// Invalid token decimals\\n    int32 internal constant INVALID_TOKEN_DECIMALS = 168;\\n\\n    /// Invalid token initial supply\\n    int32 internal constant INVALID_TOKEN_INITIAL_SUPPLY = 169;\\n\\n    /// Treasury Account does not exist or is deleted\\n    int32 internal constant INVALID_TREASURY_ACCOUNT_FOR_TOKEN = 170;\\n\\n    /// Token Symbol is not UTF-8 capitalized alphabetical string\\n    int32 internal constant INVALID_TOKEN_SYMBOL = 171;\\n\\n    /// Freeze key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_FREEZE_KEY = 172;\\n\\n    /// Amounts in transfer list are not net zero\\n    int32 internal constant TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN = 173;\\n\\n    /// A token symbol was not provided\\n    int32 internal constant MISSING_TOKEN_SYMBOL = 174;\\n\\n    /// The provided token symbol was too long\\n    int32 internal constant TOKEN_SYMBOL_TOO_LONG = 175;\\n\\n    /// KYC must be granted and account does not have KYC granted\\n    int32 internal constant ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN = 176;\\n\\n    /// KYC key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_KYC_KEY = 177;\\n\\n    /// Token balance is not sufficient for the transaction\\n    int32 internal constant INSUFFICIENT_TOKEN_BALANCE = 178;\\n\\n    /// Token transactions cannot be executed on deleted token\\n    int32 internal constant TOKEN_WAS_DELETED = 179;\\n\\n    /// Supply key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_SUPPLY_KEY = 180;\\n\\n    /// Wipe key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_WIPE_KEY = 181;\\n\\n    /// The requested token mint amount would cause an invalid total supply\\n    int32 internal constant INVALID_TOKEN_MINT_AMOUNT = 182;\\n\\n    /// The requested token burn amount would cause an invalid total supply\\n    int32 internal constant INVALID_TOKEN_BURN_AMOUNT = 183;\\n\\n    /// A required token-account relationship is missing\\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_ACCOUNT = 184;\\n\\n    /// The target of a wipe operation was the token treasury account\\n    int32 internal constant CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT = 185;\\n\\n    /// The provided KYC key was invalid.\\n    int32 internal constant INVALID_KYC_KEY = 186;\\n\\n    /// The provided wipe key was invalid.\\n    int32 internal constant INVALID_WIPE_KEY = 187;\\n\\n    /// The provided freeze key was invalid.\\n    int32 internal constant INVALID_FREEZE_KEY = 188;\\n\\n    /// The provided supply key was invalid.\\n    int32 internal constant INVALID_SUPPLY_KEY = 189;\\n\\n    /// Token Name is not provided\\n    int32 internal constant MISSING_TOKEN_NAME = 190;\\n\\n    /// Token Name is too long\\n    int32 internal constant TOKEN_NAME_TOO_LONG = 191;\\n\\n    /// The provided wipe amount must not be negative, zero or bigger than the token holder balance\\n    int32 internal constant INVALID_WIPING_AMOUNT = 192;\\n\\n    /// Token does not have Admin key set, thus update/delete transactions cannot be performed\\n    int32 internal constant TOKEN_IS_IMMUTABLE = 193;\\n\\n    /// An <tt>associateToken</tt> operation specified a token already associated to the account\\n    int32 internal constant TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT = 194;\\n\\n    /// An attempted operation is invalid until all token balances for the target account are zero\\n    int32 internal constant TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES = 195;\\n\\n    /// An attempted operation is invalid because the account is a treasury\\n    int32 internal constant ACCOUNT_IS_TREASURY = 196;\\n\\n    /// Same TokenIDs present in the token list\\n    int32 internal constant TOKEN_ID_REPEATED_IN_TOKEN_LIST = 197;\\n\\n    /// Exceeded the number of token transfers (both from and to) allowed for token transfer list\\n    int32 internal constant TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 198;\\n\\n    /// TokenTransfersTransactionBody has no TokenTransferList\\n    int32 internal constant EMPTY_TOKEN_TRANSFER_BODY = 199;\\n\\n    /// TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts\\n    int32 internal constant EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS = 200;\\n\\n    /// The Scheduled entity does not exist; or has now expired, been deleted, or been executed\\n    int32 internal constant INVALID_SCHEDULE_ID = 201;\\n\\n    /// The Scheduled entity cannot be modified. Admin key not set\\n    int32 internal constant SCHEDULE_IS_IMMUTABLE = 202;\\n\\n    /// The provided Scheduled Payer does not exist\\n    int32 internal constant INVALID_SCHEDULE_PAYER_ID = 203;\\n\\n    /// The Schedule Create Transaction TransactionID account does not exist\\n    int32 internal constant INVALID_SCHEDULE_ACCOUNT_ID = 204;\\n\\n    /// The provided sig map did not contain any new valid signatures from required signers of the scheduled transaction\\n    int32 internal constant NO_NEW_VALID_SIGNATURES = 205;\\n\\n    /// The required signers for a scheduled transaction cannot be resolved, for example because they do not exist or have been deleted\\n    int32 internal constant UNRESOLVABLE_REQUIRED_SIGNERS = 206;\\n\\n    /// Only whitelisted transaction types may be scheduled\\n    int32 internal constant SCHEDULED_TRANSACTION_NOT_IN_WHITELIST = 207;\\n\\n    /// At least one of the signatures in the provided sig map did not represent a valid signature for any required signer\\n    int32 internal constant SOME_SIGNATURES_WERE_INVALID = 208;\\n\\n    /// The scheduled field in the TransactionID may not be set to true\\n    int32 internal constant TRANSACTION_ID_FIELD_NOT_ALLOWED = 209;\\n\\n    /// A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that is, all fields other than scheduledPayerAccountID)\\n    int32 internal constant IDENTICAL_SCHEDULE_ALREADY_CREATED = 210;\\n\\n    /// A string field in the transaction has a UTF-8 encoding with the prohibited zero byte\\n    int32 internal constant INVALID_ZERO_BYTE_IN_STRING = 211;\\n\\n    /// A schedule being signed or deleted has already been deleted\\n    int32 internal constant SCHEDULE_ALREADY_DELETED = 212;\\n\\n    /// A schedule being signed or deleted has already been executed\\n    int32 internal constant SCHEDULE_ALREADY_EXECUTED = 213;\\n\\n    /// ConsensusSubmitMessage request's message size is larger than allowed.\\n    int32 internal constant MESSAGE_SIZE_TOO_LARGE = 214;\\n\\n    /// An operation was assigned to more than one throttle group in a given bucket\\n    int32 internal constant OPERATION_REPEATED_IN_BUCKET_GROUPS = 215;\\n\\n    /// The capacity needed to satisfy all opsPerSec groups in a bucket overflowed a signed 8-byte integral type\\n    int32 internal constant BUCKET_CAPACITY_OVERFLOW = 216;\\n\\n    /// Given the network size in the address book, the node-level capacity for an operation would never be enough to accept a single request; usually means a bucket burstPeriod should be increased\\n    int32 internal constant NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION = 217;\\n\\n    /// A bucket was defined without any throttle groups\\n    int32 internal constant BUCKET_HAS_NO_THROTTLE_GROUPS = 218;\\n\\n    /// A throttle group was granted zero opsPerSec\\n    int32 internal constant THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC = 219;\\n\\n    /// The throttle definitions file was updated, but some supported operations were not assigned a bucket\\n    int32 internal constant SUCCESS_BUT_MISSING_EXPECTED_OPERATION = 220;\\n\\n    /// The new contents for the throttle definitions system file were not valid protobuf\\n    int32 internal constant UNPARSEABLE_THROTTLE_DEFINITIONS = 221;\\n\\n    /// The new throttle definitions system file were invalid, and no more specific error could be divined\\n    int32 internal constant INVALID_THROTTLE_DEFINITIONS = 222;\\n\\n    /// The transaction references an account which has passed its expiration without renewal funds available, and currently remains in the ledger only because of the grace period given to expired entities\\n    int32 internal constant ACCOUNT_EXPIRED_AND_PENDING_REMOVAL = 223;\\n\\n    /// Invalid token max supply\\n    int32 internal constant INVALID_TOKEN_MAX_SUPPLY = 224;\\n\\n    /// Invalid token nft serial number\\n    int32 internal constant INVALID_TOKEN_NFT_SERIAL_NUMBER = 225;\\n\\n    /// Invalid nft id\\n    int32 internal constant INVALID_NFT_ID = 226;\\n\\n    /// Nft metadata is too long\\n    int32 internal constant METADATA_TOO_LONG = 227;\\n\\n    /// Repeated operations count exceeds the limit\\n    int32 internal constant BATCH_SIZE_LIMIT_EXCEEDED = 228;\\n\\n    /// The range of data to be gathered is out of the set boundaries\\n    int32 internal constant INVALID_QUERY_RANGE = 229;\\n\\n    /// A custom fractional fee set a denominator of zero\\n    int32 internal constant FRACTION_DIVIDES_BY_ZERO = 230;\\n\\n    /// The transaction payer could not afford a custom fee\\n    int32 internal constant INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE = 231;\\n\\n    /// More than 10 custom fees were specified\\n    int32 internal constant CUSTOM_FEES_LIST_TOO_LONG = 232;\\n\\n    /// Any of the feeCollector accounts for customFees is invalid\\n    int32 internal constant INVALID_CUSTOM_FEE_COLLECTOR = 233;\\n\\n    /// Any of the token Ids in customFees is invalid\\n    int32 internal constant INVALID_TOKEN_ID_IN_CUSTOM_FEES = 234;\\n\\n    /// Any of the token Ids in customFees are not associated to feeCollector\\n    int32 internal constant TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR = 235;\\n\\n    /// A token cannot have more units minted due to its configured supply ceiling\\n    int32 internal constant TOKEN_MAX_SUPPLY_REACHED = 236;\\n\\n    /// The transaction attempted to move an NFT serial number from an account other than its owner\\n    int32 internal constant SENDER_DOES_NOT_OWN_NFT_SERIAL_NO = 237;\\n\\n    /// A custom fee schedule entry did not specify either a fixed or fractional fee\\n    int32 internal constant CUSTOM_FEE_NOT_FULLY_SPECIFIED = 238;\\n\\n    /// Only positive fees may be assessed at this time\\n    int32 internal constant CUSTOM_FEE_MUST_BE_POSITIVE = 239;\\n\\n    /// Fee schedule key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_FEE_SCHEDULE_KEY = 240;\\n\\n    /// A fractional custom fee exceeded the range of a 64-bit signed integer\\n    int32 internal constant CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE = 241;\\n\\n    /// A royalty cannot exceed the total fungible value exchanged for an NFT\\n    int32 internal constant ROYALTY_FRACTION_CANNOT_EXCEED_ONE = 242;\\n\\n    /// Each fractional custom fee must have its maximum_amount, if specified, at least its minimum_amount\\n    int32 internal constant FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT = 243;\\n\\n    /// A fee schedule update tried to clear the custom fees from a token whose fee schedule was already empty\\n    int32 internal constant CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES = 244;\\n\\n    /// Only tokens of type FUNGIBLE_COMMON can be used to as fee schedule denominations\\n    int32 internal constant CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON = 245;\\n\\n    /// Only tokens of type FUNGIBLE_COMMON can have fractional fees\\n    int32 internal constant CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON = 246;\\n\\n    /// The provided custom fee schedule key was invalid\\n    int32 internal constant INVALID_CUSTOM_FEE_SCHEDULE_KEY = 247;\\n\\n    /// The requested token mint metadata was invalid\\n    int32 internal constant INVALID_TOKEN_MINT_METADATA = 248;\\n\\n    /// The requested token burn metadata was invalid\\n    int32 internal constant INVALID_TOKEN_BURN_METADATA = 249;\\n\\n    /// The treasury for a unique token cannot be changed until it owns no NFTs\\n    int32 internal constant CURRENT_TREASURY_STILL_OWNS_NFTS = 250;\\n\\n    /// An account cannot be dissociated from a unique token if it owns NFTs for the token\\n    int32 internal constant ACCOUNT_STILL_OWNS_NFTS = 251;\\n\\n    /// A NFT can only be burned when owned by the unique token's treasury\\n    int32 internal constant TREASURY_MUST_OWN_BURNED_NFT = 252;\\n\\n    /// An account did not own the NFT to be wiped\\n    int32 internal constant ACCOUNT_DOES_NOT_OWN_WIPED_NFT = 253;\\n\\n    /// An AccountAmount token transfers list referenced a token type other than FUNGIBLE_COMMON\\n    int32 internal constant ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON = 254;\\n\\n    /// All the NFTs allowed in the current price regime have already been minted\\n    int32 internal constant MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED = 255;\\n\\n    /// The payer account has been marked as deleted\\n    int32 internal constant PAYER_ACCOUNT_DELETED = 256;\\n\\n    /// The reference chain of custom fees for a transferred token exceeded the maximum length of 2\\n    int32 internal constant CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH = 257;\\n\\n    /// More than 20 balance adjustments were to satisfy a CryptoTransfer and its implied custom fee payments\\n    int32 internal constant CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS = 258;\\n\\n    /// The sender account in the token transfer transaction could not afford a custom fee\\n    int32 internal constant INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE = 259;\\n\\n    /// Currently no more than 4,294,967,295 NFTs may be minted for a given unique token type\\n    int32 internal constant SERIAL_NUMBER_LIMIT_REACHED = 260;\\n\\n    /// Only tokens of type NON_FUNGIBLE_UNIQUE can have royalty fees\\n    int32 internal constant CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE = 261;\\n\\n    /// The account has reached the limit on the automatic associations count.\\n    int32 internal constant NO_REMAINING_AUTOMATIC_ASSOCIATIONS = 262;\\n\\n    /// Already existing automatic associations are more than the new maximum automatic associations.\\n    int32 internal constant EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT = 263;\\n\\n    /// Cannot set the number of automatic associations for an account more than the maximum allowed token associations <tt>tokens.maxPerAccount</tt>.\\n    int32 internal constant REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT = 264;\\n\\n    /// Token is paused. This Token cannot be a part of any kind of Transaction until unpaused.\\n    int32 internal constant TOKEN_IS_PAUSED = 265;\\n\\n    /// Pause key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_PAUSE_KEY = 266;\\n\\n    /// The provided pause key was invalid\\n    int32 internal constant INVALID_PAUSE_KEY = 267;\\n\\n    /// The update file in a freeze transaction body must exist.\\n    int32 internal constant FREEZE_UPDATE_FILE_DOES_NOT_EXIST = 268;\\n\\n    /// The hash of the update file in a freeze transaction body must match the in-memory hash.\\n    int32 internal constant FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH = 269;\\n\\n    /// A FREEZE_UPGRADE transaction was handled with no previous update prepared.\\n    int32 internal constant NO_UPGRADE_HAS_BEEN_PREPARED = 270;\\n\\n    /// A FREEZE_ABORT transaction was handled with no scheduled freeze.\\n    int32 internal constant NO_FREEZE_IS_SCHEDULED = 271;\\n\\n    /// The update file hash when handling a FREEZE_UPGRADE transaction differs from the file hash at the time of handling the PREPARE_UPGRADE transaction.\\n    int32 internal constant UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE = 272;\\n\\n    /// The given freeze start time was in the (consensus) past.\\n    int32 internal constant FREEZE_START_TIME_MUST_BE_FUTURE = 273;\\n\\n    /// The prepared update file cannot be updated or appended until either the upgrade has been completed, or a FREEZE_ABORT has been handled.\\n    int32 internal constant PREPARED_UPDATE_FILE_IS_IMMUTABLE = 274;\\n\\n    /// Once a freeze is scheduled, it must be aborted before any other type of freeze can can be performed.\\n    int32 internal constant FREEZE_ALREADY_SCHEDULED = 275;\\n\\n    /// If an NMT upgrade has been prepared, the following operation must be a FREEZE_UPGRADE. (To issue a FREEZE_ONLY, submit a FREEZE_ABORT first.)\\n    int32 internal constant FREEZE_UPGRADE_IN_PROGRESS = 276;\\n\\n    /// If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the id of the file to be used in the upgrade.\\n    int32 internal constant UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED = 277;\\n\\n    /// If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must confirm the hash of the file to be used in the upgrade.\\n    int32 internal constant UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED = 278;\\n\\n    /// Consensus throttle did not allow execution of this transaction. System is throttled at consensus level.\\n    int32 internal constant CONSENSUS_GAS_EXHAUSTED = 279;\\n\\n    /// A precompiled contract succeeded, but was later reverted.\\n    int32 internal constant REVERTED_SUCCESS = 280;\\n\\n    /// All contract storage allocated to the current price regime has been consumed.\\n    int32 internal constant MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED = 281;\\n\\n    /// An alias used in a CryptoTransfer transaction is not the serialization of a primitive Key message--that is, a Key with a single Ed25519 or ECDSA(secp256k1) public key and no unknown protobuf fields.\\n    int32 internal constant INVALID_ALIAS_KEY = 282;\\n\\n    /// A fungible token transfer expected a different number of decimals than the involved type actually has.\\n    int32 internal constant UNEXPECTED_TOKEN_DECIMALS = 283;\\n\\n    /// The proxy account id is invalid or does not exist.\\n    int32 internal constant INVALID_PROXY_ACCOUNT_ID = 284;\\n\\n    /// The transfer account id in CryptoDelete transaction is invalid or does not exist.\\n    int32 internal constant INVALID_TRANSFER_ACCOUNT_ID = 285;\\n\\n    /// The fee collector account id in TokenFeeScheduleUpdate is invalid or does not exist.\\n    int32 internal constant INVALID_FEE_COLLECTOR_ACCOUNT_ID = 286;\\n\\n    /// The alias already set on an account cannot be updated using CryptoUpdate transaction.\\n    int32 internal constant ALIAS_IS_IMMUTABLE = 287;\\n\\n    /// An approved allowance specifies a spender account that is the same as the hbar/token owner account.\\n    int32 internal constant SPENDER_ACCOUNT_SAME_AS_OWNER = 288;\\n\\n    /// The establishment or adjustment of an approved allowance cause the token allowance to exceed the token maximum supply.\\n    int32 internal constant AMOUNT_EXCEEDS_TOKEN_MAX_SUPPLY = 289;\\n\\n    /// The specified amount for an approved allowance cannot be negative.\\n    int32 internal constant NEGATIVE_ALLOWANCE_AMOUNT = 290;\\n\\n    /// The approveForAll flag cannot be set for a fungible token.\\n    int32 internal constant CANNOT_APPROVE_FOR_ALL_FUNGIBLE_COMMON = 291;\\n\\n    /// The spender does not have an existing approved allowance with the hbar/token owner.\\n    int32 internal constant SPENDER_DOES_NOT_HAVE_ALLOWANCE = 292;\\n\\n    /// The transfer amount exceeds the current approved allowance for the spender account.\\n    int32 internal constant AMOUNT_EXCEEDS_ALLOWANCE = 293;\\n\\n    /// The payer account of an approveAllowances or adjustAllowance transaction is attempting to go beyond the maximum allowed number of allowances.\\n    int32 internal constant MAX_ALLOWANCES_EXCEEDED = 294;\\n\\n    /// No allowances have been specified in the approval transaction.\\n    int32 internal constant EMPTY_ALLOWANCES = 295;\\n\\n    /// Spender is repeated more than once in Crypto or Token or NFT allowance lists in a single CryptoApproveAllowance transaction.\\n    int32 internal constant SPENDER_ACCOUNT_REPEATED_IN_ALLOWANCES = 296;\\n\\n    /// Serial numbers are repeated in nft allowance for a single spender account\\n    int32 internal constant REPEATED_SERIAL_NUMS_IN_NFT_ALLOWANCES = 297;\\n\\n    /// Fungible common token used in NFT allowances\\n    int32 internal constant FUNGIBLE_TOKEN_IN_NFT_ALLOWANCES = 298;\\n\\n    /// Non fungible token used in fungible token allowances\\n    int32 internal constant NFT_IN_FUNGIBLE_TOKEN_ALLOWANCES = 299;\\n\\n    /// The account id specified as the owner is invalid or does not exist.\\n    int32 internal constant INVALID_ALLOWANCE_OWNER_ID = 300;\\n\\n    /// The account id specified as the spender is invalid or does not exist.\\n    int32 internal constant INVALID_ALLOWANCE_SPENDER_ID = 301;\\n\\n    /// [Deprecated] If the CryptoDeleteAllowance transaction has repeated crypto or token or Nft allowances to delete.\\n    int32 internal constant REPEATED_ALLOWANCES_TO_DELETE = 302;\\n\\n    /// If the account Id specified as the delegating spender is invalid or does not exist.\\n    int32 internal constant INVALID_DELEGATING_SPENDER = 303;\\n\\n    /// The delegating Spender cannot grant approveForAll allowance on a NFT token type for another spender.\\n    int32 internal constant DELEGATING_SPENDER_CANNOT_GRANT_APPROVE_FOR_ALL = 304;\\n\\n    /// The delegating Spender cannot grant allowance on a NFT serial for another spender as it doesnt not have approveForAll granted on token-owner.\\n    int32 internal constant DELEGATING_SPENDER_DOES_NOT_HAVE_APPROVE_FOR_ALL = 305;\\n\\n    /// The scheduled transaction could not be created because it's expiration_time was too far in the future.\\n    int32 internal constant SCHEDULE_EXPIRATION_TIME_TOO_FAR_IN_FUTURE = 306;\\n\\n    /// The scheduled transaction could not be created because it's expiration_time was less than or equal to the consensus time.\\n    int32 internal constant SCHEDULE_EXPIRATION_TIME_MUST_BE_HIGHER_THAN_CONSENSUS_TIME = 307;\\n\\n    /// The scheduled transaction could not be created because it would cause throttles to be violated on the specified expiration_time.\\n    int32 internal constant SCHEDULE_FUTURE_THROTTLE_EXCEEDED = 308;\\n\\n    /// The scheduled transaction could not be created because it would cause the gas limit to be violated on the specified expiration_time.\\n    int32 internal constant SCHEDULE_FUTURE_GAS_LIMIT_EXCEEDED = 309;\\n\\n    /// The ethereum transaction either failed parsing or failed signature validation, or some other EthereumTransaction error not covered by another response code.\\n    int32 internal constant INVALID_ETHEREUM_TRANSACTION = 310;\\n\\n    /// EthereumTransaction was signed against a chainId that this network does not support.\\n    int32 internal constant WRONG_CHAIN_ID = 311;\\n\\n    /// This transaction specified an ethereumNonce that is not the current ethereumNonce of the account.\\n    int32 internal constant WRONG_NONCE = 312;\\n\\n    /// The ethereum transaction specified an access list, which the network does not support.\\n    int32 internal constant ACCESS_LIST_UNSUPPORTED = 313;\\n\\n    /// A schedule being signed or deleted has passed it's expiration date and is pending execution if needed and then expiration.\\n    int32 internal constant SCHEDULE_PENDING_EXPIRATION = 314;\\n\\n    /// A selfdestruct or ContractDelete targeted a contract that is a token treasury.\\n    int32 internal constant CONTRACT_IS_TOKEN_TREASURY = 315;\\n\\n    /// A selfdestruct or ContractDelete targeted a contract with non-zero token balances.\\n    int32 internal constant CONTRACT_HAS_NON_ZERO_TOKEN_BALANCES = 316;\\n\\n    /// A contract referenced by a transaction is \\\"detached\\\"; that is, expired and lacking any hbar funds for auto-renewal payment---but still within its post-expiry grace period.\\n    int32 internal constant CONTRACT_EXPIRED_AND_PENDING_REMOVAL = 317;\\n\\n    /// A ContractUpdate requested removal of a contract's auto-renew account, but that contract has no auto-renew account.\\n    int32 internal constant CONTRACT_HAS_NO_AUTO_RENEW_ACCOUNT = 318;\\n\\n    /// A delete transaction submitted via HAPI set permanent_removal=true\\n    int32 internal constant PERMANENT_REMOVAL_REQUIRES_SYSTEM_INITIATION = 319;\\n\\n    /// A CryptoCreate or ContractCreate used the deprecated proxyAccountID field.\\n    int32 internal constant PROXY_ACCOUNT_ID_FIELD_IS_DEPRECATED = 320;\\n\\n    /// An account set the staked_account_id to itself in CryptoUpdate or ContractUpdate transactions.\\n    int32 internal constant SELF_STAKING_IS_NOT_ALLOWED = 321;\\n\\n    /// The staking account id or staking node id given is invalid or does not exist.\\n    int32 internal constant INVALID_STAKING_ID = 322;\\n\\n    /// Native staking, while implemented, has not yet enabled by the council.\\n    int32 internal constant STAKING_NOT_ENABLED = 323;\\n\\n    /// The range provided in UtilPrng transaction is negative.\\n    int32 internal constant INVALID_PRNG_RANGE = 324;\\n\\n    /// The maximum number of entities allowed in the current price regime have been created.\\n    int32 internal constant MAX_ENTITIES_IN_PRICE_REGIME_HAVE_BEEN_CREATED = 325;\\n\\n    /// The full prefix signature for precompile is not valid\\n    int32 internal constant INVALID_FULL_PREFIX_SIGNATURE_FOR_PRECOMPILE = 326;\\n\\n    /// The combined balances of a contract and its auto-renew account (if any) did not cover the rent charged for net new storage used in a transaction.\\n    int32 internal constant INSUFFICIENT_BALANCES_FOR_STORAGE_RENT = 327;\\n\\n    /// A contract transaction tried to use more than the allowed number of child records, via either system contract records or internal contract creations.\\n    int32 internal constant MAX_CHILD_RECORDS_EXCEEDED = 328;\\n\\n    /// The combined balances of a contract and its auto-renew account (if any) or balance of an account did not cover the auto-renewal fees in a transaction.\\n    int32 internal constant INSUFFICIENT_BALANCES_FOR_RENEWAL_FEES = 329;\\n\\n    /// A transaction's protobuf message includes unknown fields; could mean that a client expects not-yet-released functionality to be available.\\n    int32 internal constant TRANSACTION_HAS_UNKNOWN_FIELDS = 330;\\n\\n    /// The account cannot be modified. Account's key is not set\\n    int32 internal constant ACCOUNT_IS_IMMUTABLE = 331;\\n\\n    /// An alias that is assigned to an account or contract cannot be assigned to another account or contract.\\n    int32 internal constant ALIAS_ALREADY_ASSIGNED = 332;\\n\\n    /// A provided metadata key was invalid. Verification includes, for example, checking the size of Ed25519 and ECDSA(secp256k1) public keys.\\n    int32 internal constant INVALID_METADATA_KEY = 333;\\n\\n    /// Metadata key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_METADATA_KEY = 334;\\n\\n    /// Token Metadata is not provided\\n    int32 internal constant MISSING_TOKEN_METADATA = 335;\\n\\n    /// NFT serial numbers are missing in the TokenUpdateNftsTransactionBody\\n    int32 internal constant MISSING_SERIAL_NUMBERS = 336;\\n\\n    /// Admin key is not set on token\\n    int32 internal constant TOKEN_HAS_NO_ADMIN_KEY = 337;\\n\\n    /// A transaction failed because the consensus node identified is deleted from the address book.\\n    int32 internal constant NODE_DELETED = 338;\\n\\n    /// A transaction failed because the consensus node identified is not valid or does not exist in state.\\n    int32 internal constant INVALID_NODE_ID = 339;\\n\\n    /// A transaction failed because one or more entries in the list of service endpoints for the `gossip_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port.\\n    int32 internal constant INVALID_GOSSIP_ENDPOINT = 340;\\n\\n    /// A transaction failed because the node account identifier provided does not exist or is not valid.<br/> One common source of this error is providing a node account identifier using the \\\"alias\\\" form rather than \\\"numeric\\\" form.\\n    int32 internal constant INVALID_NODE_ACCOUNT_ID = 341;\\n\\n    /// A transaction failed because the description field cannot be encoded as UTF-8 or is more than 100 bytes when encoded.\\n    int32 internal constant INVALID_NODE_DESCRIPTION = 342;\\n\\n    /// A transaction failed because one or more entries in the list of service endpoints for the `service_endpoint` field is invalid.<br/> The most common cause for this response is a service endpoint that has the domain name (DNS) set rather than address and port.\\n    int32 internal constant INVALID_SERVICE_ENDPOINT = 343;\\n\\n    /// A transaction failed because the TLS certificate provided for the node is missing or invalid. <p> #### Probable Causes The certificate MUST be a TLS certificate of a type permitted for gossip signatures.<br/> The value presented MUST be a UTF-8 NFKD encoding of the TLS certificate.<br/> The certificate encoded MUST be in PEM format.<br/> The `gossip_ca_certificate` field is REQUIRED and MUST NOT be empty.\\n    int32 internal constant INVALID_GOSSIP_CA_CERTIFICATE = 344;\\n\\n    /// A transaction failed because the hash provided for the gRPC certificate is present but invalid. <p> #### Probable Causes The `grpc_certificate_hash` MUST be a SHA-384 hash.<br/> The input hashed MUST be a UTF-8 NFKD encoding of the actual TLS certificate.<br/> The certificate to be encoded MUST be in PEM format.\\n    int32 internal constant INVALID_GRPC_CERTIFICATE = 345;\\n\\n    /// The maximum automatic associations value is not valid.<br/> The most common cause for this error is a value less than `-1`.\\n    int32 internal constant INVALID_MAX_AUTO_ASSOCIATIONS = 346;\\n\\n    /// The maximum number of nodes allowed in the address book have been created.\\n    int32 internal constant MAX_NODES_CREATED = 347;\\n\\n    /// In ServiceEndpoint, domain_name and ipAddressV4 are mutually exclusive\\n    int32 internal constant IP_FQDN_CANNOT_BE_SET_FOR_SAME_ENDPOINT = 348;\\n\\n    /// Fully qualified domain name is not allowed in gossip_endpoint\\n    int32 internal constant GOSSIP_ENDPOINT_CANNOT_HAVE_FQDN = 349;\\n\\n    /// In ServiceEndpoint, domain_name size too large\\n    int32 internal constant FQDN_SIZE_TOO_LARGE = 350;\\n\\n    /// ServiceEndpoint is invalid\\n    int32 internal constant INVALID_ENDPOINT = 351;\\n\\n    /// The number of gossip endpoints exceeds the limit\\n    int32 internal constant GOSSIP_ENDPOINTS_EXCEEDED_LIMIT = 352;\\n\\n    /// The transaction attempted to use duplicate `TokenReference`.<br/> This affects `TokenReject` attempting to reject same token reference more than once.\\n    int32 internal constant TOKEN_REFERENCE_REPEATED = 353;\\n\\n    /// The account id specified as the owner in `TokenReject` is invalid or does not exist.\\n    int32 internal constant INVALID_OWNER_ID = 354;\\n\\n    /// The transaction attempted to use more than the allowed number of `TokenReference`.\\n    int32 internal constant TOKEN_REFERENCE_LIST_SIZE_LIMIT_EXCEEDED = 355;\\n\\n    /// The number of service endpoints exceeds the limit\\n    int32 internal constant SERVICE_ENDPOINTS_EXCEEDED_LIMIT = 356;\\n\\n    /// The IPv4 address is invalid\\n    int32 internal constant INVALID_IPV4_ADDRESS = 357;\\n\\n    /// The transaction attempted to use empty `TokenReference` list.\\n    int32 internal constant EMPTY_TOKEN_REFERENCE_LIST = 358;\\n\\n    /// The node account is not allowed to be updated\\n    int32 internal constant UPDATE_NODE_ACCOUNT_NOT_ALLOWED = 359;\\n\\n    /// The token has no metadata or supply key\\n    int32 internal constant TOKEN_HAS_NO_METADATA_OR_SUPPLY_KEY = 360;\\n\\n    /// The list of `PendingAirdropId`s is empty and MUST NOT be empty.\\n    int32 internal constant EMPTY_PENDING_AIRDROP_ID_LIST = 361;\\n\\n    /// A `PendingAirdropId` is repeated in a `claim` or `cancel` transaction.\\n    int32 internal constant PENDING_AIRDROP_ID_REPEATED = 362;\\n\\n    /// The number of `PendingAirdropId` values in the list exceeds the maximum allowable number.\\n    int32 internal constant PENDING_AIRDROP_ID_LIST_TOO_LONG = 363;\\n\\n    /// A pending airdrop already exists for the specified NFT.\\n    int32 internal constant PENDING_NFT_AIRDROP_ALREADY_EXISTS = 364;\\n\\n    /// The identified account is sender for one or more pending airdrop(s) and cannot be deleted. <p> The requester SHOULD cancel all pending airdrops before resending this transaction.\\n    int32 internal constant ACCOUNT_HAS_PENDING_AIRDROPS = 365;\\n\\n    /// Consensus throttle did not allow execution of this transaction.<br/> The transaction should be retried after a modest delay.\\n    int32 internal constant THROTTLED_AT_CONSENSUS = 366;\\n\\n    /// The provided pending airdrop id is invalid.<br/> This pending airdrop MAY already be claimed or cancelled. <p> The client SHOULD query a mirror node to determine the current status of the pending airdrop.\\n    int32 internal constant INVALID_PENDING_AIRDROP_ID = 367;\\n\\n    /// The token to be airdropped has a fallback royalty fee and cannot be sent or claimed via an airdrop transaction.\\n    int32 internal constant TOKEN_AIRDROP_WITH_FALLBACK_ROYALTY = 368;\\n\\n    /// This airdrop claim is for a pending airdrop with an invalid token.<br/> The token might be deleted, or the sender may not have enough tokens to fulfill the offer. <p> The client SHOULD query mirror node to determine the status of the pending airdrop and whether the sender can fulfill the offer.\\n    int32 internal constant INVALID_TOKEN_IN_PENDING_AIRDROP = 369;\\n\\n    /// A scheduled transaction configured to wait for expiry to execute was given an expiry time at which there is already too many transactions scheduled to expire; its creation must be retried with a different expiry.\\n    int32 internal constant SCHEDULE_EXPIRY_IS_BUSY = 370;\\n\\n    /// The provided gRPC certificate hash is invalid.\\n    int32 internal constant INVALID_GRPC_CERTIFICATE_HASH = 371;\\n\\n    /// A scheduled transaction configured to wait for expiry to execute was not given an explicit expiration time.\\n    int32 internal constant MISSING_EXPIRY_TIME = 372;\\n\\n    /// A contract operation attempted to schedule another transaction after it had already scheduled a recursive contract call.\\n    int32 internal constant NO_SCHEDULING_ALLOWED_AFTER_SCHEDULED_RECURSION = 373;\\n\\n    /// A contract can schedule recursive calls a finite number of times (this is approximately four million times with typical network configuration.)\\n    int32 internal constant RECURSIVE_SCHEDULING_LIMIT_REACHED = 374;\\n\\n    /// The target network is waiting for the ledger ID to be set, which is a side effect of finishing the network's TSS construction.\\n    int32 internal constant WAITING_FOR_LEDGER_ID = 375;\\n\\n    /// The provided fee exempt key list size exceeded the limit.\\n    int32 internal constant MAX_ENTRIES_FOR_FEE_EXEMPT_KEY_LIST_EXCEEDED = 376;\\n\\n    /// The provided fee exempt key list contains duplicated keys.\\n    int32 internal constant FEE_EXEMPT_KEY_LIST_CONTAINS_DUPLICATED_KEYS = 377;\\n\\n    /// The provided fee exempt key list contains an invalid key.\\n    int32 internal constant INVALID_KEY_IN_FEE_EXEMPT_KEY_LIST = 378;\\n\\n    /// The provided fee schedule key contains an invalid key.\\n    int32 internal constant INVALID_FEE_SCHEDULE_KEY = 379;\\n\\n    /// If a fee schedule key is not set when we create a topic we cannot add it on update.\\n    int32 internal constant FEE_SCHEDULE_KEY_CANNOT_BE_UPDATED = 380;\\n\\n    /// If the topic's custom fees are updated the topic SHOULD have a fee schedule key\\n    int32 internal constant FEE_SCHEDULE_KEY_NOT_SET = 381;\\n\\n    /// The fee amount is exceeding the amount that the payer is willing to pay.\\n    int32 internal constant MAX_CUSTOM_FEE_LIMIT_EXCEEDED = 382;\\n\\n    /// There are no corresponding custom fees.\\n    int32 internal constant NO_VALID_MAX_CUSTOM_FEE = 383;\\n\\n    /// The provided list contains invalid max custom fee.\\n    int32 internal constant INVALID_MAX_CUSTOM_FEES = 384;\\n\\n    /// The provided max custom fee list contains fees with duplicate denominations.\\n    int32 internal constant DUPLICATE_DENOMINATION_IN_MAX_CUSTOM_FEE_LIST = 385;\\n\\n    /// The provided max custom fee list contains fees with duplicate account id.\\n    int32 internal constant DUPLICATE_ACCOUNT_ID_IN_MAX_CUSTOM_FEE_LIST = 386;\\n\\n    /// Max custom fees list is not supported for this operation.\\n    int32 internal constant MAX_CUSTOM_FEES_IS_NOT_SUPPORTED = 387;\\n\\n}\",\"keccak256\":\"0xfea411961dc0166189bd93b4f23e8e53430b5090f8dc0d25e870472d779603ee\",\"license\":\"Apache-2.0\"},\"app/contracts/HederaTokenService.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.5.0 <0.9.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./HederaResponseCodes.sol\\\";\\nimport \\\"./IHederaTokenService.sol\\\";\\n\\nabstract contract HederaTokenService {\\n    address constant precompileAddress = address(0x167);\\n    // 90 days in seconds\\n    int32 constant defaultAutoRenewPeriod = 7776000;\\n\\n    modifier nonEmptyExpiry(IHederaTokenService.HederaToken memory token)\\n    {\\n        if (token.expiry.second == 0 && token.expiry.autoRenewPeriod == 0) {\\n            token.expiry.autoRenewPeriod = defaultAutoRenewPeriod;\\n        }\\n        _;\\n    }\\n\\n    /// Generic event\\n    event CallResponseEvent(bool, bytes);\\n\\n    /// Performs transfers among combinations of tokens and hbars\\n    /// @param transferList the list of hbar transfers to do\\n    /// @param tokenTransfers the list of transfers to do\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\\n    function cryptoTransfer(IHederaTokenService.TransferList memory transferList, IHederaTokenService.TokenTransferList[] memory tokenTransfers) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.cryptoTransfer.selector, transferList, tokenTransfers));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Mints an amount of the token to the defined treasury account\\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\\n    ///               token. The new supply must be lower than 2^63.\\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\\n    ///                 Maximum allowed size of each metadata is 100 bytes\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, otherwise empty.\\n    function mintToken(address token, int64 amount, bytes[] memory metadata) internal\\n    returns (int responseCode, int64 newTotalSupply, int64[] memory serialNumbers)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.mintToken.selector,\\n            token, amount, metadata));\\n        (responseCode, newTotalSupply, serialNumbers) =\\n        success\\n        ? abi.decode(result, (int32, int64, int64[]))\\n        : (HederaResponseCodes.UNKNOWN, int64(0), new int64[](0));\\n    }\\n\\n    /// Burns an amount of the token from the defined treasury account\\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\\n    ///                account (0; balance], represented in the lowest denomination.\\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    function burnToken(address token, int64 amount, int64[] memory serialNumbers) internal\\n    returns (int responseCode, int64 newTotalSupply)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.burnToken.selector,\\n            token, amount, serialNumbers));\\n        (responseCode, newTotalSupply) =\\n        success\\n        ? abi.decode(result, (int32, int64))\\n        : (HederaResponseCodes.UNKNOWN, int64(0));\\n    }\\n\\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\\n    ///  Account's key or called from the accounts contract key\\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    ///  If an association between the provided account and any of the tokens already exists, the\\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\\n    ///  On success, associations between the provided account and tokens are made and the account is\\n    ///    ready to interact with the tokens.\\n    /// @param account The account to be associated with the provided tokens\\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\\n    ///               token type\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function associateTokens(address account, address[] memory tokens) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.associateTokens.selector,\\n            account, tokens));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    function associateToken(address account, address token) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.associateToken.selector,\\n            account, token));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\\n    /// Account's key.\\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    /// If an association between the provided account and any of the tokens does not exist, the\\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\\n    /// not zero.\\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\\n    /// On success, associations between the provided account and tokens are removed.\\n    /// @param account The account to be dissociated from the provided tokens\\n    /// @param tokens The tokens to be dissociated from the provided account.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function dissociateTokens(address account, address[] memory tokens) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.dissociateTokens.selector,\\n            account, tokens));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    function dissociateToken(address account, address token) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.dissociateToken.selector,\\n            account, token));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleToken(\\n        IHederaTokenService.HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals) nonEmptyExpiry(token)\\n    internal returns (int responseCode, address tokenAddress) {\\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\\n            abi.encodeWithSelector(IHederaTokenService.createFungibleToken.selector,\\n            token, initialTotalSupply, decimals));\\n\\n\\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param fractionalFees list of fractional fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleTokenWithCustomFees(\\n        IHederaTokenService.HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals,\\n        IHederaTokenService.FixedFee[] memory fixedFees,\\n        IHederaTokenService.FractionalFee[] memory fractionalFees) nonEmptyExpiry(token)\\n    internal returns (int responseCode, address tokenAddress) {\\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\\n            abi.encodeWithSelector(IHederaTokenService.createFungibleTokenWithCustomFees.selector,\\n            token, initialTotalSupply, decimals, fixedFees, fractionalFees));\\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleToken(IHederaTokenService.HederaToken memory token) nonEmptyExpiry(token)\\n    internal returns (int responseCode, address tokenAddress) {\\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\\n            abi.encodeWithSelector(IHederaTokenService.createNonFungibleToken.selector, token));\\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param royaltyFees list of royalty fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleTokenWithCustomFees(\\n        IHederaTokenService.HederaToken memory token,\\n        IHederaTokenService.FixedFee[] memory fixedFees,\\n        IHederaTokenService.RoyaltyFee[] memory royaltyFees) nonEmptyExpiry(token)\\n    internal returns (int responseCode, address tokenAddress) {\\n        (bool success, bytes memory result) = precompileAddress.call{value : msg.value}(\\n            abi.encodeWithSelector(IHederaTokenService.createNonFungibleTokenWithCustomFees.selector,\\n            token, fixedFees, royaltyFees));\\n        (responseCode, tokenAddress) = success ? abi.decode(result, (int32, address)) : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Retrieves fungible specific token info for a fungible token\\n    /// @param token The ID of the token as a solidity address\\n    /// @dev This function reverts if the call is not successful\\n    function getFungibleTokenInfo(address token) internal returns (int responseCode, IHederaTokenService.FungibleTokenInfo memory tokenInfo) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getFungibleTokenInfo.selector, token));\\n        IHederaTokenService.FungibleTokenInfo memory defaultTokenInfo;\\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.FungibleTokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\\n    }\\n\\n    /// Retrieves general token info for a given token\\n    /// @param token The ID of the token as a solidity address\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenInfo(address token) internal returns (int responseCode, IHederaTokenService.TokenInfo memory tokenInfo) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenInfo.selector, token));\\n        IHederaTokenService.TokenInfo memory defaultTokenInfo;\\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.TokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\\n    }\\n\\n    /// Retrieves non-fungible specific token info for a given NFT\\n    /// @param token The ID of the token as a solidity address\\n    /// @dev This function reverts if the call is not successful\\n    function getNonFungibleTokenInfo(address token, int64 serialNumber) internal returns (int responseCode, IHederaTokenService.NonFungibleTokenInfo memory tokenInfo) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getNonFungibleTokenInfo.selector, token, serialNumber));\\n        IHederaTokenService.NonFungibleTokenInfo memory defaultTokenInfo;\\n        (responseCode, tokenInfo) = success ? abi.decode(result, (int32, IHederaTokenService.NonFungibleTokenInfo)) : (HederaResponseCodes.UNKNOWN, defaultTokenInfo);\\n    }\\n\\n    /// Query token custom fees\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return fixedFees Set of fixed fees for `token`\\n    /// @return fractionalFees Set of fractional fees for `token`\\n    /// @return royaltyFees Set of royalty fees for `token`\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenCustomFees(address token) internal returns (int64 responseCode,\\n        IHederaTokenService.FixedFee[] memory fixedFees,\\n        IHederaTokenService.FractionalFee[] memory fractionalFees,\\n        IHederaTokenService.RoyaltyFee[] memory royaltyFees) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenCustomFees.selector, token));\\n        IHederaTokenService.FixedFee[] memory defaultFixedFees;\\n        IHederaTokenService.FractionalFee[] memory defaultFractionalFees;\\n        IHederaTokenService.RoyaltyFee[] memory defaultRoyaltyFees;\\n        (responseCode, fixedFees, fractionalFees, royaltyFees) =\\n        success ? abi.decode\\n        (result, (int32, IHederaTokenService.FixedFee[], IHederaTokenService.FractionalFee[], IHederaTokenService.RoyaltyFee[]))\\n        : (HederaResponseCodes.UNKNOWN, defaultFixedFees, defaultFractionalFees, defaultRoyaltyFees);\\n    }\\n\\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\\n    /// again it overwrites the current allowance with value.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The hedera token address to approve\\n    /// @param spender the account authorized to spend\\n    /// @param amount the amount of tokens authorized to spend.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approve(address token, address spender, uint256 amount) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.approve.selector,\\n            token, spender, amount));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Transfers `amount` tokens from `from` to `to` using the\\n    //  allowance mechanism. `amount` is then deducted from the caller's allowance.\\n    /// Only applicable to fungible tokens\\n    /// @param token The address of the fungible Hedera token to transfer\\n    /// @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\\n    /// @param to The account address of the receiver of the `amount` tokens\\n    /// @param amount The amount of tokens to transfer from `from` to `to`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFrom(address token, address from, address to, uint256 amount) external returns (int64 responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferFrom.selector,\\n            token, from, to, amount));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\\n    /// Only applicable to NFT tokens\\n    /// @param token The address of the non-fungible Hedera token to transfer\\n    /// @param from The account address of the owner of `serialNumber` of `token`\\n    /// @param to The account address of the receiver of `serialNumber`\\n    /// @param serialNumber The NFT serial number to transfer\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFromNFT(address token, address from, address to, uint256 serialNumber) external returns (int64 responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferFromNFT.selector,\\n            token, from, to, serialNumber));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Returns the amount which spender is still allowed to withdraw from owner.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The Hedera token address to check the allowance of\\n    /// @param owner the owner of the tokens to be spent\\n    /// @param spender the spender of the tokens\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function allowance(address token, address owner, address spender) internal returns (int responseCode, uint256 amount)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.allowance.selector,\\n            token, owner, spender));\\n        (responseCode, amount) = success ? abi.decode(result, (int32, uint256)) : (HederaResponseCodes.UNKNOWN, 0);\\n    }\\n\\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\\n    /// @param serialNumber The NFT serial number  to approve\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approveNFT(address token, address approved, uint256 serialNumber) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.approveNFT.selector,\\n            token, approved, serialNumber));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Get the approved address for a single NFT\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to check approval\\n    /// @param serialNumber The NFT to find the approved address for\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved The approved address for this NFT, or the zero address if there is none\\n    function getApproved(address token, uint256 serialNumber) internal returns (int responseCode, address approved)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getApproved.selector,\\n            token, serialNumber));\\n        (responseCode, approved) =\\n        success\\n        ? abi.decode(result, (int32, address))\\n        : (HederaResponseCodes.UNKNOWN, address(0));\\n    }\\n\\n    /// Query if token account is frozen\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return frozen True if `account` is frozen for `token`\\n    /// @dev This function reverts if the call is not successful\\n    function isFrozen(address token, address account) internal returns (int64 responseCode, bool frozen){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.isFrozen.selector, token, account));\\n        (responseCode, frozen) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Query if token account has kyc granted\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return kycGranted True if `account` has kyc granted for `token`\\n    /// @dev This function reverts if the call is not successful\\n    function isKyc(address token, address account) internal returns (int64 responseCode, bool kycGranted){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.isKyc.selector, token, account));\\n        (responseCode, kycGranted) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Operation to freeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be frozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function freezeToken(address token, address account) internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.freezeToken.selector, token, account));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to unfreeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be unfrozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unfreezeToken(address token, address account) internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.unfreezeToken.selector, token, account));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to grant kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to grant kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function grantTokenKyc(address token, address account) internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.grantTokenKyc.selector, token, account));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to revoke kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function revokeTokenKyc(address token, address account) internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.revokeTokenKyc.selector, token, account));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Enable or disable approval for a third party (\\\"operator\\\") to manage\\n    ///  all of `msg.sender`'s assets\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param operator Address to add to the set of authorized operators\\n    /// @param approved True if the operator is approved, false to revoke approval\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function setApprovalForAll(address token, address operator, bool approved) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.setApprovalForAll.selector,\\n            token, operator, approved));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Query if an address is an authorized operator for another address\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param owner The address that owns the NFTs\\n    /// @param operator The address that acts on behalf of the owner\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\\n    function isApprovedForAll(address token, address owner, address operator) internal returns (int responseCode, bool approved)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.isApprovedForAll.selector,\\n            token, owner, operator));\\n        (responseCode, approved) =\\n        success\\n        ? abi.decode(result, (int32, bool))\\n        : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Query token default freeze status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenDefaultFreezeStatus(address token) internal returns (int responseCode, bool defaultFreezeStatus) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenDefaultFreezeStatus.selector, token));\\n        (responseCode, defaultFreezeStatus) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Query token default kyc status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenDefaultKycStatus(address token) internal returns (int responseCode, bool defaultKycStatus) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenDefaultKycStatus.selector, token));\\n        (responseCode, defaultKycStatus) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /**********************\\n     * ABI v1 calls       *\\n     **********************/\\n\\n    /// Initiates a Fungible Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param accountIds account to do a transfer to/from\\n    /// @param amounts The amount from the accountId at the same index\\n    function transferTokens(address token, address[] memory accountIds, int64[] memory amounts) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferTokens.selector,\\n            token, accountIds, amounts));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Initiates a Non-Fungable Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param sender the sender of an nft\\n    /// @param receiver the receiver of the nft sent by the same index at sender\\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\\n    function transferNFTs(address token, address[] memory sender, address[] memory receiver, int64[] memory serialNumber)\\n    internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferNFTs.selector,\\n            token, sender, receiver, serialNumber));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param receiver The receiver of the transaction\\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\\n    function transferToken(address token, address sender, address receiver, int64 amount) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferToken.selector,\\n            token, sender, receiver, amount));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param receiver The receiver of the transaction\\n    /// @param serialNumber The serial number of the NFT to transfer.\\n    function transferNFT(address token, address sender, address receiver, int64 serialNumber) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.transferNFT.selector,\\n            token, sender, receiver, serialNumber));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to pause token\\n    /// @param token The token address to be paused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function pauseToken(address token) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.pauseToken.selector, token));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to unpause token\\n    /// @param token The token address to be unpaused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unpauseToken(address token) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.unpauseToken.selector, token));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to wipe fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param amount The number of tokens to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccount(address token, address account, int64 amount) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.wipeTokenAccount.selector, token, account, amount));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to wipe non fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param  serialNumbers The serial numbers of token to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccountNFT(address token, address account, int64[] memory serialNumbers) internal\\n    returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.wipeTokenAccountNFT.selector, token, account, serialNumbers));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to delete token\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function deleteToken(address token) internal returns (int responseCode)\\n    {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.deleteToken.selector, token));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to update token keys\\n    /// @param token The token address\\n    /// @param keys The token keys\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenKeys(address token, IHederaTokenService.TokenKey[] memory keys)\\n    internal returns (int64 responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateTokenKeys.selector, token, keys));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Query token KeyValue\\n    /// @param token The token address to check\\n    /// @param keyType The keyType of the desired KeyValue\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return key KeyValue info for key of type `keyType`\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenKey(address token, uint keyType)\\n    internal returns (int64 responseCode, IHederaTokenService.KeyValue memory key){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenKey.selector, token, keyType));\\n        IHederaTokenService.KeyValue memory defaultKeyValueInfo;\\n        (responseCode, key) = success ? abi.decode(result, (int32,IHederaTokenService.KeyValue) ) : (HederaResponseCodes.UNKNOWN, defaultKeyValueInfo);\\n    }\\n\\n\\n    /// Query if valid token found for the given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return isTokenFlag True if valid token found for the given address\\n    /// @dev This function reverts if the call is not successful\\n    function isToken(address token) internal returns (int64 responseCode, bool isTokenFlag) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.isToken.selector, token));\\n        (responseCode, isTokenFlag) = success ? abi.decode(result, (int32, bool)) : (HederaResponseCodes.UNKNOWN, false);\\n    }\\n\\n    /// Query to return the token type for a given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenType(address token) internal returns (int64 responseCode, int32 tokenType) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenType.selector, token));\\n        (responseCode, tokenType) = success ? abi.decode(result, (int32, int32)) : (HederaResponseCodes.UNKNOWN, - 1);\\n    }\\n\\n    /// Operation to get token expiry info\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return expiryInfo The expiry info of the token\\n    /// @dev This function reverts if the call is not successful\\n    function getTokenExpiryInfo(address token) internal returns (int responseCode, IHederaTokenService.Expiry memory expiryInfo){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.getTokenExpiryInfo.selector, token));\\n        IHederaTokenService.Expiry memory defaultExpiryInfo;\\n        (responseCode, expiryInfo) = success ? abi.decode(result, (int32, IHederaTokenService.Expiry)) : (HederaResponseCodes.UNKNOWN, defaultExpiryInfo);\\n    }\\n\\n    /// Operation to update token expiry info\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenExpiryInfo(address token, IHederaTokenService.Expiry memory expiryInfo) internal returns (int responseCode){\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateTokenExpiryInfo.selector, token, expiryInfo));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Operation to update token info\\n    /// @param token The token address\\n    /// @param tokenInfo The hedera token info to update token with\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenInfo(address token, IHederaTokenService.HederaToken memory tokenInfo) internal returns (int responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateTokenInfo.selector, token, tokenInfo));\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Redirect for token\\n    /// @param token The token address\\n    /// @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return response The result of the call that had been encoded and sent for execution.\\n    function redirectForToken(address token, bytes memory encodedFunctionSelector) external returns (int responseCode, bytes memory response) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.redirectForToken.selector, token, encodedFunctionSelector)\\n        );\\n\\n        emit CallResponseEvent(success, result);\\n        (responseCode, response) = success ? (HederaResponseCodes.SUCCESS, result) : (HederaResponseCodes.UNKNOWN, bytes(\\\"\\\"));\\n    }\\n\\n    /// Update the custom fees for a fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param fractionalFees Set of fractional fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateFungibleTokenCustomFees(address token,  IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.FractionalFee[] memory fractionalFees) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateFungibleTokenCustomFees.selector, token, fixedFees, fractionalFees));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// Update the custom fees for a non-fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param royaltyFees Set of royalty fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateNonFungibleTokenCustomFees(address token, IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.RoyaltyFee[] memory royaltyFees) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.updateNonFungibleTokenCustomFees.selector, token, fixedFees, royaltyFees));\\n        responseCode = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// @notice Airdrop one or more tokens to one or more accounts\\n    /// @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function airdropTokens(IHederaTokenService.TokenTransferList[] memory tokenTransfers) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.airdropTokens.selector, tokenTransfers));\\n\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// @notice Cancels pending airdrops that have not yet been claimed\\n    /// @param pendingAirdrops Array of pending airdrops to cancel\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function cancelAirdrops(IHederaTokenService.PendingAirdrop[] memory pendingAirdrops) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.cancelAirdrops.selector, pendingAirdrops)\\n        );\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// @notice Claims pending airdrops that were sent to the calling account\\n    /// @param pendingAirdrops Array of pending airdrops to claim\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function claimAirdrops(IHederaTokenService.PendingAirdrop[] memory pendingAirdrops) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.claimAirdrops.selector, pendingAirdrops)\\n        );\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n\\n    /// @notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\\n    /// @param rejectingAddress The address rejecting the tokens\\n    /// @param ftAddresses Array of fungible token addresses to reject\\n    /// @param nftIds Array of NFT IDs to reject\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function rejectTokens(address rejectingAddress, address[] memory ftAddresses, IHederaTokenService.NftID[] memory nftIds) internal returns (int64 responseCode) {\\n        (bool success, bytes memory result) = precompileAddress.call(\\n            abi.encodeWithSelector(IHederaTokenService.rejectTokens.selector, rejectingAddress, ftAddresses, nftIds)\\n        );\\n        (responseCode) = success ? abi.decode(result, (int32)) : HederaResponseCodes.UNKNOWN;\\n    }\\n}\",\"keccak256\":\"0x6ee83b480cc0c8cb900142a5c24bf3c630024db9928d7239171b146cb22b0e1d\",\"license\":\"Apache-2.0\"},\"app/contracts/IHederaTokenService.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.9 <0.9.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IHederaTokenService {\\n    /// Transfers cryptocurrency among two or more accounts by making the desired adjustments to their\\n    /// balances. Each transfer list can specify up to 10 adjustments. Each negative amount is withdrawn\\n    /// from the corresponding account (a sender), and each positive one is added to the corresponding\\n    /// account (a receiver). The amounts list must sum to zero. Each amount is a number of tinybars\\n    /// (there are 100,000,000 tinybars in one hbar).  If any sender account fails to have sufficient\\n    /// hbars, then the entire transaction fails, and none of those transfers occur, though the\\n    /// transaction fee is still charged. This transaction must be signed by the keys for all the sending\\n    /// accounts, and for any receiving accounts that have receiverSigRequired == true. The signatures\\n    /// are in the same order as the accounts, skipping those accounts that don't need a signature.\\n    /// @custom:version 0.3.0 previous version did not include isApproval\\n    struct AccountAmount {\\n        // The Account ID, as a solidity address, that sends/receives cryptocurrency or tokens\\n        address accountID;\\n\\n        // The amount of  the lowest denomination of the given token that\\n        // the account sends(negative) or receives(positive)\\n        int64 amount;\\n\\n        // If true then the transfer is expected to be an approved allowance and the\\n        // accountID is expected to be the owner. The default is false (omitted).\\n        bool isApproval;\\n    }\\n\\n    /// A sender account, a receiver account, and the serial number of an NFT of a Token with\\n    /// NON_FUNGIBLE_UNIQUE type. When minting NFTs the sender will be the default AccountID instance\\n    /// (0.0.0 aka 0x0) and when burning NFTs, the receiver will be the default AccountID instance.\\n    /// @custom:version 0.3.0 previous version did not include isApproval\\n    struct NftTransfer {\\n        // The solidity address of the sender\\n        address senderAccountID;\\n\\n        // The solidity address of the receiver\\n        address receiverAccountID;\\n\\n        // The serial number of the NFT\\n        int64 serialNumber;\\n\\n        // If true then the transfer is expected to be an approved allowance and the\\n        // accountID is expected to be the owner. The default is false (omitted).\\n        bool isApproval;\\n    }\\n\\n    struct TokenTransferList {\\n        // The ID of the token as a solidity address\\n        address token;\\n\\n        // Applicable to tokens of type FUNGIBLE_COMMON. Multiple list of AccountAmounts, each of which\\n        // has an account and amount.\\n        AccountAmount[] transfers;\\n\\n        // Applicable to tokens of type NON_FUNGIBLE_UNIQUE. Multiple list of NftTransfers, each of\\n        // which has a sender and receiver account, including the serial number of the NFT\\n        NftTransfer[] nftTransfers;\\n    }\\n\\n    struct TransferList {\\n        // Multiple list of AccountAmounts, each of which has an account and amount.\\n        // Used to transfer hbars between the accounts in the list.\\n        AccountAmount[] transfers;\\n    }\\n\\n    /// Expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\\n    struct Expiry {\\n        // The epoch second at which the token should expire; if an auto-renew account and period are\\n        // specified, this is coerced to the current epoch second plus the autoRenewPeriod\\n        int64 second;\\n\\n        // ID of an account which will be automatically charged to renew the token's expiration, at\\n        // autoRenewPeriod interval, expressed as a solidity address\\n        address autoRenewAccount;\\n\\n        // The interval at which the auto-renew account will be charged to extend the token's expiry\\n        int64 autoRenewPeriod;\\n    }\\n\\n    /// A Key can be a public key from either the Ed25519 or ECDSA(secp256k1) signature schemes, where\\n    /// in the ECDSA(secp256k1) case we require the 33-byte compressed form of the public key. We call\\n    /// these public keys <b>primitive keys</b>.\\n    /// A Key can also be the ID of a smart contract instance, which is then authorized to perform any\\n    /// precompiled contract action that requires this key to sign.\\n    /// Note that when a Key is a smart contract ID, it <i>doesn't</i> mean the contract with that ID\\n    /// will actually create a cryptographic signature. It only means that when the contract calls a\\n    /// precompiled contract, the resulting \\\"child transaction\\\" will be authorized to perform any action\\n    /// controlled by the Key.\\n    /// Exactly one of the possible values should be populated in order for the Key to be valid.\\n    struct KeyValue {\\n\\n        // if set to true, the key of the calling Hedera account will be inherited as the token key\\n        bool inheritAccountKey;\\n\\n        // smart contract instance that is authorized as if it had signed with a key\\n        address contractId;\\n\\n        // Ed25519 public key bytes\\n        bytes ed25519;\\n\\n        // Compressed ECDSA(secp256k1) public key bytes\\n        bytes ECDSA_secp256k1;\\n\\n        // A smart contract that, if the recipient of the active message frame, should be treated\\n        // as having signed. (Note this does not mean the <i>code being executed in the frame</i>\\n        // will belong to the given contract, since it could be running another contract's code via\\n        // <tt>delegatecall</tt>. So setting this key is a more permissive version of setting the\\n        // contractID key, which also requires the code in the active message frame belong to the\\n        // the contract with the given id.)\\n        address delegatableContractId;\\n    }\\n\\n    /// A list of token key types the key should be applied to and the value of the key\\n    struct TokenKey {\\n\\n        // bit field representing the key type. Keys of all types that have corresponding bits set to 1\\n        // will be created for the token.\\n        // 0th bit: adminKey\\n        // 1st bit: kycKey\\n        // 2nd bit: freezeKey\\n        // 3rd bit: wipeKey\\n        // 4th bit: supplyKey\\n        // 5th bit: feeScheduleKey\\n        // 6th bit: pauseKey\\n        // 7th bit: ignored\\n        uint keyType;\\n\\n        // the value that will be set to the key type\\n        KeyValue key;\\n    }\\n\\n    /// Basic properties of a Hedera Token - name, symbol, memo, tokenSupplyType, maxSupply,\\n    /// treasury, freezeDefault. These properties are related both to Fungible and NFT token types.\\n    struct HederaToken {\\n        // The publicly visible name of the token. The token name is specified as a Unicode string.\\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\\n        string name;\\n\\n        // The publicly visible token symbol. The token symbol is specified as a Unicode string.\\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\\n        string symbol;\\n\\n        // The ID of the account which will act as a treasury for the token as a solidity address.\\n        // This account will receive the specified initial supply or the newly minted NFTs in\\n        // the case for NON_FUNGIBLE_UNIQUE Type\\n        address treasury;\\n\\n        // The memo associated with the token (UTF-8 encoding max 100 bytes)\\n        string memo;\\n\\n        // IWA compatibility. Specified the token supply type. Defaults to INFINITE\\n        bool tokenSupplyType;\\n\\n        // IWA Compatibility. Depends on TokenSupplyType. For tokens of type FUNGIBLE_COMMON - the\\n        // maximum number of tokens that can be in circulation. For tokens of type NON_FUNGIBLE_UNIQUE -\\n        // the maximum number of NFTs (serial numbers) that can be minted. This field can never be changed!\\n        int64 maxSupply;\\n\\n        // The default Freeze status (frozen or unfrozen) of Hedera accounts relative to this token. If\\n        // true, an account must be unfrozen before it can receive the token\\n        bool freezeDefault;\\n\\n        // list of keys to set to the token - removed due to Solidity compiler limitation\\n        // TokenKey[] tokenKeys;\\n\\n        // expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\\n        Expiry expiry;\\n    }\\n\\n    /// Additional post creation fungible and non fungible properties of a Hedera Token.\\n    struct TokenInfo {\\n        /// Basic properties of a Hedera Token\\n        HederaToken token;\\n\\n        /// The number of tokens (fungible) or serials (non-fungible) of the token\\n        int64 totalSupply;\\n\\n        /// Specifies whether the token is deleted or not\\n        bool deleted;\\n\\n        /// Specifies whether the token kyc was defaulted with KycNotApplicable (true) or Revoked (false)\\n        bool defaultKycStatus;\\n\\n        /// Specifies whether the token is currently paused or not\\n        bool pauseStatus;\\n\\n        /// The fixed fees collected when transferring the token\\n        FixedFee[] fixedFees;\\n\\n        /// The fractional fees collected when transferring the token\\n        FractionalFee[] fractionalFees;\\n\\n        /// The royalty fees collected when transferring the token\\n        RoyaltyFee[] royaltyFees;\\n\\n        /// The ID of the network ledger\\n        string ledgerId;\\n    }\\n\\n    /// Additional fungible properties of a Hedera Token.\\n    struct FungibleTokenInfo {\\n        /// The shared hedera token info\\n        TokenInfo tokenInfo;\\n\\n        /// The number of decimal places a token is divisible by\\n        int32 decimals;\\n    }\\n\\n    /// Additional non fungible properties of a Hedera Token.\\n    struct NonFungibleTokenInfo {\\n        /// The shared hedera token info\\n        TokenInfo tokenInfo;\\n\\n        /// The serial number of the nft\\n        int64 serialNumber;\\n\\n        /// The account id specifying the owner of the non fungible token\\n        address ownerId;\\n\\n        /// The epoch second at which the token was created.\\n        int64 creationTime;\\n\\n        /// The unique metadata of the NFT\\n        bytes metadata;\\n\\n        /// The account id specifying an account that has been granted spending permissions on this nft\\n        address spenderId;\\n    }\\n\\n    /// A fixed number of units (hbar or token) to assess as a fee during a transfer of\\n    /// units of the token to which this fixed fee is attached. The denomination of\\n    /// the fee depends on the values of tokenId, useHbarsForPayment and\\n    /// useCurrentTokenForPayment. Exactly one of the values should be set.\\n    struct FixedFee {\\n\\n        int64 amount;\\n\\n        // Specifies ID of token that should be used for fixed fee denomination\\n        address tokenId;\\n\\n        // Specifies this fixed fee should be denominated in Hbar\\n        bool useHbarsForPayment;\\n\\n        // Specifies this fixed fee should be denominated in the Token currently being created\\n        bool useCurrentTokenForPayment;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// A fraction of the transferred units of a token to assess as a fee. The amount assessed will never\\n    /// be less than the given minimumAmount, and never greater than the given maximumAmount.  The\\n    /// denomination is always units of the token to which this fractional fee is attached.\\n    struct FractionalFee {\\n        // A rational number's numerator, used to set the amount of a value transfer to collect as a custom fee\\n        int64 numerator;\\n\\n        // A rational number's denominator, used to set the amount of a value transfer to collect as a custom fee\\n        int64 denominator;\\n\\n        // The minimum amount to assess\\n        int64 minimumAmount;\\n\\n        // The maximum amount to assess (zero implies no maximum)\\n        int64 maximumAmount;\\n        bool netOfTransfers;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// A fee to assess during a transfer that changes ownership of an NFT. Defines the fraction of\\n    /// the fungible value exchanged for an NFT that the ledger should collect as a royalty. (\\\"Fungible\\n    /// value\\\" includes both \\u210f and units of fungible HTS tokens.) When the NFT sender does not receive\\n    /// any fungible value, the ledger will assess the fallback fee, if present, to the new NFT owner.\\n    /// Royalty fees can only be added to tokens of type type NON_FUNGIBLE_UNIQUE.\\n    struct RoyaltyFee {\\n        // A fraction's numerator of fungible value exchanged for an NFT to collect as royalty\\n        int64 numerator;\\n\\n        // A fraction's denominator of fungible value exchanged for an NFT to collect as royalty\\n        int64 denominator;\\n\\n        // If present, the fee to assess to the NFT receiver when no fungible value\\n        // is exchanged with the sender. Consists of:\\n        // amount: the amount to charge for the fee\\n        // tokenId: Specifies ID of token that should be used for fixed fee denomination\\n        // useHbarsForPayment: Specifies this fee should be denominated in Hbar\\n        int64 amount;\\n        address tokenId;\\n        bool useHbarsForPayment;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// Represents a pending airdrop of a token or NFT to a receiver\\n    /// @param sender The address of the account sending the airdrop\\n    /// @param receiver The address of the account receiving the airdrop\\n    /// @param token The address of the token being airdropped\\n    /// @param serial For NFT airdrops, the serial number of the NFT. For fungible tokens, this should be 0\\n    struct PendingAirdrop {\\n        address sender;\\n        address receiver;\\n        address token;\\n        int64 serial;\\n    }\\n\\n    /// Represents a unique NFT by its token address and serial number\\n    /// @param nft The address of the NFT token\\n    /// @param serial The serial number that uniquely identifies this NFT within its token type\\n    struct NftID {\\n        address nft;\\n        int64 serial;\\n    }\\n\\n    /**********************\\n     * Direct HTS Calls   *\\n     **********************/\\n\\n    /// Performs transfers among combinations of tokens and hbars\\n    /// @param transferList the list of hbar transfers to do\\n    /// @param tokenTransfers the list of token transfers to do\\n    /// @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\\n    function cryptoTransfer(TransferList memory transferList, TokenTransferList[] memory tokenTransfers)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Mints an amount of the token to the defined treasury account\\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\\n    ///               token. The new supply must be lower than 2^63.\\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\\n    ///                 Maximum allowed size of each metadata is 100 bytes\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty.\\n    function mintToken(\\n        address token,\\n        int64 amount,\\n        bytes[] memory metadata\\n    )\\n        external\\n        returns (\\n            int64 responseCode,\\n            int64 newTotalSupply,\\n            int64[] memory serialNumbers\\n        );\\n\\n    /// Burns an amount of the token from the defined treasury account\\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\\n    ///                account (0; balance], represented in the lowest denomination.\\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    function burnToken(\\n        address token,\\n        int64 amount,\\n        int64[] memory serialNumbers\\n    ) external returns (int64 responseCode, int64 newTotalSupply);\\n\\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\\n    ///  Account's key or called from the accounts contract key\\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    ///  If an association between the provided account and any of the tokens already exists, the\\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\\n    ///  On success, associations between the provided account and tokens are made and the account is\\n    ///    ready to interact with the tokens.\\n    /// @param account The account to be associated with the provided tokens\\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\\n    ///               token type\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function associateTokens(address account, address[] memory tokens)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\\n    /// @param account The account to be associated with the provided token\\n    /// @param token The token to be associated with the provided account\\n    function associateToken(address account, address token)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\\n    /// Account's key.\\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    /// If an association between the provided account and any of the tokens does not exist, the\\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\\n    /// not zero.\\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\\n    /// On success, associations between the provided account and tokens are removed.\\n    /// @param account The account to be dissociated from the provided tokens\\n    /// @param tokens The tokens to be dissociated from the provided account.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function dissociateTokens(address account, address[] memory tokens)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\\n    /// @param account The account to be associated with the provided token\\n    /// @param token The token to be associated with the provided account\\n    function dissociateToken(address account, address token)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleToken(\\n        HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by.\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param fractionalFees list of fractional fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleTokenWithCustomFees(\\n        HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals,\\n        FixedFee[] memory fixedFees,\\n        FractionalFee[] memory fractionalFees\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleToken(HederaToken memory token)\\n        external\\n        payable\\n        returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param royaltyFees list of royalty fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleTokenWithCustomFees(\\n        HederaToken memory token,\\n        FixedFee[] memory fixedFees,\\n        RoyaltyFee[] memory royaltyFees\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /**********************\\n     * ABIV1 calls        *\\n     **********************/\\n\\n    /// Initiates a Fungible Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param accountId account to do a transfer to/from\\n    /// @param amount The amount from the accountId at the same index\\n    function transferTokens(\\n        address token,\\n        address[] memory accountId,\\n        int64[] memory amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Initiates a Non-Fungable Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param sender the sender of an nft\\n    /// @param receiver the receiver of the nft sent by the same index at sender\\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\\n    function transferNFTs(\\n        address token,\\n        address[] memory sender,\\n        address[] memory receiver,\\n        int64[] memory serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param recipient The receiver of the transaction\\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\\n    function transferToken(\\n        address token,\\n        address sender,\\n        address recipient,\\n        int64 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param recipient The receiver of the transaction\\n    /// @param serialNumber The serial number of the NFT to transfer.\\n    function transferNFT(\\n        address token,\\n        address sender,\\n        address recipient,\\n        int64 serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\\n    /// again it overwrites the current allowance with value.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The hedera token address to approve\\n    /// @param spender the account address authorized to spend\\n    /// @param amount the amount of tokens authorized to spend.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approve(\\n        address token,\\n        address spender,\\n        uint256 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers `amount` tokens from `from` to `to` using the\\n    //  allowance mechanism. `amount` is then deducted from the caller's allowance.\\n    /// Only applicable to fungible tokens\\n    /// @param token The address of the fungible Hedera token to transfer\\n    /// @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\\n    /// @param to The account address of the receiver of the `amount` tokens\\n    /// @param amount The amount of tokens to transfer from `from` to `to`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFrom(address token, address from, address to, uint256 amount) external returns (int64 responseCode);\\n\\n    /// Returns the amount which spender is still allowed to withdraw from owner.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The Hedera token address to check the allowance of\\n    /// @param owner the owner of the tokens to be spent\\n    /// @param spender the spender of the tokens\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return allowance The amount which spender is still allowed to withdraw from owner.\\n    function allowance(\\n        address token,\\n        address owner,\\n        address spender\\n    ) external returns (int64 responseCode, uint256 allowance);\\n\\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\\n    /// @param serialNumber The NFT serial number  to approve\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approveNFT(\\n        address token,\\n        address approved,\\n        uint256 serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\\n    /// Only applicable to NFT tokens\\n    /// @param token The address of the non-fungible Hedera token to transfer\\n    /// @param from The account address of the owner of `serialNumber` of `token`\\n    /// @param to The account address of the receiver of `serialNumber`\\n    /// @param serialNumber The NFT serial number to transfer\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFromNFT(address token, address from, address to, uint256 serialNumber) external returns (int64 responseCode);\\n\\n    /// Get the approved address for a single NFT\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to check approval\\n    /// @param serialNumber The NFT to find the approved address for\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved The approved address for this NFT, or the zero address if there is none\\n    function getApproved(address token, uint256 serialNumber)\\n        external\\n        returns (int64 responseCode, address approved);\\n\\n    /// Enable or disable approval for a third party (\\\"operator\\\") to manage\\n    ///  all of `msg.sender`'s assets\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param operator Address to add to the set of authorized operators\\n    /// @param approved True if the operator is approved, false to revoke approval\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function setApprovalForAll(\\n        address token,\\n        address operator,\\n        bool approved\\n    ) external returns (int64 responseCode);\\n\\n    /// Query if an address is an authorized operator for another address\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param owner The address that owns the NFTs\\n    /// @param operator The address that acts on behalf of the owner\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\\n    function isApprovedForAll(\\n        address token,\\n        address owner,\\n        address operator\\n    ) external returns (int64 responseCode, bool approved);\\n\\n    /// Query if token account is frozen\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return frozen True if `account` is frozen for `token`\\n    function isFrozen(address token, address account)\\n        external\\n        returns (int64 responseCode, bool frozen);\\n\\n    /// Query if token account has kyc granted\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return kycGranted True if `account` has kyc granted for `token`\\n    function isKyc(address token, address account)\\n        external\\n        returns (int64 responseCode, bool kycGranted);\\n\\n    /// Operation to delete token\\n    /// @param token The token address to be deleted\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function deleteToken(address token) external returns (int64 responseCode);\\n\\n    /// Query token custom fees\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return fixedFees Set of fixed fees for `token`\\n    /// @return fractionalFees Set of fractional fees for `token`\\n    /// @return royaltyFees Set of royalty fees for `token`\\n    function getTokenCustomFees(address token)\\n        external\\n        returns (int64 responseCode, FixedFee[] memory fixedFees, FractionalFee[] memory fractionalFees, RoyaltyFee[] memory royaltyFees);\\n\\n    /// Query token default freeze status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\\n    function getTokenDefaultFreezeStatus(address token)\\n        external\\n        returns (int64 responseCode, bool defaultFreezeStatus);\\n\\n    /// Query token default kyc status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\\n    function getTokenDefaultKycStatus(address token)\\n        external\\n        returns (int64 responseCode, bool defaultKycStatus);\\n\\n    /// Query token expiry info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return expiry Expiry info for `token`\\n    function getTokenExpiryInfo(address token)\\n        external\\n        returns (int64 responseCode, Expiry memory expiry);\\n\\n    /// Query fungible token info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return fungibleTokenInfo FungibleTokenInfo info for `token`\\n    function getFungibleTokenInfo(address token)\\n        external\\n        returns (int64 responseCode, FungibleTokenInfo memory fungibleTokenInfo);\\n\\n    /// Query token info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenInfo TokenInfo info for `token`\\n    function getTokenInfo(address token)\\n        external\\n        returns (int64 responseCode, TokenInfo memory tokenInfo);\\n\\n    /// Query token KeyValue\\n    /// @param token The token address to check\\n    /// @param keyType The keyType of the desired KeyValue\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return key KeyValue info for key of type `keyType`\\n    function getTokenKey(address token, uint keyType)\\n        external\\n        returns (int64 responseCode, KeyValue memory key);\\n\\n    /// Query non fungible token info\\n    /// @param token The token address to check\\n    /// @param serialNumber The NFT serialNumber to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`\\n    function getNonFungibleTokenInfo(address token, int64 serialNumber)\\n        external\\n        returns (int64 responseCode, NonFungibleTokenInfo memory nonFungibleTokenInfo);\\n\\n    /// Operation to freeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be frozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function freezeToken(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to unfreeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be unfrozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unfreezeToken(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to grant kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to grant kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function grantTokenKyc(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to revoke kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function revokeTokenKyc(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to pause token\\n    /// @param token The token address to be paused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function pauseToken(address token) external returns (int64 responseCode);\\n\\n    /// Operation to unpause token\\n    /// @param token The token address to be unpaused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unpauseToken(address token) external returns (int64 responseCode);\\n\\n    /// Operation to wipe fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param amount The number of tokens to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccount(\\n        address token,\\n        address account,\\n        int64 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Operation to wipe non fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param  serialNumbers The serial numbers of token to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccountNFT(\\n        address token,\\n        address account,\\n        int64[] memory serialNumbers\\n    ) external returns (int64 responseCode);\\n\\n    /// Operation to update token info\\n    /// @param token The token address\\n    /// @param tokenInfo The hedera token info to update token with\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenInfo(address token, HederaToken memory tokenInfo)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to update token expiry info\\n    /// @param token The token address\\n    /// @param expiryInfo The hedera token expiry info\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenExpiryInfo(address token, Expiry memory expiryInfo)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to update token expiry info\\n    /// @param token The token address\\n    /// @param keys The token keys\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenKeys(address token, TokenKey[] memory keys)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Query if valid token found for the given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return isToken True if valid token found for the given address\\n    function isToken(address token)\\n        external returns\\n        (int64 responseCode, bool isToken);\\n\\n    /// Query to return the token type for a given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\\n    function getTokenType(address token)\\n        external returns\\n        (int64 responseCode, int32 tokenType);\\n\\n    /// Initiates a Redirect For Token\\n    /// @param token The token address\\n    /// @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return response The result of the call that had been encoded and sent for execution.\\n    function redirectForToken(address token, bytes memory encodedFunctionSelector) external returns (int64 responseCode, bytes memory response);\\n\\n    /// Update the custom fees for a fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param fractionalFees Set of fractional fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateFungibleTokenCustomFees(address token,  IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.FractionalFee[] memory fractionalFees) external returns (int64 responseCode);\\n\\n    /// Update the custom fees for a non-fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param royaltyFees Set of royalty fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateNonFungibleTokenCustomFees(address token, IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.RoyaltyFee[] memory royaltyFees) external returns (int64 responseCode);\\n\\n    /// @notice Airdrop one or more tokens to one or more accounts\\n    /// @notice Recipients will receive tokens in one of these ways:\\n    /// @notice     - Immediately if already associated with the token\\n    /// @notice     - Immediately with auto-association if they have available slots\\n    /// @notice     - As a pending airdrop requiring claim if they have \\\"receiver signature required\\\" \\n    /// @notice     - As a pending airdrop requiring claim if they have no available auto-association slots\\n    /// @notice Immediate airdrops are irreversible, pending airdrops can be canceled\\n    /// @notice All transfer fees and auto-renewal rent costs are charged to the transaction submitter\\n    /// @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function airdropTokens(TokenTransferList[] memory tokenTransfers) external returns (int64 responseCode);\\n\\n    /// @notice Cancels pending airdrops that have not yet been claimed\\n    /// @param pendingAirdrops Array of pending airdrops to cancel\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function cancelAirdrops(PendingAirdrop[] memory pendingAirdrops) external returns (int64 responseCode);\\n\\n    /// @notice Claims pending airdrops that were sent to the calling account\\n    /// @param pendingAirdrops Array of pending airdrops to claim\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function claimAirdrops(PendingAirdrop[] memory pendingAirdrops) external returns (int64 responseCode);\\n\\n    /// @notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\\n    /// @notice This transfer does not charge any custom fees or royalties defined for the tokens\\n    /// @notice For fungible tokens, the requesting account's balance will become 0 and the treasury balance will increase by that amount\\n    /// @notice For non-fungible tokens, the requesting account will no longer hold the rejected serial numbers and they will be transferred to the treasury\\n    /// @param rejectingAddress The address rejecting the tokens\\n    /// @param ftAddresses Array of fungible token addresses to reject\\n    /// @param nftIDs Array of NFT IDs to reject\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function rejectTokens(address rejectingAddress, address[] memory ftAddresses, NftID[] memory nftIDs) external returns (int64 responseCode);\\n}\",\"keccak256\":\"0x2986ecf353112c4cfef645f5ac49eb594c911ace15136a6ea38645fc5bf6d1a9\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"CallResponseEvent(bool,bytes)":{"notice":"Generic event"}},"kind":"user","methods":{"redirectForToken(address,bytes)":{"notice":"Redirect for token"},"transferFrom(address,address,address,uint256)":{"notice":"Only applicable to fungible tokens"},"transferFromNFT(address,address,address,uint256)":{"notice":"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"}},"version":1}}},"app/contracts/IHederaTokenService.sol":{"IHederaTokenService":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"components":[{"internalType":"address","name":"accountID","type":"address"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"bool","name":"isApproval","type":"bool"}],"internalType":"struct IHederaTokenService.AccountAmount[]","name":"transfers","type":"tuple[]"},{"components":[{"internalType":"address","name":"senderAccountID","type":"address"},{"internalType":"address","name":"receiverAccountID","type":"address"},{"internalType":"int64","name":"serialNumber","type":"int64"},{"internalType":"bool","name":"isApproval","type":"bool"}],"internalType":"struct IHederaTokenService.NftTransfer[]","name":"nftTransfers","type":"tuple[]"}],"internalType":"struct IHederaTokenService.TokenTransferList[]","name":"tokenTransfers","type":"tuple[]"}],"name":"airdropTokens","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"approved","type":"address"},{"internalType":"uint256","name":"serialNumber","type":"uint256"}],"name":"approveNFT","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"associateToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"associateTokens","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"int64[]","name":"serialNumbers","type":"int64[]"}],"name":"burnToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"int64","name":"newTotalSupply","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"int64","name":"serial","type":"int64"}],"internalType":"struct IHederaTokenService.PendingAirdrop[]","name":"pendingAirdrops","type":"tuple[]"}],"name":"cancelAirdrops","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"int64","name":"serial","type":"int64"}],"internalType":"struct IHederaTokenService.PendingAirdrop[]","name":"pendingAirdrops","type":"tuple[]"}],"name":"claimAirdrops","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"string","name":"memo","type":"string"},{"internalType":"bool","name":"tokenSupplyType","type":"bool"},{"internalType":"int64","name":"maxSupply","type":"int64"},{"internalType":"bool","name":"freezeDefault","type":"bool"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"internalType":"struct IHederaTokenService.HederaToken","name":"token","type":"tuple"},{"internalType":"int64","name":"initialTotalSupply","type":"int64"},{"internalType":"int32","name":"decimals","type":"int32"}],"name":"createFungibleToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"string","name":"memo","type":"string"},{"internalType":"bool","name":"tokenSupplyType","type":"bool"},{"internalType":"int64","name":"maxSupply","type":"int64"},{"internalType":"bool","name":"freezeDefault","type":"bool"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"internalType":"struct IHederaTokenService.HederaToken","name":"token","type":"tuple"},{"internalType":"int64","name":"initialTotalSupply","type":"int64"},{"internalType":"int32","name":"decimals","type":"int32"},{"components":[{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"bool","name":"useCurrentTokenForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FixedFee[]","name":"fixedFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"minimumAmount","type":"int64"},{"internalType":"int64","name":"maximumAmount","type":"int64"},{"internalType":"bool","name":"netOfTransfers","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FractionalFee[]","name":"fractionalFees","type":"tuple[]"}],"name":"createFungibleTokenWithCustomFees","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"string","name":"memo","type":"string"},{"internalType":"bool","name":"tokenSupplyType","type":"bool"},{"internalType":"int64","name":"maxSupply","type":"int64"},{"internalType":"bool","name":"freezeDefault","type":"bool"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"internalType":"struct IHederaTokenService.HederaToken","name":"token","type":"tuple"}],"name":"createNonFungibleToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"string","name":"memo","type":"string"},{"internalType":"bool","name":"tokenSupplyType","type":"bool"},{"internalType":"int64","name":"maxSupply","type":"int64"},{"internalType":"bool","name":"freezeDefault","type":"bool"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"internalType":"struct IHederaTokenService.HederaToken","name":"token","type":"tuple"},{"components":[{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"bool","name":"useCurrentTokenForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FixedFee[]","name":"fixedFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.RoyaltyFee[]","name":"royaltyFees","type":"tuple[]"}],"name":"createNonFungibleTokenWithCustomFees","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"accountID","type":"address"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"bool","name":"isApproval","type":"bool"}],"internalType":"struct IHederaTokenService.AccountAmount[]","name":"transfers","type":"tuple[]"}],"internalType":"struct IHederaTokenService.TransferList","name":"transferList","type":"tuple"},{"components":[{"internalType":"address","name":"token","type":"address"},{"components":[{"internalType":"address","name":"accountID","type":"address"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"bool","name":"isApproval","type":"bool"}],"internalType":"struct IHederaTokenService.AccountAmount[]","name":"transfers","type":"tuple[]"},{"components":[{"internalType":"address","name":"senderAccountID","type":"address"},{"internalType":"address","name":"receiverAccountID","type":"address"},{"internalType":"int64","name":"serialNumber","type":"int64"},{"internalType":"bool","name":"isApproval","type":"bool"}],"internalType":"struct IHederaTokenService.NftTransfer[]","name":"nftTransfers","type":"tuple[]"}],"internalType":"struct IHederaTokenService.TokenTransferList[]","name":"tokenTransfers","type":"tuple[]"}],"name":"cryptoTransfer","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"deleteToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"dissociateToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"dissociateTokens","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"freezeToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"serialNumber","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"address","name":"approved","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getFungibleTokenInfo","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"components":[{"components":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"string","name":"memo","type":"string"},{"internalType":"bool","name":"tokenSupplyType","type":"bool"},{"internalType":"int64","name":"maxSupply","type":"int64"},{"internalType":"bool","name":"freezeDefault","type":"bool"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"internalType":"struct IHederaTokenService.HederaToken","name":"token","type":"tuple"},{"internalType":"int64","name":"totalSupply","type":"int64"},{"internalType":"bool","name":"deleted","type":"bool"},{"internalType":"bool","name":"defaultKycStatus","type":"bool"},{"internalType":"bool","name":"pauseStatus","type":"bool"},{"components":[{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"bool","name":"useCurrentTokenForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FixedFee[]","name":"fixedFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"minimumAmount","type":"int64"},{"internalType":"int64","name":"maximumAmount","type":"int64"},{"internalType":"bool","name":"netOfTransfers","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FractionalFee[]","name":"fractionalFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.RoyaltyFee[]","name":"royaltyFees","type":"tuple[]"},{"internalType":"string","name":"ledgerId","type":"string"}],"internalType":"struct IHederaTokenService.TokenInfo","name":"tokenInfo","type":"tuple"},{"internalType":"int32","name":"decimals","type":"int32"}],"internalType":"struct IHederaTokenService.FungibleTokenInfo","name":"fungibleTokenInfo","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"int64","name":"serialNumber","type":"int64"}],"name":"getNonFungibleTokenInfo","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"components":[{"components":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"string","name":"memo","type":"string"},{"internalType":"bool","name":"tokenSupplyType","type":"bool"},{"internalType":"int64","name":"maxSupply","type":"int64"},{"internalType":"bool","name":"freezeDefault","type":"bool"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"internalType":"struct IHederaTokenService.HederaToken","name":"token","type":"tuple"},{"internalType":"int64","name":"totalSupply","type":"int64"},{"internalType":"bool","name":"deleted","type":"bool"},{"internalType":"bool","name":"defaultKycStatus","type":"bool"},{"internalType":"bool","name":"pauseStatus","type":"bool"},{"components":[{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"bool","name":"useCurrentTokenForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FixedFee[]","name":"fixedFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"minimumAmount","type":"int64"},{"internalType":"int64","name":"maximumAmount","type":"int64"},{"internalType":"bool","name":"netOfTransfers","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FractionalFee[]","name":"fractionalFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.RoyaltyFee[]","name":"royaltyFees","type":"tuple[]"},{"internalType":"string","name":"ledgerId","type":"string"}],"internalType":"struct IHederaTokenService.TokenInfo","name":"tokenInfo","type":"tuple"},{"internalType":"int64","name":"serialNumber","type":"int64"},{"internalType":"address","name":"ownerId","type":"address"},{"internalType":"int64","name":"creationTime","type":"int64"},{"internalType":"bytes","name":"metadata","type":"bytes"},{"internalType":"address","name":"spenderId","type":"address"}],"internalType":"struct IHederaTokenService.NonFungibleTokenInfo","name":"nonFungibleTokenInfo","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenCustomFees","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"components":[{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"bool","name":"useCurrentTokenForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FixedFee[]","name":"fixedFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"minimumAmount","type":"int64"},{"internalType":"int64","name":"maximumAmount","type":"int64"},{"internalType":"bool","name":"netOfTransfers","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FractionalFee[]","name":"fractionalFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.RoyaltyFee[]","name":"royaltyFees","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenDefaultFreezeStatus","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"bool","name":"defaultFreezeStatus","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenDefaultKycStatus","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"bool","name":"defaultKycStatus","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenExpiryInfo","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenInfo","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"components":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"string","name":"memo","type":"string"},{"internalType":"bool","name":"tokenSupplyType","type":"bool"},{"internalType":"int64","name":"maxSupply","type":"int64"},{"internalType":"bool","name":"freezeDefault","type":"bool"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"internalType":"struct IHederaTokenService.HederaToken","name":"token","type":"tuple"},{"internalType":"int64","name":"totalSupply","type":"int64"},{"internalType":"bool","name":"deleted","type":"bool"},{"internalType":"bool","name":"defaultKycStatus","type":"bool"},{"internalType":"bool","name":"pauseStatus","type":"bool"},{"components":[{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"bool","name":"useCurrentTokenForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FixedFee[]","name":"fixedFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"minimumAmount","type":"int64"},{"internalType":"int64","name":"maximumAmount","type":"int64"},{"internalType":"bool","name":"netOfTransfers","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FractionalFee[]","name":"fractionalFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.RoyaltyFee[]","name":"royaltyFees","type":"tuple[]"},{"internalType":"string","name":"ledgerId","type":"string"}],"internalType":"struct IHederaTokenService.TokenInfo","name":"tokenInfo","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"keyType","type":"uint256"}],"name":"getTokenKey","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"components":[{"internalType":"bool","name":"inheritAccountKey","type":"bool"},{"internalType":"address","name":"contractId","type":"address"},{"internalType":"bytes","name":"ed25519","type":"bytes"},{"internalType":"bytes","name":"ECDSA_secp256k1","type":"bytes"},{"internalType":"address","name":"delegatableContractId","type":"address"}],"internalType":"struct IHederaTokenService.KeyValue","name":"key","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenType","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"int32","name":"tokenType","type":"int32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"grantTokenKyc","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"isFrozen","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"bool","name":"frozen","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"isKyc","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"bool","name":"kycGranted","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"isToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"bool","name":"isToken","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"bytes[]","name":"metadata","type":"bytes[]"}],"name":"mintToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"int64","name":"newTotalSupply","type":"int64"},{"internalType":"int64[]","name":"serialNumbers","type":"int64[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"pauseToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes","name":"encodedFunctionSelector","type":"bytes"}],"name":"redirectForToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"},{"internalType":"bytes","name":"response","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rejectingAddress","type":"address"},{"internalType":"address[]","name":"ftAddresses","type":"address[]"},{"components":[{"internalType":"address","name":"nft","type":"address"},{"internalType":"int64","name":"serial","type":"int64"}],"internalType":"struct IHederaTokenService.NftID[]","name":"nftIDs","type":"tuple[]"}],"name":"rejectTokens","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeTokenKyc","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"serialNumber","type":"uint256"}],"name":"transferFromNFT","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int64","name":"serialNumber","type":"int64"}],"name":"transferNFT","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address[]","name":"sender","type":"address[]"},{"internalType":"address[]","name":"receiver","type":"address[]"},{"internalType":"int64[]","name":"serialNumber","type":"int64[]"}],"name":"transferNFTs","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int64","name":"amount","type":"int64"}],"name":"transferToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address[]","name":"accountId","type":"address[]"},{"internalType":"int64[]","name":"amount","type":"int64[]"}],"name":"transferTokens","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"unfreezeToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"unpauseToken","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"components":[{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"bool","name":"useCurrentTokenForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FixedFee[]","name":"fixedFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"minimumAmount","type":"int64"},{"internalType":"int64","name":"maximumAmount","type":"int64"},{"internalType":"bool","name":"netOfTransfers","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FractionalFee[]","name":"fractionalFees","type":"tuple[]"}],"name":"updateFungibleTokenCustomFees","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"components":[{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"bool","name":"useCurrentTokenForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.FixedFee[]","name":"fixedFees","type":"tuple[]"},{"components":[{"internalType":"int64","name":"numerator","type":"int64"},{"internalType":"int64","name":"denominator","type":"int64"},{"internalType":"int64","name":"amount","type":"int64"},{"internalType":"address","name":"tokenId","type":"address"},{"internalType":"bool","name":"useHbarsForPayment","type":"bool"},{"internalType":"address","name":"feeCollector","type":"address"}],"internalType":"struct IHederaTokenService.RoyaltyFee[]","name":"royaltyFees","type":"tuple[]"}],"name":"updateNonFungibleTokenCustomFees","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiryInfo","type":"tuple"}],"name":"updateTokenExpiryInfo","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"string","name":"memo","type":"string"},{"internalType":"bool","name":"tokenSupplyType","type":"bool"},{"internalType":"int64","name":"maxSupply","type":"int64"},{"internalType":"bool","name":"freezeDefault","type":"bool"},{"components":[{"internalType":"int64","name":"second","type":"int64"},{"internalType":"address","name":"autoRenewAccount","type":"address"},{"internalType":"int64","name":"autoRenewPeriod","type":"int64"}],"internalType":"struct IHederaTokenService.Expiry","name":"expiry","type":"tuple"}],"internalType":"struct IHederaTokenService.HederaToken","name":"tokenInfo","type":"tuple"}],"name":"updateTokenInfo","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"components":[{"internalType":"uint256","name":"keyType","type":"uint256"},{"components":[{"internalType":"bool","name":"inheritAccountKey","type":"bool"},{"internalType":"address","name":"contractId","type":"address"},{"internalType":"bytes","name":"ed25519","type":"bytes"},{"internalType":"bytes","name":"ECDSA_secp256k1","type":"bytes"},{"internalType":"address","name":"delegatableContractId","type":"address"}],"internalType":"struct IHederaTokenService.KeyValue","name":"key","type":"tuple"}],"internalType":"struct IHederaTokenService.TokenKey[]","name":"keys","type":"tuple[]"}],"name":"updateTokenKeys","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"int64","name":"amount","type":"int64"}],"name":"wipeTokenAccount","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"int64[]","name":"serialNumbers","type":"int64[]"}],"name":"wipeTokenAccountNFT","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"airdropTokens((address,(address,int64,bool)[],(address,address,int64,bool)[])[])":{"params":{"tokenTransfers":"Array of token transfer lists containing token addresses and recipient details"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"allowance(address,address,address)":{"params":{"owner":"the owner of the tokens to be spent","spender":"the spender of the tokens","token":"The Hedera token address to check the allowance of"},"returns":{"allowance":"The amount which spender is still allowed to withdraw from owner.","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"approve(address,address,uint256)":{"params":{"amount":"the amount of tokens authorized to spend.","spender":"the account address authorized to spend","token":"The hedera token address to approve"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"approveNFT(address,address,uint256)":{"params":{"approved":"The new approved NFT controller.  To revoke approvals pass in the zero address.","serialNumber":"The NFT serial number  to approve","token":"The Hedera NFT token address to approve"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"associateToken(address,address)":{"params":{"account":"The account to be associated with the provided token","token":"The token to be associated with the provided account"}},"associateTokens(address,address[])":{"params":{"account":"The account to be associated with the provided tokens","tokens":"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"burnToken(address,int64,int64[])":{"params":{"amount":"Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.","serialNumbers":"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.","token":"The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"},"returns":{"newTotalSupply":"The new supply of tokens. For NFTs it is the total count of NFTs","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"cancelAirdrops((address,address,address,int64)[])":{"params":{"pendingAirdrops":"Array of pending airdrops to cancel"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"claimAirdrops((address,address,address,int64)[])":{"params":{"pendingAirdrops":"Array of pending airdrops to claim"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"createFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32)":{"params":{"decimals":"the number of decimal places a token is divisible by","initialTotalSupply":"Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.","token":"the basic properties of the token being created"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22.","tokenAddress":"the created token's address"}},"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])":{"params":{"decimals":"the number of decimal places a token is divisible by.","fixedFees":"list of fixed fees to apply to the token","fractionalFees":"list of fractional fees to apply to the token","initialTotalSupply":"Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.","token":"the basic properties of the token being created"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22.","tokenAddress":"the created token's address"}},"createNonFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)))":{"params":{"token":"the basic properties of the token being created"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22.","tokenAddress":"the created token's address"}},"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])":{"params":{"fixedFees":"list of fixed fees to apply to the token","royaltyFees":"list of royalty fees to apply to the token","token":"the basic properties of the token being created"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22.","tokenAddress":"the created token's address"}},"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])":{"custom:version":"0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)","params":{"tokenTransfers":"the list of token transfers to do","transferList":"the list of hbar transfers to do"}},"deleteToken(address)":{"params":{"token":"The token address to be deleted"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"dissociateToken(address,address)":{"params":{"account":"The account to be associated with the provided token","token":"The token to be associated with the provided account"}},"dissociateTokens(address,address[])":{"params":{"account":"The account to be dissociated from the provided tokens","tokens":"The tokens to be dissociated from the provided account."},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"freezeToken(address,address)":{"params":{"account":"The account address to be frozen","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"getApproved(address,uint256)":{"params":{"serialNumber":"The NFT to find the approved address for","token":"The Hedera NFT token address to check approval"},"returns":{"approved":"The approved address for this NFT, or the zero address if there is none","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"getFungibleTokenInfo(address)":{"params":{"token":"The token address to check"},"returns":{"fungibleTokenInfo":"FungibleTokenInfo info for `token`","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"getNonFungibleTokenInfo(address,int64)":{"params":{"serialNumber":"The NFT serialNumber to check","token":"The token address to check"},"returns":{"nonFungibleTokenInfo":"NonFungibleTokenInfo info for `token` `serialNumber`","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"getTokenCustomFees(address)":{"params":{"token":"The token address to check"},"returns":{"fixedFees":"Set of fixed fees for `token`","fractionalFees":"Set of fractional fees for `token`","responseCode":"The response code for the status of the request. SUCCESS is 22.","royaltyFees":"Set of royalty fees for `token`"}},"getTokenDefaultFreezeStatus(address)":{"params":{"token":"The token address to check"},"returns":{"defaultFreezeStatus":"True if `token` default freeze status is frozen.","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"getTokenDefaultKycStatus(address)":{"params":{"token":"The token address to check"},"returns":{"defaultKycStatus":"True if `token` default kyc status is KycNotApplicable and false if Revoked.","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"getTokenExpiryInfo(address)":{"params":{"token":"The token address to check"},"returns":{"expiry":"Expiry info for `token`","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"getTokenInfo(address)":{"params":{"token":"The token address to check"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22.","tokenInfo":"TokenInfo info for `token`"}},"getTokenKey(address,uint256)":{"params":{"keyType":"The keyType of the desired KeyValue","token":"The token address to check"},"returns":{"key":"KeyValue info for key of type `keyType`","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"getTokenType(address)":{"params":{"token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22.","tokenType":"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED"}},"grantTokenKyc(address,address)":{"params":{"account":"The account address to grant kyc","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"isApprovedForAll(address,address,address)":{"params":{"operator":"The address that acts on behalf of the owner","owner":"The address that owns the NFTs","token":"The Hedera NFT token address to approve"},"returns":{"approved":"True if `operator` is an approved operator for `owner`, false otherwise","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"isFrozen(address,address)":{"params":{"account":"The account address associated with the token","token":"The token address to check"},"returns":{"frozen":"True if `account` is frozen for `token`","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"isKyc(address,address)":{"params":{"account":"The account address associated with the token","token":"The token address to check"},"returns":{"kycGranted":"True if `account` has kyc granted for `token`","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"isToken(address)":{"params":{"token":"The token address"},"returns":{"isToken":"True if valid token found for the given address","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"mintToken(address,int64,bytes[])":{"params":{"amount":"Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.","metadata":"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes","token":"The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID"},"returns":{"newTotalSupply":"The new supply of tokens. For NFTs it is the total count of NFTs","responseCode":"The response code for the status of the request. SUCCESS is 22.","serialNumbers":"If the token is an NFT the newly generate serial numbers, othersise empty."}},"pauseToken(address)":{"params":{"token":"The token address to be paused"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"redirectForToken(address,bytes)":{"params":{"encodedFunctionSelector":"The function selector from the ERC20 interface + the bytes input for the function called","token":"The token address"},"returns":{"response":"The result of the call that had been encoded and sent for execution.","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"rejectTokens(address,address[],(address,int64)[])":{"params":{"ftAddresses":"Array of fungible token addresses to reject","nftIDs":"Array of NFT IDs to reject","rejectingAddress":"The address rejecting the tokens"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"revokeTokenKyc(address,address)":{"params":{"account":"The account address to revoke kyc","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"setApprovalForAll(address,address,bool)":{"params":{"approved":"True if the operator is approved, false to revoke approval","operator":"Address to add to the set of authorized operators","token":"The Hedera NFT token address to approve"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"transferFrom(address,address,address,uint256)":{"params":{"amount":"The amount of tokens to transfer from `from` to `to`","from":"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens","to":"The account address of the receiver of the `amount` tokens","token":"The address of the fungible Hedera token to transfer"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"transferFromNFT(address,address,address,uint256)":{"params":{"from":"The account address of the owner of `serialNumber` of `token`","serialNumber":"The NFT serial number to transfer","to":"The account address of the receiver of `serialNumber`","token":"The address of the non-fungible Hedera token to transfer"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"transferNFT(address,address,address,int64)":{"params":{"recipient":"The receiver of the transaction","sender":"The sender for the transaction","serialNumber":"The serial number of the NFT to transfer.","token":"The token to transfer to/from"}},"transferNFTs(address,address[],address[],int64[])":{"params":{"receiver":"the receiver of the nft sent by the same index at sender","sender":"the sender of an nft","serialNumber":"the serial number of the nft sent by the same index at sender","token":"The ID of the token as a solidity address"}},"transferToken(address,address,address,int64)":{"params":{"amount":"Non-negative value to send. a negative value will result in a failure.","recipient":"The receiver of the transaction","sender":"The sender for the transaction","token":"The token to transfer to/from"}},"transferTokens(address,address[],int64[])":{"params":{"accountId":"account to do a transfer to/from","amount":"The amount from the accountId at the same index","token":"The ID of the token as a solidity address"}},"unfreezeToken(address,address)":{"params":{"account":"The account address to be unfrozen","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"unpauseToken(address)":{"params":{"token":"The token address to be unpaused"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"updateFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])":{"params":{"fixedFees":"Set of fixed fees for `token`","fractionalFees":"Set of fractional fees for `token`","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"updateNonFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])":{"params":{"fixedFees":"Set of fixed fees for `token`","royaltyFees":"Set of royalty fees for `token`","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"updateTokenExpiryInfo(address,(int64,address,int64))":{"params":{"expiryInfo":"The hedera token expiry info","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(int64,address,int64)))":{"params":{"token":"The token address","tokenInfo":"The hedera token info to update token with"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])":{"params":{"keys":"The token keys","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"wipeTokenAccount(address,address,int64)":{"params":{"account":"The account address to revoke kyc","amount":"The number of tokens to wipe","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"wipeTokenAccountNFT(address,address,int64[])":{"params":{"account":"The account address to revoke kyc","serialNumbers":"The serial numbers of token to wipe","token":"The token address"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"airdropTokens((address,(address,int64,bool)[],(address,address,int64,bool)[])[])":"2f348119","allowance(address,address,address)":"927da105","approve(address,address,uint256)":"e1f21c67","approveNFT(address,address,uint256)":"7336aaf0","associateToken(address,address)":"49146bde","associateTokens(address,address[])":"2e63879b","burnToken(address,int64,int64[])":"d6910d06","cancelAirdrops((address,address,address,int64)[])":"012ebcaf","claimAirdrops((address,address,address,int64)[])":"05961641","createFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32)":"dbc619eb","createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])":"8276a279","createNonFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)))":"e41e7b7b","createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])":"f6f1ca36","cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])":"0e71804f","deleteToken(address)":"f069f712","dissociateToken(address,address)":"099794e8","dissociateTokens(address,address[])":"78b63918","freezeToken(address,address)":"5b8f8584","getApproved(address,uint256)":"098f2366","getFungibleTokenInfo(address)":"3f28a19b","getNonFungibleTokenInfo(address,int64)":"287e1da8","getTokenCustomFees(address)":"ae7611a0","getTokenDefaultFreezeStatus(address)":"a7daa18d","getTokenDefaultKycStatus(address)":"335e04c1","getTokenExpiryInfo(address)":"d614cdb8","getTokenInfo(address)":"1f69565f","getTokenKey(address,uint256)":"3c4dd32e","getTokenType(address)":"93272baf","grantTokenKyc(address,address)":"8f8d7f99","isApprovedForAll(address,address,address)":"f49f40db","isFrozen(address,address)":"46de0fb1","isKyc(address,address)":"f2c31ff4","isToken(address)":"19f37361","mintToken(address,int64,bytes[])":"e0f4059a","pauseToken(address)":"7c41ad2c","redirectForToken(address,bytes)":"618dc65e","rejectTokens(address,address[],(address,int64)[])":"ebd595e0","revokeTokenKyc(address,address)":"af99c633","setApprovalForAll(address,address,bool)":"367605ca","transferFrom(address,address,address,uint256)":"15dacbea","transferFromNFT(address,address,address,uint256)":"9b23d3d9","transferNFT(address,address,address,int64)":"5cfc9011","transferNFTs(address,address[],address[],int64[])":"2c4ba191","transferToken(address,address,address,int64)":"eca36917","transferTokens(address,address[],int64[])":"82bba493","unfreezeToken(address,address)":"52f91387","unpauseToken(address)":"3b3bff0f","updateFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])":"d5f60c47","updateNonFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])":"30727a29","updateTokenExpiryInfo(address,(int64,address,int64))":"d27be6cd","updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(int64,address,int64)))":"c76282ac","updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])":"6fc3cbaf","wipeTokenAccount(address,address,int64)":"efef57f9","wipeTokenAccountNFT(address,address,int64[])":"f7f38e26"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"accountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.AccountAmount[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"senderAccountID\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverAccountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.NftTransfer[]\",\"name\":\"nftTransfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IHederaTokenService.TokenTransferList[]\",\"name\":\"tokenTransfers\",\"type\":\"tuple[]\"}],\"name\":\"airdropTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"approveNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"associateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"associateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serial\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.PendingAirdrop[]\",\"name\":\"pendingAirdrops\",\"type\":\"tuple[]\"}],\"name\":\"cancelAirdrops\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serial\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.PendingAirdrop[]\",\"name\":\"pendingAirdrops\",\"type\":\"tuple[]\"}],\"name\":\"claimAirdrops\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"initialTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"name\":\"createFungibleToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"initialTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"}],\"name\":\"createFungibleTokenWithCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"}],\"name\":\"createNonFungibleToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"}],\"name\":\"createNonFungibleTokenWithCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"accountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.AccountAmount[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IHederaTokenService.TransferList\",\"name\":\"transferList\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"accountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.AccountAmount[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"senderAccountID\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverAccountID\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isApproval\",\"type\":\"bool\"}],\"internalType\":\"struct IHederaTokenService.NftTransfer[]\",\"name\":\"nftTransfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IHederaTokenService.TokenTransferList[]\",\"name\":\"tokenTransfers\",\"type\":\"tuple[]\"}],\"name\":\"cryptoTransfer\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"deleteToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"dissociateToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"dissociateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freezeToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"decimals\",\"type\":\"int32\"}],\"internalType\":\"struct IHederaTokenService.FungibleTokenInfo\",\"name\":\"fungibleTokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"getNonFungibleTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"ownerId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"creationTime\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"spenderId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.NonFungibleTokenInfo\",\"name\":\"nonFungibleTokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultFreezeStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"defaultFreezeStatus\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDefaultKycStatus\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"totalSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"defaultKycStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pauseStatus\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"ledgerId\",\"type\":\"string\"}],\"internalType\":\"struct IHederaTokenService.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"tokenType\",\"type\":\"int32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantTokenKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"kycGranted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isToken\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"newTotalSupply\",\"type\":\"int64\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"pauseToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedFunctionSelector\",\"type\":\"bytes\"}],\"name\":\"redirectForToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rejectingAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ftAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serial\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.NftID[]\",\"name\":\"nftIDs\",\"type\":\"tuple[]\"}],\"name\":\"rejectTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeTokenKyc\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"transferFromNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"transferNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"sender\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"receiver\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumber\",\"type\":\"int64[]\"}],\"name\":\"transferNFTs\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accountId\",\"type\":\"address[]\"},{\"internalType\":\"int64[]\",\"name\":\"amount\",\"type\":\"int64[]\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreezeToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unpauseToken\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"minimumAmount\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"maximumAmount\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"netOfTransfers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FractionalFee[]\",\"name\":\"fractionalFees\",\"type\":\"tuple[]\"}],\"name\":\"updateFungibleTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useCurrentTokenForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.FixedFee[]\",\"name\":\"fixedFees\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"numerator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"denominator\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useHbarsForPayment\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.RoyaltyFee[]\",\"name\":\"royaltyFees\",\"type\":\"tuple[]\"}],\"name\":\"updateNonFungibleTokenCustomFees\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiryInfo\",\"type\":\"tuple\"}],\"name\":\"updateTokenExpiryInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"tokenSupplyType\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"maxSupply\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"freezeDefault\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"second\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"autoRenewAccount\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"autoRenewPeriod\",\"type\":\"int64\"}],\"internalType\":\"struct IHederaTokenService.Expiry\",\"name\":\"expiry\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.HederaToken\",\"name\":\"tokenInfo\",\"type\":\"tuple\"}],\"name\":\"updateTokenInfo\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"inheritAccountKey\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ed25519\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ECDSA_secp256k1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"delegatableContractId\",\"type\":\"address\"}],\"internalType\":\"struct IHederaTokenService.KeyValue\",\"name\":\"key\",\"type\":\"tuple\"}],\"internalType\":\"struct IHederaTokenService.TokenKey[]\",\"name\":\"keys\",\"type\":\"tuple[]\"}],\"name\":\"updateTokenKeys\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"wipeTokenAccount\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int64[]\",\"name\":\"serialNumbers\",\"type\":\"int64[]\"}],\"name\":\"wipeTokenAccountNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"airdropTokens((address,(address,int64,bool)[],(address,address,int64,bool)[])[])\":{\"params\":{\"tokenTransfers\":\"Array of token transfer lists containing token addresses and recipient details\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"allowance(address,address,address)\":{\"params\":{\"owner\":\"the owner of the tokens to be spent\",\"spender\":\"the spender of the tokens\",\"token\":\"The Hedera token address to check the allowance of\"},\"returns\":{\"allowance\":\"The amount which spender is still allowed to withdraw from owner.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"approve(address,address,uint256)\":{\"params\":{\"amount\":\"the amount of tokens authorized to spend.\",\"spender\":\"the account address authorized to spend\",\"token\":\"The hedera token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"approveNFT(address,address,uint256)\":{\"params\":{\"approved\":\"The new approved NFT controller.  To revoke approvals pass in the zero address.\",\"serialNumber\":\"The NFT serial number  to approve\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"associateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"associateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be associated with the provided tokens\",\"tokens\":\"The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that               token type\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"burnToken(address,int64,int64[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.                Amount must be a positive non-zero number, not bigger than the token balance of the treasury                account (0; balance], represented in the lowest denomination.\",\"serialNumbers\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\",\"token\":\"The token for which to burn tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"cancelAirdrops((address,address,address,int64)[])\":{\"params\":{\"pendingAirdrops\":\"Array of pending airdrops to cancel\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"claimAirdrops((address,address,address,int64)[])\":{\"params\":{\"pendingAirdrops\":\"Array of pending airdrops to claim\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"createFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32)\":{\"params\":{\"decimals\":\"the number of decimal places a token is divisible by\",\"initialTotalSupply\":\"Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])\":{\"params\":{\"decimals\":\"the number of decimal places a token is divisible by.\",\"fixedFees\":\"list of fixed fees to apply to the token\",\"fractionalFees\":\"list of fractional fees to apply to the token\",\"initialTotalSupply\":\"Specifies the initial supply of tokens to be put in circulation. The initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createNonFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)))\":{\"params\":{\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])\":{\"params\":{\"fixedFees\":\"list of fixed fees to apply to the token\",\"royaltyFees\":\"list of royalty fees to apply to the token\",\"token\":\"the basic properties of the token being created\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenAddress\":\"the created token's address\"}},\"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])\":{\"custom:version\":\"0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\",\"params\":{\"tokenTransfers\":\"the list of token transfers to do\",\"transferList\":\"the list of hbar transfers to do\"}},\"deleteToken(address)\":{\"params\":{\"token\":\"The token address to be deleted\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"dissociateToken(address,address)\":{\"params\":{\"account\":\"The account to be associated with the provided token\",\"token\":\"The token to be associated with the provided account\"}},\"dissociateTokens(address,address[])\":{\"params\":{\"account\":\"The account to be dissociated from the provided tokens\",\"tokens\":\"The tokens to be dissociated from the provided account.\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"freezeToken(address,address)\":{\"params\":{\"account\":\"The account address to be frozen\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getApproved(address,uint256)\":{\"params\":{\"serialNumber\":\"The NFT to find the approved address for\",\"token\":\"The Hedera NFT token address to check approval\"},\"returns\":{\"approved\":\"The approved address for this NFT, or the zero address if there is none\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getFungibleTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"fungibleTokenInfo\":\"FungibleTokenInfo info for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getNonFungibleTokenInfo(address,int64)\":{\"params\":{\"serialNumber\":\"The NFT serialNumber to check\",\"token\":\"The token address to check\"},\"returns\":{\"nonFungibleTokenInfo\":\"NonFungibleTokenInfo info for `token` `serialNumber`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenCustomFees(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"fixedFees\":\"Set of fixed fees for `token`\",\"fractionalFees\":\"Set of fractional fees for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"royaltyFees\":\"Set of royalty fees for `token`\"}},\"getTokenDefaultFreezeStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"defaultFreezeStatus\":\"True if `token` default freeze status is frozen.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenDefaultKycStatus(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"defaultKycStatus\":\"True if `token` default kyc status is KycNotApplicable and false if Revoked.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenExpiryInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"expiry\":\"Expiry info for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenInfo(address)\":{\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenInfo\":\"TokenInfo info for `token`\"}},\"getTokenKey(address,uint256)\":{\"params\":{\"keyType\":\"The keyType of the desired KeyValue\",\"token\":\"The token address to check\"},\"returns\":{\"key\":\"KeyValue info for key of type `keyType`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"getTokenType(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"tokenType\":\"the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\"}},\"grantTokenKyc(address,address)\":{\"params\":{\"account\":\"The account address to grant kyc\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isApprovedForAll(address,address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"approved\":\"True if `operator` is an approved operator for `owner`, false otherwise\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isFrozen(address,address)\":{\"params\":{\"account\":\"The account address associated with the token\",\"token\":\"The token address to check\"},\"returns\":{\"frozen\":\"True if `account` is frozen for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isKyc(address,address)\":{\"params\":{\"account\":\"The account address associated with the token\",\"token\":\"The token address to check\"},\"returns\":{\"kycGranted\":\"True if `account` has kyc granted for `token`\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"isToken(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"isToken\":\"True if valid token found for the given address\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"mintToken(address,int64,bytes[])\":{\"params\":{\"amount\":\"Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.               Amount must be a positive non-zero number represented in the lowest denomination of the               token. The new supply must be lower than 2^63.\",\"metadata\":\"Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.                 Maximum allowed size of each metadata is 100 bytes\",\"token\":\"The token for which to mint tokens. If token does not exist, transaction results in              INVALID_TOKEN_ID\"},\"returns\":{\"newTotalSupply\":\"The new supply of tokens. For NFTs it is the total count of NFTs\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\",\"serialNumbers\":\"If the token is an NFT the newly generate serial numbers, othersise empty.\"}},\"pauseToken(address)\":{\"params\":{\"token\":\"The token address to be paused\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"redirectForToken(address,bytes)\":{\"params\":{\"encodedFunctionSelector\":\"The function selector from the ERC20 interface + the bytes input for the function called\",\"token\":\"The token address\"},\"returns\":{\"response\":\"The result of the call that had been encoded and sent for execution.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"rejectTokens(address,address[],(address,int64)[])\":{\"params\":{\"ftAddresses\":\"Array of fungible token addresses to reject\",\"nftIDs\":\"Array of NFT IDs to reject\",\"rejectingAddress\":\"The address rejecting the tokens\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"revokeTokenKyc(address,address)\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"setApprovalForAll(address,address,bool)\":{\"params\":{\"approved\":\"True if the operator is approved, false to revoke approval\",\"operator\":\"Address to add to the set of authorized operators\",\"token\":\"The Hedera NFT token address to approve\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer from `from` to `to`\",\"from\":\"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\",\"to\":\"The account address of the receiver of the `amount` tokens\",\"token\":\"The address of the fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFromNFT(address,address,address,uint256)\":{\"params\":{\"from\":\"The account address of the owner of `serialNumber` of `token`\",\"serialNumber\":\"The NFT serial number to transfer\",\"to\":\"The account address of the receiver of `serialNumber`\",\"token\":\"The address of the non-fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferNFT(address,address,address,int64)\":{\"params\":{\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"serialNumber\":\"The serial number of the NFT to transfer.\",\"token\":\"The token to transfer to/from\"}},\"transferNFTs(address,address[],address[],int64[])\":{\"params\":{\"receiver\":\"the receiver of the nft sent by the same index at sender\",\"sender\":\"the sender of an nft\",\"serialNumber\":\"the serial number of the nft sent by the same index at sender\",\"token\":\"The ID of the token as a solidity address\"}},\"transferToken(address,address,address,int64)\":{\"params\":{\"amount\":\"Non-negative value to send. a negative value will result in a failure.\",\"recipient\":\"The receiver of the transaction\",\"sender\":\"The sender for the transaction\",\"token\":\"The token to transfer to/from\"}},\"transferTokens(address,address[],int64[])\":{\"params\":{\"accountId\":\"account to do a transfer to/from\",\"amount\":\"The amount from the accountId at the same index\",\"token\":\"The ID of the token as a solidity address\"}},\"unfreezeToken(address,address)\":{\"params\":{\"account\":\"The account address to be unfrozen\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"unpauseToken(address)\":{\"params\":{\"token\":\"The token address to be unpaused\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])\":{\"params\":{\"fixedFees\":\"Set of fixed fees for `token`\",\"fractionalFees\":\"Set of fractional fees for `token`\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateNonFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])\":{\"params\":{\"fixedFees\":\"Set of fixed fees for `token`\",\"royaltyFees\":\"Set of royalty fees for `token`\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenExpiryInfo(address,(int64,address,int64))\":{\"params\":{\"expiryInfo\":\"The hedera token expiry info\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(int64,address,int64)))\":{\"params\":{\"token\":\"The token address\",\"tokenInfo\":\"The hedera token info to update token with\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])\":{\"params\":{\"keys\":\"The token keys\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"wipeTokenAccount(address,address,int64)\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"amount\":\"The number of tokens to wipe\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"wipeTokenAccountNFT(address,address,int64[])\":{\"params\":{\"account\":\"The account address to revoke kyc\",\"serialNumbers\":\"The serial numbers of token to wipe\",\"token\":\"The token address\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"airdropTokens((address,(address,int64,bool)[],(address,address,int64,bool)[])[])\":{\"notice\":\"Airdrop one or more tokens to one or more accountsRecipients will receive tokens in one of these ways:- Immediately if already associated with the token- Immediately with auto-association if they have available slots- As a pending airdrop requiring claim if they have \\\"receiver signature required\\\" - As a pending airdrop requiring claim if they have no available auto-association slotsImmediate airdrops are irreversible, pending airdrops can be canceledAll transfer fees and auto-renewal rent costs are charged to the transaction submitter\"},\"allowance(address,address,address)\":{\"notice\":\"Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens\"},\"approve(address,address,uint256)\":{\"notice\":\"Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens\"},\"approveNFT(address,address,uint256)\":{\"notice\":\"Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens\"},\"associateToken(address,address)\":{\"notice\":\"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\"},\"associateTokens(address,address[])\":{\"notice\":\"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens.\"},\"burnToken(address,int64,int64[])\":{\"notice\":\"Burns an amount of the token from the defined treasury account\"},\"cancelAirdrops((address,address,address,int64)[])\":{\"notice\":\"Cancels pending airdrops that have not yet been claimed\"},\"claimAirdrops((address,address,address,int64)[])\":{\"notice\":\"Claims pending airdrops that were sent to the calling account\"},\"createFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32)\":{\"notice\":\"Creates a Fungible Token with the specified properties\"},\"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])\":{\"notice\":\"Creates a Fungible Token with the specified properties\"},\"createNonFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)))\":{\"notice\":\"Creates an Non Fungible Unique Token with the specified properties\"},\"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])\":{\"notice\":\"Creates an Non Fungible Unique Token with the specified properties\"},\"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])\":{\"notice\":\"Performs transfers among combinations of tokens and hbars\"},\"deleteToken(address)\":{\"notice\":\"Operation to delete token\"},\"dissociateToken(address,address)\":{\"notice\":\"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\"},\"dissociateTokens(address,address[])\":{\"notice\":\"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed.\"},\"freezeToken(address,address)\":{\"notice\":\"Operation to freeze token account\"},\"getApproved(address,uint256)\":{\"notice\":\"Get the approved address for a single NFT Only Applicable to NFT Tokens\"},\"getFungibleTokenInfo(address)\":{\"notice\":\"Query fungible token info\"},\"getNonFungibleTokenInfo(address,int64)\":{\"notice\":\"Query non fungible token info\"},\"getTokenCustomFees(address)\":{\"notice\":\"Query token custom fees\"},\"getTokenDefaultFreezeStatus(address)\":{\"notice\":\"Query token default freeze status\"},\"getTokenDefaultKycStatus(address)\":{\"notice\":\"Query token default kyc status\"},\"getTokenExpiryInfo(address)\":{\"notice\":\"Query token expiry info\"},\"getTokenInfo(address)\":{\"notice\":\"Query token info\"},\"getTokenKey(address,uint256)\":{\"notice\":\"Query token KeyValue\"},\"getTokenType(address)\":{\"notice\":\"Query to return the token type for a given address\"},\"grantTokenKyc(address,address)\":{\"notice\":\"Operation to grant kyc to token account\"},\"isApprovedForAll(address,address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens\"},\"isFrozen(address,address)\":{\"notice\":\"Query if token account is frozen\"},\"isKyc(address,address)\":{\"notice\":\"Query if token account has kyc granted\"},\"isToken(address)\":{\"notice\":\"Query if valid token found for the given address\"},\"mintToken(address,int64,bytes[])\":{\"notice\":\"Mints an amount of the token to the defined treasury account\"},\"pauseToken(address)\":{\"notice\":\"Operation to pause token\"},\"redirectForToken(address,bytes)\":{\"notice\":\"Initiates a Redirect For Token\"},\"rejectTokens(address,address[],(address,int64)[])\":{\"notice\":\"Rejects one or more tokens by transferring their full balance from the requesting account to the treasuryThis transfer does not charge any custom fees or royalties defined for the tokensFor fungible tokens, the requesting account's balance will become 0 and the treasury balance will increase by that amountFor non-fungible tokens, the requesting account will no longer hold the rejected serial numbers and they will be transferred to the treasury\"},\"revokeTokenKyc(address,address)\":{\"notice\":\"Operation to revoke kyc to token account\"},\"setApprovalForAll(address,address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"Only applicable to fungible tokens\"},\"transferFromNFT(address,address,address,uint256)\":{\"notice\":\"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens\"},\"transferNFT(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferNFTs(address,address[],address[],int64[])\":{\"notice\":\"Initiates a Non-Fungable Token Transfer\"},\"transferToken(address,address,address,int64)\":{\"notice\":\"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)\"},\"transferTokens(address,address[],int64[])\":{\"notice\":\"Initiates a Fungible Token Transfer\"},\"unfreezeToken(address,address)\":{\"notice\":\"Operation to unfreeze token account\"},\"unpauseToken(address)\":{\"notice\":\"Operation to unpause token\"},\"updateFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])\":{\"notice\":\"Update the custom fees for a fungible token\"},\"updateNonFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])\":{\"notice\":\"Update the custom fees for a non-fungible token\"},\"updateTokenExpiryInfo(address,(int64,address,int64))\":{\"notice\":\"Operation to update token expiry info\"},\"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(int64,address,int64)))\":{\"notice\":\"Operation to update token info\"},\"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])\":{\"notice\":\"Operation to update token expiry info\"},\"wipeTokenAccount(address,address,int64)\":{\"notice\":\"Operation to wipe fungible tokens from account\"},\"wipeTokenAccountNFT(address,address,int64[])\":{\"notice\":\"Operation to wipe non fungible tokens from account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"app/contracts/IHederaTokenService.sol\":\"IHederaTokenService\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"app/contracts/IHederaTokenService.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.9 <0.9.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IHederaTokenService {\\n    /// Transfers cryptocurrency among two or more accounts by making the desired adjustments to their\\n    /// balances. Each transfer list can specify up to 10 adjustments. Each negative amount is withdrawn\\n    /// from the corresponding account (a sender), and each positive one is added to the corresponding\\n    /// account (a receiver). The amounts list must sum to zero. Each amount is a number of tinybars\\n    /// (there are 100,000,000 tinybars in one hbar).  If any sender account fails to have sufficient\\n    /// hbars, then the entire transaction fails, and none of those transfers occur, though the\\n    /// transaction fee is still charged. This transaction must be signed by the keys for all the sending\\n    /// accounts, and for any receiving accounts that have receiverSigRequired == true. The signatures\\n    /// are in the same order as the accounts, skipping those accounts that don't need a signature.\\n    /// @custom:version 0.3.0 previous version did not include isApproval\\n    struct AccountAmount {\\n        // The Account ID, as a solidity address, that sends/receives cryptocurrency or tokens\\n        address accountID;\\n\\n        // The amount of  the lowest denomination of the given token that\\n        // the account sends(negative) or receives(positive)\\n        int64 amount;\\n\\n        // If true then the transfer is expected to be an approved allowance and the\\n        // accountID is expected to be the owner. The default is false (omitted).\\n        bool isApproval;\\n    }\\n\\n    /// A sender account, a receiver account, and the serial number of an NFT of a Token with\\n    /// NON_FUNGIBLE_UNIQUE type. When minting NFTs the sender will be the default AccountID instance\\n    /// (0.0.0 aka 0x0) and when burning NFTs, the receiver will be the default AccountID instance.\\n    /// @custom:version 0.3.0 previous version did not include isApproval\\n    struct NftTransfer {\\n        // The solidity address of the sender\\n        address senderAccountID;\\n\\n        // The solidity address of the receiver\\n        address receiverAccountID;\\n\\n        // The serial number of the NFT\\n        int64 serialNumber;\\n\\n        // If true then the transfer is expected to be an approved allowance and the\\n        // accountID is expected to be the owner. The default is false (omitted).\\n        bool isApproval;\\n    }\\n\\n    struct TokenTransferList {\\n        // The ID of the token as a solidity address\\n        address token;\\n\\n        // Applicable to tokens of type FUNGIBLE_COMMON. Multiple list of AccountAmounts, each of which\\n        // has an account and amount.\\n        AccountAmount[] transfers;\\n\\n        // Applicable to tokens of type NON_FUNGIBLE_UNIQUE. Multiple list of NftTransfers, each of\\n        // which has a sender and receiver account, including the serial number of the NFT\\n        NftTransfer[] nftTransfers;\\n    }\\n\\n    struct TransferList {\\n        // Multiple list of AccountAmounts, each of which has an account and amount.\\n        // Used to transfer hbars between the accounts in the list.\\n        AccountAmount[] transfers;\\n    }\\n\\n    /// Expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\\n    struct Expiry {\\n        // The epoch second at which the token should expire; if an auto-renew account and period are\\n        // specified, this is coerced to the current epoch second plus the autoRenewPeriod\\n        int64 second;\\n\\n        // ID of an account which will be automatically charged to renew the token's expiration, at\\n        // autoRenewPeriod interval, expressed as a solidity address\\n        address autoRenewAccount;\\n\\n        // The interval at which the auto-renew account will be charged to extend the token's expiry\\n        int64 autoRenewPeriod;\\n    }\\n\\n    /// A Key can be a public key from either the Ed25519 or ECDSA(secp256k1) signature schemes, where\\n    /// in the ECDSA(secp256k1) case we require the 33-byte compressed form of the public key. We call\\n    /// these public keys <b>primitive keys</b>.\\n    /// A Key can also be the ID of a smart contract instance, which is then authorized to perform any\\n    /// precompiled contract action that requires this key to sign.\\n    /// Note that when a Key is a smart contract ID, it <i>doesn't</i> mean the contract with that ID\\n    /// will actually create a cryptographic signature. It only means that when the contract calls a\\n    /// precompiled contract, the resulting \\\"child transaction\\\" will be authorized to perform any action\\n    /// controlled by the Key.\\n    /// Exactly one of the possible values should be populated in order for the Key to be valid.\\n    struct KeyValue {\\n\\n        // if set to true, the key of the calling Hedera account will be inherited as the token key\\n        bool inheritAccountKey;\\n\\n        // smart contract instance that is authorized as if it had signed with a key\\n        address contractId;\\n\\n        // Ed25519 public key bytes\\n        bytes ed25519;\\n\\n        // Compressed ECDSA(secp256k1) public key bytes\\n        bytes ECDSA_secp256k1;\\n\\n        // A smart contract that, if the recipient of the active message frame, should be treated\\n        // as having signed. (Note this does not mean the <i>code being executed in the frame</i>\\n        // will belong to the given contract, since it could be running another contract's code via\\n        // <tt>delegatecall</tt>. So setting this key is a more permissive version of setting the\\n        // contractID key, which also requires the code in the active message frame belong to the\\n        // the contract with the given id.)\\n        address delegatableContractId;\\n    }\\n\\n    /// A list of token key types the key should be applied to and the value of the key\\n    struct TokenKey {\\n\\n        // bit field representing the key type. Keys of all types that have corresponding bits set to 1\\n        // will be created for the token.\\n        // 0th bit: adminKey\\n        // 1st bit: kycKey\\n        // 2nd bit: freezeKey\\n        // 3rd bit: wipeKey\\n        // 4th bit: supplyKey\\n        // 5th bit: feeScheduleKey\\n        // 6th bit: pauseKey\\n        // 7th bit: ignored\\n        uint keyType;\\n\\n        // the value that will be set to the key type\\n        KeyValue key;\\n    }\\n\\n    /// Basic properties of a Hedera Token - name, symbol, memo, tokenSupplyType, maxSupply,\\n    /// treasury, freezeDefault. These properties are related both to Fungible and NFT token types.\\n    struct HederaToken {\\n        // The publicly visible name of the token. The token name is specified as a Unicode string.\\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\\n        string name;\\n\\n        // The publicly visible token symbol. The token symbol is specified as a Unicode string.\\n        // Its UTF-8 encoding cannot exceed 100 bytes, and cannot contain the 0 byte (NUL).\\n        string symbol;\\n\\n        // The ID of the account which will act as a treasury for the token as a solidity address.\\n        // This account will receive the specified initial supply or the newly minted NFTs in\\n        // the case for NON_FUNGIBLE_UNIQUE Type\\n        address treasury;\\n\\n        // The memo associated with the token (UTF-8 encoding max 100 bytes)\\n        string memo;\\n\\n        // IWA compatibility. Specified the token supply type. Defaults to INFINITE\\n        bool tokenSupplyType;\\n\\n        // IWA Compatibility. Depends on TokenSupplyType. For tokens of type FUNGIBLE_COMMON - the\\n        // maximum number of tokens that can be in circulation. For tokens of type NON_FUNGIBLE_UNIQUE -\\n        // the maximum number of NFTs (serial numbers) that can be minted. This field can never be changed!\\n        int64 maxSupply;\\n\\n        // The default Freeze status (frozen or unfrozen) of Hedera accounts relative to this token. If\\n        // true, an account must be unfrozen before it can receive the token\\n        bool freezeDefault;\\n\\n        // list of keys to set to the token - removed due to Solidity compiler limitation\\n        // TokenKey[] tokenKeys;\\n\\n        // expiry properties of a Hedera token - second, autoRenewAccount, autoRenewPeriod\\n        Expiry expiry;\\n    }\\n\\n    /// Additional post creation fungible and non fungible properties of a Hedera Token.\\n    struct TokenInfo {\\n        /// Basic properties of a Hedera Token\\n        HederaToken token;\\n\\n        /// The number of tokens (fungible) or serials (non-fungible) of the token\\n        int64 totalSupply;\\n\\n        /// Specifies whether the token is deleted or not\\n        bool deleted;\\n\\n        /// Specifies whether the token kyc was defaulted with KycNotApplicable (true) or Revoked (false)\\n        bool defaultKycStatus;\\n\\n        /// Specifies whether the token is currently paused or not\\n        bool pauseStatus;\\n\\n        /// The fixed fees collected when transferring the token\\n        FixedFee[] fixedFees;\\n\\n        /// The fractional fees collected when transferring the token\\n        FractionalFee[] fractionalFees;\\n\\n        /// The royalty fees collected when transferring the token\\n        RoyaltyFee[] royaltyFees;\\n\\n        /// The ID of the network ledger\\n        string ledgerId;\\n    }\\n\\n    /// Additional fungible properties of a Hedera Token.\\n    struct FungibleTokenInfo {\\n        /// The shared hedera token info\\n        TokenInfo tokenInfo;\\n\\n        /// The number of decimal places a token is divisible by\\n        int32 decimals;\\n    }\\n\\n    /// Additional non fungible properties of a Hedera Token.\\n    struct NonFungibleTokenInfo {\\n        /// The shared hedera token info\\n        TokenInfo tokenInfo;\\n\\n        /// The serial number of the nft\\n        int64 serialNumber;\\n\\n        /// The account id specifying the owner of the non fungible token\\n        address ownerId;\\n\\n        /// The epoch second at which the token was created.\\n        int64 creationTime;\\n\\n        /// The unique metadata of the NFT\\n        bytes metadata;\\n\\n        /// The account id specifying an account that has been granted spending permissions on this nft\\n        address spenderId;\\n    }\\n\\n    /// A fixed number of units (hbar or token) to assess as a fee during a transfer of\\n    /// units of the token to which this fixed fee is attached. The denomination of\\n    /// the fee depends on the values of tokenId, useHbarsForPayment and\\n    /// useCurrentTokenForPayment. Exactly one of the values should be set.\\n    struct FixedFee {\\n\\n        int64 amount;\\n\\n        // Specifies ID of token that should be used for fixed fee denomination\\n        address tokenId;\\n\\n        // Specifies this fixed fee should be denominated in Hbar\\n        bool useHbarsForPayment;\\n\\n        // Specifies this fixed fee should be denominated in the Token currently being created\\n        bool useCurrentTokenForPayment;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// A fraction of the transferred units of a token to assess as a fee. The amount assessed will never\\n    /// be less than the given minimumAmount, and never greater than the given maximumAmount.  The\\n    /// denomination is always units of the token to which this fractional fee is attached.\\n    struct FractionalFee {\\n        // A rational number's numerator, used to set the amount of a value transfer to collect as a custom fee\\n        int64 numerator;\\n\\n        // A rational number's denominator, used to set the amount of a value transfer to collect as a custom fee\\n        int64 denominator;\\n\\n        // The minimum amount to assess\\n        int64 minimumAmount;\\n\\n        // The maximum amount to assess (zero implies no maximum)\\n        int64 maximumAmount;\\n        bool netOfTransfers;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// A fee to assess during a transfer that changes ownership of an NFT. Defines the fraction of\\n    /// the fungible value exchanged for an NFT that the ledger should collect as a royalty. (\\\"Fungible\\n    /// value\\\" includes both \\u210f and units of fungible HTS tokens.) When the NFT sender does not receive\\n    /// any fungible value, the ledger will assess the fallback fee, if present, to the new NFT owner.\\n    /// Royalty fees can only be added to tokens of type type NON_FUNGIBLE_UNIQUE.\\n    struct RoyaltyFee {\\n        // A fraction's numerator of fungible value exchanged for an NFT to collect as royalty\\n        int64 numerator;\\n\\n        // A fraction's denominator of fungible value exchanged for an NFT to collect as royalty\\n        int64 denominator;\\n\\n        // If present, the fee to assess to the NFT receiver when no fungible value\\n        // is exchanged with the sender. Consists of:\\n        // amount: the amount to charge for the fee\\n        // tokenId: Specifies ID of token that should be used for fixed fee denomination\\n        // useHbarsForPayment: Specifies this fee should be denominated in Hbar\\n        int64 amount;\\n        address tokenId;\\n        bool useHbarsForPayment;\\n\\n        // The ID of the account to receive the custom fee, expressed as a solidity address\\n        address feeCollector;\\n    }\\n\\n    /// Represents a pending airdrop of a token or NFT to a receiver\\n    /// @param sender The address of the account sending the airdrop\\n    /// @param receiver The address of the account receiving the airdrop\\n    /// @param token The address of the token being airdropped\\n    /// @param serial For NFT airdrops, the serial number of the NFT. For fungible tokens, this should be 0\\n    struct PendingAirdrop {\\n        address sender;\\n        address receiver;\\n        address token;\\n        int64 serial;\\n    }\\n\\n    /// Represents a unique NFT by its token address and serial number\\n    /// @param nft The address of the NFT token\\n    /// @param serial The serial number that uniquely identifies this NFT within its token type\\n    struct NftID {\\n        address nft;\\n        int64 serial;\\n    }\\n\\n    /**********************\\n     * Direct HTS Calls   *\\n     **********************/\\n\\n    /// Performs transfers among combinations of tokens and hbars\\n    /// @param transferList the list of hbar transfers to do\\n    /// @param tokenTransfers the list of token transfers to do\\n    /// @custom:version 0.3.0 the signature of the previous version was cryptoTransfer(TokenTransferList[] memory tokenTransfers)\\n    function cryptoTransfer(TransferList memory transferList, TokenTransferList[] memory tokenTransfers)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Mints an amount of the token to the defined treasury account\\n    /// @param token The token for which to mint tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the Treasury Account.\\n    ///               Amount must be a positive non-zero number represented in the lowest denomination of the\\n    ///               token. The new supply must be lower than 2^63.\\n    /// @param metadata Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that are being created.\\n    ///                 Maximum allowed size of each metadata is 100 bytes\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    /// @return serialNumbers If the token is an NFT the newly generate serial numbers, othersise empty.\\n    function mintToken(\\n        address token,\\n        int64 amount,\\n        bytes[] memory metadata\\n    )\\n        external\\n        returns (\\n            int64 responseCode,\\n            int64 newTotalSupply,\\n            int64[] memory serialNumbers\\n        );\\n\\n    /// Burns an amount of the token from the defined treasury account\\n    /// @param token The token for which to burn tokens. If token does not exist, transaction results in\\n    ///              INVALID_TOKEN_ID\\n    /// @param amount  Applicable to tokens of type FUNGIBLE_COMMON. The amount to burn from the Treasury Account.\\n    ///                Amount must be a positive non-zero number, not bigger than the token balance of the treasury\\n    ///                account (0; balance], represented in the lowest denomination.\\n    /// @param serialNumbers Applicable to tokens of type NON_FUNGIBLE_UNIQUE. The list of serial numbers to be burned.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return newTotalSupply The new supply of tokens. For NFTs it is the total count of NFTs\\n    function burnToken(\\n        address token,\\n        int64 amount,\\n        int64[] memory serialNumbers\\n    ) external returns (int64 responseCode, int64 newTotalSupply);\\n\\n    ///  Associates the provided account with the provided tokens. Must be signed by the provided\\n    ///  Account's key or called from the accounts contract key\\n    ///  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    ///  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    ///  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    ///  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    ///  If an association between the provided account and any of the tokens already exists, the\\n    ///  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.\\n    ///  If the provided account's associations count exceed the constraint of maximum token associations\\n    ///    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.\\n    ///  On success, associations between the provided account and tokens are made and the account is\\n    ///    ready to interact with the tokens.\\n    /// @param account The account to be associated with the provided tokens\\n    /// @param tokens The tokens to be associated with the provided account. In the case of NON_FUNGIBLE_UNIQUE\\n    ///               Type, once an account is associated, it can hold any number of NFTs (serial numbers) of that\\n    ///               token type\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function associateTokens(address account, address[] memory tokens)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens\\n    /// @param account The account to be associated with the provided token\\n    /// @param token The token to be associated with the provided account\\n    function associateToken(address account, address token)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Dissociates the provided account with the provided tokens. Must be signed by the provided\\n    /// Account's key.\\n    /// If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.\\n    /// If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.\\n    /// If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.\\n    /// If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.\\n    /// If an association between the provided account and any of the tokens does not exist, the\\n    /// transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.\\n    /// If a token has not been deleted and has not expired, and the user has a nonzero balance, the\\n    /// transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.\\n    /// If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is\\n    /// not zero.\\n    /// If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token\\n    /// balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.\\n    /// On success, associations between the provided account and tokens are removed.\\n    /// @param account The account to be dissociated from the provided tokens\\n    /// @param tokens The tokens to be dissociated from the provided account.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function dissociateTokens(address account, address[] memory tokens)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens\\n    /// @param account The account to be associated with the provided token\\n    /// @param token The token to be associated with the provided account\\n    function dissociateToken(address account, address token)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleToken(\\n        HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates a Fungible Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param initialTotalSupply Specifies the initial supply of tokens to be put in circulation. The\\n    /// initial supply is sent to the Treasury Account. The supply is in the lowest denomination possible.\\n    /// @param decimals the number of decimal places a token is divisible by.\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param fractionalFees list of fractional fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createFungibleTokenWithCustomFees(\\n        HederaToken memory token,\\n        int64 initialTotalSupply,\\n        int32 decimals,\\n        FixedFee[] memory fixedFees,\\n        FractionalFee[] memory fractionalFees\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleToken(HederaToken memory token)\\n        external\\n        payable\\n        returns (int64 responseCode, address tokenAddress);\\n\\n    /// Creates an Non Fungible Unique Token with the specified properties\\n    /// @param token the basic properties of the token being created\\n    /// @param fixedFees list of fixed fees to apply to the token\\n    /// @param royaltyFees list of royalty fees to apply to the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenAddress the created token's address\\n    function createNonFungibleTokenWithCustomFees(\\n        HederaToken memory token,\\n        FixedFee[] memory fixedFees,\\n        RoyaltyFee[] memory royaltyFees\\n    ) external payable returns (int64 responseCode, address tokenAddress);\\n\\n    /**********************\\n     * ABIV1 calls        *\\n     **********************/\\n\\n    /// Initiates a Fungible Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param accountId account to do a transfer to/from\\n    /// @param amount The amount from the accountId at the same index\\n    function transferTokens(\\n        address token,\\n        address[] memory accountId,\\n        int64[] memory amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Initiates a Non-Fungable Token Transfer\\n    /// @param token The ID of the token as a solidity address\\n    /// @param sender the sender of an nft\\n    /// @param receiver the receiver of the nft sent by the same index at sender\\n    /// @param serialNumber the serial number of the nft sent by the same index at sender\\n    function transferNFTs(\\n        address token,\\n        address[] memory sender,\\n        address[] memory receiver,\\n        int64[] memory serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param recipient The receiver of the transaction\\n    /// @param amount Non-negative value to send. a negative value will result in a failure.\\n    function transferToken(\\n        address token,\\n        address sender,\\n        address recipient,\\n        int64 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list,\\n    /// where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending\\n    /// (positive amount) or receiving (negative amount)\\n    /// @param token The token to transfer to/from\\n    /// @param sender The sender for the transaction\\n    /// @param recipient The receiver of the transaction\\n    /// @param serialNumber The serial number of the NFT to transfer.\\n    function transferNFT(\\n        address token,\\n        address sender,\\n        address recipient,\\n        int64 serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called\\n    /// again it overwrites the current allowance with value.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The hedera token address to approve\\n    /// @param spender the account address authorized to spend\\n    /// @param amount the amount of tokens authorized to spend.\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approve(\\n        address token,\\n        address spender,\\n        uint256 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers `amount` tokens from `from` to `to` using the\\n    //  allowance mechanism. `amount` is then deducted from the caller's allowance.\\n    /// Only applicable to fungible tokens\\n    /// @param token The address of the fungible Hedera token to transfer\\n    /// @param from The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\\n    /// @param to The account address of the receiver of the `amount` tokens\\n    /// @param amount The amount of tokens to transfer from `from` to `to`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFrom(address token, address from, address to, uint256 amount) external returns (int64 responseCode);\\n\\n    /// Returns the amount which spender is still allowed to withdraw from owner.\\n    /// Only Applicable to Fungible Tokens\\n    /// @param token The Hedera token address to check the allowance of\\n    /// @param owner the owner of the tokens to be spent\\n    /// @param spender the spender of the tokens\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return allowance The amount which spender is still allowed to withdraw from owner.\\n    function allowance(\\n        address token,\\n        address owner,\\n        address spender\\n    ) external returns (int64 responseCode, uint256 allowance);\\n\\n    /// Allow or reaffirm the approved address to transfer an NFT the approved address does not own.\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param approved The new approved NFT controller.  To revoke approvals pass in the zero address.\\n    /// @param serialNumber The NFT serial number  to approve\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function approveNFT(\\n        address token,\\n        address approved,\\n        uint256 serialNumber\\n    ) external returns (int64 responseCode);\\n\\n    /// Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism.\\n    /// Only applicable to NFT tokens\\n    /// @param token The address of the non-fungible Hedera token to transfer\\n    /// @param from The account address of the owner of `serialNumber` of `token`\\n    /// @param to The account address of the receiver of `serialNumber`\\n    /// @param serialNumber The NFT serial number to transfer\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function transferFromNFT(address token, address from, address to, uint256 serialNumber) external returns (int64 responseCode);\\n\\n    /// Get the approved address for a single NFT\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to check approval\\n    /// @param serialNumber The NFT to find the approved address for\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved The approved address for this NFT, or the zero address if there is none\\n    function getApproved(address token, uint256 serialNumber)\\n        external\\n        returns (int64 responseCode, address approved);\\n\\n    /// Enable or disable approval for a third party (\\\"operator\\\") to manage\\n    ///  all of `msg.sender`'s assets\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param operator Address to add to the set of authorized operators\\n    /// @param approved True if the operator is approved, false to revoke approval\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function setApprovalForAll(\\n        address token,\\n        address operator,\\n        bool approved\\n    ) external returns (int64 responseCode);\\n\\n    /// Query if an address is an authorized operator for another address\\n    /// Only Applicable to NFT Tokens\\n    /// @param token The Hedera NFT token address to approve\\n    /// @param owner The address that owns the NFTs\\n    /// @param operator The address that acts on behalf of the owner\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return approved True if `operator` is an approved operator for `owner`, false otherwise\\n    function isApprovedForAll(\\n        address token,\\n        address owner,\\n        address operator\\n    ) external returns (int64 responseCode, bool approved);\\n\\n    /// Query if token account is frozen\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return frozen True if `account` is frozen for `token`\\n    function isFrozen(address token, address account)\\n        external\\n        returns (int64 responseCode, bool frozen);\\n\\n    /// Query if token account has kyc granted\\n    /// @param token The token address to check\\n    /// @param account The account address associated with the token\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return kycGranted True if `account` has kyc granted for `token`\\n    function isKyc(address token, address account)\\n        external\\n        returns (int64 responseCode, bool kycGranted);\\n\\n    /// Operation to delete token\\n    /// @param token The token address to be deleted\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function deleteToken(address token) external returns (int64 responseCode);\\n\\n    /// Query token custom fees\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return fixedFees Set of fixed fees for `token`\\n    /// @return fractionalFees Set of fractional fees for `token`\\n    /// @return royaltyFees Set of royalty fees for `token`\\n    function getTokenCustomFees(address token)\\n        external\\n        returns (int64 responseCode, FixedFee[] memory fixedFees, FractionalFee[] memory fractionalFees, RoyaltyFee[] memory royaltyFees);\\n\\n    /// Query token default freeze status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultFreezeStatus True if `token` default freeze status is frozen.\\n    function getTokenDefaultFreezeStatus(address token)\\n        external\\n        returns (int64 responseCode, bool defaultFreezeStatus);\\n\\n    /// Query token default kyc status\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return defaultKycStatus True if `token` default kyc status is KycNotApplicable and false if Revoked.\\n    function getTokenDefaultKycStatus(address token)\\n        external\\n        returns (int64 responseCode, bool defaultKycStatus);\\n\\n    /// Query token expiry info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return expiry Expiry info for `token`\\n    function getTokenExpiryInfo(address token)\\n        external\\n        returns (int64 responseCode, Expiry memory expiry);\\n\\n    /// Query fungible token info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return fungibleTokenInfo FungibleTokenInfo info for `token`\\n    function getFungibleTokenInfo(address token)\\n        external\\n        returns (int64 responseCode, FungibleTokenInfo memory fungibleTokenInfo);\\n\\n    /// Query token info\\n    /// @param token The token address to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenInfo TokenInfo info for `token`\\n    function getTokenInfo(address token)\\n        external\\n        returns (int64 responseCode, TokenInfo memory tokenInfo);\\n\\n    /// Query token KeyValue\\n    /// @param token The token address to check\\n    /// @param keyType The keyType of the desired KeyValue\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return key KeyValue info for key of type `keyType`\\n    function getTokenKey(address token, uint keyType)\\n        external\\n        returns (int64 responseCode, KeyValue memory key);\\n\\n    /// Query non fungible token info\\n    /// @param token The token address to check\\n    /// @param serialNumber The NFT serialNumber to check\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return nonFungibleTokenInfo NonFungibleTokenInfo info for `token` `serialNumber`\\n    function getNonFungibleTokenInfo(address token, int64 serialNumber)\\n        external\\n        returns (int64 responseCode, NonFungibleTokenInfo memory nonFungibleTokenInfo);\\n\\n    /// Operation to freeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be frozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function freezeToken(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to unfreeze token account\\n    /// @param token The token address\\n    /// @param account The account address to be unfrozen\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unfreezeToken(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to grant kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to grant kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function grantTokenKyc(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to revoke kyc to token account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function revokeTokenKyc(address token, address account)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to pause token\\n    /// @param token The token address to be paused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function pauseToken(address token) external returns (int64 responseCode);\\n\\n    /// Operation to unpause token\\n    /// @param token The token address to be unpaused\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function unpauseToken(address token) external returns (int64 responseCode);\\n\\n    /// Operation to wipe fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param amount The number of tokens to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccount(\\n        address token,\\n        address account,\\n        int64 amount\\n    ) external returns (int64 responseCode);\\n\\n    /// Operation to wipe non fungible tokens from account\\n    /// @param token The token address\\n    /// @param account The account address to revoke kyc\\n    /// @param  serialNumbers The serial numbers of token to wipe\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function wipeTokenAccountNFT(\\n        address token,\\n        address account,\\n        int64[] memory serialNumbers\\n    ) external returns (int64 responseCode);\\n\\n    /// Operation to update token info\\n    /// @param token The token address\\n    /// @param tokenInfo The hedera token info to update token with\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenInfo(address token, HederaToken memory tokenInfo)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to update token expiry info\\n    /// @param token The token address\\n    /// @param expiryInfo The hedera token expiry info\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenExpiryInfo(address token, Expiry memory expiryInfo)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Operation to update token expiry info\\n    /// @param token The token address\\n    /// @param keys The token keys\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateTokenKeys(address token, TokenKey[] memory keys)\\n        external\\n        returns (int64 responseCode);\\n\\n    /// Query if valid token found for the given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return isToken True if valid token found for the given address\\n    function isToken(address token)\\n        external returns\\n        (int64 responseCode, bool isToken);\\n\\n    /// Query to return the token type for a given address\\n    /// @param token The token address\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return tokenType the token type. 0 is FUNGIBLE_COMMON, 1 is NON_FUNGIBLE_UNIQUE, -1 is UNRECOGNIZED\\n    function getTokenType(address token)\\n        external returns\\n        (int64 responseCode, int32 tokenType);\\n\\n    /// Initiates a Redirect For Token\\n    /// @param token The token address\\n    /// @param encodedFunctionSelector The function selector from the ERC20 interface + the bytes input for the function called\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    /// @return response The result of the call that had been encoded and sent for execution.\\n    function redirectForToken(address token, bytes memory encodedFunctionSelector) external returns (int64 responseCode, bytes memory response);\\n\\n    /// Update the custom fees for a fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param fractionalFees Set of fractional fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateFungibleTokenCustomFees(address token,  IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.FractionalFee[] memory fractionalFees) external returns (int64 responseCode);\\n\\n    /// Update the custom fees for a non-fungible token\\n    /// @param token The token address\\n    /// @param fixedFees Set of fixed fees for `token`\\n    /// @param royaltyFees Set of royalty fees for `token`\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function updateNonFungibleTokenCustomFees(address token, IHederaTokenService.FixedFee[] memory fixedFees, IHederaTokenService.RoyaltyFee[] memory royaltyFees) external returns (int64 responseCode);\\n\\n    /// @notice Airdrop one or more tokens to one or more accounts\\n    /// @notice Recipients will receive tokens in one of these ways:\\n    /// @notice     - Immediately if already associated with the token\\n    /// @notice     - Immediately with auto-association if they have available slots\\n    /// @notice     - As a pending airdrop requiring claim if they have \\\"receiver signature required\\\" \\n    /// @notice     - As a pending airdrop requiring claim if they have no available auto-association slots\\n    /// @notice Immediate airdrops are irreversible, pending airdrops can be canceled\\n    /// @notice All transfer fees and auto-renewal rent costs are charged to the transaction submitter\\n    /// @param tokenTransfers Array of token transfer lists containing token addresses and recipient details\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function airdropTokens(TokenTransferList[] memory tokenTransfers) external returns (int64 responseCode);\\n\\n    /// @notice Cancels pending airdrops that have not yet been claimed\\n    /// @param pendingAirdrops Array of pending airdrops to cancel\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function cancelAirdrops(PendingAirdrop[] memory pendingAirdrops) external returns (int64 responseCode);\\n\\n    /// @notice Claims pending airdrops that were sent to the calling account\\n    /// @param pendingAirdrops Array of pending airdrops to claim\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function claimAirdrops(PendingAirdrop[] memory pendingAirdrops) external returns (int64 responseCode);\\n\\n    /// @notice Rejects one or more tokens by transferring their full balance from the requesting account to the treasury\\n    /// @notice This transfer does not charge any custom fees or royalties defined for the tokens\\n    /// @notice For fungible tokens, the requesting account's balance will become 0 and the treasury balance will increase by that amount\\n    /// @notice For non-fungible tokens, the requesting account will no longer hold the rejected serial numbers and they will be transferred to the treasury\\n    /// @param rejectingAddress The address rejecting the tokens\\n    /// @param ftAddresses Array of fungible token addresses to reject\\n    /// @param nftIDs Array of NFT IDs to reject\\n    /// @return responseCode The response code for the status of the request. SUCCESS is 22.\\n    function rejectTokens(address rejectingAddress, address[] memory ftAddresses, NftID[] memory nftIDs) external returns (int64 responseCode);\\n}\",\"keccak256\":\"0x2986ecf353112c4cfef645f5ac49eb594c911ace15136a6ea38645fc5bf6d1a9\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"airdropTokens((address,(address,int64,bool)[],(address,address,int64,bool)[])[])":{"notice":"Airdrop one or more tokens to one or more accountsRecipients will receive tokens in one of these ways:- Immediately if already associated with the token- Immediately with auto-association if they have available slots- As a pending airdrop requiring claim if they have \"receiver signature required\" - As a pending airdrop requiring claim if they have no available auto-association slotsImmediate airdrops are irreversible, pending airdrops can be canceledAll transfer fees and auto-renewal rent costs are charged to the transaction submitter"},"allowance(address,address,address)":{"notice":"Returns the amount which spender is still allowed to withdraw from owner. Only Applicable to Fungible Tokens"},"approve(address,address,uint256)":{"notice":"Allows spender to withdraw from your account multiple times, up to the value amount. If this function is called again it overwrites the current allowance with value. Only Applicable to Fungible Tokens"},"approveNFT(address,address,uint256)":{"notice":"Allow or reaffirm the approved address to transfer an NFT the approved address does not own. Only Applicable to NFT Tokens"},"associateToken(address,address)":{"notice":"Single-token variant of associateTokens. Will be mapped to a single entry array call of associateTokens"},"associateTokens(address,address[])":{"notice":"Associates the provided account with the provided tokens. Must be signed by the provided  Account's key or called from the accounts contract key  If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.  If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.  If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.  If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.  If an association between the provided account and any of the tokens already exists, the  transaction will resolve to TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT.  If the provided account's associations count exceed the constraint of maximum token associations    per account, the transaction will resolve to TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED.  On success, associations between the provided account and tokens are made and the account is    ready to interact with the tokens."},"burnToken(address,int64,int64[])":{"notice":"Burns an amount of the token from the defined treasury account"},"cancelAirdrops((address,address,address,int64)[])":{"notice":"Cancels pending airdrops that have not yet been claimed"},"claimAirdrops((address,address,address,int64)[])":{"notice":"Claims pending airdrops that were sent to the calling account"},"createFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32)":{"notice":"Creates a Fungible Token with the specified properties"},"createFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),int64,int32,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])":{"notice":"Creates a Fungible Token with the specified properties"},"createNonFungibleToken((string,string,address,string,bool,int64,bool,(int64,address,int64)))":{"notice":"Creates an Non Fungible Unique Token with the specified properties"},"createNonFungibleTokenWithCustomFees((string,string,address,string,bool,int64,bool,(int64,address,int64)),(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])":{"notice":"Creates an Non Fungible Unique Token with the specified properties"},"cryptoTransfer(((address,int64,bool)[]),(address,(address,int64,bool)[],(address,address,int64,bool)[])[])":{"notice":"Performs transfers among combinations of tokens and hbars"},"deleteToken(address)":{"notice":"Operation to delete token"},"dissociateToken(address,address)":{"notice":"Single-token variant of dissociateTokens. Will be mapped to a single entry array call of dissociateTokens"},"dissociateTokens(address,address[])":{"notice":"Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key. If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID. If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED. If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF. If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED. If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT. If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES. If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero. If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES. On success, associations between the provided account and tokens are removed."},"freezeToken(address,address)":{"notice":"Operation to freeze token account"},"getApproved(address,uint256)":{"notice":"Get the approved address for a single NFT Only Applicable to NFT Tokens"},"getFungibleTokenInfo(address)":{"notice":"Query fungible token info"},"getNonFungibleTokenInfo(address,int64)":{"notice":"Query non fungible token info"},"getTokenCustomFees(address)":{"notice":"Query token custom fees"},"getTokenDefaultFreezeStatus(address)":{"notice":"Query token default freeze status"},"getTokenDefaultKycStatus(address)":{"notice":"Query token default kyc status"},"getTokenExpiryInfo(address)":{"notice":"Query token expiry info"},"getTokenInfo(address)":{"notice":"Query token info"},"getTokenKey(address,uint256)":{"notice":"Query token KeyValue"},"getTokenType(address)":{"notice":"Query to return the token type for a given address"},"grantTokenKyc(address,address)":{"notice":"Operation to grant kyc to token account"},"isApprovedForAll(address,address,address)":{"notice":"Query if an address is an authorized operator for another address Only Applicable to NFT Tokens"},"isFrozen(address,address)":{"notice":"Query if token account is frozen"},"isKyc(address,address)":{"notice":"Query if token account has kyc granted"},"isToken(address)":{"notice":"Query if valid token found for the given address"},"mintToken(address,int64,bytes[])":{"notice":"Mints an amount of the token to the defined treasury account"},"pauseToken(address)":{"notice":"Operation to pause token"},"redirectForToken(address,bytes)":{"notice":"Initiates a Redirect For Token"},"rejectTokens(address,address[],(address,int64)[])":{"notice":"Rejects one or more tokens by transferring their full balance from the requesting account to the treasuryThis transfer does not charge any custom fees or royalties defined for the tokensFor fungible tokens, the requesting account's balance will become 0 and the treasury balance will increase by that amountFor non-fungible tokens, the requesting account will no longer hold the rejected serial numbers and they will be transferred to the treasury"},"revokeTokenKyc(address,address)":{"notice":"Operation to revoke kyc to token account"},"setApprovalForAll(address,address,bool)":{"notice":"Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"},"transferFrom(address,address,address,uint256)":{"notice":"Only applicable to fungible tokens"},"transferFromNFT(address,address,address,uint256)":{"notice":"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"},"transferNFT(address,address,address,int64)":{"notice":"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"},"transferNFTs(address,address[],address[],int64[])":{"notice":"Initiates a Non-Fungable Token Transfer"},"transferToken(address,address,address,int64)":{"notice":"Transfers tokens where the calling account/contract is implicitly the first entry in the token transfer list, where the amount is the value needed to zero balance the transfers. Regular signing rules apply for sending (positive amount) or receiving (negative amount)"},"transferTokens(address,address[],int64[])":{"notice":"Initiates a Fungible Token Transfer"},"unfreezeToken(address,address)":{"notice":"Operation to unfreeze token account"},"unpauseToken(address)":{"notice":"Operation to unpause token"},"updateFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,int64,bool,address)[])":{"notice":"Update the custom fees for a fungible token"},"updateNonFungibleTokenCustomFees(address,(int64,address,bool,bool,address)[],(int64,int64,int64,address,bool,address)[])":{"notice":"Update the custom fees for a non-fungible token"},"updateTokenExpiryInfo(address,(int64,address,int64))":{"notice":"Operation to update token expiry info"},"updateTokenInfo(address,(string,string,address,string,bool,int64,bool,(int64,address,int64)))":{"notice":"Operation to update token info"},"updateTokenKeys(address,(uint256,(bool,address,bytes,bytes,address))[])":{"notice":"Operation to update token expiry info"},"wipeTokenAccount(address,address,int64)":{"notice":"Operation to wipe fungible tokens from account"},"wipeTokenAccountNFT(address,address,int64[])":{"notice":"Operation to wipe non fungible tokens from account"}},"version":1}}}}}}