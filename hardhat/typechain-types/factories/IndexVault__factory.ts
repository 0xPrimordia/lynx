/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { IndexVault, IndexVaultInterface } from "../IndexVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_htsAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "InsufficientDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidComposition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyController",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "TokenNotAssociated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "weight",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct IndexVault.Asset[]",
        name: "composition",
        type: "tuple[]",
      },
    ],
    name: "CompositionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "IndexTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensDistributed",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateRequiredDeposits",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "composition",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "weight",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getComposition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "weight",
            type: "uint16",
          },
        ],
        internalType: "struct IndexVault.Asset[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "htsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "indexToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "receiveMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "weight",
            type: "uint16",
          },
        ],
        internalType: "struct IndexVault.Asset[]",
        name: "_composition",
        type: "tuple[]",
      },
    ],
    name: "setComposition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_indexToken",
        type: "address",
      },
    ],
    name: "setIndexToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "updateAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "updateController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "validateMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516200184d3803806200184d8339810160408190526100319161009f565b600180546001600160a01b039384166001600160a01b031991821617909155600280548216331790556003805492909316918116821790925560068054831690911790556000805490911690556100d2565b80516001600160a01b038116811461009a57600080fd5b919050565b600080604083850312156100b257600080fd5b6100bb83610083565b91506100c960208401610083565b90509250929050565b61176b80620000e26000396000f3fe6080604052600436106100f75760003560e01c8063b9d527c61161008a578063e7d015f211610059578063e7d015f21461031c578063f66be67314610354578063f77c479114610374578063f851a4401461039457600080fd5b8063b9d527c614610244578063c35082a914610274578063d58f0263146102ba578063e2f273bd146102fc57600080fd5b8063746b9345116100c6578063746b9345146101905780638f601f66146101b05780638f9f8b01146101f6578063b82a35c51461022457600080fd5b806306cb5b661461010357806308d721021461012557806346a5d043146101505780634c8810731461017057600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004611328565b6103b4565b005b34801561013157600080fd5b5061013a610430565b604051610147919061134c565b60405180910390f35b34801561015c57600080fd5b5061012361016b3660046113a8565b6104a7565b34801561017c57600080fd5b5061012361018b3660046113d4565b610784565b34801561019c57600080fd5b506101236101ab3660046113a8565b610a9f565b3480156101bc57600080fd5b506101e86101cb366004611449565b600560209081526000928352604080842090915290825290205481565b604051908152602001610147565b34801561020257600080fd5b50610216610211366004611482565b610e25565b60405161014792919061149b565b34801561023057600080fd5b5061012361023f366004611328565b610f9b565b34801561025057600080fd5b5061026461025f3660046113a8565b611142565b6040519015158152602001610147565b34801561028057600080fd5b506101e861028f366004611449565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b3480156102c657600080fd5b506102da6102d5366004611482565b611226565b604080516001600160a01b03909316835261ffff909116602083015201610147565b34801561030857600080fd5b50610123610317366004611328565b61125c565b34801561032857600080fd5b5060005461033c906001600160a01b031681565b6040516001600160a01b039091168152602001610147565b34801561036057600080fd5b5060035461033c906001600160a01b031681565b34801561038057600080fd5b5060015461033c906001600160a01b031681565b3480156103a057600080fd5b5060025461033c906001600160a01b031681565b6002546001600160a01b031633146103df57604051634755657960e01b815260040160405180910390fd5b6001600160a01b03811661040e5760405162461bcd60e51b81526004016104059061151f565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561049e57600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b900461ffff1681830152825260019092019101610454565b50505050905090565b600081116104f75760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610405565b6000805b60045481101561055757836001600160a01b03166004828154811061052257610522611556565b6000918252602090912001546001600160a01b0316036105455760019150610557565b8061054f81611582565b9150506104fb565b50806105a55760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e206e6f742070617274206f6620636f6d706f736974696f6e0000006044820152606401610405565b600654604051631c97fa2960e21b81523060048201526001600160a01b0385811660248301529091169063725fe8a490604401602060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610619919061159b565b61064757604051632460bcbb60e21b81526001600160a01b0384166004820152306024820152604401610405565b600654604051632c54de4f60e01b81526001600160a01b038581166004830152336024830152306044830152606482018590526000921690632c54de4f906084016020604051808303816000875af11580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb91906115bd565b90508060070b60001461070657604051630b3bb03f60e01b81526001600160a01b0385166004820152600782900b6024820152604401610405565b3360009081526005602090815260408083206001600160a01b0388168452909152812080548592906107399084906115e0565b90915550506040518381526001600160a01b0385169033907f54ef209e319f7d023f4f2c1d4b427c3844f7ef008d20a2104b1f20cb533a7fbf9060200160405180910390a350505050565b6002546001600160a01b031633146107af57604051634755657960e01b815260040160405180910390fd5b6000805b828110156109c9578383828181106107cd576107cd611556565b90506040020160200160208101906107e59190611603565b6107f39061ffff16836115e0565b6006549092506001600160a01b031663725fe8a43086868581811061081a5761081a611556565b6108309260206040909202019081019150611328565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f919061159b565b6109b7576006546000906001600160a01b03166349146bde308787868181106108ca576108ca611556565b6108e09260206040909202019081019150611328565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561092d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095191906115bd565b90508060070b6000146109b55784848381811061097057610970611556565b6109869260206040909202019081019150611328565b604051630b3bb03f60e01b81526001600160a01b039091166004820152600782900b6024820152604401610405565b505b806109c181611582565b9150506107b3565b5080612710146109ec57604051639d811b9960e01b815260040160405180910390fd5b60045415610a0057610a00600460006112cf565b60005b82811015610a60576004848483818110610a1f57610a1f611556565b83546001810185556000948552602090942060409091029290920192919091019050610a4b8282611620565b50508080610a5890611582565b915050610a03565b507f5a47f63b43dc044e0b2dad1e54f67ffb24bf1d3328c812a029f66486c66e86708383604051610a9292919061167a565b60405180910390a1505050565b6001546001600160a01b03163314610aca57604051635990781360e01b815260040160405180910390fd5b6000546001600160a01b0316610b185760405162461bcd60e51b8152602060048201526013602482015272125b99195e081d1bdad95b881b9bdd081cd95d606a1b6044820152606401610405565b60005b600454811015610c6857600060048281548110610b3a57610b3a611556565b60009182526020808320604080518082019091529201546001600160a01b0381168352600160a01b900461ffff1690820181905290925061271090610b7f90866116d3565b610b8991906116ea565b6001600160a01b038087166000908152600560209081526040808320875190941683529290522054909150811115610c135781516001600160a01b03868116600090815260056020908152604080832087518516845290915290819020549051632fc28c5360e01b8152919092166004820152602481018390526044810191909152606401610405565b6001600160a01b038086166000908152600560209081526040808320865190941683529290529081208054839290610c4c90849061170c565b9250508190555050508080610c6090611582565b915050610b1b565b50600654600054604051631c97fa2960e21b81526001600160a01b038581166004830152918216602482015291169063725fe8a490604401602060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce1919061159b565b610d1557600054604051632460bcbb60e21b81526001600160a01b0391821660048201529083166024820152604401610405565b60065460008054604051632c54de4f60e01b81526001600160a01b03918216600482015230602482015285821660448201526064810185905291921690632c54de4f906084016020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e91906115bd565b90508060070b600014610ddd57600054604051630b3bb03f60e01b81526001600160a01b039091166004820152600782900b6024820152604401610405565b826001600160a01b03167f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c83604051610e1891815260200190565b60405180910390a2505050565b600454606090819067ffffffffffffffff811115610e4557610e4561171f565b604051908082528060200260200182016040528015610e6e578160200160208202803683370190505b5060045490925067ffffffffffffffff811115610e8d57610e8d61171f565b604051908082528060200260200182016040528015610eb6578160200160208202803683370190505b50905060005b600454811015610f955760048181548110610ed957610ed9611556565b60009182526020909120015483516001600160a01b0390911690849083908110610f0557610f05611556565b60200260200101906001600160a01b031690816001600160a01b03168152505061271060048281548110610f3b57610f3b611556565b600091825260209091200154610f5c90600160a01b900461ffff16866116d3565b610f6691906116ea565b828281518110610f7857610f78611556565b602090810291909101015280610f8d81611582565b915050610ebc565b50915091565b6001546001600160a01b03163314610fc657604051635990781360e01b815260040160405180910390fd5b6000546001600160a01b03161561101f5760405162461bcd60e51b815260206004820152601760248201527f496e64657820746f6b656e20616c7265616479207365740000000000000000006044820152606401610405565b6001600160a01b0381166110455760405162461bcd60e51b81526004016104059061151f565b600080546001600160a01b0319166001600160a01b03838116918217835560065460405163248a35ef60e11b8152306004820152602481019390935216906349146bde906044016020604051808303816000875af11580156110ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cf91906115bd565b90508060070b60001461110a57604051630b3bb03f60e01b81526001600160a01b0383166004820152600782900b6024820152604401610405565b6040516001600160a01b038316907f40cdac5625b9528b38b786c9b74c257c1de10eac74b82c0ebc45a652cd8bcf6390600090a25050565b600454600090810361115657506000611220565b60005b60045481101561121a5760006004828154811061117857611178611556565b60009182526020808320604080518082019091529201546001600160a01b0381168352600160a01b900461ffff16908201819052909250612710906111bd90876116d3565b6111c791906116ea565b6001600160a01b0380881660009081526005602090815260408083208751909416835292905220549091508111156112055760009350505050611220565b5050808061121290611582565b915050611159565b50600190505b92915050565b6004818154811061123657600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b900461ffff1682565b6002546001600160a01b0316331461128757604051634755657960e01b815260040160405180910390fd5b6001600160a01b0381166112ad5760405162461bcd60e51b81526004016104059061151f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b50805460008255906000526020600020908101906112ed91906112f0565b50565b5b8082111561130f5780546001600160b01b03191681556001016112f1565b5090565b6001600160a01b03811681146112ed57600080fd5b60006020828403121561133a57600080fd5b813561134581611313565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561139b57815180516001600160a01b0316855286015161ffff16868501529284019290850190600101611369565b5091979650505050505050565b600080604083850312156113bb57600080fd5b82356113c681611313565b946020939093013593505050565b600080602083850312156113e757600080fd5b823567ffffffffffffffff808211156113ff57600080fd5b818501915085601f83011261141357600080fd5b81358181111561142257600080fd5b8660208260061b850101111561143757600080fd5b60209290920196919550909350505050565b6000806040838503121561145c57600080fd5b823561146781611313565b9150602083013561147781611313565b809150509250929050565b60006020828403121561149457600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156114dd5781516001600160a01b0316845292840192908401906001016114b8565b5050508381038285015284518082528583019183019060005b81811015611512578351835292840192918401916001016114f6565b5090979650505050505050565b6020808252601a908201527f43616e6e6f742073657420746f207a65726f2061646472657373000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115945761159461156c565b5060010190565b6000602082840312156115ad57600080fd5b8151801515811461134557600080fd5b6000602082840312156115cf57600080fd5b81518060070b811461134557600080fd5b808201808211156112205761122061156c565b61ffff811681146112ed57600080fd5b60006020828403121561161557600080fd5b8135611345816115f3565b813561162b81611313565b81546001600160a01b031981166001600160a01b039290921691821783556020840135611657816115f3565b6001600160b01b03199190911690911760a09190911b61ffff60a01b1617905550565b6020808252818101839052600090604080840186845b878110156115125781356116a381611313565b6001600160a01b03168352818501356116bb816115f3565b61ffff16838601529183019190830190600101611690565b80820281158282048414176112205761122061156c565b60008261170757634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156112205761122061156c565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d9360c6df013f585f773ab8fea6d4c3d671b3a44e0f9d5a3c76321ef15b3386164736f6c63430008130033";

type IndexVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IndexVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IndexVault__factory extends ContractFactory {
  constructor(...args: IndexVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _controller: AddressLike,
    _htsAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _controller,
      _htsAddress,
      overrides || {}
    );
  }
  override deploy(
    _controller: AddressLike,
    _htsAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_controller, _htsAddress, overrides || {}) as Promise<
      IndexVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IndexVault__factory {
    return super.connect(runner) as IndexVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndexVaultInterface {
    return new Interface(_abi) as IndexVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IndexVault {
    return new Contract(address, _abi, runner) as unknown as IndexVault;
  }
}
