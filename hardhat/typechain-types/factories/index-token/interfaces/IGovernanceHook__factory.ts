/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IGovernanceHook,
  IGovernanceHookInterface,
} from "../../../index-token/interfaces/IGovernanceHook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "isActionApproved",
    outputs: [
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "submitProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IGovernanceHook__factory {
  static readonly abi = _abi;
  static createInterface(): IGovernanceHookInterface {
    return new Interface(_abi) as IGovernanceHookInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IGovernanceHook {
    return new Contract(address, _abi, runner) as unknown as IGovernanceHook;
  }
}
