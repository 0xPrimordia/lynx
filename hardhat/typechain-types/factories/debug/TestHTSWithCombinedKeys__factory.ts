/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TestHTSWithCombinedKeys,
  TestHTSWithCombinedKeysInterface,
} from "../../debug/TestHTSWithCombinedKeys";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "step",
        type: "string",
      },
    ],
    name: "Checkpoint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "step",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasLeft",
        type: "uint256",
      },
    ],
    name: "GasCheckpoint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    name: "TokenCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "errorMessage",
        type: "string",
      },
    ],
    name: "TokenCreationError",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HTS_PRECOMPILE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "createControllerPatternSelfTreasury",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "memo",
        type: "string",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "createExactControllerCopy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCreatedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180546001600160a01b031916331790556118bc806100326000396000f3fe60806040526004361061004e5760003560e01c80632a0acc6a1461005a5780634543873d1461009657806352e49cbb146100ac578063ac9df1e0146100cc578063ea349109146100e157600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5060015461007a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100a257600080fd5b5061007a61016781565b3480156100b857600080fd5b5060005461007a906001600160a01b031681565b6100df6100da366004611013565b6100f4565b005b6100df6100ef3660046110fc565b6107da565b6000805160206117d883398151915260405161010f906111aa565b60405180910390a16000805160206118468339815191525a60405161013491906111e2565b60405180910390a1604080516001808252818301909252610167916000919060208083019080368337505060015482519293506001600160a01b03169183915060009061018357610183611222565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905030816000815181106101d4576101d4611222565b6001600160a01b03929092166020928302919091018201526040805160008152918201908190526000805160206117d88339815191529061021490611238565b60405180910390a16000805160206118468339815191525a6040516102399190611275565b60405180910390a1604080516101e0810182528881526020810188905233818301526060810187905260016080820152600060a0820181905260c082015260e0810183905261010081018390526101208101849052610140810185905261016081018390526008610180820152306101a0820152626acfc06101c082015290516000805160206117d8833981519152906102d2906112b2565b60405180910390a16000805160206118468339815191525a6040516102f791906112ef565b60405180910390a1604080516003808252608082019092526000916020820160608036833701905050905060018160008151811061033757610337611222565b602002602001019060ff16908160ff168152505060048160018151811061036057610360611222565b602002602001019060ff16908160ff168152505060088160028151811061038957610389611222565b60ff92909216602092830291909101820152604080516003808252608082019092526000929091908201606080368337505060015482519293506001600160a01b0316918391506000906103df576103df611222565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061041357610413611222565b60200260200101906001600160a01b031690816001600160a01b031681525050308160028151811061044757610447611222565b60200260200101906001600160a01b031690816001600160a01b0316815250506000805160206117d88339815191526040516104829061132c565b60405180910390a16000805160206118468339815191525a6040516104a79190611369565b60405180910390a1600080886001600160a01b031663bed254563487600088886040518663ffffffff1660e01b81526004016104e69493929190611463565b604080518083038185885af193505050508015610520575060408051601f3d908101601f1916820190925261051d9181019061163b565b60015b6105fd573d80801561054e576040519150601f19603f3d011682016040523d82523d6000602084013e610553565b606091505b506000805160206117d883398151915260405161056f9061167b565b60405180910390a16000805160206118468339815191525a60405161059491906116af565b60405180910390a1805181906000036105c3576040518060600160405280602181526020016118666021913990505b6000805160206117f88339815191526103e619826040516105e59291906116e3565b60405180910390a15050505050505050505050505050565b8193508092506000805160206117d883398151915260405161061e90611707565b60405180910390a16000805160206118468339815191525a6040516106439190611740565b60405180910390a150508160070b6000146107725760008260070b601614610720578260070b601b146106e5578260070b6007146106aa57604051806040016040528060118152602001702ab735b737bbb710242a299032b93937b960791b81525061073a565b6040518060400160405280601a81526020017f494e53554646494349454e545f50415945525f42414c414e434500000000000081525061073a565b6040518060400160405280601e81526020017f494e56414c49445f544f4b454e5f54524541535552595f4143434f554e54000081525061073a565b6040518060600160405280602e8152602001611818602e91395b90506000805160206117f8833981519152838260405161075b9291906116e3565b60405180910390a150505050505050505050505050565b600080546001600160a01b0319166001600160a01b03831690811790915560408051918252600784900b60208301527ff2bd9ee0f805f0400eb427de41ff42ecbb8d13cd293bd1289a6b378532ad5d16910160405180910390a1505050505050505050505050565b6000805160206117d88339815191526040516107f590611779565b60405180910390a16000805160206118468339815191525a60405161081a91906117a8565b60405180910390a1604080516001808252818301909252610167916000919060208083019080368337505060015482519293506001600160a01b03169183915060009061086957610869611222565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905030816000815181106108ba576108ba611222565b6001600160a01b03929092166020928302919091018201526040805160008152918201908190526000805160206117d8833981519152906108fa90611238565b60405180910390a16000805160206118468339815191525a60405161091f9190611275565b60405180910390a1604080516102006020601f8e0181900402820181019092526101e081018c81526000928291908f908f9081908501838280828437600092019190915250505090825250604080516020601f8e018190048102820181019092528c815291810191908d908d90819084018382808284376000920191909152505050908252506001600160a01b03881660208083019190915260408051601f8c0183900483028101830182528b8152920191908b908b9081908401838280828437600092018290525093855250506001602084015250604080830182905260608301919091526080820185905260a0820185905260c0820186905260e082018790526101008201859052600861012083015230610140830152626acfc061016090920191909152519091506000805160206117d883398151915290610a63906112b2565b60405180910390a16000805160206118468339815191525a604051610a8891906112ef565b60405180910390a16040805160038082526080820190925260009160208201606080368337019050509050600181600081518110610ac857610ac8611222565b602002602001019060ff16908160ff1681525050600481600181518110610af157610af1611222565b602002602001019060ff16908160ff1681525050600881600281518110610b1a57610b1a611222565b60ff92909216602092830291909101820152604080516003808252608082019092526000929091908201606080368337505060015482519293506001600160a01b031691839150600090610b7057610b70611222565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110610ba457610ba4611222565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600281518110610bd857610bd8611222565b60200260200101906001600160a01b031690816001600160a01b0316815250506000805160206117d8833981519152604051610c139061132c565b60405180910390a16000805160206118468339815191525a604051610c389190611369565b60405180910390a1600080886001600160a01b031663bed254563487600088886040518663ffffffff1660e01b8152600401610c779493929190611463565b604080518083038185885af193505050508015610cb1575060408051601f3d908101601f19168201909252610cae9181019061163b565b60015b610d8e573d808015610cdf576040519150601f19603f3d011682016040523d82523d6000602084013e610ce4565b606091505b506000805160206117d8833981519152604051610d009061167b565b60405180910390a16000805160206118468339815191525a604051610d2591906116af565b60405180910390a180518190600003610d54576040518060600160405280602181526020016118666021913990505b6000805160206117f88339815191526103e61982604051610d769291906116e3565b60405180910390a15050505050505050505050610f67565b8193508092506000805160206117d8833981519152604051610daf90611707565b60405180910390a16000805160206118468339815191525a604051610dd49190611740565b60405180910390a150508160070b600014610f035760008260070b601614610eb1578260070b601b14610e76578260070b600714610e3b57604051806040016040528060118152602001702ab735b737bbb710242a299032b93937b960791b815250610ecb565b6040518060400160405280601a81526020017f494e53554646494349454e545f50415945525f42414c414e4345000000000000815250610ecb565b6040518060400160405280601e81526020017f494e56414c49445f544f4b454e5f54524541535552595f4143434f554e540000815250610ecb565b6040518060600160405280602e8152602001611818602e91395b90506000805160206117f88339815191528382604051610eec9291906116e3565b60405180910390a150505050505050505050610f67565b600080546001600160a01b0319166001600160a01b03831690811790915560408051918252600784900b60208301527ff2bd9ee0f805f0400eb427de41ff42ecbb8d13cd293bd1289a6b378532ad5d16910160405180910390a15050505050505050505b50505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f9757600080fd5b813567ffffffffffffffff80821115610fb257610fb2610f70565b604051601f8301601f19908116603f01168101908282118183101715610fda57610fda610f70565b81604052838152866020858801011115610ff357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561102857600080fd5b833567ffffffffffffffff8082111561104057600080fd5b61104c87838801610f86565b9450602086013591508082111561106257600080fd5b61106e87838801610f86565b9350604086013591508082111561108457600080fd5b5061109186828701610f86565b9150509250925092565b60008083601f8401126110ad57600080fd5b50813567ffffffffffffffff8111156110c557600080fd5b6020830191508360208285010111156110dd57600080fd5b9250929050565b6001600160a01b03811681146110f957600080fd5b50565b60008060008060008060006080888a03121561111757600080fd5b873567ffffffffffffffff8082111561112f57600080fd5b61113b8b838c0161109b565b909950975060208a013591508082111561115457600080fd5b6111608b838c0161109b565b909750955060408a013591508082111561117957600080fd5b506111868a828b0161109b565b909450925050606088013561119a816110e4565b8091505092959891949750929550565b6020815260006111dc60208301601281527153746172742053656c66547265617375727960701b602082015260400190565b92915050565b60408152600061121460408301601281527153746172742053656c66547265617375727960701b602082015260400190565b905082602083015292915050565b634e487b7160e01b600052603260045260246000fd5b6020815260006111dc60208301601c81527f4265666f7265206372656174696e6720746f6b656e2073747275637400000000602082015260400190565b60408152600061121460408301601c81527f4265666f7265206372656174696e6720746f6b656e2073747275637400000000602082015260400190565b6020815260006111dc60208301601b81527f4166746572206372656174696e6720746f6b656e207374727563740000000000602082015260400190565b60408152600061121460408301601b81527f4166746572206372656174696e6720746f6b656e207374727563740000000000602082015260400190565b6020815260006111dc60208301601a81527f4265666f72652063616c6c696e6720637265617465546f6b656e000000000000602082015260400190565b60408152600061121460408301601a81527f4265666f72652063616c6c696e6720637265617465546f6b656e000000000000602082015260400190565b6000815180845260005b818110156113cc576020818501810151868301820152016113b0565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156114255781516001600160a01b031687529582019590820190600101611400565b509495945050505050565b600081518084526020808501945080840160005b8381101561142557815160ff1687529582019590820190600101611444565b60808152600085516101e08060808501526114826102608501836113a6565b91506020880151607f19808685030160a08701526114a084836113a6565b935060408a015191506114be60c08701836001600160a01b03169052565b60608a01519150808685030160e08701526114d984836113a6565b935060808a015191506101006114f28188018415159052565b60a08b0151925061012061150d8189018563ffffffff169052565b60c08c01519350610140611524818a018615159052565b60e08d01519450610160848a890301818b015261154188876113ec565b9750838e015195506101809350848a890301848b015261156188876113ec565b9750828e015195506101a09250848a890301838b015261158188876113ec565b9750818e015195506101c09150848a890301828b01526115a188876113ec565b9750808e01519550508389880301868a01526115bd87866113ec565b9650828d015195506115d56102008a018760ff169052565b908c01516001600160a01b03166102208901528b015163ffffffff8116610240890152935061160392505050565b50856020840152828103604084015261161c8186611430565b9050828103606084015261163081856113ec565b979650505050505050565b6000806040838503121561164e57600080fd5b82518060070b811461165f57600080fd5b6020840151909250611670816110e4565b809150509250929050565b6020815260006111dc60208301601481527322b93937b91034b71031b932b0ba32aa37b5b2b760611b602082015260400190565b60408152600061121460408301601481527322b93937b91034b71031b932b0ba32aa37b5b2b760611b602082015260400190565b8260070b81526040602082015260006116ff60408301846113a6565b949350505050565b6020815260006111dc60208301601981527820b33a32b91031b0b63634b7339031b932b0ba32aa37b5b2b760391b602082015260400190565b60408152600061121460408301601981527820b33a32b91031b0b63634b7339031b932b0ba32aa37b5b2b760391b602082015260400190565b6020815260006111dc60208301600f81526e5374617274204578616374436f707960881b602082015260400190565b60408152600061121460408301600f81526e5374617274204578616374436f707960881b60208201526040019056feb1fd29284b7a83462eb2babd0d9990b345c49033826b6cfacfff1ed216beedc076903562693ed75d5da5133f5a19c7e40e1527ee68c33ce709b85ef2f4f72012544f4b454e5f414c52454144595f4558495354535f574954485f444946464552454e545f50524f504552544945537fd61c220461f2c47e0b5052f6e584193320f4d0cd137c3e9602fe44e5e48e17556e6b6e6f776e206572726f722028656d70747920726576657274206461746129a2646970667358221220cb8b7c7b02386340fff5bc6c5ea4b7227e6baa29e1be173580e665542a1554f764736f6c63430008130033";

type TestHTSWithCombinedKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestHTSWithCombinedKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestHTSWithCombinedKeys__factory extends ContractFactory {
  constructor(...args: TestHTSWithCombinedKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestHTSWithCombinedKeys & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestHTSWithCombinedKeys__factory {
    return super.connect(runner) as TestHTSWithCombinedKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestHTSWithCombinedKeysInterface {
    return new Interface(_abi) as TestHTSWithCombinedKeysInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestHTSWithCombinedKeys {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestHTSWithCombinedKeys;
  }
}
